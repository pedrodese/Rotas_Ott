{import: io_contabil.Database};
{import: io_contabil.RegrasSemCartoes};
{import: io_contabil.Duplicatas};
{import: io_contabil.Util};
{import: io_contabil.RunExtratosECartoes};
{import: io_contabil.Ottimizza_MeuCaixa};
{import: io_contabil.Lancamentos};
{import: io_contabil.TemplateUtils};
{import: io_contabil.OICUtils};
{import: io_contabil.Classes.Extrato};


// TEMPLATE 01.04.2024
// Colocado tipoPlanilha no Lote Encerrado
// colocado para trocar XLSX por CSV se marcado no roteiro 
 
public JSONArray run(InoutLogger logger) throws Exception {

	JSONArray  records  = new JSONArray();
	JSONObject ultimoJS = new JSONObject();

	// gera seguranca nas conexoes com Heroku
	// Create a trust manager that does not validate certificate chains
	javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[] {
		new javax.net.ssl.X509TrustManager(){
			public java.security.cert.X509Certificate[] getAcceptedIssuers(){ return null; }

			public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType) { }

			public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType) { }
		}
	};

	// Install the all-trusting trust manager
	try {
		javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance("TLS");
		sc.init(null, trustAllCerts, new java.security.SecureRandom());
		javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
	} catch (Exception e) {
		// 
	}
	
	
	// Carrega as propriedades
	SysProperties props = SysProperties.getInstance();
	SysProperties propsEmp = SysProperties.getInstance();
	JSONObject roteiroCRMPrincipal = getRoteiro();
	JSONObject roteiroCRM = getRoteiro();
	JSONObject jStatus = new JSONObject();
	
 
	props.load("contabil/" + roteiroCRM.optString("contabilidade") + "/contabil.properties");
	propsEmp.load("contabil/" + roteiroCRM.optString("contabilidade") + "/empresa.properties");

	//Conectar na Base de Dados IO_CONTABIL.
	DataBase dbIOCont = null;
	//Contectar na Base de Dados depara do heroku(nuvem)
	DBPostgreSQL dbIODepara = null;

 	String empresa = getNomeEmpresa();
	
	
	String codEmpresa = props.get(empresa + "_COD_EMPRESA");
	 
	if (codEmpresa == null) {
		empresa = propsEmp.get("NOME_EMPRESA").toUpperCase();
		codEmpresa = props.get(empresa + "_COD_EMPRESA");		
	}
	
	//#2303-002125
	//codEmpresa que sera utilizado para consultar o plano de contas
	String codEmpresaPlanoContas = codEmpresa;
	if (roteiroCRM.optString("contabilidade").toUpperCase().contains("CONTIBEMASSESSORIA")) {
		codEmpresaPlanoContas = "000";
	}
	//2312-024058
	if (roteiroCRM.optString("contabilidade").toUpperCase().contains("SETEC")) {
		codEmpresaPlanoContas = "000";
	}
 
	String tipoProduto = "";
	try {
		tipoProduto = props.get(empresa + "_TIPO_PRODUTO");
	} catch (Exception xx) {tipoProduto = "OIC_PACOTE";}
	
	
	if (tipoProduto.equals("")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("IMPLANTA")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("AVULSO")) tipoProduto = "OIC_PACOTE";
	
 	
	String processaOud = "";
	try {
		processaOud = props.get("PROCESSA_OUD");
	} catch (Exception e) {processaOud = "FALSE";}
	if (processaOud.equals("")) processaOud = "FALSE";

	String ERPContabil = props.get("ERP_CONTABILIDADE");
	String nomeEmpresa = props.get(empresa + "_NOME_EMPRESA");
	String cnpjEmpresa = props.get(empresa + "_CNPJ_EMPRESA");
	String emailResponsavel = props.get(empresa + "_EMAIL_RESPONSAVEL");
	String emailCanal = props.get("EMAIL_CANAL");
	String statusCRM = props.get(empresa + "_STATUS_CRM");
	String fornecedorUnico = props.get("FORNECEDOR_UNICO");
	
	String fazLcdpr = "";
	
	try {
		fazLcdpr = props.get(empresa+"_EQUIPE_FECHAMENTO");
	} catch (Exception e) {fazLcdpr = "FALSE";}

	if (fazLcdpr.toUpperCase().contains("LCDPR")) fazLcdpr = "TRUE";
	if (fazLcdpr.equals("")) fazLcdpr = "FALSE";
 	
	String mantemArquivo = propsEmp.get("MANTEM_ARQUIVO");
	if (mantemArquivo == null) mantemArquivo = "";
	
	String tipoLancamento = getNomeRota();
	if (tipoLancamento.toUpperCase().contains("PAGAS"))    tipoLancamento = "PAGAR";
	if (tipoLancamento.toUpperCase().contains("RECEBIDA")) tipoLancamento = "RECEBER";


	String compDirName = nomeEmpresa + "_#" + codEmpresa;
	String dirName = "";
	if (tipoLancamento.contains("PAGAR"))   dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/APagar";
	if (tipoLancamento.contains("RECEBER")) dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/AReceber";

	String backupDirName = dirName + "/Processado";

	boolean erroShrink = false;
	boolean geraCabecalhoCordilheira = true;
	boolean cabecalhoNaoEncontrada        = true;
	boolean apagaExtrato        = false;
	boolean apagaContaT         = false;
	boolean geraRegraPortador   = false;
	boolean comparaRazao        = false;
	boolean fazConciliacao		= false;
	boolean encontrouComplemento = true;
	boolean criaCabecalhoConciliacao = true;
	
	String tipoEmail            = "";
	String arquivoAgora         = tipoLancamento + "-" + DateUtil.dateToString(new Date(),"yyyyMMddhhmm");
	int    contadorArquivo      = 0;

	HashMap mapaLote			= new HashMap();
	HashMap mapaJuros   		= new HashMap();
	HashMap mapaPlano   		= new HashMap();
	HashMap mapaDePara			= new HashMap();
	HashMap mapaArquivo 		= new HashMap();
	HashMap mapaOficial			= new HashMap();
	HashMap mapaDesconto		= new HashMap();
	HashMap mapaVariavel		= new HashMap();
	HashMap mapaDocumento 		= new HashMap();
	HashMap mapaPartPlano 		= new HashMap();
	HashMap mapaFornecedor 		= new HashMap();
	HashMap mapaParticipante	= new HashMap();
	HashMap mapaParcelaDominio	= new HashMap();
	HashMap mapaConciliacao 	= new HashMap();

	JSONObject recordF = new JSONObject();


	String cruzaExtrato			= "";
	String Cruza_Extrato_com_Extrato = "";
	String mesAnoAnterior		= "";
	String mesAno2Anterior		= "";
	String mesAnoAtual			= "";
	int mesRef					= 0;
	int anoRef					= 0;
	String contaJuros			= "";
	String contaDesconto		= "";
	String contaMulta			= "";
	String contaTransitoria		= "";
	String contaEmpresaBranco	= "";
	String movimentoPortador	= "";
	String contaFixaDebito		= "";
	String contaFixaCredito		= "";
	String contaPortador		= "";		//pg - cred | rec - deb
	String contaMovimento		= "";		//pg - deb | rec - cred
	String tabelaContabil       = "";
	String dataMovimento        = "";
	String classificaPlano      = "";
	String classificaFornec     = "";
	String loteConciliacao 		= "";

	boolean geraFiscal			= false;
	String [] loteFiscal		= new String[20];
	boolean apagaStatus         = false;

	String Conta_Fixa_Cruzamento_Extrato = "";
	String contaInvertida	= "";
	String contaBuscaPlano	= "";
	String nomeArquivo      = "";
	String chave			= "";
	String classificacao	= "";
	String dataLote			= DateUtil.dateToString(new Date(),"yyyy-MM");
	String lote						= "";
 	String regraContaMovimento 		= "";
	String regraHistorico 			= "";
	String separadorCsv				= ";";
	String separadorTxt				= "";
	String tipoPlanilha				= "";
	String contaTemp				= "";
	String mesesdoAno			    = "JAN;FEV;MAR;ABR;MAI;JUN;JUL;AGO;SET;OUT;NOV;DEZ";
	boolean primeiroArquivo 		= true;
	boolean primeiraVezDuplicata	= true;
	boolean acumulouAntes			= false;
	boolean leuFinanceiro			= false;
	boolean dupliNaoEncontContabil	= false;
	boolean forcarPartidaDobrada	= false;
	boolean temOFX					= false;
	boolean temFiltro				= false;
	boolean temFiscal  				= false;
	boolean temLinhas               = false;
	boolean temIgnorar              = false;
	boolean logs = false;
	StringBuilder logsTxt = new StringBuilder();
	
	int abaConvertida = 0;
	
	String retornaPadroes = "";
	String nomeArquivoProtocolo = "";
	
	String zerarColAlternativo		= "";
	logger.logInfo("TemplateDev Empresa -> " + nomeEmpresa);
	JSONObject deParaObj 			= new JSONObject();
	
	Extrato extrato = new Extrato();
	//logger.logDebug("Padrao empresa " + mantemArquivo);
	try {

		// #DOCUMENTACAO
		// FOR leitura dos arquivos das extensoes abaixo
		// altera-se aqui para NAO LER xlsx por exemplo
		
		// liberado em 25/11/2020 @DiMaz
		// se precisar alterar somente as quantidades qX e qY 
		// cada unidade processa cerca de 3 arquivos ou seja 3 no qY processa uns 9 arquivos excel e uns 9 pdf por vez.
		// aumentar muito o XLSX pode causar TRAVAMENTOS
		int qX	= 9;	//ofx,csv,txt
		int qY	= 3;	//xlsx,pdf
		int qTotal = (qX*3)+(qY*2);
		String extensao = "";
		for(int extArquivo = 0; extArquivo < qTotal; extArquivo++) {
			if (extArquivo < qX)									extensao = ".ofx,.OFX,.omc,.OMC,.html,.HTML,.ret,.RET";
			if (extArquivo >= qX && extArquivo < (2*qX))			extensao = ".pdf,.PDF";
			if (extArquivo >= (2*qX) && extArquivo < (2*qX+qY))		extensao = ".xlsx,.XLSX";
			if (extArquivo >= (2*qX+qY) && extArquivo < (3*qX+qY))	extensao = ".txt,.TXT,.ret,.RET";
			if (extArquivo >= (3*qX+qY))							extensao = ".csv,.CSV"; 
			
			if (roteiroCRMPrincipal.has("ignoraExel") && roteiroCRMPrincipal.optString("ignoraExel").toUpperCase().equals("TRUE")) {
				extensao = extensao.replace(".XLSX",".CSV").replace(".xlsx",".csv");
			}			
			boolean ignoraAbas = false;
			
			// ------------------------------------------------------------------------------------------
			// colocado para nao ler pelo template mais de 3 planilhas xlsx por rodada
			// Motivo: quando tem planilha grande em excel para ler na personalizada
			// o sistema roda varias vezes a leitura da planilha no template e depois tudo de novo na personalizada.
			if (mantemArquivo.equals("SIM") && extensao.contains(".XLSX") && extArquivo > 20) continue;
			// ------------------------------------------------------------------------------------------
 
			for (int porAba = 0; porAba < 60; porAba++) {

				// #DOCUMENTACAO
				// tratamento de abas vindas do CRM
				
				String apagaArquivo		= backupDirName;
				String abasEspecificas	= roteiroCRMPrincipal.optString("Abas_Especificas");
				abasEspecificas 		= abasEspecificas.replace(",",";"); 

				if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1;2;3;4;5;6;7;8;9;10";
				// if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1";
				if (!extensao.contains("XLSX") || ignoraAbas)  abasEspecificas = "";

				// liberado em 25/11/2020 @DiMaz
				// tratar js.put("Abas_Especificas", "0-60");
				// grande numero de abas pode travar o nosso sistema
				String abasFor = "";
				if (!abasEspecificas.contains(";") && abasEspecificas.contains("-") && abasEspecificas.length() <= 7) {
					try {
						int a = Integer.parseInt(abasEspecificas.substring(0,abasEspecificas.indexOf("-")));
						int b = Integer.parseInt(abasEspecificas.substring(abasEspecificas.indexOf("-")+1));
						for (int k = a; k <= b; k++){
							if (k < b) abasFor += k+";";
							else abasFor += k;
						}
					} catch (Exception fr) {}
					if(!abasFor.equals("")) abasEspecificas = abasFor;
				}

				
				if (abasEspecificas.equals("")) {
					if (porAba > 0) break;
				}
				if (!abasEspecificas.equals("")) {
					if (!abasEspecificas.contains(String.valueOf(porAba))) {
						continue;
					}

					String ultimaAba = abasEspecificas;
					if (ultimaAba.contains(";")) ultimaAba = ultimaAba.substring(ultimaAba.lastIndexOf(";")+1).trim();
					if (!ultimaAba.equals(String.valueOf(porAba)) && extensao.contains(".XLSX")) apagaArquivo = null;
				}

				// #DOCUMENTACAO
				// auto ajuste do separador de CSV e TXt
				
				// logger.logInfo("Antes do separas"); apareceujwr
				
 
 				if(extensao.contains("CSV"))  separadorCsv = verificaSeparador(separadorCsv, dirName, extensao, props, logger);
  				if(extensao.contains("TXT"))  separadorTxt = verificaSeparador(separadorTxt, dirName, extensao, props, logger);
				
 
 				
				// #DOCUMENTACAO
				// carregamento do arquivo
				
				if (mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) apagaArquivo = null;
				// salva arquivo no hasmap para posterior eliminacao 

				
				FilesLoader fileLoader = new FilesLoader(dirName, extensao, apagaArquivo, true, logger);
				int[] abas = {porAba};
				fileLoader.setSheetsToRead(abas);
				try {
					fileLoader.loadFiles();
				} catch (Exception e) {
					// logger.logDebug("NAO CONVERTEU PDF " + e.getMessage());
					File file2 = new File(dirName);
					
					File []  arquivoParaConverter = file2.listFiles();
					if (FileUtil.dirHasFiles(dirName)) {
						for (File fl: arquivoParaConverter) {
							if (fl.getName().toUpperCase().contains(".PDF")) {
								LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
								// String idConversor  = TemplateUtils.getIdLote(fl.getName());
								// logger.logDebug("FOI PRO CONVERSORANTES " + fl.getName());
								boolean deubom = false;
								deubom = buscaProtocoloConversor("", apiWeb, tipoLancamento.toLowerCase(), fl.getName(), logger);
								try { 
									FileUtil.deleteFile(fl);
								} catch (Exception XX) {}

								if (deubom) break;
							}
						}
					}
				}
				try { forcarPartidaDobrada	= Boolean.parseBoolean(roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toLowerCase().trim()); } 
				catch (Exception bl) {forcarPartidaDobrada = false;}
				
				//2304-003551. Quando utiliza esse ERP ? obrigado a sem em partida dobrada.
				if (roteiroCRMPrincipal.optString("erpContabilidade").equals("DOMINIO2") || roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("CORDILHEIRA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE")) {
                    forcarPartidaDobrada = true;
                }
				//2403-032980 - Forcar partida dobrada para todas as empresas dessa contabilidade
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("ATHENAS") && roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("PREVISACONTAB")){
					// logger.logInfo("Entra na condicao de forcar partida dobrada");
					forcarPartidaDobrada = true;
				}
				
				for (MemoryFile memFile: fileLoader.getMemFiles()) {
				
					// caso arquivo tenha mais de 250.000 linhas sera ignorado  . Xavier e Mello em 07.06.2023
					if (memFile.getTotalLines() > 250000 ){
						temLinhas = true;
						break;
					}			

					nomeArquivo = memFile.getFilename().replace("%","");
					
					if (nomeArquivo.contains("_ID")) nomeArquivoProtocolo = nomeArquivo;
					
					// logger.logInfo("TEMPLATE NOME ARQUIVO == "+nomeArquivo);
					
					if (nomeArquivo.toUpperCase().startsWith("ABA_")) {
						
						abaConvertida = TemplateUtils.verificaAba(nomeArquivo);
						abasEspecificas = roteiroCRMPrincipal.optString("Abas_Especificas");
						
						// logger.logDebug("ACE " + nomeArquivo + " | " + abaConvertida + " | " + abasEspecificas);
						
						if (!abasEspecificas.equals("")) {
							if (!abasEspecificas.contains(String.valueOf(abaConvertida))) continue;
						}
					} else abaConvertida = porAba;
				
					contadorArquivo++;

					
					// =======================  =================   =======================
					// =======================  VARIAVEIS PADROES   =======================
					// =======================  =================   =======================
					String historico      = "";

					String codCcOrigem    = "";
					String cpfCnpj        = "";
					String nomeOrigem     = "";
					String nomePortador   = "";
					String nomePortador2  = "";
					String documento      = "";
					int    parcelaDoc     = 1;
					double valorDocumento = 0.00;
					double valorPagamento = 0.00;
					double valorDesconto  = 0.00;
					double valorJuros     = 0.00;
					double valorMulta     = 0.00;
					double valorAlternativo = 0;
					
					int icodCcOrigem    = -1;
					int icpfCnpj        = -1;
					int inomeOrigem     = -1;
					int inomePortador   = -1;
					int idocumento      = -1;
					int idataMovimento  = -1;
					int ivalorDocumento = -1;
					int ivalorAlternativo = -1;
					int ivalorPagamento = -1;
					int ivalorDesconto  = -1;
					int ivalorJuros     = -1;
					int ivalorMulta     = -1;
					int icomplemento01  = -1;
					int icomplemento02  = -1;
					int icomplemento03	= -1;
					int icomplemento04  = -1;
					int icomplemento05	= -1;
					int icomplemento06	= -1;
					int icomplemento07	= -1;
					int icomplemento08	= -1;
					int icomplemento09	= -1;
					int icomplemento10	= -1;
					int idataFake		= -1;

					String contaGetConta	= "";
					contaPortador	= "";		//pg - cred | rec - deb
					contaMovimento	= "";		//pg - deb | rec - cred 

					String complemento01	= "";
					String complemento02	= "";
					String complemento03	= "";
					String complemento04	= "";
					String complemento05	= "";
					String complemento06	= "";
					String complemento07	= "";
					String complemento08	= "";
					String complemento09	= "";
					String complemento10	= "";
					String codCentroCusto	= "";
					String codFilial        = "";

					double valorTotalDoc	= 0.0;
					double valorTotalJuros	= 0.0;
					double valorTotalDesc	= 0.0;
					
					double [] valorDocumentoArray = {0,0,0,0,0,0,0,0,0,0};  

					String classJur			= "";
					String classDes			= "";
					String classMul			= "";

					String codErroString	= "";
					int cont				= 0;
					int contAuxiliar		= 0;
					String linhasProblema	= "";
					String idEmpresa        = "";
					String idRoteiro  	    = "";

					String histAux			= "";
					String anoData			= "";
					boolean zerar			= true;
					boolean filtro			= true;
					

					String lerAposPrincipal   = "";
					boolean isLinhaPrincipal  = false;
					boolean ignorarAntes	  = false;
					boolean tratarComoExtrato = false;
					boolean tratarComoDesconto = false;
					boolean tratarComoJuros = false;

					dataMovimento        = "";

					double partidaDobradaJuros		= 0;
					double partidaDobradaDesconto	= 0;
					double partidaDobradaMulta		= 0;
					double valorSomaArray			= 0;

					String numSeparadorDuplicata = ""; //convertido em int depois
					
					StringBuilder cabecalhoPlanilha = new StringBuilder();
					StringBuilder cabecalhoRegra    = new StringBuilder(); // quarda pemanente as 9 primeiras linhas de cada planilha / aba
					
					int  	      contadorCabecalho = 0; 
					
					// #DOCUMENTACAO
					// definicao de separador do arquivo
					// se ouver separador em TXT deve ser tratado caso a caso
					// evitar usar tabulacao como separador 
					
					if(extensao.contains(".xlsx,.XLSX")) memFile.setFieldSeparator("\\|");
					if(extensao.contains(".pdf,.PDF"))   memFile.setFieldSeparator("\\|");
					if(extensao.contains(".csv,.CSV"))	 memFile.setFieldSeparator(separadorCsv);
					if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(separadorTxt);
					
					// if (codEmpresa.equals("9999")) memFile.setFieldSeparator(";");
					
					if (nomeArquivo.toUpperCase().contains(".PDF")) {
						
						// logger.logInfo("ARREPENDE " + nomeArquivo /*memFile.getLines().toString().contains("##$%#&") +*/  + " | " +  StringUtil.removeSpecialCharsToUC(memFile.getLines().toString().toUpperCase()));
						boolean rodaConversorNovo = TemplateUtils.verificaConversorNovo(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()).toUpperCase());
						// logger.logInfo("RCN " + rodaConversorNovo);
						if (rodaConversorNovo) {
							LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
							String idConversor  = TemplateUtils.getIdLote(nomeArquivo);
							// logger.logDebug("FOI PRO CONVERSOR1 " + nomeArquivo);
							boolean deubom = false;
							deubom = buscaProtocoloConversor(idConversor, apiWeb, tipoLancamento.toLowerCase(), nomeArquivo, logger);
							
							if (deubom) {
								File file2 = new File(dirName);
						
								File []  arquivoParaConverter = file2.listFiles();
								if (FileUtil.dirHasFiles(dirName)) {
									for (File fl: arquivoParaConverter) {
										if (fl.getName().toUpperCase().contains(nomeArquivo.toUpperCase())) {
											try { 
												FileUtil.deleteFile(fl);
											} catch (Exception XX) {}

											break;
										}
									}
								}
							}
							continue;
						}
					}
					
 					
					if(roteiroCRMPrincipal.has("delimitadorDoArquivo") && !roteiroCRMPrincipal.optString("delimitadorDoArquivo").equals("")) {
						if(extensao.contains(".txt,.TXT")) memFile.setFieldSeparator(roteiroCRMPrincipal.optString("delimitadorDoArquivo"));
					}
					
					//nao pode usar o line contem  ';' pois nao existe line neste ponto ainda.
					if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
						if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(";");
					}
 					
					String abaArquivo = String.valueOf(abaConvertida);
					if (abaConvertida == 0) abaArquivo = "0";

					// colocado para nao importar 2x o mesmo arquivo e mesma aba
					ttArquivo ttArq    = (ttArquivo)mapaArquivo.get(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo);
					if (ttArq          == null) {
						ttArq          = new ttArquivo();
						ttArq.arquivo  = abaArquivo+"-"+nomeArquivo+"-"+abaArquivo;
					
					} else continue;
					mapaArquivo.put(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo,ttArq);
					
					// putStatus(dirName, "01--Etapa 1 de 4--" + tipoLancamento + ".status", jStatus, logger);
					// logger.logDebug("NAAQ " + nomeArquivo.toUpperCase() + " | " + extensao + " | " + separadorCsv);
	
					// #DOCUMENTACAO
					// conecta ao BANCO DE DADOS
					if (dbIOCont == null) {
						dbIOCont = connectIOContabil(props, logger);
					}

					if (dbIODepara == null) {
						dbIODepara = connectDeParaDb(logger);
					}
					
					if(primeiroArquivo) {
						limparIORoteiro(codEmpresa, tipoLancamento, dbIOCont, logger);
						primeiroArquivo = false;
					}

					//########################################################################

					contaJuros		    = roteiroCRM.optString("contaFixaJuros");
					contaFixaCredito    = roteiroCRM.optString("contaFixaCredito");
					contaFixaDebito     = roteiroCRM.optString("contaFixaDebito");
					contaDesconto 	    = roteiroCRM.optString("contaFixaDesconto");
					
					
					contaMulta		    = roteiroCRM.optString("contaFixaMulta");
					idEmpresa      	    = roteiroCRM.optString("idEmpresa");
					idRoteiro   	    = roteiroCRM.optString("idRoteiro");
					movimentoPortador   = roteiroCRM.optString("movimentoPortador");
					classificaPlano     = roteiroCRM.optString("classificaPlano");
					classificaFornec    = roteiroCRM.optString("classificaFornec");
					cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
					Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
					numSeparadorDuplicata   = roteiroCRM.optString("Coluna_Valor_Duplicata_Dominio");

					tipoPlanilha = "MOVIMENTO";
					boolean enviaEmailExtrato = false;
					boolean naoLeMais = false;

					tipoEmail = "CLIENTE";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZA"))  tipoEmail = "CANAL";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZAF")) tipoEmail = "SUPORTE";

					String debitoCredito   		 = "";
					String chaveExtrato    		 = ""; 

					//if(roteiroCRM.has("contaBuscaPlano"))contaBuscaPlano = roteiroCRM.optString("contaBuscaPlano"); 

					// =======================  ========================   =======================
					// =======================  VARIAVEIS PERSONALIZADAS   =======================
					// =======================  ========================   =======================


					JSONObject objetoParametro = new JSONObject();
					ttMovimentoPadrao ttMov2 = new ttMovimentoPadrao();

					// #DOCUMENTACAO
					// busca de indices da planilha principal
					if (tipoPlanilha.equals("MOVIMENTO")) {
						roteiroCRM = getRoteiro();

						inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
						idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
						inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
						idocumento      = getIndice("documento", idocumento, roteiroCRM);
						ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
						ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
						ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
						ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
						icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
						ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
						ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
						icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
						icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
						icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
						icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
						icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
						icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
						icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
						icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
						icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
						icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
						idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
						icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
						
						zerar 			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
					}
					jStatus = new JSONObject();
					// logger.logDebug("PUTSTATUS 524 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
					if (memFile.getTotalValidLines() > 0) {
						// logger.logDebug("PUTSTATUS 527 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
						putStatus(dirName, "", jStatus, logger);
					}
					try{
						// #DOCUMENTACAO
						// leitura linha a linha
						while (memFile.hasNextLine()) {
							// logger.logDebug("PUTSTATUS WHILE " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba);
							try {
								String line = memFile.nextLine();
								line = StringUtil.removeSpecialCharsToUC(line);
								
								// logger.logDebug("Line -> "+tipoPlanilha + "<<>>" + porAba + "<<>>" + cutString(line,0,30));
								// logger.logDebug("TP = "+tipoPlanilha+" | LN = "+line);
								// JWR colocado para nao ocorrer mais casos de lentidao absurda em planilhas que nao conseguiram ler nenhum lancamento ate a linha 500
								contAuxiliar ++;
								
								contadorCabecalho++;
								if (contadorCabecalho<15) {
									cabecalhoPlanilha.append(line).append(" "); 
									cabecalhoRegra.append(stringNormalizer(line.replaceAll("\\|","").replaceAll("\"","").replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replaceAll("  ", " "), true)).append(" "); 
								}
								else {
									cabecalhoPlanilha = new StringBuilder();
									
									// ganha performance nao tendo que ler a planilha vezes pelo template se nao for roteiro secundario 
									if (mantemArquivo.equals("SIM") && tipoPlanilha.equals("MOVIMENTO") && abaConvertida > 2) ignoraAbas = true;
								}
								// logger.logDebug("PUTSTATUS 550");
								if (cont < 10)   putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + "-" + cont + ".status", jStatus, logger);  
								
								// JWR colocado para nao ocorrer mais casos de lentidao absurda em planilhas que nao conseguiram ler nenhum lancamento ate a linha 500
								if (cont == 0 && contAuxiliar == 500) {
									break;
								}
								   

								////////////////////////////////////////////////////////////////////////////////
								///////////////////////////////////////////////////////////// INICIO DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								JSONObject jDadosPadrao = new JSONObject();
								jDadosPadrao.put("TIPOLANCAMENTO", tipoLancamento).put("NOMEEMPRESA",nomeEmpresa)
											.put("CODEMPRESA", codEmpresa).put("CONTABILIDADE", roteiroCRM.optString("contabilidade"))
											.put("NOMEARQUIVO", nomeArquivo);
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OMC
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--								
								if (nomeArquivo.toUpperCase().contains(".OMC")) {
 
									tipoPlanilha = "EXTRATO";
									jDadosPadrao.put("TIPOPLANILHA",   tipoPlanilha);
									
									// logger.logInfo("2 de 4 = NA = "+nomeArquivo);
 
									mapaVariavel = readOttimizzaMeuCaixa(memFile, dbIOCont, jDadosPadrao, mapaVariavel, logger);
									jStatus = new JSONObject();
									putStatus(dirName, "",  new JSONObject(), logger);
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									// if(roteiroCRM.optString("empresa").toUpperCase().contains("POSTOBRAGA")){//yuri
										cruzaExtrato = "FALSE";
										Cruza_Extrato_com_Extrato = "FALSE";
									// }
									
									mapaArquivo.put(nomeArquivo,ttArq);
									// double tempoInicio1 = System.currentTimeMillis();
									// logger.logDebug("Tempo Rota2; " + String.format("%.2f", (System.currentTimeMillis() - tempoInicio1) / 1000));
									break;
								}

								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OFX
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
								// logger.logDebug("NAOFX NO TEMPLATES " + nomeArquivo.toUpperCase() + " | " + mantemArquivo + " | " +tipoProduto);
								if (nomeArquivo.toUpperCase().contains(".OFX")) {
									
									if (!mantemArquivo.equals("SIM") || !tipoProduto.equals("OIC_PACOTE")) {
										tipoPlanilha = "EXTRATO-OFX";
										

										// quando o OFX vem em apenas 1 linha todas as informacoes
										// quebramos linha e geramos um novo arquivo para gerar como um ofx normal
										if (line.contains("ACCTID")) {
											String fileOfx = dirName + "/" + nomeArquivo.toLowerCase().replaceAll(".ofx","_2.ofx");
											FileWriter writer = new FileWriter(fileOfx);
											writer.writeNewFile(line.replaceAll("><",">\r\n<"));	
										}
										putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", new JSONObject(), logger);     putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", jStatus, logger);
										jDadosPadrao.put("CODEMPRESA", codEmpresa).put("TIPOLANCAMENTO", tipoLancamento)
													.put("NOMEEMPRESA", nomeEmpresa).put("NOMEARQUIVO", nomeArquivo);
										if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) jDadosPadrao.put("CHECKNUM", "CHECKNUM");	//usar para retornar o documento do OFX no complemento02
										readOFXDefault(memFile, jDadosPadrao, dbIOCont, logger);
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 615");
										putStatus(dirName, "",  new JSONObject(), logger);
										temOFX = true;
										break;
									}
									
									// quando FOR OFX e estiver rodando pelo template
									// e a empresa for OIC pacote rodar pela especifica, entao foi dado um break para agili
									if (mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
										break;
									}
									
								}
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do roteiro movimento (principal), OFX e demais devem ficar para a rota normal
								// if(codEmpresa.equals("3673")){
									// logger.logDebug("mAATEMPLATE " + mantemArquivo + " | " + tipoProduto + " | " + apagaArquivo + " | " + roteiroCRM.optString("Planilhas_Padroes") + " | " + tipoPlanilha + " | " + tipoProduto);									
								// }
 								/*if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE"))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

 
									JSONObject variaveis = new JSONObject();
									variaveis.put("line", 			line);
									variaveis.put("anoData", 		anoData); 
									variaveis.put("dirName", 		dirName);
									variaveis.put("jStatus", 		jStatus);
									variaveis.put("extensao", 		extensao);
									variaveis.put("codEmpresa", 	codEmpresa);
									variaveis.put("nomeArquivo", 	nomeArquivo);
									variaveis.put("nomeEmpresa", 	nomeEmpresa);
									variaveis.put("nomePortador", 	nomePortador);
									variaveis.put("tipoPlanilha", 	tipoPlanilha);
									variaveis.put("complemento01", 	complemento01);
									variaveis.put("complemento02", 	complemento02);
									variaveis.put("nomePortador2", 	nomePortador2);
									variaveis.put("tipoLancamento", tipoLancamento);
									variaveis.put("cabecalhoPlanilha", cabecalhoPlanilha.toString());																		
																		
									String retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									//logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									// logger.logDebug("NP2 == "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										logger.logDebug("PUTSTATUS 657");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}*/
								if(codEmpresa.contains("409")) logger.logInfo("CP == "+cabecalhoPlanilha.toString());
								if (!cabecalhoPlanilha.toString().equals("") && (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

									JSONObject variaveis = new JSONObject();
									variaveis.put("line", line).put("anoData", anoData).put("dirName", dirName).put("jStatus", jStatus)
											 .put("extensao", extensao).put("codEmpresa", codEmpresa).put("nomeArquivo", nomeArquivo)
											 .put("nomeEmpresa", nomeEmpresa).put("nomePortador", nomePortador).put("tipoPlanilha", tipoPlanilha)
											 .put("complemento01", complemento01).put("complemento02", complemento02)
											 .put("nomePortador2", nomePortador2).put("tipoLancamento", tipoLancamento)
											 .put("cabecalhoPlanilha", cabecalhoPlanilha.toString());									
									
									// if (codEmpresa.contains("104")) {
										// roteiroCRM.put("Planilhas_Padroes", "Extrato_C6Bank_PDF");
									// }
									
									// logger.logDebug("nome do arquivo " + nomeArquivo);
									
									// logger.logInfo("LN TEMPLATE = "+line);
									
									retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									
									// logger.logDebug("retorna padroes -> " + retornaPadroes);
									
									
									// logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									
									// logger.logDebug("NP23 " + nomePortador + " | " + nomePortador2);
									
									// logger.logDebug("NP2 ==== "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}

								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								//                      LEITURA PADRAO DE DUPLICATAS
								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && !mantemArquivo.equals("SIM")){

 
									jDadosPadrao.put("erpContabilidade", roteiroCRMPrincipal.optString("erpContabilidade"))
												.put("LINE", line).put("PRIMEIRAVEZ", primeiraVezDuplicata).put("DIRNAME", dirName)
												.put("TIPOPLANILHA", tipoPlanilha).put("TIPOLANCAMENTO", tipoLancamento);
									
									if (!numSeparadorDuplicata.equals("")) jDadosPadrao.put("NUMSEPARADOR", numSeparadorDuplicata);
									
									if (!roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
										jDadosPadrao.put("CONTROLAPARCELA",  true);  

									} 
 
									primeiraVezDuplicata = leituraDuplicataPadrao(jDadosPadrao, memFile, mapaVariavel, dbIOCont, logger);

									if(!primeiraVezDuplicata){
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 687");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								} 
								
								if (cont < 2) {
									// logger.logDebug(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()));
									if (TemplateUtils.verificaConciliacao(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()))) {
										mapaConciliacao = leituraConciliacao(mapaConciliacao, memFile, logger);
										fazConciliacao = true;
										break;
									}
								}

								//implementa leitura do arquivo de participantes lcdpr
								if (roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO") && !mantemArquivo.equals("SIM")) {
									if (fazLcdpr.equals("TRUE") && cont < 2) {
										if (memFile.getLines().toString().toUpperCase().contains("RELACAO DE PARTICIPANTES DA ATIVIDADE RURAL")){
											mapaParticipante = leituraLivroCaixaDigitalProdutorRural(mapaParticipante, memFile, logger);
											break;
										}
									}
									/// BUSCA COTNRATOS EM ABERTO (RECEBIMENTOS) PARA BAIXA DE CONTRATOS IMOBILIARIOS
									if(roteiroCRM.optString("Integracao_contratos").toUpperCase().contains("TRUE")) {
										
										if (line.contains("DOCUMENTO") && 
											line.contains("EMISSAO") && 
											line.contains("V. PARCELA") && 
											line.contains("DEVOLUCAO") && 
											line.contains("SALDO") && 
											line.contains("SITUACAO")) {
											

											tipoPlanilha = "DUPLICATA-DOMINIO"; 

											if(primeiraVezDuplicata) limparIODuplicataTipoPlanilha(codEmpresa, dbIOCont, tipoPlanilha, logger);

											JSONObject jIndices = new JSONObject();
												
											jIndices.put("IVENCIMENTO", 9).put("INOMEORIGEM", 4).put("IDUPLICATA", 4).put("IVALORPARCELA", 12)
													.put("CODEMPRESA", codEmpresa).put("TIPOPLANILHA", tipoPlanilha);

											primeiraVezDuplicata = inserirIODuplicata_DominioPlanilha02(jIndices, memFile, dbIOCont, logger);
											primeiraVezDuplicata = false;
											jStatus = new JSONObject();
											// logger.logDebug("PUTSTATUS 730");
											putStatus(dirName, "", jStatus, logger);

											break;
										}
									}
								}
																
								
									
								////////////////////////////////////////////////////////////////////////////////
								//////////////////////////////////////////////////////////////// FIM DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								// #DOCUMENTACAO
								// lipeza de variaveis e de indices ao mudar de TIPOPLANILHA
								// logger.logDebug("CPTS " + cabecalhoPlanilha.toString());
								JSONObject jDadosObj = new JSONObject();
								if(!tipoPlanilha.equals(getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj))){
									inomeOrigem			= -1;		nomeOrigem		= "";
									idataMovimento		= -1;		dataMovimento	= "";
									inomePortador		= -1;		nomePortador	= "";
									idocumento			= -1;		documento		= "";
									icpfCnpj			= -1;		cpfCnpj			= "";
									icodCcOrigem		= -1;       codCcOrigem		= "";
									icomplemento01		= -1;      	complemento01	= "";
									icomplemento02		= -1;      	complemento02	= "";
									icomplemento03		= -1;      	complemento03	= "";
									icomplemento04		= -1;      	complemento04	= "";
									icomplemento05		= -1;      	complemento05	= "";
									icomplemento06		= -1;      	complemento06	= "";
									ivalorDocumento		= -1;		complemento07	= "";
									ivalorAlternativo	= -1;		complemento08	= "";
									ivalorJuros			= -1;		complemento09	= "";
									ivalorDesconto		= -1;		complemento10	= "";
									ivalorMulta			= -1;
									ivalorPagamento		= -1;
									idataFake			= -1;
								}
								// #DOCUMENTACAO
								// busca tipoplanilha e indices da planilhas secundarias
								
								tipoPlanilha = getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj);
								// if(codEmpresa.equals("214")){
									// logger.logInfo("L = TP -> "+tipoPlanilha+" | LN = "+line);
								// }
								
								if (nomeArquivo.toUpperCase().contains(".PDF") && !nomeArquivo.toUpperCase().contains(".CSV")) {
									if (TemplateUtils.verificaConversorNovoTipoPlanilha(tipoPlanilha)) {
										LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
										String idConversor  = TemplateUtils.getIdLote(nomeArquivo);
										// logger.logDebug("FOI PRO CONVERSOR1 " + nomeArquivo);
										boolean deubom = false;
										deubom = buscaProtocoloConversor(idConversor, apiWeb, tipoLancamento.toLowerCase(), nomeArquivo, logger);
										
										if (deubom) {
											File file2 = new File(dirName);
									
											File []  arquivoParaConverter = file2.listFiles();
											if (FileUtil.dirHasFiles(dirName)) {
												for (File fl: arquivoParaConverter) {
													if (fl.getName().toUpperCase().contains(".PDF")) {
														try {
															FileUtil.deleteFile(fl);
														} catch (Exception XX) {}
														break;
													}
												}
											}
										}
										continue;
									}
								}
								
								//#2306-007459
								if(tipoPlanilha.contains("CARTAO_SIPAG7") && extensao.contains("CSV")){
									memFile.setFieldSeparator(";");
								}
 
								if(!tipoPlanilha.equals("MOVIMENTO")){
									roteiroCRM = buscaRoteiro("getRoteiro"+tipoPlanilha, logger);
									inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
									idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
									inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
									idocumento      = getIndice("documento", idocumento, roteiroCRM);
									ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
									ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
									ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
									ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
									icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
									ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
									ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
									icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
									icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
									icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
									icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
									icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
									icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
									icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
									icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
									icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
									icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
									idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
									icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
									
									zerar			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
									
									
									// Em casos onde a planilha secund?ria precisa de uma aba espec?fica descomentar essa linha
									if(!roteiroCRM.optString("Abas_Especificas").equals("") && !roteiroCRM.optString("Abas_Especificas").contains(String.valueOf(abaConvertida))) continue;

								}
								
								if(nomeArquivo.toUpperCase().contains("OTTIMIZZA")){
									if(!logsTxt.toString().contains("MANTEMARQUIVO"))logsTxt.append("STATUS;DATA;VALOR;DOCUMENTO;CLIENTE/FORNECEDOR;PORTADOR;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;COMPLEMENTO06;TIPOPLANILHA;MANTEMARQUIVO;PROCESSAOUD;LINHA;");
									logs = true;
								}

								// #DOCUMENTACAO
								// tratamento de "Agrupar Colunas Excel" e "Agrupar a partir da coluna"
								try {
									fazerShrinkDelimitandoPosicoes(roteiroCRM, memFile);
								} catch (IllegalArgumentException e) {
									//TODO: handle exception
									erroShrink = true;
									logger.logError("Deu ruim no shrink \n"+e);
									break;
								}
								/////////////////////////////
								// VALIDACAO POR CABECALHO //
								/////////////////////////////
 

 								inomeOrigem		= getIndiceCabecalho("nomeOrigem", inomeOrigem, memFile, roteiroCRM);
								idataMovimento	= getIndiceCabecalho("dataMovimento", idataMovimento, memFile, roteiroCRM);
								inomePortador	= getIndiceCabecalho("nomePortador", inomePortador, memFile, roteiroCRM);
								idocumento		= getIndiceCabecalho("documento", idocumento, memFile, roteiroCRM);
								ivalorDocumento	= getIndiceCabecalho("valorDocumento", ivalorDocumento, memFile, roteiroCRM);
								ivalorJuros		= getIndiceCabecalho("valorJuros", ivalorJuros, memFile, roteiroCRM);
								ivalorDesconto	= getIndiceCabecalho("valorDesconto", ivalorDesconto, memFile, roteiroCRM);
								ivalorMulta		= getIndiceCabecalho("valorMulta", ivalorMulta, memFile, roteiroCRM);
								ivalorAlternativo = getIndiceCabecalho("valorAlternativo", ivalorAlternativo, memFile, roteiroCRM);
								ivalorPagamento	= getIndiceCabecalho("valorPagamento", ivalorPagamento, memFile, roteiroCRM);
								icodCcOrigem	= getIndiceCabecalho("codCcOrigem", icodCcOrigem, memFile, roteiroCRM);
								
								icomplemento01	= getIndiceCabecalho("complemento01", icomplemento01, memFile, roteiroCRM);
								icomplemento02	= getIndiceCabecalho("complemento02", icomplemento02, memFile, roteiroCRM);
								icomplemento03	= getIndiceCabecalho("complemento03", icomplemento03, memFile, roteiroCRM);
								icomplemento04	= getIndiceCabecalho("complemento04", icomplemento04, memFile, roteiroCRM);
								icomplemento05	= getIndiceCabecalho("complemento05", icomplemento05, memFile, roteiroCRM);
								icomplemento06	= getIndiceCabecalho("complemento06", icomplemento06, memFile, roteiroCRM);
								icomplemento07	= getIndiceCabecalho("complemento07", icomplemento07, memFile, roteiroCRM);
								icomplemento08	= getIndiceCabecalho("complemento08", icomplemento08, memFile, roteiroCRM);
								icomplemento09	= getIndiceCabecalho("complemento09", icomplemento09, memFile, roteiroCRM);
								icomplemento10	= getIndiceCabecalho("complemento10", icomplemento10, memFile, roteiroCRM);
								idataFake		= getIndiceCabecalho("dataFake", idataFake, memFile, roteiroCRM);
								icpfCnpj		= getIndiceCabecalho("cpfCnpj", icpfCnpj, memFile, roteiroCRM);
								
								isLinhaPrincipal = false;
								ignorarAntes = false;

								JSONObject histobj = new JSONObject();
								lerAposPrincipal = roteiroCRM.optString("lerAposPrincipal").toUpperCase();

								// #DOCUMENTACAO
								// ignorar antes
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO")) {

									histobj.put("nomeOrigem", getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger)).put("documento", getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger)).put("complemento01", getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger)).put("complemento02", getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger)).put("complemento03", getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger)).put("complemento04", getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger)).put("complemento05", getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger)).put("complemento06", getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger)).put("nomePortador", getCampoString(nomePortador,	inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger)).put("dataMovimento", "").put("mesAnoAnterior", "").put("mesAno2Anterior", "").put("mesAnoAtual", "").put("contaMovimento", "").put("contaPortador", "").put("contaDebito", "").put("contaCredito", "").put("contaJuros", contaJuros).put("contaDesconto", contaDesconto)
										   .put("contaMulta", contaMulta).put("valorDocumento", "").put("valorJuros", "")
										   .put("valorDesconto", "").put("valorMulta","").put("codFilial", "")
										   .put("numeroAba", String.valueOf(abaConvertida)).put("tipoPlanilha", tipoPlanilha)
										   .put("nomeArquivo", nomeArquivo.toUpperCase());

									ignorarAntes = getTratarLinhaIgnorar(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento,
																		 getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger),
																		 getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger), histobj);

									if (ignorarAntes) continue;

									double valorValido = 0;
									try{valorValido = Math.abs(memFile.getDoubleField(ivalorDocumento));}
									catch (Exception vlrd) { valorValido = 0; }

									if(ivalorDocumento < 0 && ivalorPagamento >= 0){
										try{valorValido = Math.abs(memFile.getDoubleField(ivalorPagamento));}
										catch (Exception vlrd) { valorValido = 0; }
									}


									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&  valorValido > 0) isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !histobj.optString("nomeOrigem").equals("")) isLinhaPrincipal = true;

								}
									
								logger.logInfo("LN -- " + line);
								
								if(tipoPlanilha.equals("MOVIMENTO")){
									if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("VERSAO:")){
										naoLeMais = true;
									}
									if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("EMISSAO DE:")){
										naoLeMais = false;
									}
								}
	
								if (naoLeMais) continue;
								if (tipoPlanilha.equals("")) continue;
								
								
								
								if(tipoPlanilha.equals("MOVIMENTO")){
									if(memFile.getFieldsSize() < 9 && memFile.getStringFieldRemoveEspCharsUpper(0).contains("/20")){
										ttMov2 = (ttMovimentoPadrao)mapaVariavel.get(chave+"-CTB");
										
										if(ttMov2 != null){
											
											if(ttMov2.complemento05.contains("TRATADO")){
												ttMov2 = new ttMovimentoPadrao(ttMov2);
												
											}
											
											ttMov2.valorDocumento = 0;
											ttMov2.documento = "";
											ttMov2.nomeOrigem = "";
											
											
											documento = memFile.getStringFieldRemoveEspCharsUpper(1);
											nomeOrigem = memFile.getStringFieldRemoveEspCharsUpper(3);
											
											try{
												valorDocumento = memFile.getDoubleField(4);
											}catch (Exception e){
												valorDocumento = 0;
											}
											
											ttMov2.documento = documento;
											ttMov2.nomeOrigem = nomeOrigem;
											ttMov2.valorDocumento = valorDocumento;
											
											if(ttMov2.complemento05.contains("TRATADO")){
												cont++; 
												String contLinhaTextoAux = String.valueOf(cont);
												contLinhaTextoAux = StringUtil.leftPad(contLinhaTextoAux, 05, "0");
												String consolidaClassAux = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTextoAux;

												classificacao         = ttMov2.dataMovimento.replace("/","").trim() + consolidaClassAux;
												
												lote = (nomeEmpresa + "_" + codEmpresa + "__" + nomeArquivo  + "__" + dataLote + "_" + tipoLancamento).replaceAll("\\." , "");												
												chave = lote + "-" + String.valueOf(abaConvertida) + String.valueOf(contadorArquivo) + "-" + contLinhaTextoAux;

												// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+dataMovimento+" | LOTEEE == "+lote.replace("_rodaconversor", "")+" | TP === "+tipoPlanilha+" | COD ROT == "+roteiroCRMPrincipal.optString("codigo"));
												
												if(chave.length() > 200)  chave = chave.substring(0, 199);
												
												ttMov2.classificacao = classificacao;
												ttMov2.chave = chave;
											}
											
											ttMov2.complemento05 = "TRATADO";
											
											mapaVariavel.put(chave+"-CTB",ttMov2);
											
											continue;
										}
									}
								}

								// #DOCUMENTACAO
								// leitura de xlsx e csv
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") || (!roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA(") && !roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA ("))) {
									TemplateUtils templateUtil = new TemplateUtils();
									zerar 			  = !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
 									
									// #Fabrica(2019-05-20)
									if (tipoPlanilha.contains("OTTCARTAO")) {
										dataMovimento = templateUtil.getDataOttCartao(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), tipoPlanilha, idataMovimento, line, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);logger.logInfo("DT dps -> " + dataMovimento);
										dataLote	  = getCampoDate(dataMovimento, "", "yyyy-MM");
									}
									
									if (!tipoPlanilha.contains("OTTCARTAO")) {
										// #Fabrica(2019-05-20)
										try{
											dataMovimento     = getDate(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);
											 
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
										}catch(Exception e){
											// dataMovimento   = "";
											// dataLote        = "";
										}
									}
									
									if(templateUtil.validaPlanilhaPadrao(tipoLancamento, memFile)) break;
									// logger.logDebug("TP -> "+tipoPlanilha+" - Empresa -> "+nomeEmpresa+" - DM -> "+line);
									
									
 								   
									// leitura de data mantida por seguranca
									// String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger).trim();
									// if (!dataString.equals("")) {
									// 	String dataMovimentoAux	  = getCampoDate(dataString);
									// 	if (dataMovimentoAux.contains("/")) {
									// 		dataMovimento     = getCampoDate(dataString);
									// 		dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
									// 	}
									// }

									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals("")) isLinhaPrincipal = true;
								
									
									if (!zerarColAlternativo.equals("")) {
										if (zerarColAlternativo.contains("documento"))		documento		= "";
										if (zerarColAlternativo.contains("nomeOrigem"))		nomeOrigem		= "";
										if (zerarColAlternativo.contains("nomePortador"))   nomePortador	= "";
										if (zerarColAlternativo.contains("complemento01"))  complemento01	= "";
										if (zerarColAlternativo.contains("complemento02"))  complemento02	= "";
										if (zerarColAlternativo.contains("complemento03"))  complemento03   = "";
										if (zerarColAlternativo.contains("complemento04"))  complemento04   = "";
										if (zerarColAlternativo.contains("complemento05"))  complemento05   = "";
										if (zerarColAlternativo.contains("complemento06"))  complemento06   = "";
										if (zerarColAlternativo.contains("complemento07"))  complemento07   = "";
										if (zerarColAlternativo.contains("complemento08"))  complemento08   = "";
										if (zerarColAlternativo.contains("complemento09"))  complemento09   = "";
										if (zerarColAlternativo.contains("complemento10"))  complemento10   = "";
									}
									
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, logger);
									
									if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
										complemento09 = templateUtil.validaComplementoVencimento(roteiroCRM, roteiroCRMPrincipal, line, memFile, logger);
									}
									
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, logger);

									historico		= "";
									parcelaDoc      = 1;

									valorDocumento	= 0;
									valorDocumentoArray[0] = 0;
									valorDocumentoArray[1] = 0;
									valorDocumentoArray[2] = 0;
									valorDocumentoArray[3] = 0;
									valorDocumentoArray[4] = 0;
									valorDocumentoArray[5] = 0;
									valorDocumentoArray[6] = 0;
									valorDocumentoArray[7] = 0;
									valorDocumentoArray[8] = 0;
									valorDocumentoArray[9] = 0;
									
									valorJuros		= 0;
									valorDesconto	= 0;
									valorMulta		= 0;
									valorPagamento	= 0;
									
									debitoCredito 	= "";
									valorAlternativo = 0;
									
									if(ivalorJuros >=0){
										try{valorJuros = Math.abs(memFile.getDoubleField(ivalorJuros));}
										catch (Exception vlrj) { valorJuros = 0;}
									}
									
									if(ivalorDesconto >=0){
										try{valorDesconto = Math.abs(memFile.getDoubleField(ivalorDesconto));}
										catch(Exception vlrd) {valorDesconto = 0;}
									}
									
									// quando no CRM colocarmos que a coluna de juros eh a mesma de valor desconto 
									// no caso do valor ser negativo, jogaremos zero para juros, ficando o valor absoluto da coluna como desconto
									// no caso do valor ser positivo, jogamos zero em valor desconto, ficando apenas com o valor dos juros
									if((ivalorDesconto == ivalorJuros) && valorJuros > 0 && ivalorJuros > 0){
										try{
											if(memFile.getDoubleField(ivalorDesconto) < 0) valorJuros = 0;
											else valorDesconto = 0;
										} catch(Exception vlrd) {}
									}
									
									if(ivalorMulta >=0){
										try{valorMulta = Math.abs(memFile.getDoubleField(ivalorMulta));}
										catch(Exception vlrm) {valorMulta = 0;}
									}
									
									//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if(ivalorDocumento >=0){
										try{valorDocumento = memFile.getDoubleField(ivalorDocumento);}
										catch (Exception vlrd) { valorDocumento = 0; }
									}
									
									// if(codEmpresa.contains("191")) logger.logDebug("V = "+valorDocumento+" | DT = "+dataMovimento+" | NO = "+nomeOrigem);
									
									// logger.logDebug("TP -> "+ ivalorDocumento + " | " + idataMovimento + " TREM " + 
													// tipoPlanilha+" - Empresa -> "+valorDocumento+" - DM -> "+dataMovimento + " | " + memFile.getStringFieldRemoveEspCharsUpper(0));
									
									if(logs && cont <= 200){
										
										logsTxt.append("\r\n");
										logsTxt.append("ANALISTA AUX").append(";").append(dataMovimento).append(";").append(valorDocumento).append(";")
											   .append(documento).append(";").append(nomeOrigem).append(";").append(nomePortador).append(";").append(complemento01)
											   .append(";").append(complemento02).append(";").append(complemento03).append(";").append(complemento04).append(";")
											   .append(complemento05).append(";").append(complemento06).append(";").append(tipoPlanilha).append(";")
											   .append(mantemArquivo.equals("SIM") ? "LENDO PELO TEMPLATE (SIM)" : "LENDO ESPECIFICO (NAO)").append(";")
											   .append(line).append(";");
																	
									}

									// logger.logDebug("ROTEIRO coluna Extra => " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " |TP => " + tipoPlanilha);
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
										String [] indiceValores = roteiroCRM.optString("Colunas_de_Valores_Extras").split(";");
										valorSomaArray = 0;
										for(int iv = 0; iv < indiceValores.length; iv++) {
											// try{
												// logger.logDebug("IDValores -> " + indiceValores[iv].toString());
												// if(!indiceValores[iv].contains("*") && !indiceValores[iv].contains("/") && !indiceValores[iv].contains("+") && !indiceValores[iv].contains("-") && !indiceValores[iv].contains("#")){
													// logger.logDebug("ENTROU IF");
													// String rotuloColuna = "";
													// String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";");
													// logger.logDebug("ROTULO ARRAY => " +rotuloArray[iv].toString());
													// indiceValores[iv]	= getIndiceCabecalhoExtra(rotuloArray[iv], memFile);
													// logger.logDebug("INDICE dps => " +indiceValores[iv].toString());
												// }
											// }catch(Exception xx){
												// logger.logDebug("CAIU CATCH");
											// }
												
											//ssss
											double denomidador = 0; 
											int indiceDenominador = -1;
											String sinal = "";
											boolean multiplica100 = false;
											boolean divide100 = false;
											
											if (indiceValores[iv].contains("*100")) multiplica100 = true;
											if (indiceValores[iv].contains("/100")) divide100 = true;
											indiceValores[iv] = indiceValores[iv].replace("*100","").replace("/100","");
											
											if (indiceValores[iv].contains("*")) sinal = "*";
											if (indiceValores[iv].contains("/")) sinal = "/";
											if (indiceValores[iv].contains("+")) sinal = "+";
											if (indiceValores[iv].contains("-")) sinal = "-";										

																					
											if (!sinal.equals("") && indiceValores[iv].contains(sinal)) {
 												try {
													if (!indiceValores[iv].contains("#")) {
														denomidador = Math.abs(memFile.getDoubleField(Integer.parseInt(cutString(indiceValores[iv], sinal))));
													}
													else {
														denomidador = DecimalUtil.toDecimal(cutString(indiceValores[iv], "#"));
													}
												} catch (Exception xx) {denomidador = 0;}
												indiceValores[iv] = cutString(indiceValores[iv], 0, sinal);
											} 
											 	
											
											try{
											
												valorDocumentoArray[iv] = Math.abs(memFile.getDoubleField(Integer.parseInt(indiceValores[iv])));
												if (sinal.equals("*") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] * denomidador;
												if (sinal.equals("/") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] / denomidador;
												if (sinal.equals("+") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] + denomidador;
												if (sinal.equals("-") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] - denomidador;
												if (multiplica100) valorDocumentoArray[iv] = valorDocumentoArray[iv] * 100;
												if (divide100)     valorDocumentoArray[iv] = valorDocumentoArray[iv] / 100;
												
 
												
 											}
											catch (Exception vlrd) { 

 
 
												valorDocumentoArray[iv] = 0; 
											}
											
											if(valorDocumentoArray[iv] < 0){
												valorDocumentoArray[iv] = 0;
											} 
											
											valorSomaArray += valorDocumentoArray[iv];
										}
									}
									
									
									if(ivalorPagamento >=0){
										try{valorPagamento	= memFile.getDoubleField(ivalorPagamento);}
										catch(Exception vlrp) {valorPagamento = 0;}
									}
									
									if(ivalorAlternativo >= 0){
										try{valorAlternativo = memFile.getDoubleField(ivalorAlternativo);}
										catch (Exception vlrd) { valorAlternativo = 0; }
									}
									
									if (tipoLancamento.equals("PAGAR"))
										debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER"))
										debitoCredito = "EXTRATO-CREDITO";
								
									
									////////////////////////////////////////////////
									////	busca Coluna Alternativa 
									JSONObject obj1 = new JSONObject();
									String validar	= "dataMovimento;nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador;valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";
									obj1.put("validar", validar).put("documento", documento).put("nomeOrigem", nomeOrigem).put("nomePortador", nomePortador)
										.put("dataMovimento", dataMovimento).put("complemento01", complemento01).put("complemento02", complemento02)
										.put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", complemento05)
										.put("complemento06", complemento06).put("complemento07", complemento07).put("complemento08", complemento08)
										.put("complemento09", complemento09).put("complemento10", complemento10).put("codCentroCusto", codCcOrigem)
										.put("tipoPlanilha", tipoPlanilha).put("numeroAba",	String.valueOf(abaConvertida)).put("nomeArquivo", nomeArquivo.toUpperCase());
									
									JSONObject alternativeObj = getAlternativeDataInt (obj1, memFile);
									String changed = alternativeObj.optString("changeIt");
									
									if(!changed.equals("")) {
										zerarColAlternativo = changed;
										if (changed.contains("dataMovimento")) {
											dataMovimento	= alternativeObj.optString("dataMovimento");
											dataLote		= alternativeObj.optString("dataLote");
										}
										if (changed.contains("documento"))		documento		= alternativeObj.optString("documento");
										if (changed.contains("nomeOrigem"))		nomeOrigem		= alternativeObj.optString("nomeOrigem");
										if (changed.contains("nomePortador"))   nomePortador	= alternativeObj.optString("nomePortador");
										
										if (changed.contains("complemento01"))  complemento01	= alternativeObj.optString("complemento01");
										if (changed.contains("complemento02"))  complemento02	= alternativeObj.optString("complemento02");
										if (changed.contains("complemento03"))  complemento03   = alternativeObj.optString("complemento03");
										if (changed.contains("complemento04"))  complemento04   = alternativeObj.optString("complemento04");
										if (changed.contains("complemento05"))  complemento05   = alternativeObj.optString("complemento05");
										if (changed.contains("complemento06"))  complemento06   = alternativeObj.optString("complemento06");
										if (changed.contains("complemento07"))  complemento07   = alternativeObj.optString("complemento07");
										if (changed.contains("complemento08"))  complemento08   = alternativeObj.optString("complemento08");
										if (changed.contains("complemento09"))  complemento09   = alternativeObj.optString("complemento09");
										if (changed.contains("complemento10"))  complemento10   = alternativeObj.optString("complemento10");
										
										if (changed.contains("valorDocumento"))	valorDocumento	= alternativeObj.optDouble("valorDocumento");
										
										if (changed.contains("valorPagamento"))	valorPagamento  = alternativeObj.optDouble("valorPagamento");
										if (changed.contains("valorDesconto"))	valorDesconto	= alternativeObj.optDouble("valorDesconto");
										if (changed.contains("valorJuros"))		valorJuros		= alternativeObj.optDouble("valorJuros");
										if (changed.contains("valorMulta"))		valorMulta		= alternativeObj.optDouble("valorMulta");
									}
									

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(ivalorAlternativo >= 0) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && ivalorAlternativo >= 0){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if((ivalorDocumento < 0 || tipoPlanilha.contains("PADRAOOTTIMIZZA")) && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento>0 && ivalorJuros < 0 && ivalorDesconto < 0 && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}

									valorDocumento = Math.abs(valorDocumento);
									

									
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0)) isLinhaPrincipal = true;
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&
										lerAposPrincipal.equals("") && (valorDocumento == 0 && valorSomaArray == 0)) {
											
										continue;
									}
								}
								
 

								// #DOCUMENTACAO
								// leitura de TXT
								if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && roteiroCRM.optString("dataMovimento").replaceAll(" ", "").toUpperCase().startsWith("COLUNA(") && roteiroCRM.optString("dataMovimento").endsWith(")")) {
  
									String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, roteiroCRM, logger).trim();
  
   
									if (!dataString.equals("") && dataString.contains("/")) {
										String dataMovimentoAux	  = getCampoDate(dataString);
										if (dataMovimentoAux.contains("/")) {
											dataMovimento     = getCampoDate(dataString);
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
 										}
									}
  									
  
									// ajusta data quando vem no formato 01012021  
									if (!dataString.equals("") && !dataString.contains("/") && dataString.contains("20")) {
										try {
											Date dts = DateUtil.stringToDate(dataString, "ddMMyyyy");
											dataMovimento = DateUtil.dateToString(dts, "dd/MM/yyyy");
											dataLote = DateUtil.dateToString(dts, "yyyy-MM");
											if (!dataMovimento.contains("/20")) {   // data bichada sera ignorada
												dataMovimento = "";
												continue;
											}
										} catch (Exception dt1) {
											continue;
										}
									}
  
 
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, roteiroCRM, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, roteiroCRM, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, roteiroCRM, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, roteiroCRM, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, roteiroCRM, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, roteiroCRM, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, roteiroCRM, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, roteiroCRM, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, roteiroCRM, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, roteiroCRM, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, roteiroCRM, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, roteiroCRM, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, roteiroCRM, logger);
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, roteiroCRM, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, 	line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, roteiroCRM, logger);


									valorDocumento = getDoubleTXT2020(roteiroCRM.optString("valorDocumento").toUpperCase(), line, objetoParametro);
									
									if (tipoPlanilha.contains("OTTCARTAO")) {
									    String valorStr = getCampoString("", -1, 	line, false, roteiroCRM.optString("valorDocumento").toUpperCase(), memFile, roteiroCRM, logger);
										if (!valorStr.contains(".") && !valorStr.contains(",")) valorDocumento = valorDocumento / 100;
									}

									valorJuros	   = getDoubleTXT2020(roteiroCRM.optString("valorJuros").toUpperCase(), line, objetoParametro);
									valorDesconto  = getDoubleTXT2020(roteiroCRM.optString("valorDesconto").toUpperCase(), line, objetoParametro);
									valorMulta 	   = getDoubleTXT2020(roteiroCRM.optString("valorMulta").toUpperCase(), line, objetoParametro);
									valorPagamento = getDoubleTXT2020(roteiroCRM.optString("valorPagamento").toUpperCase(), line, objetoParametro);

									if (tipoLancamento.equals("PAGAR")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-CREDITO";

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}

									if(!roteiroCRM.optString("valorDocumento").toUpperCase().contains("COLUNA") && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento > 0 && !roteiroCRM.optString("valorJuros").toUpperCase().contains("COLUNA") && !roteiroCRM.optString("valorDesconto").toUpperCase().contains("COLUNA") && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}
									
									//#2305-0004328. Coluna de valor extra para o formato txt
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
                                        valorSomaArray = TemplateUtils.lerValoresExtrasArquivoTxt(valorDocumentoArray, line, roteiroCRM, null);
                                    }
									valorDocumento = Math.abs(valorDocumento);
									
									// if(logs && cont <= 200){
										// logsTxt.append("\r\n");
										
										// logsTxt.append("ANALISTA AUX");												logsTxt.append(";");
										// logsTxt.append(dataMovimento); 												logsTxt.append(";");
										// logsTxt.append(valorDocumento);												logsTxt.append(";");
										// logsTxt.append(documento);													logsTxt.append(";");
										// logsTxt.append(nomeOrigem);													logsTxt.append(";");
										// logsTxt.append(nomePortador);												logsTxt.append(";");
										// logsTxt.append(complemento01);												logsTxt.append(";");
										// logsTxt.append(complemento02);												logsTxt.append(";");
										// logsTxt.append(complemento03);												logsTxt.append(";");
										// logsTxt.append(complemento04);												logsTxt.append(";");
										// logsTxt.append(complemento05);												logsTxt.append(";");
										// logsTxt.append(complemento06);												logsTxt.append(";");
										// logsTxt.append(tipoPlanilha);												
										// if(mantemArquivo.equals("SIM"))logsTxt.append("LENDO PELO TEMPLATE");		logsTxt.append(";");
										// if(mantemArquivo.equals("NAO"))logsTxt.append("LENDO ESPECIFICO");			logsTxt.append(";");
										// logsTxt.append(line);														logsTxt.append(";");
																		
									// }
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals(""))  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0))		  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !nomeOrigem.equals("")) isLinhaPrincipal = true;
								}


								// #DOCUMENTACAO
								// mes ano anterior 
								if(dataMovimento.length() > 9){
									mesRef	= Integer.parseInt(dataMovimento.substring(3,5));
									anoRef	= Integer.parseInt(dataMovimento.substring(6,10));
									mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
								}
								
								// #DOCUMENTACAO
								// filtro de datas (parametro definido por integracao no CRM, e informado a cada processamento de arquivos)
								//if (nomeArquivo.toUpperCase().contains("FILTRO_")) filtro = validaFiltro(nomeArquivo, dataMovimento);
								if (nomeArquivo.toUpperCase().contains("FILTRO_")) {
									temFiltro = true;
									filtro = validaFiltro(nomeArquivo, dataMovimento);
								}
								if (!filtro) continue;

								valorTotalDoc   += valorDocumento;
								valorTotalJuros += valorJuros;
								valorTotalDesc  += valorDesconto;

								if (documento.contains(".") && documento.contains("E")) {
									documento = removerNotacaoCientificaExcel(documento);
								}
								
								// #DOCUMENTACAO
								// cpfCnpj
								boolean aceitaCpf			= true;
								boolean cnpjSomenteNumeros	= Boolean.parseBoolean(roteiroCRM.optString("cnpjSomenteNumeros").toLowerCase().trim());

								if(!cpfCnpj.equals("")) cpfCnpj = trataCpfCnpj(cpfCnpj, cnpjSomenteNumeros, aceitaCpf);
								
								// #DOCUMENTACAO
								// ajustes fornecedor/cliente e portador
								if (nomeOrigem.equals("") && !roteiroCRM.optString("lerAposPrincipal").toUpperCase().contains("FORNECEDOR")) nomeOrigem = complemento01 + " " + dataMovimento + " R$" + String.valueOf(valorDocumento);
								nomeOrigem = nomeOrigem.trim();
								
								//Removemos o replace de AMP por conta de um efeito colateral #202212-0022861
								//nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("AMP","").trim();
								nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								// nomeOrigem = stringNormalizer(nomeOrigem, true);
								nomeOrigem = StringUtil.removeSpecialCharsToUC(nomeOrigem);
								
								// 202301-0023496 JWR Coloquei esse balde com o X para remontar o nomeOrigem
								// Descomentar caso d? problema com caracteres especiais
								/*String letrasPermitidas = "ABCDEFGHIJKLMNOPRSTUVWXYZ 0123456789.-/&";
								String nomeOrigemNovo = "";
								for (int xx = 0; xx < nomeOrigem.length(); xx++) {
									if (nomeOrigem.length() > xx) {
										if (letrasPermitidas.contains(nomeOrigem.substring(xx, xx+1))) {
											nomeOrigemNovo = nomeOrigemNovo + nomeOrigem.substring(xx, xx+1);
										}
									}
								}
								nomeOrigem = nomeOrigemNovo;*/

								
								if (roteiroCRM.optString("portador").toUpperCase().contains("NOME") && roteiroCRM.optString("portador").toUpperCase().contains("ARQUIVO")) nomePortador = StringUtil.removeSpecialCharsToUC(nomeArquivo).toUpperCase();
								nomePortador = nomePortador.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("\\?", "").trim();
								nomePortador = stringNormalizer(nomePortador, true);

								complemento01 = complemento01.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento02 = complemento02.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento03 = complemento03.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento04 = complemento04.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento05 = complemento05.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento06 = complemento06.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();

								// logger.logDebug("DAMA " + dataMovimento + " | " + valorDocumento + " | " + isLinhaPrincipal);
								if(dataMovimento.equals("")) continue;
								// quando for ler linha principal zerar as variaveis que vem depois da principal para nao sobrepor campos.
								if(isLinhaPrincipal) {
									// #DOCUMENTACAO
									// cont define que eh um novo lancamento (normalmente uma nova linha)
									cont++;

									if (lerAposPrincipal.contains("FORNECEDOR"))	nomeOrigem = "";
									if (lerAposPrincipal.contains("DOCUMENTO"))		documento = "";
									if (lerAposPrincipal.contains("PORTADOR")) 		nomePortador = "";
									if (lerAposPrincipal.contains("COMPLEMENTO01")) complemento01 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO02")) complemento02 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO03")) complemento03 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO04")) complemento04 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO05")) complemento05 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO06")) complemento06 = "";

								}
								
								if(cont == 0) continue;
								
								histobj.put("nomeOrigem", nomeOrigem).put("documento", documento).put("complemento01", complemento01).put("complemento02", complemento02)
									   .put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", complemento05).put("complemento06", complemento06)
									   .put("complemento07", complemento07).put("complemento08", complemento08).put("complemento09", complemento09).put("complemento10", complemento10)
									   .put("dataMovimento", dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior).put("mesAnoAtual", mesAnoAtual)
									   .put("nomePortador", nomePortador).put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "")
									   .put("contaJuros", contaJuros).put("contaDesconto", contaDesconto).put("contaMulta", contaMulta).put("valorDocumento", valorDocumento).put("tipoPlanilha", tipoPlanilha)
									   .put("valorJuros", valorJuros).put("valorDesconto", valorDesconto).put("valorMulta", valorMulta).put("codFilial", codFilial).put("nomeArquivo", nomeArquivo.toUpperCase()); // foi ajustado 

								//feita limpeza de campo para poder pegar melhor os juros e descontos.
								documento     = getLimpaCamposAvancado("documento", documento, histobj);


								// #DOCUMENTACAO
								// TRATA PLANILHA OU LANCAMENTO EXPECIFICO COMO EXTRATO
								tratarComoExtrato = getTratarComoExtrato(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								nomeOrigem = nomeOrigem.replaceAll("  ", " ").trim();
								if (tratarComoExtrato) {
									if (nomeOrigem.length() > 199) nomeOrigem = cutString(nomeOrigem, 0, 180); // #Fabrica(2019-10-03) @Becker
									JSONObject jDados = extrato.jDadosBuilder(nomePortador, codEmpresa, dataMovimento, debitoCredito, nomeArquivo, nomeOrigem, valorDocumento, complemento02, cont);
									/*JSONObject jDados = new JSONObject();
									jDados.put("PORTADOR",    		nomePortador);
									jDados.put("EMPRESA",     		codEmpresa);
									jDados.put("DATAMOVIMENTO",	 	dataMovimento);
									jDados.put("NOMEARQUIVO",       debitoCredito+nomeArquivo.toUpperCase()); // #DOCUMENTACAO EVITA PROBLEMA DE TRANSFERENCIAS NO MESMO ARQUIVO
									jDados.put("NOMEORIGEM",    	nomeOrigem);
									jDados.put("VALORDOCUMENTO",    valorDocumento);
									jDados.put("COMPLEMENTO01",     complemento02);
									jDados.put("DEBITO-CREDITO",    debitoCredito);
									jDados.put("CONT",  			String.valueOf(cont));*/
									// logger.logDebug("nomePortador -> " + nomePortador);
									boolean primExtrato = insertIOExtrato(jDados, dbIOCont, logger );
									jStatus = new JSONObject();
									putStatus(dirName, "", jStatus, logger);
									continue;									
								}
								
								debitoCredito = ""; // zera aqui para n?o confundir com extratos bancarios.


								// #DOCUMENTACAO
								// trata lancamento como juros (de outro lancamento)
								complemento10 = "";
								tratarComoJuros = getTratarComoJuros(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoJuros) {
									complemento10 = dataMovimento + "-" + documento + "-JUROS";
									ttJuros ttJ    = (ttJuros)mapaJuros.get(complemento10);
									if (ttJ == null) {
										ttJ  = new ttJuros();
										ttJ.documento  = documento;
										ttJ.valorJur   = valorDocumento;
										ttJ.valorLido  = 0;
									}
									mapaJuros.put(complemento10,ttJ);
									continue;
								}

								// #DOCUMENTACAO
								// trata lancamento como desconto (de outro lancamento)
								tratarComoDesconto = getTratarComoDesconto(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoDesconto) {
									complemento10  = dataMovimento + "-" + documento + "-DESCONTO";
									ttDesconto ttD    = (ttDesconto)mapaDesconto.get(complemento10);

									if(valorDocumento == 0) continue;

									if (ttD == null) {
										ttD  = new ttDesconto();
										ttD.documento  = documento;
										ttD.valorDesc  = valorDocumento;
										ttD.valorLido  = 0;
									}
									mapaDesconto.put(complemento10,ttD);
									continue;
								}

								int restoLinha = 0;
								restoLinha = (cont % 100);
								
								// logger.logDebug("PUTSTATUS 1591");
								if (restoLinha == 0) putStatus(dirName, "02--Etapa 2 de 4 - " + String.valueOf(cont) + "--" + tipoLancamento + ".status", jStatus, logger);


								String contLinhaTexto = String.valueOf(cont);
								contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
								String consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

								classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;
								
								
								// quando usa o getColunaAlternativa tem que refatorar o datalote
								dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");								
								
								//alterado para evitar problemas de lote (maiusculo)
								lote = (nomeEmpresa + "_" + codEmpresa + "__" + nomeArquivo  + "__" + dataLote + "_" + tipoLancamento).replaceAll("\\." , "");
								chave = lote + "-" + String.valueOf(abaConvertida) + String.valueOf(contadorArquivo) + "-" + contLinhaTexto;

								// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+dataMovimento+" | LOTEEE == "+lote.replace("_rodaconversor", "")+" | TP === "+tipoPlanilha+" | COD ROT == "+roteiroCRMPrincipal.optString("codigo"));
								
								if(chave.length() > 200)  chave = chave.substring(0, 199);
								
								// #DOCUMENTACAO
								////////////////////////////////////////////////////////////// ACUMULA ANTES
								histobj.put("nomeOrigem", nomeOrigem);
								histobj.put("documento", documento);
								histobj.put("complemento01", complemento01);
								histobj.put("complemento02", complemento02);
								histobj.put("complemento03", complemento03);
								histobj.put("complemento04", complemento04);
								histobj.put("complemento05", complemento05);
								histobj.put("complemento06", complemento06);
								histobj.put("nomePortador", nomePortador);
								histobj.put("dataMovimento", dataMovimento);
								histobj.put("mesAnoAnterior", mesAnoAnterior);
								histobj.put("mesAno2Anterior", mesAno2Anterior);
								histobj.put("mesAnoAtual", mesAnoAtual);
								histobj.put("valorDocumento", valorDocumento);
								histobj.put("valorJuros", valorJuros);
								histobj.put("valorDesconto", valorDesconto);
								histobj.put("valorMulta",valorMulta);
								histobj.put("tipoPlanilha", tipoPlanilha);
								histobj.put("nomeArquivo", nomeArquivo.toUpperCase());
								histobj.put("line", line.toUpperCase());
								histobj.put("cabecalhoRegra", cabecalhoRegra.toString());
  								
								String modificaData = getModificaData(histobj);
								
								if (modificaData.startsWith("01"))  dataMovimento = getNextDay(dataMovimento, 1, true);
								if (modificaData.startsWith("02"))  dataMovimento = getNextDay(dataMovimento, 2, true);
								if (modificaData.startsWith("03"))  dataMovimento = getNextDay(dataMovimento, 1, false);
								if (modificaData.startsWith("04"))  dataMovimento = getNextDay(dataMovimento, 2, false);
								if (modificaData.startsWith("05"))  dataMovimento = "01/" + cutString(dataMovimento, "/");
								if (modificaData.startsWith("06"))  dataMovimento = getLastDayOfMonth(dataMovimento, true);
								
								
								// METODO QUE REFATORA OS CAMPOS COM BASE NO CABECALHO DO CRM
								// EXEMPLO QUANDO ENCONTRAR #LINE NO CAMPO COMPLEMENTO03, VAMOS JOGAR O LINE NESTE COMPLEMENTO
								// UM COMPLEMENTO02 POR EXEMPLO PODE RECEBER DADOS DE TIPOPLANILHA
								nomeOrigem       = getRefatoraCampo(nomeOrigem, roteiroCRM.optString("fornecedor"), histobj);
								nomePortador     = getRefatoraCampo(nomePortador, roteiroCRM.optString("portador"), histobj);
								documento        = getRefatoraCampo(documento, roteiroCRM.optString("documentoNF"), histobj);
								complemento01    = getRefatoraCampo(complemento01, roteiroCRM.optString("complemento01"), histobj);
								complemento02    = getRefatoraCampo(complemento02, roteiroCRM.optString("complemento02"), histobj);
								complemento03    = getRefatoraCampo(complemento03, roteiroCRM.optString("complemento03"), histobj);
								complemento04    = getRefatoraCampo(complemento04, roteiroCRM.optString("complemento04"), histobj);
								complemento05    = getRefatoraCampo(complemento05, roteiroCRM.optString("complemento05"), histobj);
								complemento06    = getRefatoraCampo(complemento06, roteiroCRM.optString("complemento06"), histobj);
								complemento07    = getRefatoraCampo(complemento07, roteiroCRM.optString("complemento07"), histobj);
								complemento08    = getRefatoraCampo(complemento08, roteiroCRM.optString("complemento08"), histobj);
								complemento09    = getRefatoraCampo(complemento09, roteiroCRM.optString("complemento09"), histobj);
								complemento10    = getRefatoraCampo(complemento10, roteiroCRM.optString("complemento10"), histobj);
								 

								
								String testeChave = getRegrasParaAcumular(lote, chave, tipoLancamento, documento, nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
								if(testeChave.toUpperCase().contains("ACUMULAANTES") || testeChave.toUpperCase().contains("ACUMULARANTES")) {
									chave = testeChave;
									if(chave.length() > 180) chave = cutString(chave, 0, 179);
									acumulouAntes = true;
								}
								////////////////////////////////////////////////////////////////////////////////////
								String key = chave  + "-CTB";
								nomeOrigem = nomeOrigem.replaceAll("  "," ").trim();

								partidaDobradaJuros		= 0;
								partidaDobradaDesconto	= 0;
								partidaDobradaMulta		= 0;

								if (forcarPartidaDobrada) {
									partidaDobradaJuros		= valorJuros;
									partidaDobradaDesconto	= valorDesconto;
									partidaDobradaMulta		= valorMulta;
									valorJuros				= 0;
									valorDesconto			= 0;
									valorMulta				= 0;
								}
								
								if (tipoPlanilha.contains("OTTCARTAO")) {
									
									if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).equals("")) continue;
									if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && dataMovimento.equals("")) continue;
									complemento01 = tipoPlanilha;
									complemento02 = "VENDA";
									
									nomePortador = tipoPlanilha;
									
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
 									
								} else {
								
									// quando se mantem o arquivo, somente devem ser processados arquivos padroes
									// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
									// Trocado para validar se a planilha comeca como movimento - importante por causa da iguacu, Onnegestao, confialtiva que tinham movimento no roteiro secundario e estavam sendo bloqueados
									if (mantemArquivo.equals("SIM") && !tipoPlanilha.contains("PADRAOOTTIMIZZA") && 
									   !roteiroCRM.optString("nomeRelatorioRef").equals("PLANILHA_SIMPLES") && 
									   (tipoPlanilha.contains("SECUNDARIO") || tipoPlanilha.startsWith("MOVIMENTO"))) { //#Soares esteve aqui -> chamado referente a mudan?a: 202210-0019668
									   // Colocado este IF para dar mais performance, ou seja, se ja tiver lido mais de 15 linhas
									   // e planilha for para ser rodada na personalizada
									   // break agiliza a saida da leitura da planilha. Xavier em 19.08
									   if (contadorCabecalho < 15) continue;
									   logs = false;
									   // logger.logDebug("FB");
									   break;
									}
									
									// definido que as planilhas simples que rodam pelo template leem apenas a aba 0
									if (tipoPlanilha.equals("MOVIMENTO") && mantemArquivo.equals("SIM") && 
										porAba > 0 && roteiroCRM.optString("nomeRelatorioRef").equals("PLANILHA_SIMPLES")) { //#Soares esteve aqui -> chamado referente a mudan?a: 202210-0019668
									   
									   logs = false;
									   // logger.logDebug("SB");
									   break;
									}
									
								}
								//#FABRICA 31/08/2022 - @sergio - 202208-0017778
								//Estavamos processando as planilhas padroes sem apaga-las no processo
								//O if abaixo faz com que paguemos a planilha, ap?s processar pelo padrao
								
								// logger.logDebug("TPAQ " + tipoPlanilha);
								
								if(tipoPlanilha.contains("PADRAOOTTIMIZZA")){
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
									
								}
					
								// logger.logDebug("ANTES ttMov2");
								// #DOCUMENTACAO
								// insere numa tabela temporaria
								ttMov2      = (ttMovimentoPadrao)mapaVariavel.get(key);
								if (ttMov2 == null) {
									ttMov2 = new ttMovimentoPadrao();
									ttMov2.lote              = lote;
									ttMov2.codEmpresa        = codEmpresa;
									ttMov2.nomeEmpresa       = nomeEmpresa;
									ttMov2.dataMovimento     = dataMovimento;
									ttMov2.tipoMovimento     = "CTB";
									ttMov2.tipoLancamento    = tipoLancamento;
									ttMov2.historico         = historico;
									ttMov2.contaJuros        = contaJuros;
									ttMov2.contaMulta        = contaMulta;
									ttMov2.contaDesconto     = contaDesconto;
									ttMov2.centroCusto       = codCcOrigem;
									ttMov2.cpfCnpj           = cpfCnpj;
									ttMov2.chave             = chave + "-CTB";
									ttMov2.classificacao     = classificacao;
									ttMov2.codFilial         = codFilial;
									ttMov2.complemento07     = complemento07;
									ttMov2.complemento08     = complemento08;
									ttMov2.complemento09     = complemento09;
									ttMov2.complemento10     = complemento10;
									ttMov2.nomeArquivo       = nomeArquivo.toUpperCase();
									ttMov2.tipoPlanilha      = tipoPlanilha;
									ttMov2.chaveExtrato      = chaveExtrato;
									ttMov2.debitoCredito     = debitoCredito;
									ttMov2.contLinha         = contLinhaTexto;
									ttMov2.historicoMulta    = "";
									ttMov2.historicoJuros    = "";
									ttMov2.historicoDesconto = "";
									ttMov2.contaDebito       = "";
									ttMov2.contaCredito      = "";
									ttMov2.naturezaContabil  = "";
									ttMov2.contador 		 = 0;
									ttMov2.parcelaDoc        = parcelaDoc;
									ttMov2.abaPlanilha       = String.valueOf(abaConvertida);

									if(!lerAposPrincipal.contains("FORNECEDOR"))	ttMov2.nomeOrigem    = nomeOrigem;
									if(!lerAposPrincipal.contains("DOCUMENTO")) 	ttMov2.documento 	 = documento;
									if(!lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = nomePortador;
									if(!lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = complemento01;
									if(!lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = complemento02;
									if(!lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = complemento03;
									if(!lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = complemento04;
									if(!lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = complemento05;
									if(!lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = complemento06;
									
									// logger.logDebug("TTMOVTP -> "+tipoPlanilha);


								}

								///  -------------------------------------------------------------------------------------------------------
								///	 QUANDO FOR PLANILHA COM MAIS DE UMA LINHA, JOGAR OS VALORES PARA CIMA (dentro da parte de inclusao)
								///  E PASSAR PARA BAIXO OS CAMPOS QUE PODEM SER SOBREPOSTOS. Exemplo para a linha de baixo:
								///  if (!complemento02.equals("")) ttMov2.complemento02 = complemento02;
								///  -------------------------------------------------------------------------------------------------------

								// #DOCUMENTACAO
								// acumula linhas secundarias ou apenas l? as secundarias
								if (!nomeOrigem.equals("")    && lerAposPrincipal.contains("FORNECEDOR"))	 ttMov2.nomeOrigem    = (ttMov2.nomeOrigem    + " " + nomeOrigem).trim();
								if (!documento.equals("") 	  && lerAposPrincipal.contains("DOCUMENTO")) 	 ttMov2.documento	  = (ttMov2.documento + " " + documento).trim();
								if (!nomePortador.equals("")  && lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = (ttMov2.nomePortador  + " " + nomePortador).trim();
								if (!complemento01.equals("") && lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = (ttMov2.complemento01 + " " + complemento01).trim();
								if (!complemento02.equals("") && lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = (ttMov2.complemento02 + " " + complemento02).trim();
								if (!complemento03.equals("") && lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = (ttMov2.complemento03 + " " + complemento03).trim();
								if (!complemento04.equals("") && lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = (ttMov2.complemento04 + " " + complemento04).trim();
								if (!complemento05.equals("") && lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = (ttMov2.complemento05 + " " + complemento05).trim();
								if (!complemento06.equals("") && lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = (ttMov2.complemento06 + " " + complemento06).trim();
								
								ttMov2.valorDocumento   = ttMov2.valorDocumento  + valorDocumento;
								ttMov2.valorDesconto    = ttMov2.valorDesconto   + valorDesconto;
								ttMov2.valorMulta       = ttMov2.valorMulta      + valorMulta;
								ttMov2.valorJuros       = ttMov2.valorJuros      + valorJuros;

								leuFinanceiro = true;
								mapaVariavel.put(key,ttMov2);
								
								// logger.logDebug("TEPE " + tipoPlanilha + " | " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " | " + ttMov2.valorDocumento + " | " + ttMov2.dataMovimento);
								
								if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {

									for (int iv =0; iv < 10; iv++) { 
										
										if (valorDocumentoArray[iv] == 0) continue;
										
										String rotuloColuna = "";
										String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";"); 
										
										try {
											rotuloColuna = rotuloArray[iv];
										} 
										catch (Exception xx) {
											continue;
										}
										
										if (rotuloColuna.equals("")) continue;
										
									
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + rotuloColuna + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										histobj.put("dataMovimento", dataMovimento);
										
										ttTemp.complemento05 = rotuloColuna;
										histobj.put("complemento05", rotuloColuna);
										
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										
										ttTemp.valorDocumento   = valorDocumentoArray[iv] ;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;
										
										JSONObject obj1 = new JSONObject();
										String validar	= "dataMovimento;nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador;valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";
										
										obj1.put("validar", validar).put("documento", documento).put("nomeOrigem", nomeOrigem).put("nomePortador", nomePortador)
											.put("dataMovimento", ttTemp.dataMovimento).put("complemento01", complemento01).put("complemento02", complemento02)
											.put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", ttTemp.complemento05)
											.put("complemento06", complemento06).put("complemento07", complemento07).put("complemento08", complemento08)
											.put("complemento09", complemento09).put("complemento10", complemento10).put("codCentroCusto", codCcOrigem)
											.put("tipoPlanilha", tipoPlanilha).put("numeroAba",	String.valueOf(abaConvertida)).put("nomeArquivo", nomeArquivo.toUpperCase());
										
										JSONObject alternativeObj = getAlternativeDataInt (obj1, memFile);
										String changed = alternativeObj.optString("changeIt");
										
										if(!changed.equals("")) {
											zerarColAlternativo = changed;
											if (changed.contains("dataMovimento")) {
												dataMovimento	= alternativeObj.optString("dataMovimento");
												dataLote		= alternativeObj.optString("dataLote");
											}
											if (changed.contains("documento"))		documento		= alternativeObj.optString("documento");
											if (changed.contains("nomeOrigem"))		nomeOrigem		= alternativeObj.optString("nomeOrigem");
											if (changed.contains("nomePortador"))   nomePortador	= alternativeObj.optString("nomePortador");
											
											if (changed.contains("complemento01"))  complemento01	= alternativeObj.optString("complemento01");
											if (changed.contains("complemento02"))  complemento02	= alternativeObj.optString("complemento02");
											if (changed.contains("complemento03"))  complemento03   = alternativeObj.optString("complemento03");
											if (changed.contains("complemento04"))  complemento04   = alternativeObj.optString("complemento04");
											if (changed.contains("complemento05"))  complemento05   = alternativeObj.optString("complemento05");
											if (changed.contains("complemento06"))  complemento06   = alternativeObj.optString("complemento06");
											if (changed.contains("complemento07"))  complemento07   = alternativeObj.optString("complemento07");
											if (changed.contains("complemento08"))  complemento08   = alternativeObj.optString("complemento08");
											if (changed.contains("complemento09"))  complemento09   = alternativeObj.optString("complemento09");
											if (changed.contains("complemento10"))  complemento10   = alternativeObj.optString("complemento10");
											
											if (changed.contains("valorDocumento"))	valorDocumento	= alternativeObj.optDouble("valorDocumento");
											
											if (changed.contains("valorPagamento"))	valorPagamento  = alternativeObj.optDouble("valorPagamento");
											if (changed.contains("valorDesconto"))	valorDesconto	= alternativeObj.optDouble("valorDesconto");
											if (changed.contains("valorJuros"))		valorJuros		= alternativeObj.optDouble("valorJuros");
											if (changed.contains("valorMulta"))		valorMulta		= alternativeObj.optDouble("valorMulta");
										}

										if (tipoPlanilha.contains("OTTCARTAO")) {
											ttTemp.complemento01 = tipoPlanilha;
											ttTemp.complemento02 = rotuloColuna;
										}
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, rotuloColuna, classificacao);
									}
								}
								
								// Para cartoes, criamos o modelo de gerar tafifa por regra
								if (tipoPlanilha.contains("OTTCARTAO")) {

									histobj.put("complemento02", "TARIFA").put("complemento03", complemento03).put("dataMovimento", dataMovimento).put("complemento05", "TARIFA");									
 									
									double taxaTarifa = getTaxaTarifa("", tipoLancamento, documento, nomeOrigem, histobj);
  									 
									
									if (taxaTarifa > 0) {
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "TARIFA" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										
										
										ttTemp.complemento05 = "TARIFA";
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										ttTemp.valorDocumento   = ttTemp.valorDocumento * taxaTarifa;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;

 										ttTemp.complemento01 = tipoPlanilha;
										ttTemp.complemento02 = "TARIFA";
										
 										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "TARIFA", classificacao);
									}
								}
								
								

									
								if (forcarPartidaDobrada) {
									if (partidaDobradaJuros		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_JUR-" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento = partidaDobradaJuros;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "JUROS", classificacao);
									}
									
									if (partidaDobradaDesconto	> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_DES-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaDesconto;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "DESCONTO", classificacao);
									}
									
									if (partidaDobradaMulta		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_MUL-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaMulta;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "MULTA", classificacao);
									}
								}								
							} catch (Exception e) {
							}
						} // while
					}finally {
						
						/*if (memFile != null) { //closeFile
							try {memFile.closeFile(); } 
							catch (Exception ex) { }
						}*/ //closeFile
						
					}
				}

			}
			try {
				Iterator itArquivo = mapaArquivo.keySet().iterator();
				while (itArquivo.hasNext()) { 
					String key = (String)itArquivo.next();
					ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
					
					try {
		 
						FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
					} catch (Exception xx) {}
				}
			} catch (Exception xx) {} 
					
			

		}
	} catch (Exception ee) {
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
			putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + "0" + "--" + tipoLancamento + ".status", jStatus, logger);
		}
		if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
			putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + "0" + "--" + tipoLancamento + ".status", jStatus, logger);
		}
		logger.logError("EndpointA: ", ee);
	}
	
	
	
	try {
		Iterator itArquivo = mapaArquivo.keySet().iterator();
		while (itArquivo.hasNext()) { 
			String key = (String)itArquivo.next();
			ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
			
			try {
 
				FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
			} catch (Exception xx) {}
 		}
	} catch (Exception xx) {} 
			

	if(erroShrink){
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		throw new Exception();
	}
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// BUSCA INFORMACAO DE EXTRATOS SALVOS
	if (leuFinanceiro && cruzaExtrato.contains("TRUE") || (tipoPlanilha.contains("EXTRATO") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("TRUE") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("FALSE") && cruzaExtrato.contains("FALSE"))) {
			
		   
		try {
			JSONArray extratoEmpresa = new JSONArray();
			
			if (!nomeArquivoProtocolo.equals("")) extratoEmpresa = extrato.getExtratosEmpresaProtocolo(codEmpresa, nomeArquivoProtocolo, dbIOCont, logger);
			else extratoEmpresa = getExtratosEmpresa(codEmpresa, dbIOCont, logger);

			if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
				for (int t=0; t<extratoEmpresa.length(); t++) {

					JSONObject recMov = extratoEmpresa.optJSONObject(t);

					recMov.put("CODEMPRESA", codEmpresa).put("NOMEEMPRESA", nomeEmpresa);
					
					

					//QUANDO FOR CRUZAMENTO DE EXTRATO, MANTER NOME UNICO NO ARQUIVO FINAL.
					if (leuFinanceiro && cruzaExtrato.contains("TRUE")) {
						recMov.put("NOMEARQUIVO", nomeArquivo);
					}
					else {
						recMov.put("NOMEARQUIVO", "");
					}

					recMov.put("TIPOLANCAMENTO", tipoLancamento).put("CONTAMOVIMENTO", "").put("CONTAPORTADOR", "").put("CONTLINHATEXTO", String.valueOf(t));

					ttMovimentoPadrao ttMovExtrato = getMovimentoExtrato(recMov, logger);					
					if (nomeArquivo.toUpperCase().contains("FILTRO_")){
						boolean filtro = validaFiltro(nomeArquivo, ttMovExtrato.dataMovimento);
						temFiltro = true;
						if(!filtro) continue;
					}
					 
					
					String consolidaClass = StringUtil.leftPad(String.valueOf(t), 06, "0");
					ttMovExtrato.classificacao = ttMovExtrato.dataMovimento.replace("/","").trim() + "5" + consolidaClass;
					
					String leuCnpj = "";
					if (ttMovExtrato.nomeOrigem.contains(".") && ttMovExtrato.nomeOrigem.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.nomeOrigem);
						
						if (!leuCnpj.equals("")) {
							ttMovExtrato.nomeOrigem = ttMovExtrato.nomeOrigem.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll("/","").replaceAll(" ","").replaceAll("-",""));
						}	
					}	
					if (ttMovExtrato.complemento01.contains(".") && ttMovExtrato.complemento01.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.complemento01);
						if (!leuCnpj.equals("")) {
							ttMovExtrato.complemento01 = ttMovExtrato.complemento01.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll(" ","").replaceAll("/","").replaceAll("-",""));
						}
					}
					mapaVariavel.put(ttMovExtrato.chave, ttMovExtrato);
					apagaExtrato    = true;

				}
			}
		}
		catch (Exception xx) {
			// logger.logDebug("ATENCAO - PROBLEMA NA LEITURA DE EXTRATO - BANCO");
		}

	} // if tipo planilha nao igual extrato
	
	// logger.logDebug("ETAPA 03 TEMPLATE ");
	
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// INICIO DAS ITERACOES
	StringBuilder[] txtFiscal = new StringBuilder[20];
  	for (int i= 0; i < 20; i++) {
		txtFiscal[i] = new StringBuilder("");
		loteFiscal[i] = "";		
	}

	StringBuilder txtFornecedor = new StringBuilder();
	StringBuilder txtPortador   = new StringBuilder();
	StringBuilder txtConciliacao= new StringBuilder();
	String nomePortadorAnterior = "";
	
	// if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // #Fabrica(2019-08-13) @Vini
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("PAGAR")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // JWR 01022021
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("RECEBER")) txtFiscal[0].append("PGTOCLI").append(cnpjEmpresa).append("\r\n"); // JWR 01022021

	StringBuilder ResumoTxt = new StringBuilder();
	String rn = "\r\n";
	ResumoTxt = new StringBuilder();
	ResumoTxt.append("").append(rn).append(rn);

	ResumoTxt.append("STATUS;DATA;TIPO DATA;VALOR;DOCUMENTO;CLIENTE/FORNECEDOR;PORTADOR;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;COMPLEMENTO06;;CTA DEBITO ENCONTRADA;CTA CREDITO ENCONTRADA;REGRA CONTA CRM;HISTORICO;REGRA HISTORICO;;DATA;DEBITO;CLASS DEB;NOME CONTA;CREDITO;CLASS CRED;NOME CONTA;VALOR;HISTORICO;");
	ResumoTxt.append("ORIGEM");

	StringBuilder txtDePara = new StringBuilder();

	txtDePara.append("DATA;VALOR;FORNECEDOR/CLIENTE;PORTADOR;CONTA DEBITO;CONTACREDITO;DOCUMENTO;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;C.CUSTO;ARQUIVO");
	txtDePara.append("\r\n");
	
	
	// logger.logDebug("DIRNAME " + dirName);
	if (mantemArquivo.equals("SIM")) {
		File fileDepoisLista = new File(dirName);
		File [] filesDepois = fileDepoisLista.listFiles(); 
		
		if (filesDepois.length > 1) putStatus(dirName, "", jStatus, logger);
	}
	// logger.logDebug("TEMPLATE ETAPA 03 ");


	int contRegra = -1;
	
	String loteEtapaTres = "";
	
	
	try {
		Iterator itExtrato = mapaVariavel.keySet().iterator();
		while (itExtrato.hasNext()) {
			String chaveExtrato     = "";

			String key = (String)itExtrato.next();
			ttMovimentoPadrao ttMov = (ttMovimentoPadrao)mapaVariavel.get(key);
			
			// if (nomeArquivo.toUpperCase().contains(".OMC")) ttMov.tipoPlanilha = "EXTRATO";

			// alterado de equals para contains o tipo planilha movimento xavier 27.03
			if(!ttMov.tipoPlanilha.contains("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			
 			loteEtapaTres = ttMov.lote;
 
			
			// #DOCUMENTACAO
			// TRATA LOTES (MAIUSCULO e MINUSCULO)
			
			if(ttMov.lote.lastIndexOf("__") > ttMov.lote.indexOf("__")){
				ttMov.lote = nomeEmpresa +"_"+ codEmpresa +"_"+ 
				             cutString(ttMov.lote, ttMov.lote.indexOf("__"), ttMov.lote.lastIndexOf("__")).toLowerCase() +"_"+ ttMov.lote.substring(ttMov.lote.lastIndexOf("__"));
			}
			

			// #DOCUMENTACAO
			// EVITA GERAR 2 ARQUIVOS QUANDO TEM TRATAR COMO EXTRATO
			// ajusta o ott_oud__ para poder reprocessar o arquivo automaticamnete pelo portal
			ttMov.lote = ttMov.lote.replace(ttMov.debitoCredito,"").replace("extrato-debito","").replace("extrato-credito","").replace("___","_").replace("__","_");
			if (!ttMov.lote.toLowerCase().contains("ott_oud__") && ttMov.lote.toLowerCase().contains("ott_oud_")) {
				ttMov.lote = ttMov.lote.replace("ott_oud_","ott_oud__");
			}
			
			// #DOCUMENTACAO
			// JUNCAO DOS LANCAMENTOS COM OS JUROS E DESCONTOS (TRATAR COMO JUROS OU DESCONTO)
			String chaveJuros = ttMov.dataMovimento + "-" + ttMov.documento + "-JUROS";
			ttJuros ttJ  = (ttJuros)mapaJuros.get(chaveJuros);
			if (ttJ != null && ttJ.valorLido == 0) {
				ttMov.valorJuros  = ttJ.valorJur;
				ttJ.valorLido     = 1;
				mapaJuros.put(chaveJuros,ttJ);

			}

			String chaveDesconto = ttMov.dataMovimento + "-" + ttMov.documento + "-DESCONTO";
			ttDesconto ttD  = (ttDesconto)mapaDesconto.get(chaveDesconto);
			if (ttD != null && ttD.valorLido == 0) {
				ttMov.valorDesconto  = ttD.valorDesc;
				ttD.valorLido     = 1;
				mapaDesconto.put(chaveDesconto,ttD);

			}
			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			//logger.logDebug("ANTES 3 DE 4");
			
			if(codEmpresa.contains("20") && contRegra < 4000) logger.logInfo("Lendo " + tipoLancamento);
			 
			// if (codEmpresa.contains("277")) logger.logDebug("TRESDEQUATRO " + " | " + ttMov.tipoP + ttMov.debitoCredito + " | " +  ttMov.dataMovimento + " | " + ttMov.valorDocumento);
			
 			if (restoLinha == 0) putStatus(dirName, "03--Etapa 3 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			
			// logger.logInfo("3 de 4 = NA = "+ttMov.nomeArquivo+" | LT = "+ttMov.lote);
			
			// if (codEmpresa.contains("1722")) 
			// logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.lote + " | " + ttMov.dataMovimento + " | " + ttMov.tipoLancamento + " | " + ttMov.debitoCredito + " | " + ttMov.dataMovimento + " | " + ttMov.valorDocumento);
			// if (codEmpresa.contains("244")) logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.nomeOrigem);
			
			
			// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+ttMov.dataMovimento+" | LOTEEE == "+ttMov.lote.replace("rodaconversor", "")+" | TP === "+ttMov.tipoPlanilha);
			if (ttMov.tipoPlanilha.contains("CARTAO")) ttMov.tipoPlanilha = ttMov.tipoPlanilha.replaceAll("[0-9]", "").trim(); //JWR
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("\'","");
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("\"","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\'","");
			ttMov.complemento02 = ttMov.complemento02.replaceAll("\'","");
			ttMov.complemento03 = ttMov.complemento03.replaceAll("\'","");
			ttMov.complemento04 = ttMov.complemento04.replaceAll("\'","");
			ttMov.complemento05 = ttMov.complemento05.replaceAll("\'","");
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
   			ttMov.nomePortador = ttMov.nomePortador.replaceAll("\\|","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\\|","");
			
			classificaPlano     = roteiroCRM.optString("classificaPlano");
			classificaFornec    = roteiroCRM.optString("classificaFornec");
			cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
			Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
			
			if(/*roteiroCRM.optString("empresa").toUpperCase().contains("POSTOBRAGA") && */ttMov.nomeArquivo.toUpperCase().contains(".OMC")){//yuri
				cruzaExtrato = "FALSE";
				Cruza_Extrato_com_Extrato = "FALSE";
			}
			
			String integraFiscal = roteiroCRM.optString("Integracao_fiscal").toUpperCase();
			String integraContrato = roteiroCRM.optString("Integracao_contratos").toUpperCase();
			
			// if (codEmpresa.contains("856")) logger.logDebug("PORTADOR " + ttMov.nomeOrigem);
			
			logger.logInfo("NO == "+ttMov.nomeOrigem+" | V = "+ttMov.valorDocumento+" | TL = "+ttMov.tipoLancamento+" | DC = "+ttMov.debitoCredito);

			if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) continue;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-DEBITO")) continue;
			// logger.logDebug("PORTAS1 " + cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_"));
			// logger.logDebug("PORTAS2 " + ttMov.nomePortador);
			if (ttMov.nomePortador.toUpperCase().contains("OTT_OUD") && ttMov.nomePortador.toUpperCase().contains("CEF")) ttMov.nomePortador = cutString(ttMov.nomePortador.toUpperCase(), 0, "OTT_") + " " + cutString(ttMov.nomePortador.toUpperCase(), ttMov.nomePortador.toUpperCase().indexOf(cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_"))+cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_").length()+1);
			
			// logger.logDebug("TIPOS " + tipoPlanilha);
			
			if (ttMov.tipoPlanilha.contains("EXTRATO") || ttMov.tipoPlanilha.contains("FRANCESINHA")) {
				JSONObject histobj = new JSONObject();
				histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
					   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
					   .put("complemento06", ttMov.complemento06).put("nomePortador", ttMov.nomePortador).put("dataMovimento", ttMov.dataMovimento)
					   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
					   .put("valorMulta",ttMov.valorMulta).put("tipoPlanilha", ttMov.tipoPlanilha);
  								
				String modificaData = getModificaData(histobj);
				
				if (modificaData.startsWith("01"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 1, true);
				if (modificaData.startsWith("02"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 2, true);
				if (modificaData.startsWith("03"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 1, false);
				if (modificaData.startsWith("04"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 2, false);
				if (modificaData.startsWith("05"))  ttMov.dataMovimento = "01/" + cutString(ttMov.dataMovimento, "/");
				if (modificaData.startsWith("06"))  ttMov.dataMovimento = getLastDayOfMonth(ttMov.dataMovimento, true);
			}
 
  
			// ------------------------------------------------------------------------------------------------------------------
			// 	 		INICIA PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------
			String DATAMOVIMENTO   = "";
			String PORTADOR        = "";
			String CHAVE           = "";
			boolean jaCruzou       = false;
			
			ttMov.valorJuros = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
			ttMov.valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
			ttMov.valorMulta = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorMulta));
			ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
			// ajuste 11/2020 @DiMaz
			if (ttMov.valorDocumento == 0) continue;
 

			// #DOCUMENTACAO
			// EXTRATO COM EXTRATO
			if (Cruza_Extrato_com_Extrato.contains("TRUE") && ttMov.tipoPlanilha.contains("EXTRATO")) {

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);
				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();
				String transferencia = "NAO";

				if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-DEBITO"))  transferencia = "SIM";
				if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) transferencia = "SIM";

				if (transferencia.equals("SIM")) {
					for (int xx = 0;xx<1;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;

							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							
							extratoEmpresa = extrato.buscaExtratoPorChaveExtratoLido(chaveExtrato, ttMov.nomeArquivo, dbIOCont, logger);

							/*extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();*/

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");

					ttMov.complemento04 = ttMov.nomeOrigem;
					ttMov.nomeOrigem    = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;
					ttMov.tipoPlanilha  = "EXTRATO-TRANSFERENCIA";
					
					extrato.atualizaExtratoLido(CHAVE, dbIOCont, logger);

					/*dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();*/
					jaCruzou = true;

				}
			}

			// #DOCUMENTACAO
			// EXTRATO COM PLANILHA
			if (cruzaExtrato.contains("TRUE")  && !jaCruzou) {

				Conta_Fixa_Cruzamento_Extrato  = roteiroCRMPrincipal.optString("Conta_Fixa_Cruzamento_Extrato");

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm   = new Date();
				Date dataMovimentoDateMenosDois = new Date();
				Date dataMovimentoDateMenosTres = new Date();
				Date dataMovimentoDateMaisUm    = new Date();
				Date dataMovimentoDateMaisDois  = new Date();
				Date dataMovimentoDateMaisTres  = new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm   = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm    = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois  = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres  = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();

				String transferencia = "NAO";

				if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
					for (int xx = 0;xx<7;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;
							if (xx ==1) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisUm, "dd/MM/yyyy");
							if (xx ==2) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosUm, "dd/MM/yyyy");
							if (xx ==3) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisDois, "dd/MM/yyyy");
							if (xx ==4) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosDois, "dd/MM/yyyy");
							if (xx ==5) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisTres, "dd/MM/yyyy");
							if (xx ==6) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosTres, "dd/MM/yyyy");


							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							
							extratoEmpresa = extrato.buscaExtratoPorChaveExtratoLido(chaveExtrato, ttMov.nomeArquivo, dbIOCont, logger);

							/*extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();*/

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");
					if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) ttMov.complemento02 = recMov.optString("COMPLEMENTO"); //checknum

					ttMov.nomePortador  = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;
					
					extrato.atualizaExtratoLido(CHAVE, dbIOCont, logger);

					/*dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();*/

				}

			}
			
			if (ttMov.lote.contains("_ancora_")) {
				ttMov.lote = ttMov.lote.replace("_ancora_", "");
			}
			
			if (ttMov.lote.contains("_ANCORA_")) {
				ttMov.lote = ttMov.lote.replace("_ANCORA_", "");
			}


			// ------------------------------------------------------------------------------------------------------------------
			// 	 		FINALO DO PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------




			classificacao = "";

			String key2 = ttMov.chave;

			if(ttMov.dataMovimento.length() > 9){
				mesRef  = Integer.parseInt(ttMov.dataMovimento.substring(3,5));
				anoRef  = Integer.parseInt(ttMov.dataMovimento.substring(6,10));
				mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
			}

			String trimestreMesAnoAnterior	    = "";
			String trimestreMesAnoAtual   	    = "";
			String descricaoPlanoContaPortador  = "";
			String descricaoPlanoContaMovimento = "";

			// #DOCUMENTACAO
			// TRIMESTRE
			if (mesAnoAnterior.startsWith("01") || mesAnoAnterior.startsWith("02") || mesAnoAnterior.startsWith("03")) trimestreMesAnoAnterior = "1. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("04") || mesAnoAnterior.startsWith("05") || mesAnoAnterior.startsWith("06")) trimestreMesAnoAnterior = "2. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("07") || mesAnoAnterior.startsWith("08") || mesAnoAnterior.startsWith("09")) trimestreMesAnoAnterior = "3. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("10") || mesAnoAnterior.startsWith("11") || mesAnoAnterior.startsWith("12")) trimestreMesAnoAnterior = "4. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAtual.startsWith("01") || mesAnoAtual.startsWith("02") || mesAnoAtual.startsWith("03")) trimestreMesAnoAtual = "1. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("04") || mesAnoAtual.startsWith("05") || mesAnoAtual.startsWith("06")) trimestreMesAnoAtual = "2. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("07") || mesAnoAtual.startsWith("08") || mesAnoAtual.startsWith("09")) trimestreMesAnoAtual = "3. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("10") || mesAnoAtual.startsWith("11") || mesAnoAtual.startsWith("12")) trimestreMesAnoAtual = "4. Trimestre/" + mesAnoAtual.substring(3);


			if (ttMov.nomeOrigem.equals("")) ttMov.nomeOrigem = ttMov.complemento01 + " " + ttMov.dataMovimento + " R$" + String.valueOf(ttMov.documento);
			ttMov.nomeOrigem = ttMov.nomeOrigem.trim();
			if (ttMov.nomePortador.equals("")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("_")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("-")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.replaceAll("\\$", "").equals("")) ttMov.nomePortador = "EM BRANCO";
			

			contaJuros        = roteiroCRM.optString("contaFixaJuros");
			contaFixaCredito  = roteiroCRM.optString("contaFixaCredito");
			contaFixaDebito   = roteiroCRM.optString("contaFixaDebito");
			contaDesconto     = roteiroCRM.optString("contaFixaDesconto");
			contaMulta        = roteiroCRM.optString("contaFixaMulta");
			
			

			 if(ttMov.valorJuros > 0) logger.logInfo("ValorJuros -> " + ttMov.valorJuros + " |contaJuros -> " + contaJuros + " |VAlorMulta -> " + ttMov.valorMulta + " | contaMulta -> " + contaMulta + " |TTMovNO -> " + ttMov.nomeOrigem +  " | roteiroCRM -> " + roteiroCRM.optString("idRoteiro"));
			

			contaMovimento = "";
			contaPortador  = "";


			if(ttMov.tipoLancamento.contains("PAGAR")) {
				contaMovimento = contaFixaDebito;
				contaPortador  = contaFixaCredito;
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				contaPortador  = contaFixaDebito;
				contaMovimento = contaFixaCredito;
			}
			
			
			
			// exemplo de como vem um registro do complemento_lancaments 
			// 54999667000179-PAG-ANTONIO FLAVIO DE ARAUJO JUNIOR-2021-05-21-180.0
 			
			if (contaMovimento.equals("") && encontrouComplemento){
				try {
				
					String chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 3) + "-" + ttMov.nomeOrigem + "-" + 
					                          cutString(ttMov.dataMovimento, 6) + "-" + cutString(ttMov.dataMovimento, "/", "/") + "-" + cutString(ttMov.dataMovimento, 0, "/") + "-" + 
											  ttMov.valorDocumento;
											  
 																				
											  
 					ttPlano ttP  = (ttPlano)mapaDePara.get(chaveComplemento); 
					if (ttP == null) {							
						ttP  = new ttPlano(); 
						ttP.descricaoPlano = chaveComplemento;
						ttP.contaAnalitica = "";
						ttP.contaContabil     = "";
						mapaDePara.put(chaveComplemento,ttP);
							
						try{
							deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
							}
						catch (Exception e) { 
						}
						if (deParaObj != null && !deParaObj.toString().equals("{}")) {
							if (ttMov.tipoPlanilha.contains("EXTRATO")) {
									ttMov.complemento02 = deParaObj.optString("complemento");
							} else {
								ttMov.complemento01 = deParaObj.optString("complemento");
							}
 							

						} else {
						
							//	 verifica se banco de dados possui ao menos algum lancamento de complemento
							//   se nao encontrar, joga false na encontrouComplemento para ter mais performance e nao buscar no 
							//   banco  de dados a toa
							chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 2);
							try{
								deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
								}
							catch (Exception e) { 
							}
							if (deParaObj == null || deParaObj.toString().equals("{}"))  encontrouComplemento = false;
 						
						}
						

					}  
				} catch  (Exception Ee) {}
			}
			
 
			// Quando pede para cruzar extrato e nao encontra relacionamento com o extrato
			// joga conta fixa de extrato em DEBITO quando for extato e CREDITO quando for planilha
			if ((cruzaExtrato.contains("TRUE") || cruzaExtrato.contains("VERDADEIRO")) && PORTADOR.equals("")) {
				if (ttMov.tipoPlanilha.contains("EXTRATO"))  contaMovimento  = Conta_Fixa_Cruzamento_Extrato;
				if (!ttMov.tipoPlanilha.contains("EXTRATO")) contaPortador   = Conta_Fixa_Cruzamento_Extrato;
			}


			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			contaMovimento    = getConta09(contaMovimento, ttMov.nomeOrigem,  ttMov.documento, "", ttMov.complemento01,  ttMov.complemento02,  ttMov.complemento03, "",  ttMov.centroCusto);
			contaPortador     = getConta09(contaPortador, "", "", ttMov.nomePortador, "", "", "", ttMov.nomeArquivo, "");
			//ttMov.centroCusto = getCentroCusto("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, "", ttMov.centroCusto);
			//2310-017917 - As regras de centro custo tem validacao com o nome do arquivo e n?o funcionava porque nomeArquivo nao estava sendo passado no getCentroCusto
			ttMov.centroCusto = getCentroCusto("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, nomeArquivo, ttMov.centroCusto); 
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
			if (!ttMov.codFilial.equals("") && roteiroCRMPrincipal.optString("erpContabilidade").equals("CUCA-FRESCA")) ttMov.cpfCnpj = ttMov.codFilial;

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			JSONObject histobj = new JSONObject();

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
				   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
				   .put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07).put("complemento08", ttMov.complemento08)
				   .put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10).put("dataMovimento", ttMov.dataMovimento)
				   .put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior).put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador)
				   .put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
				   .put("contaDesconto", ttMov.contaDesconto).put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
				   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto).put("valorMulta", ttMov.valorMulta)
				   .put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha).put("numeroAba", ttMov.abaPlanilha).put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermos("complemento08", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermos("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getLimpaCampos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCampos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCampos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCampos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCampos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCampos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCampos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCampos("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCampos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCampos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCampos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCampos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCampos("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
				   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
				   .put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07).put("complemento08", ttMov.complemento08)
				   .put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10).put("nomePortador", ttMov.nomePortador);

			ttMov.complemento01 = getLimpaCamposAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCamposAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCamposAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCamposAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCamposAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCamposAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCamposAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCamposAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCamposAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCamposAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCamposAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCamposAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCamposAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getReplaceTermosAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermosAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermosAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermosAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermosAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermosAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermosAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermosAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermosAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermosAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermosAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermosAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermosAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01)
				   .put("complemento02", ttMov.complemento02).put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04)
				   .put("complemento05", ttMov.complemento05).put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07)
				   .put("complemento08", ttMov.complemento08).put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10)
				   .put("dataMovimento", ttMov.dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior)
				   .put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador).put("contaMovimento", contaMovimento)
				   .put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
				   .put("contaDesconto", ttMov.contaDesconto).put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
				   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
				   .put("valorMulta", ttMov.valorMulta).put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha)
				   .put("numeroAba", ttMov.abaPlanilha).put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			
			// Quando selecionado para controlar parcela, buscar complemento apos a limpeza para poder jogar em parcela
			String parcelaString = "1";
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO01")) parcelaString = ttMov.complemento01;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO02")) parcelaString = ttMov.complemento02;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO03")) parcelaString = ttMov.complemento03;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO04")) parcelaString = ttMov.complemento04;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO05")) parcelaString = ttMov.complemento05;

			try {
				ttMov.parcelaDoc = Integer.parseInt(parcelaString);
			}
			catch (Exception xx) { ttMov.parcelaDoc = 1;}
			
			//Feito para retirar os indices apos o tipoPlanilha, estavam impactando nas regras do oud
			if(!ttMov.tipoPlanilha.equals("")){
				String sequencia = "";
				try{
					sequencia = cutString(ttMov.tipoPlanilha, ttMov.tipoPlanilha.length()-4).replaceAll("[^0-9]", "");
				}catch(Exception s1){}
				if(ttMov.tipoPlanilha.contains(sequencia)){
					try{
						ttMov.tipoPlanilha = cutString(ttMov.tipoPlanilha, 0, sequencia);
						
					}catch(Exception s2){}
				}
			}
			
			// logger.logDebug("TTMS " + ttMov.tipoPlanilha + " | " + ttMov.complemento01 + " | " + ttMov.nomeOrigem + " | " + ttMov.complemento02);
			
		
			contaMovimento = getContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento2(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento3(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaPortador  = getContaPortador(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//#2305-004914. Carrega a chamadas das rotinas getContaMovimento e getContaPortador caso n?o tenha ainda.
			// Classe Principal SC
			Class<?> sc = this.getClass();
			// Instancia da Classe Principal
			Object scInstance = sc.newInstance();
			// Get all Methods from superclass 'SC'.
			java.lang.reflect.Method[] methods = sc.getDeclaredMethods();
			boolean methodFoundPortador = false;
			boolean methodFoundMovimento = false;			
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundPortador = false;
				methodFoundMovimento = false;
				if(methodName.toUpperCase().contains("GETCONTAMOVIMENTO")) {
					methodFoundMovimento = true;
				}
				if(methodName.toUpperCase().contains("GETCONTAPORTADOR")) {
					methodFoundPortador = true;
				}
				
				try {
					if(methodFoundMovimento) {					
						// Invoca metodo de getContaMovimento.
						contaMovimento = (String) method.invoke(scInstance, contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
					}
					if(methodFoundPortador) {
						// Invoca metodo de getContaPortador.					
						contaPortador = (String) method.invoke(scInstance, contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
					}
				} catch (Exception e) {}
			}
			
			if (codEmpresa.equals("00001")) logger.logInfo("Pelo getContaMovimento " + contaMovimento);
			
			// Soares - Mudanca no template referente a uma parte do chamado =>> 202208-0017982
			
			if(roteiroCRM.optString("gravaCnpjMovimento").toUpperCase().contains("TRUE")){
				if(contaMovimento.equals("")) {
					if(!ttMov.cpfCnpj.equals("")){
						contaMovimento = ttMov.cpfCnpj;
						if((roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().startsWith("SCI") || roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("PROSOFT")) && !ttMov.cpfCnpj.equals(""))
							contaMovimento = ttMov.cpfCnpj + "P";
					}
				}
				else {ttMov.cpfCnpj = "";}
			}
 			
			regraContaMovimento  = getRegraContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			// logger.logDebug("CONTINHA "  + contaMovimento + " | " + regraContaMovimento);
			// logger.logDebug("CONTA MOV == "+contaMovimento+" | NO == "+ttMov.nomeOrigem+" | TP = "+ttMov.tipoPlanilha);

			double valorPrincipal 	 = getValorPrincipal("", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			if (valorPrincipal> 0 && ttMov.valorDocumento > valorPrincipal) {
				ttMov.valorJuros     = ttMov.valorDocumento - valorPrincipal;
				ttMov.valorDocumento = valorPrincipal;
			}
			
			ttMov.complemento03 	= ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";
 			ttMov.contaJuros        = getContaJuros(contaJuros,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			ttMov.contaDesconto     = getContaDesconto(contaDesconto,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
 			ttMov.contaMulta        = getContaMulta(contaMulta,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			tabelaContabil   		= getTabelaContabil("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);
			ttMov.complemento03  	= ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();
			// if(roteiroCRM.optString("empresa").toUpperCase().contains("FARMAGIL")){
				// logger.logDebug("TIPO PLANILHINHA == "+ttMov.tipoPlanilha+" | ttMov.contaDesconto - "+ttMov.contaDesconto+" - contaDesconto - "+contaDesconto+" | "+roteiroCRM.optString("contaFixaDesconto"));
			// }
			// logger.logDebug("Contabilidade - "+roteiroCRM.optString("contabilidade")+" - empresa => "+roteiroCRM.optString("empresa"));
			// logger.logDebug("TP - "+tipoPlanilha+" - conta fixa => "+roteiroCRM.optString("contaFixaJuros")+""+roteiroCRM.optString("contaFixaMulta")+""+roteiroCRM.optString("contaFixaDesconto")+"");
			// logger.logDebug("ttMov.contaJuros - "+ttMov.contaJuros+" - ttMov.contaDesconto - "+ttMov.contaDesconto+" - ttMov.contaMulta - "+ttMov.contaMulta);

			// quando for forcada partida dobrada , vamos jogar a conta de juros automaticamente na conta movimento
			if (!contaMovimento.contains("IGNORA")) { // colocado para ignorar os lancamentos de partida dobrada quando o lancamento principal eh ignorado 20122022 JWR
				if (ttMov.chave.contains("DOBRADA_JUR") && !ttMov.contaJuros.equals("")) contaMovimento = ttMov.contaJuros;//#2304-002846
				if (ttMov.chave.contains("DOBRADA_DES")) {
					// invers?o de contas em desconto.
					contaMovimento = contaPortador;
					if (!ttMov.contaDesconto.equals("")) contaPortador = ttMov.contaDesconto;
				}
				if (ttMov.chave.contains("DOBRADA_MUL") && !ttMov.contaMulta.equals("")) contaMovimento = ttMov.contaMulta;
			}
			

			boolean regraCRM = false;
			// logger.logDebug("contaMovimento F -> " + contaMovimento);
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;

		   	//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";


					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}		
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);
				}
			}
			
			

			regraCRM = false;
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;
			
 			
			if (contaMovimento.equals("")){
				// logger.logDebug("Chegou 2");
				try {
					String classificacaoPlanoContas = getCodigoClassificacao(ttMov.nomeOrigem, histobj); // exemplo: 2.1.1.01.
					JSONObject futureObject = new JSONObject();
					//JSONObject ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
					futureObject.put("codEmpresaPlano", codEmpresaPlanoContas).put("fazLcdpr", fazLcdpr);
					JSONObject ret = new JSONObject();
					try {
						ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
					} catch (Exception e) {
						// logger.logDebug("XABU RET " + e.getMessage());
					}
					if (ret != null) {
						if(ttMov.tipoLancamento.contains("PAGAR") && ret.has("contaDebito")) contaMovimento = ret.optString("contaDebito");
						if(ttMov.tipoLancamento.contains("RECEBER") && ret.has("contaCredito")) contaMovimento = ret.optString("contaCredito");
					}
					if (codEmpresa.equals("00001")) logger.logInfo("Cmm " + contaMovimento);
					//JWR 30012024 
					// logger.logDebug("PEGOU PELO PARTICIPAS " + contaMovimento);
					if (roteiroCRMPrincipal.optString("erpContabilidade").equals("JBSOFTWARE") && contaMovimento.contains("P")) contaMovimento = contaMovimento.replaceAll("P", "");
					
					if (contaMovimento == null || contaMovimento.trim().length() == 0) {
						contaMovimento = "";
						
						// CASO NAO ACHOU CONTA EM REGRAS NEM NO DEPARA ATUAL
						// VERIFICA SE E A PRIMEIRA VEZ QUE BUSCA A DESCRICAO NA NUVEM
						// INSERIDO PARA TRATGAR O BUSSOLA 3.0 
						
						ttPlano ttP  = (ttPlano)mapaDePara.get(ttMov.nomeOrigem);
						if (ttP == null) {							
							ttP  = new ttPlano(); 
							ttP.descricaoPlano = ttMov.nomeOrigem;
							ttP.contaAnalitica = "";
	
							ttP.contaContabil     = "";
							mapaDePara.put(ttMov.nomeOrigem,ttP);
							
							// BUSCA DEPARA PREENCHIDO PELO CONTADOR NO BUSSOLA 3.0 
							String cnpjEmpresaRequest = cnpjEmpresa.replaceAll("[^0-9]","").trim();
							String cnpjContabilidadeRequest = roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/","");
							if (codEmpresa.equals("00001")) logger.logInfo("SUJANDO "  + cnpjEmpresaRequest + " | " + cnpjContabilidadeRequest + " | " + ttMov.nomeOrigem);
							// logger.logDebug("SUJANDO 2 = "  + ttMov.valorDocumento + " | " + ttMov.nomeOrigem);
							try{
								// logger.logDebug("ttMov.nomeOrigem -> " + ttMov.nomeOrigem);
								deParaObj = findDeParaDescricao(dbIODepara, cnpjEmpresaRequest, cnpjContabilidadeRequest, ttMov.nomeOrigem);
 								
								}
							catch (Exception e) { 
								logger.logDebug("CATCH DPR " + e.getMessage());
							}
							if (deParaObj != null ) {
								if(ttMov.tipoLancamento.contains("PAGAR")) contaMovimento = deParaObj.optString("conta_debito");
								if(ttMov.tipoLancamento.contains("RECEBER")) contaMovimento = deParaObj.optString("conta_credito");
								// logger.logDebug("contaMovimento -> " + contaMovimento);
								if (contaMovimento == null) contaMovimento = "";
								// logger.logDebug("CONTS " + contaMovimento);
								// Quando cliente inserir a contaT no DEpara Nuvem, vamos apagar no final da rota 
								if (contaMovimento.contains("T")) {
									apagaContaT    = true;
								}
								
								// logger.logDebug("CMM " + contaMovimento + " | " + apagaContaT);
								
								
							}else contaMovimento = "";
							
							
							// SE ENCONTROU DAPARA NA NUVEM GRAVA NO H2 PARA NA PROXIMA VEZ// ACHAR LOCALMENTE O DEPARA
							/*if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("PAGAR")) {
									if (!hasPessoaPag(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("PAGAR")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "",
															contaMovimento, "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "", contaMovimento, "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}
							if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("RECEBER")) {
									if (!hasPessoaRec(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("RECEBER")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento,
													"", "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento, "", "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}*/
							
							// RETIRA  T DA CONTA MOVIMENTO
							contaMovimento = contaMovimento.replaceAll("T", "").replaceAll("t","");
							ttP.contaContabil     = contaMovimento;
							mapaDePara.put(ttMov.nomeOrigem,ttP);
						
						} 
						else {
							contaMovimento = ttP.contaContabil;
						}
						
						
					}  
				} catch  (Exception Ee) {}
			}

			if (fazLcdpr.equals("TRUE")) {
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO") && !contaMovimento.contains("R")) {
					ObjParticipante objParticipante = (ObjParticipante)mapaParticipante.get(ttMov.nomeOrigem);
					if (objParticipante != null) {
						contaMovimento = contaMovimento + "R" + objParticipante.codigoParticipante;
					}
				}
				
		   	}
			

			
 			
			if(roteiroCRMPrincipal.optString("erpContabilidade").contains("DEXION")){
				if (contaMovimento.equals("")) {
						JSONObject descricaoPlano = dbIOCont.sql("SELECT CONTACONTABIL FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOPLANO LIKE ?")
						.fields("CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(ttMov.cpfCnpj + "%")
						.queryUnique();
						contaMovimento = descricaoPlano.optString("CONTACONTABIL").trim();
				}
			}

			if (contaPortador.equals("")) {
				try {
					ttFornecedor ttF  = (ttFornecedor)mapaFornecedor.get(ttMov.nomePortador+"PORT");
					if (ttF == null) {					
						ttF  = new ttFornecedor(); 

						JSONArray portadorDePara =  findPortador(dbIOCont, codEmpresa, ttMov.nomePortador);
						if (portadorDePara != null && portadorDePara.length() > 0) {
							JSONObject ret = portadorDePara.optJSONObject(0);
							contaPortador = ret.optString("CONTACONTABIL").trim();
						}

						ttF.contaMovimento = contaPortador;
						ttF.nomeOrigem     = ttMov.nomePortador + "PORT";
						mapaFornecedor.put(ttMov.nomePortador + "PORT",ttF);
					} else {
						contaPortador = ttF.contaMovimento;
					}
				}
				catch  (Exception Ee) {}
			}

			String contaTipoFornecedor = "999333";

			boolean eFornecedor = false;
			String  razaoSocial = ttMov.nomeOrigem;
			String  razaoSocialDuplicata = ttMov.nomeOrigem;
			if (contaMovimento.toUpperCase().contains("FISCAL"))  eFornecedor = true;

			if (!contaMovimento.equals("")){			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";

					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
								.fields("DESCRICAOPLANO,CONTAANALITICA")
								.param(codEmpresaPlanoContas)
								.param(contaMovimento)
								.queryUnique();

					if (descricaoPlano != null && descricaoPlano.has("DESCRICAOPLANO") && descricaoPlano.has("CONTAANALITICA") ) {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");						
					}
					ttP.contaContabil     = contaMovimento;
					mapaPlano.put(contaMovimento,ttP);
				}

				descricaoPlanoContaMovimento = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					razaoSocial = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}

				// Joga no nome do fornecedor o que esta no plano de contas
				if (!classificaPlano.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaPlano))) {
					ttMov.nomeOrigem = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}
				if (ttP.descricaoPlano.length() < 2 || ttP.descricaoPlano.equals("") || ttP.descricaoPlano == null) {
					eFornecedor = true;
				}		

				if (razaoSocial.length() < 4) razaoSocial = ttMov.nomeOrigem;

				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					eFornecedor = true;
				}  
			}

			if (!contaPortador.equals("")){
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaPortador);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaPortador,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaPortador,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}
					ttP.contaContabil     = cutString(contaPortador,0, 20);
					mapaPlano.put(contaPortador,ttP);
				}
				descricaoPlanoContaPortador = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
			}
			
			if(ttMov.tipoLancamento.contains("PAGAR")) {
				ttMov.contaDebito  = cutString(contaMovimento,0, 20);
				ttMov.contaCredito = cutString(contaPortador,0, 20);
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				ttMov.contaCredito  = cutString(contaMovimento,0, 20);
				ttMov.contaDebito   = cutString(contaPortador,0, 20);
			}
			
			// logger.logDebug("CONTASTEMP " + ttMov.contaDebito + " | " + ttMov.contaCredito);
			
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
  				temIgnorar = true;
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;");
				ResumoTxt.append(ttMov.dataMovimento).append(";").append(ttMov.dataMovimento).append(";")
						 .append(ttMov.valorDocumento).append(";").append(ttMov.documento).append(";")
						 .append(ttMov.nomeOrigem).append(";").append(ttMov.nomePortador).append(";")
						 .append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";")
						 .append(ttMov.complemento05).append(";").append(ttMov.complemento06).append(";;")
						 .append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";");
				
				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
 				
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;").append(ttMov.dataMovimento).append(";").append(ttMov.dataMovimento).append(";")
						 .append(ttMov.valorDocumento).append(";").append(ttMov.documento).append(";").append(ttMov.nomeOrigem).append(";")
						 .append(ttMov.nomePortador).append(";").append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";").append(ttMov.complemento05).append(";")
						 .append(ttMov.complemento06).append(";;").append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";");
 				
 				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			String parcelaAtualeFinal = "";
			String parcelaAtual       = "";

			int parcelaBase = getParcelaBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			int totalParcelas = getTotalParcelas(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String mesAnoBase = getMesAnoBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!mesAnoBase.equals("") && parcelaBase > 0) parcelaAtual       = String.valueOf(getParcelaFinanciamento(mesAnoAtual, mesAnoBase,parcelaBase, totalParcelas));
			if (!mesAnoBase.equals("")) parcelaAtualeFinal = parcelaAtual.trim() + "/" + String.valueOf(totalParcelas).trim();

			ttMov.historico = getHistorico(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.nomeOrigem,
										   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
										   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			
			histobj.put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", ttMov.contaDebito)
				   .put("contaCredito", ttMov.contaCredito).put("contaJuros", ttMov.contaJuros).put("contaMulta", ttMov.contaMulta)
				   .put("contaDesconto", ttMov.contaDesconto).put("parcelaAtual", parcelaAtual).put("parcelaAtualeFinal", parcelaAtualeFinal)
				   .put("trimestreMesAnoAnterior", trimestreMesAnoAnterior).put("trimestreMesAnoAtual", trimestreMesAnoAtual).put("descricaoPlanoMovimento", descricaoPlanoContaMovimento.toUpperCase())
				   .put("descricaoPlanoPortador", descricaoPlanoContaPortador.toUpperCase());

			if(roteiroCRM.optString("Realizar_Busca_Plano").equals("TRUE")){

				// #Fabrica(2019-08-27) @Vini
				JSONObject fornecFilial = new JSONObject();
				String cAnalitica = "";
				String auxNomeOrig = "";
				auxNomeOrig = ttMov.nomeOrigem.replaceAll("-","").replaceAll("/","").replaceAll("\\.","").replaceAll("[0-9]*", "").replaceAll("\\s+","").replaceAll("ME","").replaceAll("EPP","").replaceAll("LTDA","").replaceAll("EIRELI","").replaceAll("SA","").trim();
				if (auxNomeOrig.length()> 11) auxNomeOrig = cutString(auxNomeOrig,0,10);
				//pesquisa no banco de dados pela descricao continua para pegar a classifica??o usada na nova regra
				fornecFilial = dbIOCont.sql("SELECT CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOCONTINUA LIKE ?")
				.fields("CONTAANALITICA")
				.param(codEmpresaPlanoContas)
				.param(auxNomeOrig+"%")
				.queryUnique();
				cAnalitica = fornecFilial.optString("CONTAANALITICA").replaceAll("[^0-9]*", "").trim();                
				histobj.put("classificacao", cAnalitica); // classificacao para criacao de regra
			}

			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//yuri - 2309-016305
			boolean methodFoundHistorico = false;
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundHistorico = false;
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA2")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA3")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA4")) {
					methodFoundHistorico = true;
				}
				
				if(methodFoundHistorico) {					
					// Invoca metodo de getHistoricoRegra
					ttMov.historico = (String) method.invoke(scInstance, contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				}
			}
			// if(codEmpresa.equals("244")) logger.logDebug("HST == "+ttMov.historico+" | VLR == "+ttMov.valorDocumento);
			
			regraHistorico = getRegraHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
						
			if (!ttMov.historicoJuros.contains("JUROS")) ttMov.historicoJuros = "JUROS REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoJuros = getHistorico(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoJuros = getHistoricoJuros(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!ttMov.historicoDesconto.contains("DESCONTO")) ttMov.historicoDesconto = "DESCONTO REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoDesconto = getHistorico(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.nomeOrigem,
												   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoDesconto = getHistoricoDesconto(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (ttMov.historicoMulta.equals("")) ttMov.historicoMulta = "MULTA REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoMulta = getHistorico(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoMulta = getHistoricoMulta(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			// quando for forcada partida dobrada , vamos jogar o historico  de juros automaticamente no historico  movimento
			if (ttMov.chave.contains("DOBRADA_JUR")) ttMov.historico = ttMov.historicoJuros;
			if (ttMov.chave.contains("DOBRADA_DES")) ttMov.historico = ttMov.historicoDesconto;
			if (ttMov.chave.contains("DOBRADA_MUL")) ttMov.historico = ttMov.historicoMulta; 
			
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
										  
			if(!ttMov.codFilial.equals("") && (roteiroCRMPrincipal.optString("erpContabilidade").contains("SCI") || roteiroCRMPrincipal.optString("erpContabilidade").contains("PROSOFT"))){
				ttMov.lote = ttMov.codFilial+"_"+ttMov.lote;
			}

			String codParticipante   = getParticipante("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, 
														ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, 
														ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			if (!ttMov.codFilial.equals("")) {
				ttMov.historico 		= ttMov.historico 			 + " Filial:" + ttMov.codFilial;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Filial:" + ttMov.codFilial;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Filial:" + ttMov.codFilial;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Filial:" + ttMov.codFilial;
			}
						
			if (!codParticipante.equals("")) {
				ttMov.historico 		= ttMov.historico			 + " Participante:" + codParticipante;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Participante:" + codParticipante;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Participante:" + codParticipante;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Participante:" + codParticipante;
			}

			ttMov.historico 		= ttMov.historico.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoJuros 	= ttMov.historicoJuros.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoDesconto = ttMov.historicoDesconto.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoMulta 	= ttMov.historicoMulta.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
									
			if(roteiroCRMPrincipal.optString("erpContabilidade").equals("JBSOFTWARE")){
				ttMov.historico += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoJuros += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoDesconto += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoMulta += "GPLCTO:" + ttMov.contLinha;
			}

			// ------------------------------------------------
			//           GERA ARQUIVO PARA O FISCAL
			// ------------------------------------------------
			ttMov.documento = ttMov.documento.trim();
			if (ttMov.documento.startsWith("0")) {
				for (int xx=0;xx<10;xx++) {
					if (ttMov.documento.length() > 1 && ttMov.documento.startsWith("0")) ttMov.documento = ttMov.documento.substring(1);
				}
			}

			JSONObject jDescricaoDupl = new JSONObject();
			if (eFornecedor)   jDescricaoDupl.put("TIPO","FORNECEDOR");

			// Teste 64 kb
			if (fazConciliacao && ttMov.complemento06.contains("PRODUCAO")) {
				if (criaCabecalhoConciliacao) {
					txtConciliacao.append("NF;PARC;DIVERGENTE;VALOR A PAGAR;VALOR RAZAO").append("\r\n");
					criaCabecalhoConciliacao = false;
				}

				String chaveConciliacao = ttMov.documento + "-" + cutString(ttMov.complemento01, 0, "/").replaceAll("0","") + "-" + cutString(ttMov.nomeOrigem, 0, 5);
				//000014184-4-INDUS
				// logger.logDebug("CHAVINHA " + chaveConciliacao);
				ObjConciliacao ttConciliacao = (ObjConciliacao) mapaConciliacao.get(chaveConciliacao);

				if (ttConciliacao != null) {
					txtConciliacao.append(ttMov.documento).append(";").append(cutString(ttMov.complemento01, 0, "/").replaceAll("0","")).append(";")
								  .append(ttConciliacao.valorConciliacao == ttMov.valorDocumento ? "CONCILIADO" : "NAO CONCILIADO").append(";")
								  .append(ttMov.valorDocumento).append(";").append(ttConciliacao.valorConciliacao).append("\r\n");

				} else {
					txtConciliacao.append(ttMov.documento).append(";").append(cutString(ttMov.complemento01, 0, "/").replaceAll("0","")).append(";")
								  .append("NAO CONCILIADO").append(";")
								  .append(ttMov.valorDocumento).append(";").append(0).append("\r\n");
				}
				loteConciliacao = nomeEmpresa + "_" + codEmpresa + "_" + "_CONCILIACAO_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + ttMov.tipoLancamento;
			}

			if(integraFiscal.contains("TRUE") && ttMov.tipoPlanilha.contains("MOVIMENTO") && !razaoSocial.equals("") && !ttMov.documento.equals("") && !regraCRM && !contaMovimento.equals("")){
				//Atendimento: 2308-013102 -> Problema ao gerar os relatorios de PELO_FISCAL e Duplicatas nao encontradas
				// eFornecedor = true;
				temFiscal = true;
				apagaStatus = true;
				
				//JWR 02022021 - estava adicionando a parcela no documento para a busca de duplicata em roteiros secundarios.
				//Adicionada a validacao "roteiroCRM.has("usarComplementoParcela")"
				if (roteiroCRM.has("usarComplementoParcela") && !roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
					ttMov.documento = ttMov.documento + "-" + ttMov.parcelaDoc;
				}
				
				String dataVencimentoTTMov = "";
				
				if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
					dataVencimentoTTMov = ttMov.complemento09;
				}
					
				 
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("QUESTOR")) {

					JSONObject jDadosAux = new JSONObject();
					jDadosAux.put("CODEMPRESA", codEmpresa).put("DATAVENCTTMOV", dataVencimentoTTMov).put("RAZAOSOCIAL",razaoSocial)
							 .put("TABELACONTABIL", tabelaContabil);
					
					TemplateUtils templateUtil = new TemplateUtils();
					jDescricaoDupl = templateUtil.geraFiscalQuestor(roteiroCRMPrincipal, jDadosAux, jDescricaoDupl, dbIOCont, ttMov, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							jDescricaoDupl.put("USAFILIAL", roteiroCRMPrincipal.optString("Usa_Filial_Questor").toUpperCase());
														
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalQuestor(jDescricaoDupl).toString());

							geraFiscal = true;
							
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
				
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil questor
							dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
							contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");
							
							if(dupliNaoEncontContabil){
								contaMovimento = contaTemp;
								if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
								if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

								histobj.put("contaMovimento", contaMovimento);
								ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
							}else {
								if(cabecalhoNaoEncontrada){
									txtFornecedor.append("Codigo;Fornecedor/Cliente;Duplicata;Data;Valor bruto;Valor liquido;Banco;Obs:").append("\r\n");
									cabecalhoNaoEncontrada = false;
								}
								String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
								jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
								txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA")).append(";").append(razaoSocialDuplicata).append(";")
											 .append(ttMov.documento).append(";").append(ttMov.dataMovimento).append(";").append(String.format("%.2f", ttMov.valorDocumento))
											 .append(";").append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",",")).append(";").append(ttMov.nomePortador).append(";")
											 .append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2))
											 .append("\r\n");

								jDescricaoDupl.put("TIPO","FORNECEDOR");

								geraFiscal = true;
								loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
								
								ttMov.tipoPlanilha = "NAO LER";
								mapaVariavel.put(key,ttMov);
								continue;
							}
						}
					}
				}
				
				
				
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CONTABIT")) {

					JSONObject jDadosAux = new JSONObject();
					jDadosAux.put("CODEMPRESA", codEmpresa).put("DATAVENCTTMOV", dataVencimentoTTMov).put("RAZAOSOCIAL", razaoSocial)
							 .put("TABELACONTABIL", tabelaContabil);
					
					TemplateUtils templateUtil = new TemplateUtils();
					JSONArray jDescricaoDuplArray = templateUtil.geraFiscalContabit(roteiroCRMPrincipal, jDadosAux, new JSONArray(), dbIOCont, ttMov, logger);
					
					if (jDescricaoDuplArray != null && !jDescricaoDuplArray.toString().equals("[]")) {
						for (int i = 0;i <= jDescricaoDuplArray.length()-1; i ++) {
							// logger.logDebug("SO O I -> " + i);
							JSONObject jDescricaoDuplGet = jDescricaoDuplArray.getJSONObject(i);
							// logger.logDebug("jDescricaoDuplGet -> " + jDescricaoDuplGet.toString());
							if(jDescricaoDuplGet.has("RAZAOSOCIAL")){
								txtFiscal[0].append(TemplateUtils.geraLinhaFiscalContabit(jDescricaoDuplGet, ttMov).toString());
								geraFiscal = true;
								loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
								if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
								ttMov.tipoPlanilha = "NAO LER";
								mapaVariavel.put(key,ttMov);
								eFornecedor = false;
								continue;
							}else{ //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil questor
								dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
								contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");
								if(dupliNaoEncontContabil){
									contaMovimento = contaTemp;
									if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
									if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;
									histobj.put("contaMovimento", contaMovimento);
									ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
									// ttMov.historico = getHistoricoRegra2(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
								}else {
									if(cabecalhoNaoEncontrada){
										txtFornecedor.append("Codigo").append(";").append("Fornecedor/Cliente").append(";").append("Duplicata").append(";")
										.append("Data").append(";").append("Valor bruto").append(";").append("Valor liquido").append(";").append("Banco")
										.append(";").append("Obs:").append("\r\n");
										cabecalhoNaoEncontrada = false;
									}
									String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
									jDescricaoDuplGet.put("VALORLIQUIDO",  valorLiquido);
									txtFornecedor.append(jDescricaoDuplGet.optString("CODEMPRESA")).append(";").append(razaoSocialDuplicata).append(";")
									.append(ttMov.documento).append(";").append(ttMov.dataMovimento).append(";").append(ttMov.valorDocumento).append(";")
									.append(valorLiquido).append(";").append(ttMov.nomePortador).append(";").append("\r\n");
									// txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
									jDescricaoDuplGet.put("TIPO","FORNECEDOR");
									geraFiscal = true;
									
									loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
									if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
									if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
									ttMov.tipoPlanilha = "NAO LER";
									mapaVariavel.put(key,ttMov);
									eFornecedor = false;
									break;
								}
							}
						}
					}
				}
				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("MAKROWEB")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("VALORMULTA",  ttMov.valorMulta);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
						ttMov.parcelaDoc     = jDescricaoDupl.optInt("PARCELADOC");
						ttMov.valorDesconto  = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
						ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
						ttMov.valorJuros 	 = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
						
						String valorDescontoAux  = preparaDoublePrecisao(String.valueOf(ttMov.valorDesconto));
						String valorDocumentoAux = preparaDoublePrecisao(String.valueOf(ttMov.valorDocumento));
						String valorAcrecimoAux 	 = preparaDoublePrecisao(String.valueOf(ttMov.valorJuros+ttMov.valorMulta));
						
						//#2309-015394
						//double valorAux = ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta;
						//String valorCalcAux = "";
						// #Fabrica(2019-08-06) @Vini
						//valorCalcAux = preparaDoublePrecisao(String.valueOf(DecimalUtil.toDecimal(String.format("%.2f", valorAux))));
						
						// if (!String.format("%.2f", ttMov.valorDocumento).equals(jDescricaoDupl.optString("VALORPARCELA"))) { //<--- antigo
						if (ttMov.valorDocumento > jDescricaoDupl.optDouble("VALORPARCELA")) {
							jDescricaoDupl.put("TIPO", "FORNECEDOR");
						} else {													

							txtFiscal[0].append(StringUtil.leftPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 14,  "0"));
							txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 8, "0"));
							txtFiscal[0].append(StringUtil.leftPad(String.valueOf(ttMov.parcelaDoc), 2, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(ttMov.dataMovimento.replaceAll("/",""));
							txtFiscal[0].append(StringUtil.leftPad(valorDescontoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorAcrecimoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							//#2309-015394
							//txtFiscal[0].append(StringUtil.leftPad(valorCalcAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9,  "0"));
							txtFiscal[0].append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;

							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					  
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					
					 jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalCordilheira(jDescricaoDupl, ttMov, geraCabecalhoCordilheira).toString());
							
							geraCabecalhoCordilheira = false;

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							txtFornecedor.append("\r\n");

							jDescricaoDupl.put("TIPO","FORNECEDOR");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				// if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CUCA-FRESCA")) {

					// JSONObject jDados = new JSONObject();
					// jDados.put("CODEMPRESA",     codEmpresa);
					
					// //usando a filial do questor em duplicatas em aberto
				   
					// jDados.put("RAZAOSOCIAL",    razaoSocial);
					// jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					// jDados.put("DOCUMENTO",      ttMov.documento);
					// jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					// jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					// jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					// jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					// jDados.put("VALORJUROS",     ttMov.valorJuros);
					// jDados.put("VALORMULTA",     ttMov.valorMulta);
					// jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					// jDados.put("TABELACONTABIL", tabelaContabil);
					// jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					// Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					// dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					// double valorSaldoDuplicata2 = 0;
					// if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					// valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					// ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					// if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						// if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							// String separadorFiscal = "";
							// String dataVencimento  = "";
							// //String parcela		   = "1";
							// String duplicataParcela = jDescricaoDupl.optString("DUPLICATA")+"/"+String.valueOf(ttMov.parcelaDoc);
							
							// txtFiscal[0].append(cnpjEmpresa);
							// txtFiscal[0].append("    ");

							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append("E");
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append("S");

							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("DATAVENCIMENTO"), 10, " ")); //lendo do duplicatasem aberto
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("SITUACAO"), 5, " ")); //especie
							// txtFiscal[0].append(StringUtil.rightPad("", 3, " ")); //serie
							
							// txtFiscal[0].append(StringUtil.rightPad("", 2, " ")); //sub-serie
							// txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 9, "0"));
							// txtFiscal[0].append(StringUtil.leftPad("", 9, "0"));
							
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 18, " ")); // preciso criar a leitura do CNPJ do cliente, est? sendo usado o objeto "CODIGOFORNECEDOR" para guardar essa informa??o
							// txtFiscal[0].append(StringUtil.leftPad(duplicataParcela, 21, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(dataVencimento, 10, " ")); //data do vencimento
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0")); //? preciso criar a leitura do valor ? baixar, est? sendo usado o objeto "VALORPARCELA" para guardar no banco
							
							// if(contaPortador.length() > 1){
								// contaPortador = contaPortador.substring(0, contaPortador.length()-1) + "-" + contaPortador.substring(contaPortador.length()-1);
								// if(contaPortador.length() > 5) contaPortador = contaPortador.substring(0, contaPortador.length()-5) + "." + contaPortador.substring(contaPortador.length()-5);
							// }
							
							// txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9, "0")); //a conta do banco
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.centroCusto, 4, " "));
							
							// //txtFiscal[0].append(StringUtil.rightPad(ttMov.historico, 3, ""));	
							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append(StringUtil.rightPad("10", 3, " ")); //10 pagamento fornecedor 
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append(StringUtil.rightPad("11", 3, " ")); // 11 recebimento duplicata
							
							// txtFiscal[0].append(StringUtil.leftPad("", 15, " "));	//numero do cheque na planilha
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.dataMovimento, 10, " "));
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorJuros), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDesconto), 13, "0"));
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // correcao monetaria
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // despesas/receitas
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // Base de Calculo Retencao
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // IRRF Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // PIS Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // CSLL Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							// txtFiscal[0].append("    "); //n?o encontrado o c?digo da receita
							
							// txtFiscal[0].append("\r\n");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// } else {
							// if(cabecalhoNaoEncontrada){
								// txtFornecedor.append("Codigo");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Fornecedor/Cliente");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Duplicata");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Data");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor bruto");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor liquido");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Banco");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Obs:");
								// txtFornecedor.append("\r\n");
								// cabecalhoNaoEncontrada = false;
							// }
							// String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							// jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							// txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							// txtFornecedor.append(";");
							// txtFornecedor.append(razaoSocialDuplicata);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.documento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.dataMovimento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							// txtFornecedor.append(";");
							// txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.nomePortador);
							// txtFornecedor.append(";");
							// txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							// txtFornecedor.append("\r\n");

							// jDescricaoDupl.put("TIPO","FORNECEDOR");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// }
					// }
				// }
				
				if (eFornecedor) {

					dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
					contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");


					if(dupliNaoEncontContabil){
						contaMovimento = contaTemp;
						if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
						if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

						histobj.put("contaMovimento", contaMovimento);
						ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);


					}else{
						if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FORNECEDOR")) {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo;Fornecedor/Cliente;Duplicata;Data;Valor bruto;Valor liquido;Banco;Obs:")
											 .append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorFinal = String.format("%.2f", ttMov.valorDocumento);
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							
							
							jDescricaoDupl.put("NOMEORIGEM", ttMov.nomeOrigem).put("DOCUMENTO", ttMov.documento)
										  .put("DATAMOVIMENTO", ttMov.dataMovimento).put("VALORFINAL", valorFinal)
										  .put("VALORLIQUIDO",  valorLiquido);
							
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA")).append(";")
										 .append(jDescricaoDupl.optString("NOMEORIGEM")).append(";")
										 .append(jDescricaoDupl.optString("DOCUMENTO")).append(";")
										 .append(jDescricaoDupl.optString("DATAMOVIMENTO")).append(";")
										 .append(jDescricaoDupl.optString("VALORFINAL").replaceAll("\\.",",")).append(";")
										 .append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",",")).append(";")
										 .append(ttMov.nomePortador).append(";");
										 
							if (jDescricaoDupl.has("FORNECEDORESNAOBATEM")) {
								txtFornecedor.append("Nome do Fornecedor/Cliente nao confere com a duplicata aberta no fiscal ");
							}
							else {
								txtFornecedor.append("Duplicata nao encontrada no Fiscal ");
																
							}							
							txtFornecedor.append("\r\n");


							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
							
						}
					}
				}
			}
			
			/*	
			if (integraContrato.toUpperCase().equals("TRUE")) {
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO")) {
					String dataVencimentoTTMov = "";
					
 				
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) dataVencimentoTTMov = ttMov.complemento01;
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) dataVencimentoTTMov = ttMov.complemento02; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) dataVencimentoTTMov = ttMov.complemento03; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) dataVencimentoTTMov = ttMov.complemento04; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) dataVencimentoTTMov = ttMov.complemento05; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) dataVencimentoTTMov = ttMov.complemento06; 
					}	
					
						
					JSONObject jDados = new JSONObject();
					
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					else {
						jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					}
					
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("OBSERVACAO", 	 ttMov.dataMovimento);
					jDados.put("PARCELADOC",     99);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
 					
 					try {
						Date dtvenc = DateUtil.stringToDate(dataVencimentoTTMov, "dd/MM/yyyy");	 
				
						jDescricaoDupl = dbIOCont.sql("SELECT CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND DUPLICATA = ? AND VALORPARCELA >= ? and VENCIMENTO = ? order by VENCIMENTO   limit 1 ")
						.fields("CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO")
						.param(codEmpresa)
						.param(ttMov.documento)
						.param(ttMov.valorDocumento)
						.param(dtvenc)
						.queryUnique();
					} catch (Exception e2) {
						logger.logDebug("ERROR: " + e2.getMessage());
						continue;
					}
					
 					
					if (jDescricaoDupl != null && jDescricaoDupl.has("VALORPARCELA")) { 

 						Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
						dataLote = DateUtil.dateToString(dtL, "yyyy-MM");
	 
						boolean leuDuplicata = false;
						double valorSaldoDuplicata = 0;
						
						// valor saldo duplicata = valor que esta em aberto no Dominio. Baixa nao pode ser maior que valor de saldo no Dominio
						if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));
						 
 						if ((ttMov.valorDocumento) <= valorSaldoDuplicata ) { 
 
							String codContabil = "5700";								 							
							// |5700|1875|57593981053| | |1|25/02/2021|01/03/2021|5527,28|1649,16||||||

							String delimitador = "|";
							String tipoSerie = delimitador + codContabil + delimitador + ttMov.documento + delimitador + ttMov.complemento01 + delimitador + delimitador + delimitador + ttMov.complemento02  + delimitador;


						 try {
								String dataVencimento = jDescricaoDupl.optString("VENCIMENTO");
								Date dt        = DateUtil.stringToDate(dataVencimento, "yyyy-MM-dd HH:mm:ss");
								dataVencimento = DateUtil.dateToString(dt, "dd/MM/yyyy");
								dataVencimentoTTMov = dataVencimento;
							} catch (Exception e4) {
 							}
								
								
							if(jDescricaoDupl.has("VALORPARCELA")) {
								txtFiscal[0].append(tipoSerie);
								txtFiscal[0].append(dataVencimentoTTMov);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(ttMov.dataMovimento);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta)).replaceAll("\\.",","));
 								txtFiscal[0].append(delimitador);
							    txtFiscal[0].append(String.format("%.2f", (ttMov.valorJuros)).replaceAll("\\.",","));
								txtFiscal[0].append("||||||");								 
								txtFiscal[0].append("\r\n");

								geraFiscal = true;
								loteFiscal[0]= nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								eFornecedor = false;
								leuDuplicata = true;

							}
							
 						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil Dominio
							 
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Contrato " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata));
							txtFornecedor.append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 							mapaVariavel.put(key,ttMov);
							
						}
					}
					else {
						if(cabecalhoNaoEncontrada){
							txtFornecedor.append("Codigo");
							txtFornecedor.append(";");
							txtFornecedor.append("Fornecedor/Cliente");
							txtFornecedor.append(";");
							txtFornecedor.append("Duplicata");
							txtFornecedor.append(";");
							txtFornecedor.append("Data");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor bruto");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor liquido");
							txtFornecedor.append(";");
							txtFornecedor.append("Banco");
							txtFornecedor.append(";");
							txtFornecedor.append("Obs:");
							txtFornecedor.append("\r\n");
							cabecalhoNaoEncontrada = false;
						}
						String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
						jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
						txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
						txtFornecedor.append(";");
						txtFornecedor.append(razaoSocialDuplicata);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.documento);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.dataMovimento);
						txtFornecedor.append(";");
						txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
						txtFornecedor.append(";");
						txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.nomePortador);
						txtFornecedor.append(";");
						txtFornecedor.append("Contrato " + ttMov.documento + " nao encontrado no Dominio ");
						txtFornecedor.append("\r\n");

						geraFiscal = true;
						loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
						if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 						mapaVariavel.put(key,ttMov);
					}
 				}

			}
			
			*/
			
			boolean ctFiscal = false;
			if(ttMov.tipoLancamento.contains("PAGAR")	&& ttMov.contaDebito.toUpperCase().contains("FISCAL")) ctFiscal = true;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.contaCredito.toUpperCase().contains("FISCAL")) ctFiscal = true;

			dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
			contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");

			if(contaMovimento.toUpperCase().contains("FISCAL") || ctFiscal) {
				contaMovimento = contaTemp;
				if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
				if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

				histobj.put("contaMovimento", contaMovimento);
				ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			}

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO,CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}					
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);


				}
			}
			 //Tratamento para inverter conta em lencamento simples feito para JBSOFTWARE
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM")){
				if(ttMov.contaDebito.contains("INVERTE") && !ttMov.contaCredito.contains("INVERTE")) ttMov.contaCredito = ttMov.contaCredito+ "INVERTE";
				if(!ttMov.contaDebito.contains("INVERTE") && ttMov.contaCredito.contains("INVERTE")) ttMov.contaDebito = ttMov.contaDebito+ "INVERTE";
			} 

			chave = ttMov.chave;
			//chave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String testeChave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
			if(!testeChave.toUpperCase().contains("ACUMULAANTES") && !testeChave.toUpperCase().contains("ACUMULARANTES")) chave = testeChave;
			
			if(chave.length() > 180) chave = cutString(chave, 0, 179);
			
			chave = chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";
			ttMov.chave = ttMov.chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";

			apagaStatus = true;
			String keyAc = chave;
			
			// logger.logDebug("EMPR " + nomeEmpresa + " | " + tipoProduto + " | " + mantemArquivo + " | " + processaOud);
			
			if (((!tipoProduto.equals("OIC_PACOTE") && mantemArquivo.equals("SIM"))  || processaOud.equals("TRUE")) && !ttMov.lote.toUpperCase().contains("_OUD_")) {
				ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
			}
			else {
				if (ttMov.nomeArquivo.contains(".omc")) {
					ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
				}
			}
			
			// logger.logDebug("LOTEE " + ttMov.lote);
 
 			
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);		
			

			ttMovimentoPadrao ttMov3       = (ttMovimentoPadrao)mapaOficial.get(keyAc);
			if (ttMov3  == null) {
				ttMov3                = new ttMovimentoPadrao(ttMov);
				ttMov3.valorDesconto   = 0;
				ttMov3.valorJuros      = 0;
				ttMov3.valorDocumento  = 0;
				ttMov3.valorMulta      = 0;
				ttMov3.documento       = "";
			}
			if (ttMov3.documento.equals("")) {
				ttMov3.documento         = ttMov.documento;
			} else { if (!ttMov3.documento.contains(ttMov.documento)) ttMov3.documento = ttMov3.documento + ", " + ttMov.documento; }


			ttMov3.valorDesconto     = ttMov3.valorDesconto   + ttMov.valorDesconto;
			ttMov3.valorDocumento    = ttMov3.valorDocumento  + ttMov.valorDocumento;
			ttMov3.valorMulta        = ttMov3.valorMulta      + ttMov.valorMulta;
			ttMov3.valorJuros        = ttMov3.valorJuros      + ttMov.valorJuros;
			ttMov3.chave = chave;


			// logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador);
			String testeChavePortador = getRegrasParaAcumularPortador("", "", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
 			if (!testeChavePortador.equals("")) ttMov3.contador = 3;
			
			if (!ttMov.chave.equals(chave)) ttMov3.contador = 3;

			// for?a lancamento aberto no FB software
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("DYAD") ||//removido o erp FORTES dessa valida??o - 202301-0023113
				roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM") ||
				roteiroCRMPrincipal.optString("erpContabilidade").contains("PROSYST")) ttMov3.contador = 3;
				
			//logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador+" - AGORA E AGORA -> "+roteiroCRMPrincipal.optString("erpContabilidade"));

			mapaVariavel.put(key,ttMov);
			mapaOficial.put(keyAc,ttMov3);			 			
 
			if(ttMov.tipoPlanilha.contains("EXTRATO") || ttMov.tipoPlanilha.contains("CARTAO")){
				if(roteiroCRMPrincipal.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			}else if(roteiroCRM.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			
			//#2305-005880
			//if (ttMov.tipoPlanilha.contains("OTTCARTAO")) ttMov3.contador = 0;
			if (ttMov.tipoPlanilha.contains("OTTCARTAO") && !roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET")) ttMov3.contador = 0;
			
			// if(ttMov.codEmpresa.contains("68345")) logger.logDebug("VALOR = "+ttMov.valorDocumento+" | DT == "+ttMov.dataMovimento+" | CONT = "+ttMov3.contador+" | CHAVE == "+chave);
 
			
			if  ((ttMov.valorJuros > 0 || ttMov.valorDesconto > 0 || ttMov.valorMulta > 0 || ttMov3.contador == 3) && !ttMov.tipoPlanilha.equals("NAO LER")) {
				chave = chave.replaceAll("CTB","CTBPORT");
				if (!testeChavePortador.equals("")) chave = testeChavePortador;

				key = chave;
				ttMovimentoPadrao ttMov2       = (ttMovimentoPadrao)mapaOficial.get(key);
				if (ttMov2  == null) {
					ttMov2                = new ttMovimentoPadrao(ttMov);
					ttMov2.contador        = 0;
					ttMov2.valorDesconto   = 0;
					ttMov2.valorJuros      = 0;
					ttMov2.valorDocumento  = 0;
					ttMov2.valorMulta      = 0;
					ttMov2.classificacao     = ttMov.classificacao;

				}
				ttMov2.tipoMovimento     = "CTBPORT";
				ttMov2.valorDesconto     = ttMov2.valorDesconto   + ttMov.valorDesconto;
				ttMov2.valorMulta        = ttMov2.valorMulta      + ttMov.valorMulta;
				ttMov2.valorJuros        = ttMov2.valorJuros      + ttMov.valorJuros;
				ttMov2.chave             = chave;
				ttMov2.chaveExtrato      = "";
				ttMov2.documento         = ttMov3.documento;
				ttMov2.valorDocumento    = ttMov2.valorDocumento + ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta;
				ttMov2.contador          = ttMov2.contador + ttMov3.contador;
				if(tipoLancamento.contains("PAGAR") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")) {
					ttMov2.naturezaContabil  = "C";
					ttMov2.contaDebito       = "";
					ttMov2.contaCredito      = ttMov.contaCredito;
				}
				if(tipoLancamento.contains("RECEBER") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")){
					ttMov2.naturezaContabil  = "D";
					ttMov2.contaDebito       = ttMov.contaDebito;
					ttMov2.contaCredito      = "";
				}
				if (ttMov2.valorDocumento == 0) continue; //JWR
				ttMov2.historico = getHistoricoPortador(contaPortador, ttMov2.historico, ttMov2.tipoLancamento, ttMov2.documento, ttMov2.nomeOrigem, histobj);
				
				//Descomentar caso haja problema com a perna de portador do lancamento
				if (!ttMov2.codFilial.equals("") && !ttMov2.historico.contains("Filial:")) ttMov2.historico = ttMov2.historico + " Filial:" + ttMov2.codFilial;
				
				String tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV FORNECEDOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("FORNECEDOR"))    ttMov3.historico = cutString(ttMov3.historico,0," Filial:") + " Filial:"+filial;
					if(tratarDiv.contains("PORTADOR"))      ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
  					ttMov3.historicoJuros	 = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoMulta 	 = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV DESCONTO", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("DESCONTO"))    ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV JUROS", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("JUROS"))    ttMov3.historicoJuros = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV MULTA", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("MULTA"))    ttMov3.historicoMulta = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV PORTADOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("PORTADOR"))    ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
				}

				mapaOficial.put(key,ttMov2);
				ttMov3.classificacao = ttMov2.classificacao;
				mapaOficial.put(keyAc,ttMov3);
			}
		}
		if(contRegra == -1){
			String codEmp = props.get(empresa + "_COD_EMPRESA");
			String nomeEmp = props.get(empresa + "_NOME_EMPRESA");
			
			String info = tipoPlanilha + ";" + roteiroCRM.optString("codigo");
			compDirName = nomeEmp + "_#" + codEmp;
			String tipoPlanilhaDirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/" + compDirName + "/DePara/Processado/";
			String tipoPlanilhaPath = tipoPlanilhaDirName + "TIPOPLANILHA" + ".txt";
			// inout/contabil/Depaula/vektor_#123/Depara/TIPOPLANILHA.txt
			FileWriter 	arquivoTp = new FileWriter(tipoPlanilhaPath);
			arquivoTp.writeNewFile(info);
			//sssssss
		}


		//-------------------------------------------------------------------------
		// GERA OS ARQUICOS PARA BAIXA DE DUPLICATAS -- FISCAL
		//-------------------------------------------------------------------------
		if (geraFiscal) {

			String auxExtencao = ".txt";
			if(roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA") ||
				roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CONTABIT")) auxExtencao = ".csv";
			String filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + auxExtencao;
			FileWriter writer = new FileWriter(filename);
			writer.writeNewFile(txtFiscal[0].toString());
			
			if (nomeArquivo.toUpperCase().contains("_ID") && !loteFiscal[0].contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + tipoLancamento;

			loteFiscal[0] = loteFiscal[0].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
			
			filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + ".csv";
			writer = new FileWriter(filename);
			writer.writeNewFile(txtFornecedor.toString());
			
			//JWR 2303-000613 Descomentar para quando utilizar arquivos fiscais separados por filial
			/*if (!loteFiscal[i].equals("") && geraNaoEncontradas) {
				loteFiscal[i] = loteFiscal[i].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
				filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[i] + ".csv";
				writer = new FileWriter(filename);
				writer.writeNewFile(txtFornecedor.toString());
				geraNaoEncontradas = false;
			}*/
			
			
		}
		
		// Teste 64 kb
		if (fazConciliacao) {
			String auxExtencao = ".csv";
			String filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteConciliacao+auxExtencao;
			FileWriter writer = new FileWriter(filename);
			writer.writeNewFile(txtConciliacao.toString());
		}


		//-------------------------------------------------------------------------
		//--- DESABILITAR AQUI SOMENTE SE O BANCO DE DADOS CONTIVER TABELA IO_RAZAO
		//-------------------------------------------------------------------------


		
		mapaVariavel		= new HashMap();

		if (apagaStatus) {
			jStatus = new JSONObject();
			// logger.logDebug("PUTSTATUS 4745");
			putStatus(dirName, "", jStatus, logger);
		}
		
		// =======================================================================================
		// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base
		// =======================================================================================
  	   
		
		Iterator itLote = mapaLote.keySet().iterator();
		while (itLote.hasNext()) {

			String key = (String)itLote.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			lote = ttLot.lote;

			try {
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				dbIOCont.delete("IO_MOVIMENTO")
				.where("LOTE=?")
				.param(lote)
				.execute();
				
 				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_MOVIMENTO")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param("%" + tipoLancamento + "%")
					.param(nomeEmpresa + "_" + "%")
					
					.execute();
					
				}
				
				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_ARQUIVOS")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param(cutString(lote, 0, "_") + "%")
					.param("%" + tipoLancamento + "%")
					.execute();
					
				}
				
				
			} catch (Exception eDel) {
				logger.logError("EndpointB: ERROR DELETE IO_MOVIMENTO", eDel);
			}
		}
		// logger.logDebug("ETAPA 04 TEMPLATE ");
	
	
		contRegra = -1;
		Iterator it = mapaOficial.keySet().iterator();
		while (it.hasNext()) {
			
			String chaveExtrato     = "";

			String key = (String)it.next();
			ttMovimentoPadrao ttMov = new ttMovimentoPadrao();
			try {
				ttMov = (ttMovimentoPadrao)mapaOficial.get(key);
			}
			catch (Exception xx) { continue;}

  
			if (ttMov.tipoPlanilha.equals("NAO LER")) continue;


			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				if(tipoLancamento.contains("PAGAR") && ttMov.debitoCredito.equals("EXTRATO-CREDITO")) continue;
				if(tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.equals("EXTRATO-DEBITO"))  continue;

			}
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll(";","").trim();

			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			if (restoLinha == 0) putStatus(dirName, "04--Etapa 4 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			// quando cliente escolhe para agrupar tudo em um unico lote, mudamos o nome do arquivo.
			
			if (ttMov.valorDocumento == 0) continue;
			
			logger.logInfo("Conseguiu ler pelo tempDev");
			
			// logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.lote + " | " + ttMov.dataMovimento + " | " + ttMov.tipoLancamento + " | " + ttMov.debitoCredito);
			// logger.logDebug("PORTAS2 " + ttMov.nomePortador);
			String idLote = cutString(ttMov.lote, "ott_oud", ttMov.lote.indexOf("ott_oud") + 16);//202302-0025707
			
			if (ttMov.lote.contains("ott_oud__id")) idLote = cutString(ttMov.lote, "ott_oud__id", "_");//2308-011361
			if (ttMov.lote.contains("ott_oud_id")) idLote = cutString(ttMov.lote, "ott_oud_id", "_");//2308-011361

			if (roteiroCRMPrincipal.optString("agrupaArquivos").toUpperCase().contains("TRUE")) {
				if (ttMov.lote.contains("_CORA_")) {
					ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_CORA_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
				} 
				
				else {
					if (ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) {

						ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_OTTIMIZZA_PROJETO_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
					}
					else {
						if (ttMov.lote.toUpperCase().contains("_OUD_")) {
	
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_ott_oud__id" + idLote + "_" + arquivoAgora  + "_OUD_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						}
					
						else {
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						
						}
					}
				}
				
				
			}
			
			if (ttMov.lote.toLowerCase().contains("ott_oud_")) ttMov.lote = ttMov.lote.replaceAll("__", "_");
  			
			// logger.logDebug("LOTIZIN " + nomeEmpresa + " | " + ttMov.lote);
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);
			

			if(tipoLancamento.contains("PAGAR")){
				ttMov.naturezaContabil = "D";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "C";
			}
			if(tipoLancamento.contains("RECEBER")){
				ttMov.naturezaContabil = "C";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "D";
			}

			JSONObject extratoEmpresa = new JSONObject();

			// CASO A LINHA DO EXTATO JA TENHA SIDO LIDA PELA PLANILHA DE PAGAMENTOS, DEVE SER IGNORADA
			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				chaveExtrato = ttMov.chaveExtrato;

				extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? ")
				.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
				.param(chaveExtrato + "%")
				.queryUnique();

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					if (extratoEmpresa.has("EXTRATOLIDO")) {

						double extratoLido = extratoEmpresa.optDouble("EXTRATOLIDO");

						if (extratoLido == 1) continue;
						
						extrato.atualizaExtratoLido(chaveExtrato, dbIOCont, logger);

						/*dbIOCont.update("IO_EXTRATO")
						.fields("EXTRATOLIDO")
						.where("CHAVE = ? ")
						.param(1)
						.param(chaveExtrato)
						.execute();*/

					}
				}

			}


			// -----------------------------------------------------------------------------------------------------------
			// COMPARA COM RAZAO APENAS QUANDO O NOME DO ARQUIVO CONTIVER OTTIMIZZA, ASSIM FICA MAIS RAPIDA A INTEGRACAO
			// QUANDO O CLIENTE FINAL ESTIVER RODANDO.
			// -----------------------------------------------------------------------------------------------------------

			if (!ttMov.tipoMovimento.equals("CTBPORT") && ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) {

				String tipoData = "MOVIMENTO";

				comparaRazao = true;


				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm= new Date();
				Date dataMovimentoDateMenosDois= new Date();
				Date dataMovimentoDateMenosTres= new Date();
				Date dataMovimentoDateMaisUm= new Date();
				Date dataMovimentoDateMaisDois= new Date();
				Date dataMovimentoDateMaisTres= new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;

				String valorFinal = String.format("%.2f", ttMov.valorDocumento);
				valorFinal = valorFinal.replaceAll("\\.",",");

				JSONArray registro = new JSONArray();

				

				JSONObject histobj = new JSONObject();
				ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01, histobj);
				ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02, histobj);
				ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03, histobj);
				ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04, histobj);
				ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05, histobj);
				ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06, histobj);
				ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07, histobj);
				ttMov.complemento08 = getReplaceTermos("complemento09", ttMov.complemento08, histobj);
				ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09, histobj);
				ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10, histobj);
				ttMov.nomeOrigem = getReplaceTermos("nomeOrigem", ttMov.nomeOrigem, histobj);
				ttMov.documento = getReplaceTermos("documento", ttMov.documento, histobj);
				ttMov.nomePortador = getReplaceTermos("nomePortador", ttMov.nomePortador, histobj);

				histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01)
					   .put("complemento02", ttMov.complemento02).put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04)
					   .put("complemento05", ttMov.complemento05).put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07)
					   .put("complemento08", ttMov.complemento08).put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10)
					   .put("dataMovimento", ttMov.dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior)
					   .put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador).put("contaMovimento", contaMovimento)
					   .put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
					   .put("contaDesconto", ttMov.contaDesconto); histobj.put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
					   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
					   .put("valorMulta", ttMov.valorMulta).put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha)
					   .put("numeroAba", ttMov.abaPlanilha);

				String contaPrincipal = "";
				String contraSecundaria = "";

				if (tipoLancamento.contains("PAGAR")) {
					contaPrincipal = ttMov.contaDebito;
					contraSecundaria = ttMov.contaCredito;

				}
				if (tipoLancamento.contains("RECEBER")) {
					contaPrincipal = ttMov.contaCredito;
					contraSecundaria = ttMov.contaDebito;
				}

				regraContaMovimento = getRegraContaMovimento(contaPrincipal, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				regraHistorico = getRegraHistoricoRegra(contaPrincipal, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

				 
				ResumoTxt.append("\r\n").append("NAO ENCONTRADO;").append(ttMov.dataMovimento).append(";").append(tipoData).append(";")
						 .append(valorFinal).append(";").append(ttMov.documento).append(";").append(ttMov.nomeOrigem).append(";")
						 .append(ttMov.nomePortador).append(";").append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";").append(ttMov.complemento05).append(";")
						 .append(ttMov.complemento06).append(";;").append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";").append(regraHistorico).append(";;")
						 .append(ttMov.nomeArquivo).append(";");
				 
			}			
 
			if(tipoLancamento.contains("PAGAR")){

				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "C";
				if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
			}
			if(tipoLancamento.contains("RECEBER")){
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "D";
				if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
			}

			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
				if(tipoLancamento.contains("PAGAR")){

					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
				}
				if(tipoLancamento.contains("RECEBER")){
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
				}
			}

			String classificacaoFinal = classificacao + ttMov.classificacao + "01";
			 

			if ((classificacao.startsWith("X") || roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) && ttMov.tipoMovimento.equals("CTBPORT")) { continue;}
			
			if(!ttMov.tipoPlanilha.equals("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			// if(ttMov.codEmpresa.contains("68345")) logger.logDebug("QUATRO " + ttMov.valorDocumento + " | " + ttMov.dataMovimento + " | " + ttMov.tipoPlanilha + " | " + ttMov.tipoMovimento + " | " + roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase());
			// logger.logDebug("AQQQQ " + roteiroCRM.optString("erpContabilidade") + " | " + roteiroCRMPrincipal.optString("erpContabilidade") + " | " + ttMov.complemento05 + " | " + roteiroCRM.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + ttMov.contaJuros + " | " + ttMov.contaDebito + " | " + ttMov.contaCredito + " | " + classificacao);
			
			if (classificacao.startsWith("X")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", ttMov.tipoMovimento);
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("CONTADEBITO", ttMov.contaDebito);
				js.put("CONTACREDITO", ttMov.contaCredito);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave  + "-CTB");
				js.put("CLASSIFICACAO", classificacaoFinal);

 
				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}
					
  				 

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);
				
				if(tipoLancamento.contains("PAGAR")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaJuros);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaMulta);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaDesconto);
							}
						}
					
					}
				}
				if(tipoLancamento.contains("RECEBER")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaJuros);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaMulta);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDesconto);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaCredito);
								js.put("CONTACREDITO", ttMov.contaDebito);
							}
						}
					}
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");
				
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
 				

				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito);
					rec3.put("CONTACREDITO", ttMov.contaCredito);
					rec3.put("TIPOMOVIMENTO", "CTBCC");
					rec3.put("CHAVE", ttMov.chave + "-CTBCC");
					rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);

					//records.put(rec3);
				}
				continue;
			}

			String classJur = "";
			String classDes = "";
			String classMul = "";

			if(tipoLancamento.contains("PAGAR")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}
			}
			
			
			if(tipoLancamento.contains("RECEBER")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}

				}
			}
			  


			if (ttMov.tipoMovimento.equals("CTBPORT")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", "CTBPORT");
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave + "-CTBPORT");
				js.put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", "");
					js.put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", ttMov.contaDebito);
					js.put("CONTACREDITO", "");
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBPORT");				
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBPORT", js);
			 
				//records.put(js);
			}
			if (ttMov.tipoMovimento.equals("CTB")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", "CTB");
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave + "-CTB");
				js.put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", ttMov.contaDebito);
					js.put("CONTACREDITO", "");
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", "");
					js.put("CONTACREDITO", ttMov.contaCredito);
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTADEBITO", ttMov.contaDebito);
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");				
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
				
				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito);
					rec3.put("CONTACREDITO", ttMov.contaCredito);
					rec3.put("TIPOMOVIMENTO", "CTBCC");
					rec3.put("CHAVE", ttMov.chave + "-CTBCC");
					rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);
					//records.put(rec3);
				}

				 
				if (ttMov.valorJuros > 0)  {
					classificacaoFinal = classJur;
					JSONObject jsJUR = new JSONObject(js.toString());
					jsJUR.put("LOTE", ttMov.lote);
					jsJUR.put("CNPJEMPRESA", cnpjEmpresa);
					jsJUR.put("DOCUMENTO", ttMov.documento);
					jsJUR.put("CODEMPRESA", ttMov.codEmpresa);
					jsJUR.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsJUR.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsJUR.put("TIPOMOVIMENTO", "CTBJUR");
					jsJUR.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsJUR.put("HISTORICO", ttMov.historicoJuros);
					jsJUR.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsJUR.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsJUR.put("VALORDESCONTO", ttMov.valorDesconto);
					jsJUR.put("VALORJUROS", ttMov.valorJuros);
					jsJUR.put("VALORMULTA", ttMov.valorMulta);
					jsJUR.put("NOMEPORTADOR", ttMov.nomePortador);
					jsJUR.put("CENTROCUSTO", ttMov.centroCusto);
					jsJUR.put("NATUREZACONTABIL", "D");
					jsJUR.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsJUR.put("CPFCNPJ", ttMov.cpfCnpj);
					jsJUR.put("SERIE", ttMov.serie);
					jsJUR.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsJUR.put("CHAVE", ttMov.chave + "-CTBJUR");
					jsJUR.put("CLASSIFICACAO", classificacaoFinal);

					jsJUR.put("COMPLEMENTO01", ttMov.complemento01);
					jsJUR.put("COMPLEMENTO02", ttMov.complemento02);
					jsJUR.put("COMPLEMENTO03", ttMov.complemento03);
					jsJUR.put("COMPLEMENTO04", ttMov.complemento04);
					jsJUR.put("COMPLEMENTO05", ttMov.complemento05);
					jsJUR.put("COMPLEMENTO06", ttMov.complemento06);
					jsJUR.put("COMPLEMENTO07", ttMov.complemento07);
					jsJUR.put("COMPLEMENTO08", ttMov.complemento08);
					jsJUR.put("COMPLEMENTO09", ttMov.complemento09);
					jsJUR.put("COMPLEMENTO10", ttMov.complemento10);
					jsJUR.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsJUR.put("CONTADEBITO",  ttMov.contaJuros);
						jsJUR.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsJUR.put("CONTADEBITO",  "");
						jsJUR.put("CONTACREDITO", ttMov.contaJuros);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJUR");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJUR", jsJUR);
				
				
					//records.put(jsJUR);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsJUR.toString());
						 rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBJURCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBJURCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBJURCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJURCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJURCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorDesconto > 0)  {
					classificacaoFinal = classDes;
					JSONObject jsDES = new JSONObject(js.toString());
					jsDES.put("LOTE", ttMov.lote);
					jsDES.put("CNPJEMPRESA", cnpjEmpresa);
					jsDES.put("DOCUMENTO", ttMov.documento);
					jsDES.put("CODEMPRESA", ttMov.codEmpresa);
					jsDES.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsDES.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsDES.put("TIPOMOVIMENTO", "CTBDES");
					jsDES.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsDES.put("HISTORICO", ttMov.historicoDesconto);
					jsDES.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsDES.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsDES.put("VALORDESCONTO", ttMov.valorDesconto);
					jsDES.put("VALORJUROS", ttMov.valorJuros);
					jsDES.put("VALORMULTA", ttMov.valorMulta);
					jsDES.put("NOMEPORTADOR", ttMov.nomePortador);
					jsDES.put("CENTROCUSTO", ttMov.centroCusto);
					jsDES.put("NATUREZACONTABIL", "C");
					jsDES.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsDES.put("CPFCNPJ", ttMov.cpfCnpj);
					jsDES.put("SERIE", ttMov.serie);
					jsDES.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsDES.put("CHAVE", ttMov.chave + "-CTBDES");
					jsDES.put("CLASSIFICACAO", classificacaoFinal);

					jsDES.put("COMPLEMENTO01", ttMov.complemento01);
					jsDES.put("COMPLEMENTO02", ttMov.complemento02);
					jsDES.put("COMPLEMENTO03", ttMov.complemento03);
					jsDES.put("COMPLEMENTO04", ttMov.complemento04);
					jsDES.put("COMPLEMENTO05", ttMov.complemento05);
					jsDES.put("COMPLEMENTO06", ttMov.complemento06);
					jsDES.put("COMPLEMENTO07", ttMov.complemento07);
					jsDES.put("COMPLEMENTO08", ttMov.complemento08);
					jsDES.put("COMPLEMENTO09", ttMov.complemento09);
					jsDES.put("COMPLEMENTO10", ttMov.complemento10);
					jsDES.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsDES.put("CONTADEBITO", "");
						jsDES.put("CONTACREDITO", ttMov.contaDesconto);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTADEBITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsDES.put("CONTADEBITO",  ttMov.contaDesconto);
						jsDES.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTACREDITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDES");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDES", jsDES);
				 
					//records.put(jsDES);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsDES.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBDESCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBDESCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBDESCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDESCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDESCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorMulta > 0)  {
					classificacaoFinal = classMul;
					JSONObject jsMUL = new JSONObject(js.toString());
					jsMUL.put("LOTE", ttMov.lote);
					jsMUL.put("CNPJEMPRESA", cnpjEmpresa);
					jsMUL.put("DOCUMENTO", ttMov.documento);
					jsMUL.put("CODEMPRESA", ttMov.codEmpresa);
					jsMUL.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsMUL.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsMUL.put("TIPOMOVIMENTO", "CTBMUL");
					jsMUL.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsMUL.put("HISTORICO", ttMov.historicoMulta);
					jsMUL.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsMUL.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsMUL.put("VALORDESCONTO", ttMov.valorDesconto);
					jsMUL.put("VALORJUROS", ttMov.valorJuros);
					jsMUL.put("VALORMULTA", ttMov.valorMulta);
					jsMUL.put("NOMEPORTADOR", ttMov.nomePortador);
					jsMUL.put("CENTROCUSTO", ttMov.centroCusto);
					jsMUL.put("NATUREZACONTABIL", "D");
					jsMUL.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsMUL.put("CPFCNPJ", ttMov.cpfCnpj);
					jsMUL.put("SERIE", ttMov.serie);
					jsMUL.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsMUL.put("CHAVE", ttMov.chave + "-CTBMUL");
					jsMUL.put("CLASSIFICACAO", classificacaoFinal);

					jsMUL.put("COMPLEMENTO01", ttMov.complemento01);
					jsMUL.put("COMPLEMENTO02", ttMov.complemento02);
					jsMUL.put("COMPLEMENTO03", ttMov.complemento03);
					jsMUL.put("COMPLEMENTO04", ttMov.complemento04);
					jsMUL.put("COMPLEMENTO05", ttMov.complemento05);
					jsMUL.put("COMPLEMENTO06", ttMov.complemento06);
					jsMUL.put("COMPLEMENTO07", ttMov.complemento07);
					jsMUL.put("COMPLEMENTO08", ttMov.complemento08);
					jsMUL.put("COMPLEMENTO09", ttMov.complemento09);
					jsMUL.put("COMPLEMENTO10", ttMov.complemento10);
					jsMUL.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsMUL.put("CONTADEBITO",  ttMov.contaMulta);
						jsMUL.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsMUL.put("CONTADEBITO",  "");
						jsMUL.put("CONTACREDITO", ttMov.contaMulta);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMUL");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMUL", jsMUL);				 
					
					//records.put(jsMUL);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsMUL.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBMULCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBMULCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBMULCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMULCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMULCC", rec3);
					   //records.put(rec3);
					}
				}
			}
		}
		// JWR adicionamos essa parte para mandar uma mensagem personalizada para o cliente, no caso de apenas nao conseguir ler os movimentos e nao um erro de layout
		// vamos descomentar depois de adicionar todas as validacoes sobre fiscal e afins
		// logger.logDebug("contRegra -> " + contRegra + " | temFiltro -> " + temFiltro);
		
		/*if (roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("MICALI")) */
 		
		/*if (contRegra > 0 && nomeArquivo.toUpperCase().contains("_ID") && nomeArquivo.toUpperCase().contains(".PDF")) {
			// logger.logDebug("ENTROU 34");
			putStatus(dirName, "03--Etapa 3 de 4 LEUCONVERSORANTIGO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
		}*/
		
		//#2304-002843. Melhorias no feedback
		if (contRegra < 0 && nomeArquivo.toUpperCase().contains("_ID") && !nomeArquivo.toUpperCase().startsWith("OK_DEPARACONTA") && ((roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && !temFiscal && !mantemArquivo.equals("SIM")) || !roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE"))) {
			if (temFiltro) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temIgnorar) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			 	}
			} else if (temLinhas) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temOFX || retornaPadroes.equals("break")) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			}
			
		}
		
		if (apagaExtrato) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				
				extrato.apagaExtrato(codEmpresa, dbIOCont, logger);
				
				/*dbIOCont.delete("IO_EXTRATO")
				.where("CODEMPRESA=?")
				.param(codEmpresa)
				.execute();*/
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR EXTRATO " + e.getMessage());
			}
		}
		
		// Apaga as Contas T quando sao informadas pelos contadore no Conf. REfras 
		if (apagaContaT) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				
				if (tipoLancamento.contains("PAGAR")) {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBFOR LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
				else {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBCLI LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR IO_PESSOA  " + e.getMessage());
			}
		}
		// resumo comparativo com razao
		String idLoteResumo = "";
		if (comparaRazao) {
			if(loteEtapaTres.toUpperCase().contains("_ID") && fornecedorUnico.contains("EXIBE_RESUMO")){
				idLoteResumo = "_ID"+cutString(loteEtapaTres.toUpperCase(), "_ID", "_")+"_";
			}
			String filenameRazao = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_APOS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerRazao = new FileWriter(filenameRazao);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerRazao.writeNewFile(ResumoTxt.toString());
		}
		
		if(logs){
			String filenameLogs = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_LOGS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerLogs = new FileWriter(filenameLogs);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerLogs.writeNewFile(logsTxt.toString());
		}

		//-------------------------------------------------------------------------------------
		// GERA ARQUIVO COM CONTAS NAO ENCONTRADAS
		//-------------------------------------------------------------------------------------
		String filename = backupDirName + "/ARQUIVO_APOIO_" + tipoLancamento + ".csv";
		// Cria o arquivo de DE-PARA FORNECEDOR
		FileWriter writer = new FileWriter(filename);
		writer.writeNewFile(txtDePara.toString());

		Iterator ite = mapaLote.keySet().iterator();
		while (ite.hasNext()) {
			String key = (String)ite.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			// =======================================================================================
			// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base *
			// =======================================================================================
			lote = ttLot.lote;     

  			
			ultimoJS = new JSONObject();
			ultimoJS.put("LOTE", lote);
			ultimoJS.put("DOCUMENTO", "");
			ultimoJS.put("CODEMPRESA", codEmpresa);
			ultimoJS.put("NOMEEMPRESA", nomeEmpresa);
			ultimoJS.put("DATAMOVIMENTO", "");
			ultimoJS.put("TIPOMOVIMENTO", "");
			ultimoJS.put("TIPOLANCAMENTO", "");
			ultimoJS.put("CONTADEBITO", "LOTE_ENCERRADO");
			ultimoJS.put("CONTACREDITO", "LOTE_ENCERRADO");
			ultimoJS.put("HISTORICO", ttLot.tipoPlanilha);
			ultimoJS.put("VALORLIQUIDACAO", 0);
			ultimoJS.put("VALORDOCUMENTO", 0);
			ultimoJS.put("VALORDESCONTO", 0);
			ultimoJS.put("VALORJUROS", 0);
			ultimoJS.put("VALORMULTA", 0);
			ultimoJS.put("NOMEPORTADOR", "");
			ultimoJS.put("CENTROCUSTO", "");
			ultimoJS.put("NATUREZACONTABIL", "");
			ultimoJS.put("NOMEORIGEM", "");
			ultimoJS.put("CPFCNPJ", "");
			ultimoJS.put("SERIE", "");
			ultimoJS.put("STATUSMOVIMENTO", 0);
			ultimoJS.put("CHAVE","LOTE_ENCERRADO " + lote );
			ultimoJS.put("CLASSIFICACAO", "LOTE_ENCERRADO");
			ultimoJS.put("STATUSMOVIMENTO", 1);
			records.put(ultimoJS);
			// Resumo Planilha
			try {
				String dirName1 = dirName.substring(0, dirName.lastIndexOf("/"))+"/DePara/";
				File file = new File(dirName1);
				try {
					String diretorio = dirName1;
					File file2 = new File(diretorio);
					File[] files = file2.listFiles();
					if (FileUtil.dirHasFiles(diretorio)) {
						for (File fl: files) {
							if (fl.isFile()){
								if(fl.getName().contains(lote) && fl.getName().toLowerCase().endsWith(".csv") && !fl.getName().startsWith("OK_") ){
									// ELIMINA ARQUIVO IMPORTADO
									file = new File(dirName1);
									if (file.exists()){
										FileUtil.deleteFile(dirName1+fl.getName());
									}
								}
							}
						}
					}
				} catch (Exception ee) {
					logger.logError(ee);
				}
			}catch (Exception e) {
				logger.logError(e);
			}
		}
	} catch (Exception ee) {
		logger.logError("EndpointA: ", ee);
	} finally {
	
		try {
			if (dbIOCont != null) {
				dbIOCont.closeConnection();
			}
			if (dbIODepara != null) {
				dbIODepara.closeConnection();
			}
		} catch (Exception ee) {}
	}
	return records;
}

class ttLote {
	public String lote;
	public String tipoPlanilha;
	public ttLote(){}
	public ttLote(ttLote tt){
		lote=tt.lote;
		tipoPlanilha=tt.tipoPlanilha;		
	}
}

class ttArquivo {
	public String arquivo;
	public String abas;
	public ttArquivo(){}
	public ttArquivo(ttArquivo tt){
		arquivo=tt.arquivo;
		abas=tt.abas;
	}
}

class ttDocumento {
    public String documento;
	public double valorDocumento;
     public ttDocumento(){}
    public ttDocumento(ttDocumento ttD){
        documento = ttD.documento;
 		valorDocumento  = ttD.valorDocumento;
    }
}
class ttJuros {
	public String documento;
	public double valorJur;
	public int valorLido;
	public ttJuros(){}
	public ttJuros(ttJuros ttJ){
		documento = ttJ.documento;
		valorLido = ttJ.valorLido;
		valorJur  = ttJ.valorJur;
	}
}

class ttDesconto {
	public String documento;
	public double valorDesc;
	public int valorLido;
	public ttDesconto(){}
	public ttDesconto(ttDesconto ttD){
		documento  = ttD.documento;
		valorDesc  = ttD.valorDesc;
		valorLido  = ttD.valorLido;
	}
}

class ttPlano {
	public String contaContabil;
	public String descricaoPlano;
	public String contaAnalitica;
	public ttPlano(){}
	public ttPlano(ttPlano ttP){
		contaContabil = ttP.contaContabil;
		descricaoPlano = ttP.descricaoPlano;
		contaAnalitica = ttP.contaAnalitica;
	}
}

class ttFornecedor {
	public String nomeOrigem;
	public String contaMovimento;
	public ttFornecedor(){}
	public ttFornecedor(ttFornecedor ttF){
		nomeOrigem 	 = ttF.nomeOrigem;
		contaMovimento = ttF.contaMovimento;
	}
}



public String verificaSeparador(String separadorCsv, String dirName, String extensao, SysProperties props, InoutLogger logger) {

	try {
		if(extensao.contains("CSV")) {

			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if(memFile.getFilename().startsWith("OK_DeParaConta__")) importaDePara(memFile, dirName, extensao, logger, props);
				if (memFile.getFilename().toUpperCase().contains("CSV")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length < fields2.length) { separadorCsv = ","; break; }
								if(fields1.length > fields2.length) { separadorCsv = ";"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
		
		
		
		if(extensao.contains("TXT")) {
			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if (memFile.getFilename().toUpperCase().endsWith(".TXT")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							String [] fields3 = line.split("\t");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length > fields2.length && fields1.length > fields3.length) { separadorCsv = ";"; break; }
								if(fields2.length > fields1.length && fields2.length > fields3.length) { separadorCsv = ","; break; }
								if(fields3.length > fields1.length && fields3.length > fields2.length) { separadorCsv = "\t"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
	
	}
	 catch(Exception xx) {}
	
	return separadorCsv;


}

public void criaMovimento(DataBase dbIO, JSONObject recordRec, String chave, JSONObject js) {
	if (recordRec != null)  {
		try {
			updateMovimento(dbIO, js);
			/*if (js.has("idRoteiro")) {
				try {
					updateArquivo(dbIO, js);
				} catch(Exception ex){}
			}*/
		} catch (Exception eUpdateMovimento) {						 
			logger.logError("EndpointB: Erro ao Atualizar Movimento", eUpdateMovimento);
		}
	} else {
		try {
			insertMovimento(dbIO, js); 
			/*if (js.has("idRoteiro")) {
				try {
					insertArquivo(dbIO, js);
				} catch(Exception ex) {}
			}*/
				
		} catch (Exception eInsertMovimento) { 						 
			logger.logError("EndpointB: Erro ao fazer insert no Movimento", eInsertMovimento);
		}
	}
}

public int getIndiceRoteiro(String nomeCampo, JSONObject roteiroIndice) {
	int validaCampo = -1;
	try {
		if (!roteiroIndice.optString(nomeCampo).equals("")) {
			try {
				validaCampo = Integer.parseInt(roteiroIndice.optString(nomeCampo).replaceAll("@","").trim());
			}
			catch (Exception xx) { validaCampo = -1;}
		}
	}
	catch (Exception xx) {validaCampo = -1;}
	return  validaCampo;
}


public HashMap geralancamentoExtraInterno(HashMap mapaVariavel, ttMovimentoPadrao ttMov2, String chave,boolean gerarApenasValorDocumento, int complemento , String textoComplemento, String classificacao){
	ttMovimentoPadrao ttMov4      = (ttMovimentoPadrao)mapaVariavel.get(chave);
	if (ttMov4 == null) {
		ttMov4 = new ttMovimentoPadrao(ttMov2);
		ttMov4.chave                    = chave;
		if(gerarApenasValorDocumento){
			ttMov4.valorDesconto            = 0;
			ttMov4.valorMulta               = 0;
			ttMov4.valorJuros               = 0;
		}
		ttMov4.classificacao            = classificacao;
		switch(complemento){
			case 1: ttMov4.complemento01 = textoComplemento; break;
			case 2: ttMov4.complemento02 = textoComplemento; break;
			case 3: ttMov4.complemento03 = textoComplemento; break;
			case 4: ttMov4.complemento04 = textoComplemento; break;
			case 5: ttMov4.complemento05 = textoComplemento; break;
			case 6: ttMov4.complemento06 = textoComplemento; break;
		}
		mapaVariavel.put(chave, ttMov4);
	}
	return mapaVariavel;
}


public JSONObject getAlternativeDataInt (JSONObject objIn, MemoryFile memFile) throws Exception {
	JSONObject response	= new JSONObject();
	String validar		= objIn.optString("validar");
	String [] validaArr	= validar.split(";");
	String changeIt		= "";
	String changeText	= "nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador";
	String changeDate	= "dataMovimento";
	String changeValue	= "valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";

	for (String parameter : validaArr) {
		response.put(parameter,	"");

		// String indiceAux = "";
		String indiceAux = getColunaAlternativa(parameter,	objIn);
		if (!indiceAux.equals("")) {
			if (changeDate.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String dataStrAux = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						if (!dataStrAux.equals("")) {
							String dataMovAux = getCampoDate(dataStrAux);
							if (dataMovAux.contains("/")) {
								String dataAlternativa = getCampoDate(dataStrAux);
								response.put(parameter,	dataAlternativa);
								response.put("dataLote", dataAlternativa);
								changeIt = changeIt+";"+parameter;
								
								//feito pra que as proximas iteracoes ja tenham o dado atualizado
								objIn.put(parameter, dataAlternativa);
							}
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Data'! "+ee.getMessage()); }
				}
				
			} else if (changeValue.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try {
						int iAux  = Integer.parseInt(indiceAux);
						if(iAux >=0){
							double valorAlternativo = memFile.getDoubleField(iAux);
							response.put(parameter, valorAlternativo);
							changeIt = changeIt+";"+parameter;
							
							//feito pra que as proximas iteracoes ja tenham o dado atualizado
							objIn.put(parameter, valorAlternativo);
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Valor'! "+ee.getMessage()); }

				}
				if (indiceAux.contains(";")) {
					double valorAlternativo = 0;
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux = Integer.parseInt(k);
							valorAlternativo = valorAlternativo + memFile.getDoubleField(iAux);
						}
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Valor 02'! "+ee.getMessage());  }
					
					if (valorAlternativo != 0) {
						response.put(parameter, valorAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, valorAlternativo);
					}
				}
			} else if (changeText.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String textoAlternativo = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Texto'! "+ee.getMessage()); }
				}
				if (indiceAux.contains(";")) {
					String textoAlternativo = "";
					
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux	 = Integer.parseInt(k);
							textoAlternativo = textoAlternativo+" - "+memFile.getStringFieldRemoveEspCharsUpper(iAux).trim();
							textoAlternativo = textoAlternativo.trim();
						}
						if (textoAlternativo.startsWith("-")) textoAlternativo = cutString(textoAlternativo, 1).trim();
						
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Texto 02'! "+ee.getMessage());  }
					
					if (!textoAlternativo.equals("")) {
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					}
				}
			} else {
				response.put(parameter, "");
				objIn.put(parameter, "");
			}
		}
	}
	
	response.put("changeIt",	changeIt);
	return response;
}




public String getRefatoraCampo(String valorOriginal, String conteudoRoteiro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String line            = objHistorico.optString("line");
    String cabecalhoRegra  = objHistorico.optString("cabecalhoRegra");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
	
	nomeArquivo = StringUtil.removeSpecialCharsToUC(nomeArquivo);


	if (conteudoRoteiro.toUpperCase().contains("#CABECALHO"))      return cabecalhoRegra;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO01"))  return complemento01;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO02"))  return complemento02;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO03"))  return complemento03;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO04"))  return complemento04;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO05"))  return complemento05;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO06"))  return complemento06;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO07"))  return complemento07;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO08"))  return complemento08;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO09"))  return complemento09;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO10"))  return complemento10;
	if (conteudoRoteiro.toUpperCase().contains("#TIPOPLANILHA"))   return tipoPlanilha;
	if (conteudoRoteiro.toUpperCase().contains("#NOMEDOARQUIVO"))   return nomeArquivo;
	if (conteudoRoteiro.toUpperCase().contains("#LINE"))  		   return line;
	if (conteudoRoteiro.toUpperCase().contains("#NUMEROABA"))      return ("ABA:" + String.valueOf(numeroAba));


    return valorOriginal;
}

public boolean buscaProtocoloConversor(String protocolo_id, LancamentosApi apiWeb, String tipoLancamento, String nomeArquivo, InoutLogger logger) throws Exception {
	// logger.logInfo("ENTROU PROTOCOLOCONV");
	String diretorio = "C:/Conversor/Pdf";
	File file2 = new File(diretorio);
	
	File [] files = file2.listFiles();
	nomeArquivo = cutString(nomeArquivo, 0, ".pdf");
	
	if (FileUtil.dirHasFiles(diretorio)) {
		
		boolean notificouProtocolo = false;
			for (File fl: files) {
				// logger.logDebug("FL " + fl.getAbsolutePath()+ " | " + nomeArquivo + " | " + tipoLancamento);
				if (fl.getAbsolutePath().contains(tipoLancamento) && fl.getAbsolutePath().contains(nomeArquivo)) {
					// logger.logInfo("AQ FOI " + fl.getAbsolutePath() + " | FL LENGHT = " + fl.length());
					if ((fl.getAbsolutePath().contains("pagar") || fl.getAbsolutePath().contains("receber")) && fl.getAbsolutePath().contains("#") && fl.getAbsolutePath().toUpperCase().contains(".CSV") && fl.getAbsolutePath().contains("_ancora_") && fl.length() > 0){
						String diretorioArquivoCsv = "C:/inout/contabil/";
						String testeCsv = "";									
						String contabilidadeCsv = "";
						String empresaCsv = "";
						
						// logger.logInfo("ENTROU NOS PDFFFFFF");
						
						if (fl.getAbsolutePath().contains("pagar_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "pagar_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/APagar";
							} catch (Exception e) {
								logger.logInfo("ERRO AO CORTAR ARQUIVO " + e.getMessage());
							}
						}
						else if (fl.getAbsolutePath().contains("receber_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "receber_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/AReceber";
							} catch (Exception e) {
								logger.logInfo("ERRO AO CORTAR ARQUIVO2 " + e.getMessage());
							}
						}
						String arquivoDeployStr = "";
						try {
							// mantivemos o ancora no nome do arquivo para saber que foi convertido e usado nos extratos
							arquivoDeployStr = fl.getAbsolutePath().substring(fl.getAbsolutePath().indexOf("_ancora_"));
						} catch (Exception e) {
							logger.logInfo("NAOCRIOURODACONVERSOR " + e.getMessage());
						}
						// logger.logInfo("DIRETORIOS " + diretorioArquivoCsv + " | " + arquivoDeployStr);
						if (!arquivoDeployStr.equals("")) {
							File arquivoDeploy  = new File(diretorioArquivoCsv + "/" + arquivoDeployStr);
							//logger.logDebug("COPIOUARQUIVO " + arquivoDeploy.getName());
							FileUtil.copyFolder(fl, arquivoDeploy);
							
							try { 
								FileUtil.deleteFile(fl);
							} catch (Exception XX) {}
						}
						if (!notificouProtocolo) {
							notificouProtocolo = true;
							String atualizaStatus = atualizaStatusProtocoloOic(apiWeb, fl, "0", "Estamos convertendo os PDFs.",  logger);
						}
						continue;
					}
				}
			}
		if (notificouProtocolo) return true;
	}
	return false;
}

public String atualizaStatusProtocoloOic(LancamentosApi apiWeb, File fl,  String statusProtocolo, String mensagem, InoutLogger logger) throws Exception {

    try {
		 String protocolo_id = cutString(fl.getName().toUpperCase(), fl.getName().toUpperCase().lastIndexOf("_ID")+3, "_");
		 if (fl.getName().toUpperCase().contains("OUD_ID"))  protocolo_id = cutString(fl.getName().toUpperCase(), "OUD_ID", "_");
		 if (fl.getName().toUpperCase().contains("OUD__ID")) protocolo_id = cutString(fl.getName().toUpperCase(), "OUD__ID", "_");
		// roda requisicao para atualizar o satus do protocolo
		JSONObject bodyProtocolo = new JSONObject();
		bodyProtocolo.put("status", statusProtocolo).put("mensagem", mensagem);
		String atualizaStatus = apiWeb.atualizaStatusProtocolo("https://integrador-contabil.herokuapp.com", protocolo_id, bodyProtocolo);
		return atualizaStatus;
	} catch (Exception xx) {
		logger.logDebug(" Erro ao Atualizar Status " + xx);
		return "";
	}
 
}











































//## CODIGO GERADO A PARTIR DAS REGRAS NO SALESFORCE ##
//## NAO ALTERAR DAQUI ATE O FINAL DO SCRIPT!!!!     ##
public JSONObject getRoteiro() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-03122965");
    js.put("idRoteiro", "a0ASG000003kfXv");
    js.put("idEmpresa", "a0q6R000008wxUbQAI");
    js.put("idContabilidade", "a09150000152oGq");
    js.put("CnpjContabilidade", "32.709.373/0001-22");
    js.put("CnpjEmpresa", "77.966.539/0001-24");
    js.put("fornecedor", "5");
    js.put("dataMovimento", "1");
    js.put("portador", "#COLUNA A CONTEM(EXTRATO DA CONTA)");
    js.put("documentoNF", "2");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "#COLUNA E CONTEM(/20) COLUNA G");
    js.put("complemento02", "#COLUNA E CONTEM(/20) COLUNA H");
    js.put("complemento03", "#COLUNA E CONTEM(/20) COLUNA F");
    js.put("complemento04", "0");
    js.put("complemento05", "");
    js.put("complemento06", "0");
    js.put("centroCusto", "");
    js.put("valorAlternativo", "");
    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("dataFake", "");

    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "4701");
    js.put("contaFixaMulta", "4701");
    js.put("contabilidade", "Unica");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "TRUE");
    js.put("cruzaExtrato", "FALSE");
    js.put("empresa", "Bomtransporteltda");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "FALSE");
    js.put("ValidaFornecedorFiscal", "0");
    js.put("Integracao_contratos", "false");
    js.put("Usa_Filial_Questor", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "COMPLEMENTO04");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "ARQUIVO PAGAMENTOS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS PAGAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");

    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("especiaisBaixaFiscal", "");
    js.put("Arredonda", "false");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");
    js.put("Coluna_Valor_Duplicata_Dominio", "9");
    js.put("delimitadorDoArquivo", "");
    js.put("agrupaArquivos", "FALSE");

    js.put("X001_ROB", "");
    js.put("X002_Despesas", "");
    js.put("X003_Despesas_Detalhe", "");
    js.put("X004_Geracao_Caixa_Mes", "");
    js.put("X005_Geracao_Caixa_Acumulado", "");
    js.put("X006_Despesas_sobre_Faturamento", "");
    js.put("X007_Lucro", "");
    js.put("X008_Deducoes_Receitas", "");
    js.put("X009_CMV", "");
    js.put("X010_CPV", "");
    js.put("X011_CSP", "");
    js.put("X012_Indicador", "");
    js.put("X013_Indicador", "");
    js.put("X014_Indicador", "");
    js.put("X015_Indicador", "");
    js.put("X016_Indicador", "");
    js.put("X017_Indicador", "");
    js.put("X018_Indicador", "");
    js.put("X019_Indicador", "");
    js.put("X020_Indicador", "");
    js.put("X021_Indicador", "");

    js.put("X015_Label", "");
    js.put("X016_Label", "");
    js.put("X017_Label", "");
    js.put("X018_Label", "");
    js.put("X019_Label", "");
    js.put("X020_Label", "");
    js.put("Email_Logo", "");
    js.put("BuscaCnpjCRM", "FALSE");
    js.put("Idioma", "PORTUGUES");
    js.put("Ordem_dos_Indicadores", "7, 12, 21, 1, 8, 9, 10, 11, 13, 2, 3, 6, 4, 5, 15, 16, 18, 14, 17, 19, 20");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Gera_LOG", "false");
    js.put("Gera_LOG_PARAMETROS", "");

    return js;
}

public JSONObject getRoteiroZZPADRAOOTTIMIZZAPAG1() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016997");
    js.put("idRoteiro", "a0ASG000003kfXv");
    js.put("idEmpresa", "a0q6R000007KGdjQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "1");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "6");
    js.put("documentoNF", "1");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "5");
    js.put("complemento01", "3");
    js.put("complemento02", "7");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "0");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Unica");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Bomtransporteltda");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "OFICIAL PLANILHA PADRAO OTTIMIZZA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS PAGAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public String getTipoPlanilha(String line, String tipoPlanilha, String nomeArquivo, JSONObject jDadosObj) {
    boolean achouTipo = true;
    String [] campos1 = "DATA PAGAMENTO;DOCUMENTO;FORNECEDOR;DETALHES DO PAGAMENTO".split(";");
    for (int x=0;x<campos1.length;x++) {
        if (!line.contains(campos1[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "ZZPADRAOOTTIMIZZAPAG1";
    achouTipo = true;
    return tipoPlanilha;
}
public String getConta(String nomeOrigem, String documento, String nomePortador,
                       String complemento01, String complemento02, String complemento03, 
                       String nomeArquivo, String codCentroCusto) {
    String conta = "";
    String complemento04 = "";
    String complemento05 = "";
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getConta09(String contaMovimento, String nomeOrigem, String documento, 
                       String nomePortador, String complemento01, String complemento02, 
                       String complemento03, String nomeArquivo, String codCentroCusto) {
    String conta = contaMovimento;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (nomeOrigem.contains("HORIZONS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001963";
        contaMovimento = "5001963";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TARGET")) {
        conta = "5001284";
        contaMovimento = "5001284";
    }
    if (nomeOrigem.contains("BERTIOGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CAFELANDIA")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("CHAPECO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMPL")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ENTREGAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("ATACADAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("DESCARGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DESGARGA")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENTREGA")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DIARIA")) {
        conta = "5571";
        contaMovimento = "5571";
    }
    if (nomeOrigem.contains("ESTACIONAMENTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4544";
        contaMovimento = "4544";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRETE")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("BALDEIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PERNOITE")) {
        conta = "4405";
        contaMovimento = "4405";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AVARIA")) {
        conta = "5628";
        contaMovimento = "5628";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLEXLOG")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("RODOPARANA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000332";
        contaMovimento = "5000332";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO/CARGA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DARF") && nomeOrigem.contains("5856") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1552";
        contaMovimento = "1552";
    }
    if (nomeOrigem.contains("DARF") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("6912")) {
        conta = "1556";
        contaMovimento = "1556";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LIGGA") && nomeOrigem.contains("TELECOM")) {
        conta = "4478";
        contaMovimento = "4478";
    }
    if (nomeOrigem.contains("BORRACHARIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("XISTO")) {
        conta = "5035933";
        contaMovimento = "5035933";
    }
    if (nomeOrigem.contains("PECAS") && nomeOrigem.contains("ECO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5114580";
        contaMovimento = "5114580";
    }
    if (nomeOrigem.contains("MECANICA") && nomeOrigem.contains("VARGAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5035352";
        contaMovimento = "5035352";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SEFAZ") && nomeOrigem.contains("MG")) {
        conta = "1541";
        contaMovimento = "1541";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PAGAMENTOS") && nomeOrigem.contains("NU")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (nomeOrigem.contains("POINT") && nomeOrigem.contains("OPEN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5056629";
        contaMovimento = "5056629";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MELQUIDES") && nomeOrigem.contains("MADZGALLA")) {
        conta = "5113570";
        contaMovimento = "5113570";
    }
    if (nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("CUBIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5030056";
        contaMovimento = "5030056";
    }
    if (nomeOrigem.contains("TECNOLOGIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRETEFY")) {
        conta = "5035665";
        contaMovimento = "5035665";
    }
    if (nomeOrigem.contains("SERVOPA") && nomeOrigem.contains("CAMINHOES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000167";
        contaMovimento = "5000167";
    }
    if (nomeOrigem.contains("SOM") && nomeOrigem.contains("SIGMA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5031873";
        contaMovimento = "5031873";
    }
    if (nomeOrigem.contains("CENTER") && nomeOrigem.contains("TRUCK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000829";
        contaMovimento = "5000829";
    }
    if (nomeOrigem.contains("SILVESTRE") && nomeOrigem.contains("ALCIONE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5052355";
        contaMovimento = "5052355";
    }
    if (nomeOrigem.contains("TADEU") && nomeOrigem.contains("DIMAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DESCARGA") && nomeOrigem.contains("PINHAIS")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("MARGOTI") && nomeOrigem.contains("LEANDRO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADAPT") && nomeOrigem.contains("TAR")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("JORGE") && nomeOrigem.contains("TUBARAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALEXANDRO BUENO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("ATACADISTA") && nomeOrigem.contains("ASSAI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("DELTA") && nomeOrigem.contains("POSTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4933";
        contaMovimento = "4933";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BORRACHARIA TOBIAS")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COLETAS GALPAO")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (nomeOrigem.contains("LONA ENVELOPAMENTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCELO RECICLAGEM")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (nomeOrigem.contains("MECANICA CATARINENSE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("OLDEMIR ROCHA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POLIMENTO TANQUE")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTO SALITRE")) {
        conta = "4933";
        contaMovimento = "4933";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VJR BORRACHARIA")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("RECEITA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FEDERAL")) {
        conta = "1556";
        contaMovimento = "1556";
    }
    if (nomeOrigem.contains("GNRE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SEFAZ")) {
        conta = "1541";
        contaMovimento = "1541";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VISCO") && nomeOrigem.contains("BRASIL")) {
        conta = "5000787";
        contaMovimento = "5000787";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("VPERECK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001957";
        contaMovimento = "5001957";
    }
    if (nomeOrigem.contains("BRASIL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DO")) {
        conta = "5480";
        contaMovimento = "5480";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADILSON IARGAS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADILSON MACHADO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALEXANDRE BORGES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALLESON WILLE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALTAIR BEZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANDERSON ALBANO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALTAIR BEZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANDERSON ALBANO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALTAIR BEZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ANDERSON VIEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CLARO S/A")) {
        conta = "5001361";
        contaMovimento = "5001361";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CLAUDIO CLAUDINO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CLENISON CANESCHI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DANIEL SALDANHA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DANIEL SILVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDSON ZANCHETTA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EVALDO KUTACZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FABIANO PAGNO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FELIPE MONCHALOSKI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("GILBERTO NEIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ISAIR DIAS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOEL NUNES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JORGE LIPSKI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE DURANTE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JUARES GAMBA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JUARES CAETANO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("LAURINDO ARLINDO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LOURIVAL ALVES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARIO MONCHALOSKI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MAURICIO BERTOLA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ORIDES PEREIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("OSMARI DRANKA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ROBERTO TEIXEIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROGERIO VIANA")) {
        conta = "58048";
        contaMovimento = "58048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SADIR FERREIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("SILDONEI TELMA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNIMED CURITIBA")) {
        conta = "5001282";
        contaMovimento = "5001282";
    }
    if (nomeOrigem.contains("VALDEMIRO HENNING") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALDIR GOBERTTI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("VOLMIR MAGALHAES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("WILSON NERIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("BRADESCO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BANCO")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMARILDO") && nomeOrigem.contains("TILIAKE")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("SALDO") && nomeOrigem.contains("CARGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("CUNHER") && nomeOrigem.contains("JORGE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("CARTAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARGA") && nomeOrigem.contains("TRANSPORTES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DEBITO") && nomeOrigem.contains("VELOE") && nomeOrigem.contains("AUTOMATICO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000003";
        contaMovimento = "5000003";
    }
    if (nomeOrigem.contains("GIRO") && nomeOrigem.contains("CAPITAL") && nomeOrigem.contains("OPERACAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "10606";
        contaMovimento = "10606";
    }
    if (nomeOrigem.contains("ALEX") && nomeOrigem.contains("TINFEL") && nomeOrigem.contains("05917707928") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5040516";
        contaMovimento = "5040516";
    }
    if (nomeOrigem.contains("BARIGUI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("CAMINHOES")) {
        conta = "5002005";
        contaMovimento = "5002005";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VEICULOS") && nomeOrigem.contains("BARIGUI") && nomeOrigem.contains("LTDA")) {
        conta = "5010772";
        contaMovimento = "5010772";
    }
    if (nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CWB") && nomeOrigem.contains("FURGOES")) {
        conta = "5034063";
        contaMovimento = "5034063";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESCR") && nomeOrigem.contains("CONTABIL") && nomeOrigem.contains("BURBELLO")) {
        conta = "5040701";
        contaMovimento = "5040701";
    }
    if (nomeOrigem.contains("FF") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EIRELI") && nomeOrigem.contains("INDUSTRIAL")) {
        conta = "5013212";
        contaMovimento = "5013212";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GAPSKI") && nomeOrigem.contains("CIA") && nomeOrigem.contains("LTDA")) {
        conta = "5026008";
        contaMovimento = "5026008";
    }
    if (nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GGNET") && nomeOrigem.contains("TELECOMUNICACOES")) {
        conta = "5052357";
        contaMovimento = "5052357";
    }
    if (nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HIDROMAQ") && nomeOrigem.contains("VEDACOES")) {
        conta = "5115452";
        contaMovimento = "5115452";
    }
    if (nomeOrigem.contains("A") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MILI") && nomeOrigem.contains("S")) {
        conta = "5000223";
        contaMovimento = "5000223";
    }
    if (nomeOrigem.contains("A") && nomeOrigem.contains("ODONTOPREV") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("S")) {
        conta = "5177";
        contaMovimento = "5177";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("CONVENIENCIA") && nomeOrigem.contains("PELANDA")) {
        conta = "5112394";
        contaMovimento = "5112394";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("PARTICIPACOES") && nomeOrigem.contains("PELANDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5111153";
        contaMovimento = "5111153";
    }
    if (nomeOrigem.contains("CONSORC") && nomeOrigem.contains("ADMINISTRADORA") && nomeOrigem.contains("PORTOBENS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5167";
        contaMovimento = "5167";
    }
    if (nomeOrigem.contains("/") && nomeOrigem.contains("SEFAZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PR")) {
        conta = "1541";
        contaMovimento = "1541";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("RETIFICA") && nomeOrigem.contains("MOTOCAR")) {
        conta = "5052985";
        contaMovimento = "5052985";
    }
    if (nomeOrigem.contains("SEFAZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("/") && nomeOrigem.contains("SC")) {
        conta = "8363";
        contaMovimento = "8363";
    }
    if (nomeOrigem.contains("RODAS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SIGMA") && nomeOrigem.contains("C")) {
        conta = "5032472";
        contaMovimento = "5032472";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SOL") && nomeOrigem.contains("EMBALAGENS") && nomeOrigem.contains("LTDA")) {
        conta = "5035713";
        contaMovimento = "5035713";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTO") && nomeOrigem.contains("UMBARA") && nomeOrigem.contains("LTDA")) {
        conta = "5001143";
        contaMovimento = "5001143";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("BOMPRECO") && nomeOrigem.contains("TRANSPORTADORA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5057785";
        contaMovimento = "5057785";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CRISTIANO") && nomeOrigem.contains("JOSE") && nomeOrigem.contains("BARATT")) {
        conta = "5001987";
        contaMovimento = "5001987";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RICARDO") && nomeOrigem.contains("GABARD") && nomeOrigem.contains("MARLOS")) {
        conta = "1634";
        contaMovimento = "1634";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUPERMERCADOS") && nomeOrigem.contains("10") && nomeOrigem.contains("MONIARI")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TUDOR") && nomeOrigem.contains("ACUMULADORES") && nomeOrigem.contains("EIRELI")) {
        conta = "5001576";
        contaMovimento = "5001576";
    }
    if (nomeOrigem.contains("UNICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONTABILIDADE") && nomeOrigem.contains("TRANSPORTE")) {
        conta = "5001283";
        contaMovimento = "5001283";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ZINHO") && nomeOrigem.contains("LAVACAO") && nomeOrigem.contains("LTDA")) {
        conta = "5112294";
        contaMovimento = "5112294";
    }
    if (nomeOrigem.contains("SALARIAL") && nomeOrigem.contains("ADIANT") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains(".")) {
        conta = "312";
        contaMovimento = "312";
    }
    if (nomeOrigem.contains(".") && nomeOrigem.contains("COMPL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLORIPA")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMPL") && nomeOrigem.contains(".") && nomeOrigem.contains("ITAJAI")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CREDITO EM CONTA")) {
        conta = "19";
        contaMovimento = "19";
    }
    if (nomeOrigem.contains("INFORMATICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FACINI") && nomeOrigem.contains("LTDA")) {
        conta = "5115651";
        contaMovimento = "5115651";
    }
    if (nomeOrigem.contains("LUCAS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JEAN") && nomeOrigem.contains("NICHELE")) {
        conta = "5030865";
        contaMovimento = "5030865";
    }
    if (nomeOrigem.contains("SERVICE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("MP")) {
        conta = "5050364";
        contaMovimento = "5050364";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CUSTAS") && nomeOrigem.contains("COBRANCA") && nomeOrigem.contains("TAR")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("PAPEL") && nomeOrigem.contains("DE") && nomeOrigem.contains("DESCARA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("PAPEL") && nomeOrigem.contains("DE") && nomeOrigem.contains("DESCARGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("CRISTIAM CAETANO CHAVE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("DAVO ITAIM SUPERMERMERCADO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("D N PNEUS")) {
        conta = "5013209";
        contaMovimento = "5013209";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTO PRODOESTE ARAXA")) {
        conta = "4933";
        contaMovimento = "4933";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PNEUS") && nomeOrigem.contains("DE") && nomeOrigem.contains("TROCA")) {
        conta = "4935";
        contaMovimento = "4935";
    }
    if (nomeOrigem.contains("AUTO PECAS CARRETAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000731";
        contaMovimento = "5000731";
    }
    if (nomeOrigem.contains("AUTO POSTO INTEGRACAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4933";
        contaMovimento = "4933";
    }
    if (nomeOrigem.contains("ME") && nomeOrigem.contains("CIELINSK") && nomeOrigem.contains("ERVINO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5037001";
        contaMovimento = "5037001";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESTRADAO ACESSORIOS AUTOMOTIVOS")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("FREIOS UNIAO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001976";
        contaMovimento = "5001976";
    }
    if (nomeOrigem.contains("JOSIMAR 26 PALLETS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (nomeOrigem.contains("LOGCONDOR") && nomeOrigem.contains("LOGISTICO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("OPERADOR")) {
        conta = "5052820";
        contaMovimento = "5052820";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BANCO BRADESCO CARTOES")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("ONL") && nomeOrigem.contains("FACEBOOK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4377";
        contaMovimento = "4377";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SIDER") && nomeOrigem.contains("CURITIBA") && nomeOrigem.contains("IMPLEMENTOS")) {
        conta = "5040264";
        contaMovimento = "5040264";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("JACOMAR") && nomeOrigem.contains("SUPERMERCADO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (nomeOrigem.contains("BARIGUI") && nomeOrigem.contains("L") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTOMOVEIS")) {
        conta = "5115812";
        contaMovimento = "5115812";
    }
    if (nomeOrigem.contains("CONDICIONADO") && nomeOrigem.contains("AR") && nomeOrigem.contains("ZANUZO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5112298";
        contaMovimento = "5112298";
    }
    if (complemento03.contains("ADTO") && nomeOrigem.contains("ADILSON IARGAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ADILSON MACHADO") && tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ADILSON TADEU COELHO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AGNUS LOGISTICA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALEXANDRE DE LIMA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALI TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALTAMIR WALDEMAR PILATY") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANDERSON DOS SANTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALTAMIR WALDEMAR PILATY")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALTAMIR WALDEMAR PILATY") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANDERSON DOS SANTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ANGELO CARVINHO NETO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ANTONIO ALCIMIR BUENO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANTONIO DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("BOAS TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRUNO HENRIQUE PONCHEK")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CELSO SOUZA ALVES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("CIATRAN TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("CLAUDINEY APARECIDO VIDAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("CRISTIANO ABREU PONCIANO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DARCI JOAO BECCHI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DENILSON SEBASTIAO ANTONIOLI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DIONATHAN RHUAN DRANKA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DOMINGOS FRANCISCO MOLARI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FABLI TRANSPORTES EIRELI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FATO TRANSPORTES EIRELI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FLAVIO JOSE TOZO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("GR ELETRICA LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3469";
        contaMovimento = "3469";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GRZ INFORMATICA LTDA.")) {
        conta = "5002006";
        contaMovimento = "5002006";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GUILHERME VICENTINI BARBOSA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HELBERT VICTOR FERREIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JEOVANE VITORIO ALBINO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JADIR ELIAS FRAINER")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOACIR HOBMEIR RODRIGUES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOAO BATISTA PROEZA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOAO BENTO JUNIOR")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOAO RENAN BAIER") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOCINEI CRUZ VALTER") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOCIELEN FERNANDES RODRIGUES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE ABEL GREIN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE AMARILDO COSTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOSE MAURO PAVOSKI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("LAERTE COLACO PINTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LEANDRO RICARDO SALIM")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("LJP TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LOGSON TRANSPORTES EIRELI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUCIANO DE CASTILHO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MARCIO ALEXANDRE FELBER") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MARCIO JOSE COSTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCIO JOSE MELO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCIO RODRIGO BUENO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MAYCO SCHMITZ MACCAGNAN")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MICHEL OLIVEIRA FREZARIN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MJO TRANSPORTADORA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOISES CUSTODIO PRIMO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MURIALDO MADEIRA NUNES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ODAIR JOSE RODYCZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ORLANDO MARCELINO SOARES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ORLEMATTOS TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("OSMAR DE ANDRADE")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("OURO PRETO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("PAULO ALVES MUNIZ") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PAULO MARCELO BUENO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PELANDA CONVENIENCIA 21")) {
        conta = "5112394";
        contaMovimento = "5112394";
    }
    if (nomeOrigem.contains("POSTOS PELANDA 116") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000171";
        contaMovimento = "5000171";
    }
    if (nomeOrigem.contains("RENATO TABORDA GUERRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RICARDO TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("RICHARD ANTONIO THIESEN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RODRIGO SCAPPIN FERREIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("SERGIO ADEMIR SCHNEIDER") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("TLOG TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TPR TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("UIRANDI E SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("UZIEL DE OLIVEIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VAGNER CAMARGO LUNARDI")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VIENA ESTOFADOS LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("VOLNEI BERTON BAREA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WAGNER ANTONIO LIMA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("TILIAKE") && nomeOrigem.contains("ARAPONGAS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMARILDO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ARAXA") && nomeOrigem.contains("ERALDO") && nomeOrigem.contains("VIANNA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDISON") && nomeOrigem.contains("FREITAS") && nomeOrigem.contains("BOTUCATU")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("FABIO") && nomeOrigem.contains("MONTEIRO") && nomeOrigem.contains("CURITIBA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("GOIANIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RIBEIRO") && nomeOrigem.contains("EVERSON")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PINHAIS") && nomeOrigem.contains("HINKE") && nomeOrigem.contains("JAQUES")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("HINKE") && nomeOrigem.contains("BOTUCATU") && nomeOrigem.contains("JAQUES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("MAZUREK") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JEAN") && nomeOrigem.contains("RAFAEL")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("/") && nomeOrigem.contains("CUNHER") && nomeOrigem.contains("JORGE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ABSOLUTE") && nomeOrigem.contains("FUNDO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VERTEXMULTIMERCADO")) {
        conta = "547601";
        contaMovimento = "547601";
    }
    if (complemento03.contains("COBRANCA") && nomeOrigem.contains("BANCO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ITAU")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("ALVES") && nomeOrigem.contains("LUIZ") && nomeOrigem.contains("NELSON") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("REGINALDO APARECIDO ESTRUZANI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5115810";
        contaMovimento = "5115810";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("THAIS ATHAYDES LEITE")) {
        conta = "1746";
        contaMovimento = "1746";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CLARO") && nomeOrigem.contains("S") && nomeOrigem.contains(".") && nomeOrigem.contains("A")) {
        conta = "4478";
        contaMovimento = "4478";
    }
    if (nomeOrigem.contains("PARAR") && nomeOrigem.contains("CGMP") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("-") && nomeOrigem.contains("SEM")) {
        conta = "5574";
        contaMovimento = "5574";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CREDITO") && nomeOrigem.contains("CARTAO") && nomeOrigem.contains("DE") && nomeOrigem.contains("GASTOS")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALBERT") && nomeOrigem.contains("O") && nomeOrigem.contains("MOLETTA") && nomeOrigem.contains("DESPACHANTE")) {
        conta = "4507";
        contaMovimento = "4507";
    }
    if (nomeOrigem.contains("M") && nomeOrigem.contains("PNEUS") && nomeOrigem.contains("DE") && nomeOrigem.contains("COM") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5034073";
        contaMovimento = "5034073";
    }
    if (nomeOrigem.contains("BOTOLO") && nomeOrigem.contains("ELETRICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTO") && nomeOrigem.contains("LTDA")) {
        conta = "5013207";
        contaMovimento = "5013207";
    }
    if (nomeOrigem.contains("M") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MECANICA") && nomeOrigem.contains("W") && nomeOrigem.contains("R")) {
        conta = "5032480";
        contaMovimento = "5032480";
    }
    if (nomeOrigem.contains("BARRAS") && nomeOrigem.contains("TRES") && nomeOrigem.contains("POSTO") && nomeOrigem.contains("AUTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001947";
        contaMovimento = "5001947";
    }
    if (nomeOrigem.contains("VIDA") && nomeOrigem.contains("E") && nomeOrigem.contains("PREVIDENCIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRADESCO")) {
        conta = "3712";
        contaMovimento = "3712";
    }
    if (nomeOrigem.contains("AUTO") && nomeOrigem.contains("CURITIBA") && nomeOrigem.contains("PECAS") && nomeOrigem.contains("CARRETAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000731";
        contaMovimento = "5000731";
    }
    if (nomeOrigem.contains("OFICINA") && nomeOrigem.contains("CARGO") && nomeOrigem.contains("NEK") && nomeOrigem.contains("MECANICA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5002004";
        contaMovimento = "5002004";
    }
    if (nomeOrigem.contains("CIA") && nomeOrigem.contains("TORTATO") && nomeOrigem.contains("CAVICHIOLO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA")) {
        conta = "5034058";
        contaMovimento = "5034058";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALINHAMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("VEICULO") && nomeOrigem.contains("CHASSIPAR")) {
        conta = "5023090";
        contaMovimento = "5023090";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOLAS") && nomeOrigem.contains("DE") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("SERVICOS")) {
        conta = "5114271";
        contaMovimento = "5114271";
    }
    if (nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CRACCO") && nomeOrigem.contains("PARK") && nomeOrigem.contains("HOTEL")) {
        conta = "5021800";
        contaMovimento = "5021800";
    }
    if (nomeOrigem.contains("SOUZA") && nomeOrigem.contains("SOUSA") && nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("C")) {
        conta = "5021817";
        contaMovimento = "5021817";
    }
    if (nomeOrigem.contains("CWB") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RODOVIAR") && nomeOrigem.contains("IMPLEMENTOS") && nomeOrigem.contains("FURGOES")) {
        conta = "5034063";
        contaMovimento = "5034063";
    }
    if (nomeOrigem.contains("EMPECAUTO") && nomeOrigem.contains("PECAS") && nomeOrigem.contains("VEIC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COM")) {
        conta = "5000156";
        contaMovimento = "5000156";
    }
    if (nomeOrigem.contains("IMPLEMENTOS") && nomeOrigem.contains("RODOVIARIOS") && nomeOrigem.contains("EIREL") && nomeOrigem.contains("FF") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5049629";
        contaMovimento = "5049629";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HAGAR") && nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("E") && nomeOrigem.contains("FREIOS")) {
        conta = "5042212";
        contaMovimento = "5042212";
    }
    if (nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("E") && nomeOrigem.contains("INTERNET") && nomeOrigem.contains("FRETEBRAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001993";
        contaMovimento = "5001993";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JUSTICA") && nomeOrigem.contains("DO") && nomeOrigem.contains("DA") && nomeOrigem.contains("FUNDO")) {
        conta = "3954";
        contaMovimento = "3954";
    }
    if (nomeOrigem.contains("TRANSPORTE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GESTRAN") && nomeOrigem.contains("SOFTWARE") && nomeOrigem.contains("DE")) {
        conta = "5001151";
        contaMovimento = "5001151";
    }
    if (nomeOrigem.contains("IMPRESSORAS") && nomeOrigem.contains("PARA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GRAZ") && nomeOrigem.contains("SOLUCOES")) {
        conta = "5002006";
        contaMovimento = "5002006";
    }
    if (nomeOrigem.contains("IMPERMIX") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COM") && nomeOrigem.contains("DE") && nomeOrigem.contains("MAT")) {
        conta = "5000198";
        contaMovimento = "5000198";
    }
    if (nomeOrigem.contains("TI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ISLUCNET") && nomeOrigem.contains("SOLUCOES") && nomeOrigem.contains("EM")) {
        conta = "5001943";
        contaMovimento = "5001943";
    }
    if (nomeOrigem.contains("UNIBANCO") && nomeOrigem.contains("HOLDING") && nomeOrigem.contains("S") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ITAU")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (nomeOrigem.contains("TEC") && nomeOrigem.contains("E") && nomeOrigem.contains("A") && nomeOrigem.contains("JFC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5110126";
        contaMovimento = "5110126";
    }
    if (nomeOrigem.contains("JM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VEICULOS") && nomeOrigem.contains("PARA") && nomeOrigem.contains("ACESSORIOS")) {
        conta = "5049626";
        contaMovimento = "5049626";
    }
    if (nomeOrigem.contains("SEZAR") && nomeOrigem.contains("KARVAT") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JONAS") && nomeOrigem.contains("CIA")) {
        conta = "5046152";
        contaMovimento = "5046152";
    }
    if (nomeOrigem.contains("DEDETIZADORA") && nomeOrigem.contains("MAP") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EPP") && nomeOrigem.contains("LTDA")) {
        conta = "5031926";
        contaMovimento = "5031926";
    }
    if (nomeOrigem.contains("SANTOS") && nomeOrigem.contains("DOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCELO") && nomeOrigem.contains("ALEXANDRE")) {
        conta = "5013227";
        contaMovimento = "5013227";
    }
    if (nomeOrigem.contains("MECANICA") && nomeOrigem.contains("ECO") && nomeOrigem.contains("DIESEL") && nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5114551";
        contaMovimento = "5114551";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("MECANICA") && nomeOrigem.contains("MOTOMEC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ME")) {
        conta = "5036140";
        contaMovimento = "5036140";
    }
    if (nomeOrigem.contains("M") && nomeOrigem.contains("CURITIBA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("P") && nomeOrigem.contains(".")) {
        conta = "1547";
        contaMovimento = "1547";
    }
    if (nomeOrigem.contains("BRASIL") && nomeOrigem.contains("COMERCIAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POINTER") && nomeOrigem.contains("DO")) {
        conta = "5019611";
        contaMovimento = "5019611";
    }
    if (nomeOrigem.contains("POSTOS") && nomeOrigem.contains("COMBUSTIVEIS") && nomeOrigem.contains("PELANDA") && nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000171";
        contaMovimento = "5000171";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("CENTER") && nomeOrigem.contains("TRUCK") && nomeOrigem.contains("J") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5040515";
        contaMovimento = "5040515";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("ROD") && nomeOrigem.contains("IMPL") && nomeOrigem.contains("RODOPARANA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000332";
        contaMovimento = "5000332";
    }
    if (nomeOrigem.contains("DAS") && nomeOrigem.contains("EMPRESA") && nomeOrigem.contains("SINDICATO") && nomeOrigem.contains("SETCEPAR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4659";
        contaMovimento = "4659";
    }
    if (nomeOrigem.contains("/") && nomeOrigem.contains("DARE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SP") && nomeOrigem.contains("SEFAZ")) {
        conta = "5638";
        contaMovimento = "5638";
    }
    if (nomeOrigem.contains("FERNANDO") && nomeOrigem.contains("SANTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUIZ") && nomeOrigem.contains("DOS")) {
        conta = "8199";
        contaMovimento = "8199";
    }
    if (nomeOrigem.contains("GAI") && nomeOrigem.contains("BOM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("NEWTON") && nomeOrigem.contains("PEDRO")) {
        conta = "360";
        contaMovimento = "360";
    }
    if (nomeOrigem.contains("DO") && nomeOrigem.contains("SERVICO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DISTRITAL") && nomeOrigem.contains("TATUQ")) {
        conta = "4555";
        contaMovimento = "4555";
    }
    if (nomeOrigem.contains("S") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TRITONE") && nomeOrigem.contains("PARTICIPACOES") && nomeOrigem.contains("A")) {
        conta = "10631";
        contaMovimento = "10631";
    }
    if (nomeOrigem.contains("TRANSPO") && nomeOrigem.contains("E") && nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("JF") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SANTO") && nomeOrigem.contains("DOS") && nomeOrigem.contains("SERGIO") && nomeOrigem.contains("PAES")) {
        conta = "5013223";
        contaMovimento = "5013223";
    }
    if (nomeOrigem.contains("SOCIEDADE") && nomeOrigem.contains("-") && nomeOrigem.contains("CURITIBA") && nomeOrigem.contains("UNIMED") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001282";
        contaMovimento = "5001282";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNTOL") && nomeOrigem.contains("UNIAO") && nomeOrigem.contains("NACIONAL") && nomeOrigem.contains("DE")) {
        conta = "4532";
        contaMovimento = "4532";
    }
    if (nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("A") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("UP") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5035580";
        contaMovimento = "5035580";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("VEICULOS") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("VECODIL")) {
        conta = "5056629";
        contaMovimento = "5056629";
    }
    if (nomeOrigem.contains("VESCOVI") && nomeOrigem.contains("A") && nomeOrigem.contains("P") && nomeOrigem.contains("COMERCIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5108385";
        contaMovimento = "5108385";
    }
    if (nomeOrigem.contains("HUGO") && nomeOrigem.contains("VICTOR") && nomeOrigem.contains("CARVALHO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LEITE")) {
        conta = "5056147";
        contaMovimento = "5056147";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("12177686962") && nomeOrigem.contains("HARTKOPF") && nomeOrigem.contains("JOAO") && nomeOrigem.contains("ANDREI")) {
        conta = "5040790";
        contaMovimento = "5040790";
    }
    if (nomeOrigem.contains("AUTO") && nomeOrigem.contains("AURELIO") && nomeOrigem.contains("ELETRICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA")) {
        conta = "5115513";
        contaMovimento = "5115513";
    }
    if (nomeOrigem.contains("ALTHAUS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRUNO") && nomeOrigem.contains("DOS") && nomeOrigem.contains("SANTOS")) {
        conta = "5109712";
        contaMovimento = "5109712";
    }
    if (nomeOrigem.contains("LTDA") && nomeOrigem.contains("CCJ") && nomeOrigem.contains("LAVACAO") && nomeOrigem.contains("AUTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5020236";
        contaMovimento = "5020236";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONCRETO") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("DO") && nomeOrigem.contains("BRIFORTE")) {
        conta = "5115510";
        contaMovimento = "5115510";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONTROLE") && nomeOrigem.contains("TECNICO") && nomeOrigem.contains("DE") && nomeOrigem.contains("MANUTENCAO")) {
        conta = "5115512";
        contaMovimento = "5115512";
    }
    if (nomeOrigem.contains("DE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESTADO") && nomeOrigem.contains("TRANSITO") && nomeOrigem.contains("DEPARTAMENTO")) {
        conta = "4581";
        contaMovimento = "4581";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRANCISCO") && nomeOrigem.contains("MARTINS") && nomeOrigem.contains("RAMOS") && nomeOrigem.contains("NETO")) {
        conta = "1637";
        contaMovimento = "1637";
    }
    if (nomeOrigem.contains("FREZARIN") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DEPOSITOS") && nomeOrigem.contains("E") && nomeOrigem.contains("TRANSPORTES")) {
        conta = "5052358";
        contaMovimento = "5052358";
    }
    if (nomeOrigem.contains("DRESCH") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JONATAN") && nomeOrigem.contains("HELENO") && nomeOrigem.contains("DESCARGA")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WENDT") && nomeOrigem.contains("ELAINE") && nomeOrigem.contains("KARINE") && nomeOrigem.contains("01050837983")) {
        conta = "5052480";
        contaMovimento = "5052480";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LENILDA") && nomeOrigem.contains("DA") && nomeOrigem.contains("SILVA") && nomeOrigem.contains("VATRIM")) {
        conta = "5114435";
        contaMovimento = "5114435";
    }
    if (nomeOrigem.contains("SILVA") && nomeOrigem.contains("AUTO") && nomeOrigem.contains("ELETRICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARIA")) {
        conta = "5045072";
        contaMovimento = "5045072";
    }
    if (nomeOrigem.contains("GANDRA") && nomeOrigem.contains("PONCIANO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MATHEUS") && nomeOrigem.contains("TOLENTINO")) {
        conta = "5013237";
        contaMovimento = "5013237";
    }
    if (nomeOrigem.contains("MVX") && nomeOrigem.contains("ELETRA") && nomeOrigem.contains("RCIO") && nomeOrigem.contains("COMA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5115449";
        contaMovimento = "5115449";
    }
    if (nomeOrigem.contains("FAZENDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SECRETARIA") && nomeOrigem.contains("DA") && nomeOrigem.contains("RS")) {
        conta = "5638";
        contaMovimento = "5638";
    }
    if (nomeOrigem.contains("ESTADO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SECRETARIA") && nomeOrigem.contains("DO") && nomeOrigem.contains("PARANA")) {
        conta = "1541";
        contaMovimento = "1541";
    }
    if (nomeOrigem.contains("CONSORCIOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RODOBENS") && nomeOrigem.contains("ADMINISTRADORA") && nomeOrigem.contains("DE")) {
        conta = "5167";
        contaMovimento = "5167";
    }
    if (nomeOrigem.contains("FRANCISCO") && nomeOrigem.contains("JOSE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SAO") && nomeOrigem.contains("MARTINS")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ESTADO") && nomeOrigem.contains("PAULO") && nomeOrigem.contains("SAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SECRET")) {
        conta = "5638";
        contaMovimento = "5638";
    }
    if (nomeOrigem.contains("SGA") && nomeOrigem.contains("E") && nomeOrigem.contains("PECAS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VEICULOS")) {
        conta = "5112200";
        contaMovimento = "5112200";
    }
    if (nomeOrigem.contains("EM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLUXLOG") && nomeOrigem.contains("SOLUCOES") && nomeOrigem.contains("OPERACOES")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PRESTADORA") && nomeOrigem.contains("F") && nomeOrigem.contains("H") && nomeOrigem.contains("R")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONSTRUCAO") && nomeOrigem.contains("DE") && nomeOrigem.contains("MATERIAL") && nomeOrigem.contains("MDX")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SERVICO DE CHAPA LEVE")) {
        conta = "3469";
        contaMovimento = "3469";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BORRACHARIA ESTRELA DA SERRA")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("SUL") && nomeOrigem.contains("KM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELETRICA") && nomeOrigem.contains("BORRACHARIA")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("LANCHONETE") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("PELANDA") && nomeOrigem.contains("16") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3716";
        contaMovimento = "3716";
    }
    if (nomeOrigem.contains("RESTRICAO") && nomeOrigem.contains("PARA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUAN") && nomeOrigem.contains("BONATTI")) {
        conta = "4582";
        contaMovimento = "4582";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTO CAMINHOS DA NEVE")) {
        conta = "4933";
        contaMovimento = "4933";
    }
    if (nomeOrigem.contains("47") && nomeOrigem.contains("E") && nomeOrigem.contains("RESTAURANTE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CHURRASCARIA")) {
        conta = "3716";
        contaMovimento = "3716";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RUDNIK E CIA LANCHE")) {
        conta = "3716";
        contaMovimento = "3716";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PECAS") && nomeOrigem.contains("CAMINHOES") && nomeOrigem.contains("E") && nomeOrigem.contains("TITANFOZ")) {
        conta = "522382";
        contaMovimento = "522382";
    }
    if (nomeOrigem.contains("ANDERSON") && nomeOrigem.contains("ANTONIO") && nomeOrigem.contains("PARMIGIANI") && nomeOrigem.contains("MEI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5055271";
        contaMovimento = "5055271";
    }
    if (nomeOrigem.contains("POSTO") && nomeOrigem.contains("LTDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTO") && nomeOrigem.contains("PELANDA")) {
        conta = "5040299";
        contaMovimento = "5040299";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ACUMULADOR") && nomeOrigem.contains("DE") && nomeOrigem.contains("AVIC") && nomeOrigem.contains("DISTRIBUIDORA")) {
        conta = "5003455";
        contaMovimento = "5003455";
    }
    if (nomeOrigem.contains("COM") && nomeOrigem.contains("MATS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BALAROTI") && nomeOrigem.contains("DE")) {
        conta = "5009634";
        contaMovimento = "5009634";
    }
    if (nomeOrigem.contains("BANCO ITAUCARD CARTOES S/A") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("DE") && nomeOrigem.contains("SISTEMA") && nomeOrigem.contains("CONVENIOS")) {
        conta = "5013235";
        contaMovimento = "5013235";
    }
    if (nomeOrigem.contains("A") && nomeOrigem.contains("S") && nomeOrigem.contains("AUTOMOTIVA") && nomeOrigem.contains("COMERCIAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000021";
        contaMovimento = "5000021";
    }
    if (nomeOrigem.contains("FOOT") && nomeOrigem.contains("CLUB") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CORITIBA") && nomeOrigem.contains("BALL")) {
        conta = "288";
        contaMovimento = "288";
    }
    if (nomeOrigem.contains("E") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COUTO") && nomeOrigem.contains("NURNBERG") && nomeOrigem.contains("COMERCIO")) {
        conta = "5000143";
        contaMovimento = "5000143";
    }
    if (nomeOrigem.contains("PECAS") && nomeOrigem.contains("C") && nomeOrigem.contains("NURNBERG") && nomeOrigem.contains("COUTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000143";
        contaMovimento = "5000143";
    }
    if (nomeOrigem.contains("BUENO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COZINHAS") && nomeOrigem.contains("PARA") && nomeOrigem.contains("CAMINHOES")) {
        conta = "5019605";
        contaMovimento = "5019605";
    }
    if (nomeOrigem.contains("SOL") && nomeOrigem.contains("ELETRICAS") && nomeOrigem.contains("PECAS") && nomeOrigem.contains("DIST") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000308";
        contaMovimento = "5000308";
    }
    if (nomeOrigem.contains("/") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TED") && nomeOrigem.contains("INTERNET") && nomeOrigem.contains("DOC")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FCA") && nomeOrigem.contains("FIAT") && nomeOrigem.contains("CHRYSLER") && nomeOrigem.contains("AUTOMOVEIS")) {
        conta = "5035576";
        contaMovimento = "5035576";
    }
    if (nomeOrigem.contains("S") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLORENCA") && nomeOrigem.contains("CAMINHOES") && nomeOrigem.contains("A")) {
        conta = "5001953";
        contaMovimento = "5001953";
    }
    if (nomeOrigem.contains("ADMINISTRATIVO") && nomeOrigem.contains("E") && nomeOrigem.contains("GARCIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("APOIO")) {
        conta = "5031921";
        contaMovimento = "5031921";
    }
    if (nomeOrigem.contains("JENIFER") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LIMA") && nomeOrigem.contains("LOURENCO") && nomeOrigem.contains("DE")) {
        conta = "5045167";
        contaMovimento = "5045167";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("CARLOS") && nomeOrigem.contains("LEANDRO") && nomeOrigem.contains("LUIS")) {
        conta = "5112915";
        contaMovimento = "5112915";
    }
    if (nomeOrigem.contains("DE") && nomeOrigem.contains("MOVEIS") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("NORTEPLAN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5115450";
        contaMovimento = "5115450";
    }
    if (nomeOrigem.contains("DEISEL") && nomeOrigem.contains("MECANICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LTDA") && nomeOrigem.contains("ECO")) {
        conta = "5114551";
        contaMovimento = "5114551";
    }
    if (nomeOrigem.contains("MANUTENCAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PJ") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("E")) {
        conta = "5031922";
        contaMovimento = "5031922";
    }
    if (nomeOrigem.contains("PREFEITURA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MUNICIPAL") && nomeOrigem.contains("TRES") && nomeOrigem.contains("BARRAS")) {
        conta = "1547";
        contaMovimento = "1547";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PROVERA") && nomeOrigem.contains("MECANICA") && nomeOrigem.contains("DIESEL") && nomeOrigem.contains("LTDA")) {
        conta = "5035650";
        contaMovimento = "5035650";
    }
    if (nomeOrigem.contains("MICHELE") && nomeOrigem.contains("ME") && nomeOrigem.contains("DEMARCHI") && nomeOrigem.contains("SANDRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5114274";
        contaMovimento = "5114274";
    }
    if (nomeOrigem.contains("SCALVI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("E") && nomeOrigem.contains("PECAS")) {
        conta = "543544";
        contaMovimento = "543544";
    }
    if (nomeOrigem.contains("VISCO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("E") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("BRASIL")) {
        conta = "5000787";
        contaMovimento = "5000787";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("M") && nomeOrigem.contains("P") && nomeOrigem.contains("R") && nomeOrigem.contains("SCOPARO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("VCM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOBILIARIO") && nomeOrigem.contains("CORPORATIVO") && nomeOrigem.contains("LTDA")) {
        conta = "5055238";
        contaMovimento = "5055238";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WENDT") && nomeOrigem.contains("REVENDA") && nomeOrigem.contains("DE") && nomeOrigem.contains("GLP")) {
        conta = "5052480";
        contaMovimento = "5052480";
    }
    if (nomeOrigem.contains("ADEMILTO BATISTA DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (complemento03.contains("ADTO") && nomeOrigem.contains("ADILSON TADEU COELHO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADVANCE PROCESSO LOGISTICO LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO") && nomeOrigem.contains("AGNUS LOGISTICA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("AIRTON DE LIMA SOARES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALESSANDRA VENANCIO LANA LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALEX MAURICIO DE LIMA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANTONIO CORREA DA CRUZ") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANTONIO TEIXEIRA DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("APARECIDA DE ASSIS MOURA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO") && nomeOrigem.contains("BOAS TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("CARGNIN TRANSPORTES LTDA ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COTRANSMAF COOPERATIVA DE CAMINHONEIROS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DANIEL FERREIRA DE MELO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DANIELLI DA SILVA GONCALVES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DILSON DOS SANTOS MATOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DYHONATA FELIPE DA CRUZ") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("EDSON JUNY VIDAL LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("EDUARDO ALMEIDA DOS SANTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("EDUARDO MATHEUS DE OLIVEIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDVAL FAVARETTO DE OLIVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDVAN LOPES DA SILVA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ELCIO DOMINGOS DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    return conta;
}
public String getContaMovimento2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELISEU ESTEVAO DA SILVA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FARIDE CAITANO DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FERNANDO LYRIO DE SOUZA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("GILSON DOUGLAS FIGURA LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GUILHERME APARECIDO DE OLIVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOAO ERNANDO RIBEIRO BATISTA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOAO PEDRO DOS SANTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOEL FERREIRA DE ALMEIDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JONAS LUIS LORO ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JORGE ALEXSON DE LIMA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE CELSO DE OLIVEIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE MAURICIO DE CARVALHO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE NILCO DOS REIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE OLIVIR CHARNESKI TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSE ROBERTO CORREA BECK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JULIANO RODRIGUES COLOMBO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("KLAUS E TATSCH LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LEANDRO ALVES DE MELO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LEANDRO PAULO SILVEIRA ROSA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("LIDERANCA TRANSPORTES LOG LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUIS HENRIQUE DE OLIVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUIZ RICARDO NOTTO LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUIZ SERGIO DA LUZ")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LUPEPSA TRANSPORTES DE CARGAS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MAP DEDETIZADORA LTDA ME")) {
        conta = "5031926";
        contaMovimento = "5031926";
    }
    if (nomeOrigem.contains("MARCELO BATISTA LOPES ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCIO DE OLIVEIRA FREZARIM")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MARCO ANTONIO LOPES CORREA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MICHEL JONAS DE LIMA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MIGUEL MAURICIO DOS SANTOS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MINISTERIO DA PREVIDENCIA SOCIAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1659";
        contaMovimento = "1659";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MONICA MAGALHAES DE OLIVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ODAIR SAULO KATSCKI ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("OZIEL DA SILVA TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("OZORIO CAETANO CORREA NETO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("PAULO HENRIQUE FERREIRA PINTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("PEDRO DIONISIO DE CAMARGO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTOS PELANDA ANALIPE II")) {
        conta = "5000171";
        contaMovimento = "5000171";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PREFEITURA MUNICIPAL DE CURITIBA")) {
        conta = "1547";
        contaMovimento = "1547";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("P R SCOPARO TRANSPORTES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("RAFAEL RAHN TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROALVES TRANSPORTES LTDA ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROBISON CLEY DE SOUZA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RODOLEVE TRANSPORTES RODOVIARIOS LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RONALDO PEREIRA DE LIMA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ROSEMARIE DO COUTO MACHADO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RUI SANDOVAL ALVES RAMOS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("SETCEPAR TRANSPORTES E LOGISTICA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4659";
        contaMovimento = "4659";
    }
    if (nomeOrigem.contains("SOLANGE APARECIDA VESPERO PERES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("SONIA TOLEDO REIS EVANGELISTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUZANA APARECIDA VICENTIM MADEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TATIANE DE JESUS OLIVEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TEREZINHA APARECIDA DE MORAES")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("TRANSMIRANDA TRANSPORTES RODOVIARIO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("UNIAO NACIONAL DE TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4532";
        contaMovimento = "4532";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALMIR CARDOSO DOS SANTOS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WAGNER DE LEAO VIEIRA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("TILIAKE") && nomeOrigem.contains("947457") && nomeOrigem.contains("CARGA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMARILDO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("APARECIDO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CAMPINAS") && nomeOrigem.contains("EDSON") && nomeOrigem.contains("MUNIZ")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("CAMPO") && nomeOrigem.contains("GRANDE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDISON") && nomeOrigem.contains("FREITAS")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("EDISON") && nomeOrigem.contains("GONCALVES") && nomeOrigem.contains("DE") && nomeOrigem.contains("ARAXA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("FRANCISCO") && nomeOrigem.contains("M") && nomeOrigem.contains("RAMOS") && nomeOrigem.contains("FLORIANOPOLIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("SAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JAQUES") && nomeOrigem.contains("PAULO") && nomeOrigem.contains("HINKE")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("JEAN") && nomeOrigem.contains("RAFAEL") && nomeOrigem.contains("MAZUREK") && nomeOrigem.contains("IRANI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("JOAO") && nomeOrigem.contains("/") && nomeOrigem.contains("RODRIGUES") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCOS")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("TILIAKE") && nomeOrigem.contains("AMARILDO") && nomeOrigem.contains("PINHEIRO") && nomeOrigem.contains("JOAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("JOEL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CESAR") && nomeOrigem.contains("KUROSKI") && nomeOrigem.contains("/")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("/") && nomeOrigem.contains("LUIS") && nomeOrigem.contains("JOSE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALASKI")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("JOSE") && nomeOrigem.contains("CARGA") && nomeOrigem.contains("VALASKI") && nomeOrigem.contains("LUIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("S") && nomeOrigem.contains("FERNANDO") && nomeOrigem.contains("LUIZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("PAULA") && nomeOrigem.contains("F") && nomeOrigem.contains("LUIZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ALINE DOS SANTOS VEIGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5112304";
        contaMovimento = "5112304";
    }
    if (nomeOrigem.contains("DAS") && nomeOrigem.contains("NEVES") && nomeOrigem.contains("ANGELO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BENTO")) {
        conta = "5115731";
        contaMovimento = "5115731";
    }
    if (nomeOrigem.contains("RENDA") && nomeOrigem.contains("LEGACY") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FUNDO") && nomeOrigem.contains("FIXA")) {
        conta = "547600";
        contaMovimento = "547600";
    }
    if (nomeOrigem.contains("ITAU") && nomeOrigem.contains("BANCO") && tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("NEGAT") && complemento03.contains("TAR")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (complemento03.contains("ADTO") && nomeOrigem.contains("BANCO") && tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("CARGA") && nomeOrigem.contains("ITAU")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ITAU") && complemento03.contains("TAR") && complemento03.contains("PIX") && nomeOrigem.contains("BANCO")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BANCO") && nomeOrigem.contains("ITAU") && complemento03.contains("DESCARGA") && complemento03.contains("CLIENTE")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONTABILISTA") && nomeOrigem.contains("SUPRIMENTOS") && nomeOrigem.contains("PARA") && nomeOrigem.contains("ESCRITORIO")) {
        conta = "5000158";
        contaMovimento = "5000158";
    }
    if (nomeOrigem.contains("RIBEIRO") && nomeOrigem.contains("FLORICULTURA") && nomeOrigem.contains("TRINDADE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DIEGO")) {
        conta = "5049625";
        contaMovimento = "5049625";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DIONATAN NUNES MORAES 09629419998")) {
        conta = "5115813";
        contaMovimento = "5115813";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCOS") && nomeOrigem.contains("JOAO") && nomeOrigem.contains("BELTRAO") && nomeOrigem.contains("FRANCISCO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("INOLAN AIRTON HOMIAK") && complemento03.contains("ENTREGA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5032479";
        contaMovimento = "5032479";
    }
    if (nomeOrigem.contains("P") && nomeOrigem.contains("J") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("F")) {
        conta = "5019595";
        contaMovimento = "5019595";
    }
    if (nomeOrigem.contains("A") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("L") && nomeOrigem.contains("&") && nomeOrigem.contains("MANUTENCAO")) {
        conta = "5113566";
        contaMovimento = "5113566";
    }
    if (nomeOrigem.contains("MARCELO ABREU PONCIANO 58645837668") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5035868";
        contaMovimento = "5035868";
    }
    if (nomeOrigem.contains("TRANSPORTE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MHLOG") && nomeOrigem.contains("LOGISTICA") && nomeOrigem.contains("E")) {
        conta = "8032";
        contaMovimento = "8032";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SEBASTIAO NUNES SOBRINHO 47355271920")) {
        conta = "5035454";
        contaMovimento = "5035454";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SDB COMERCIO DE ALIMENTOS LTDA")) {
        conta = "5020400";
        contaMovimento = "5020400";
    }
    if (nomeOrigem.contains("SUPER MONIARI CENTRO DE DISTRIBUICAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5570";
        contaMovimento = "5570";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VJR SOLDAS, BORRACHAS E LAVACAO")) {
        conta = "5569";
        contaMovimento = "5569";
    }
    if (nomeOrigem.contains("ADVANCE PROCESSO LOGISTICO LTDA") && tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (complemento03.contains("ADTO") && nomeOrigem.contains("AIRTON DE LIMA SOARES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AIRTON DE LIMA SOARES") && complemento03.contains("28")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("AJBORGES TRANSPORTE RODOVIARIO LTDA EPP") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("A JORDINO PRIMO TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AKALU ACESSORIOS - TRES BARRAS")) {
        conta = "5045167";
        contaMovimento = "5045167";
    }
    if (nomeOrigem.contains("ANTONIO SOCORRO DE OLIVEIRA NERES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("AVIC DISTRIBUIDOR DE ACUMULADORES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5003455";
        contaMovimento = "5003455";
    }
    if (nomeOrigem.contains("C A DE LIMA TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARLOS ALBERTO DE ARAUJO SILVA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("CLEBER RICARDO DELASARE TRANSPORTES ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DAVID WILIAN FRANCA DE GOES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DESTRO E SANTOS TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("DIMAS BENTO DOS SANTOS ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDSON DE QUADROS VARGAS ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EDUARDO LIMA MOREIRA DE JESUS")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ELIAS GEIST PIMENTEL LTDA ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("EMPRESA DE TRANSPORTES RODOJACTO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("FL LOGISTICA E TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("GABRIEL BIANCHINI DA SILVA ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("GESTRAN SOFTWARE PARA TRANSPORTES LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001151";
        contaMovimento = "5001151";
    }
    if (nomeOrigem.contains("INDUSTRIA DE BISCOITOS KLAIN LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JHONATAN DE OLIVEIRA SIMAO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOAO DE SOUZA CARDOZO NETO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOAQUIM THIBES DE CAMPOS TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("JOSINEIA DOS SANTOS DE LARA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LH TRANSPORTES RODOVIARIO LTDA ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LOPES E CORREA TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("MARCO ANTONIO PEREIRA DE SOUZA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARIA FERREIRA DA COSTA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARIA LUIZA GOUVEIA TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("M F 10 LOGISTICA LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("P K NOVAK MP TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SILVANO LUIZ DE SOUZA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SIMAO AUGUSTINHO DE OLIVEIRA JUNIOR")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TRANSECCHI TRANSPORTE DE MARILIA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TRANSJUCK TRANSPORTE E LOGISTICA LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("VITOR GOUVEA DOS SANTOS HOMEM") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("FABIO") && nomeOrigem.contains("GR ELETRICA  LTDA")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("ANDRE LUIZ BUENO DE LIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2893";
        contaMovimento = "2893";
    }
    if (nomeOrigem.contains("COMPANHIA BRASILEIRA DE SOLUCOES E SERVICOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5000003";
        contaMovimento = "5000003";
    }
    if (nomeOrigem.contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("AUGUSTO SERGIO WEIGERT DE CASTILHOS LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARLOS ALBERTO DE ARAUJO SILVA") && complemento03.contains("ADTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GAF TRANSPORTE DE CARGAS LTDA ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("J L LIBERATTI TRANSPORTES LTDA ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARCELANE E RODRIGUES TRANSP. LOG. LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MS CARGAS LOGISTICA E TRANSPORTES LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("TRANS SPENGLER CARGAS E ENCOMENDAS LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WELL LOG TRANSPORTES E DESPACHOS LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("BANCO BRADESCO S/A") && complemento03.contains("INTERNET") && complemento03.contains("TED") && complemento03.contains("DOC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("DARF") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("1708")) {
        conta = "1546";
        contaMovimento = "1546";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRADESCO") && nomeOrigem.contains("SEGUROS")) {
        conta = "3712";
        contaMovimento = "3712";
    }
    if (nomeOrigem.contains("GRF") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FGTS")) {
        conta = "1660";
        contaMovimento = "1660";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GRRF") && nomeOrigem.contains("FGTS")) {
        conta = "1660";
        contaMovimento = "1660";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SEGUROS") && nomeOrigem.contains("ICATU")) {
        conta = "5176";
        contaMovimento = "5176";
    }
    if (nomeOrigem.contains("PGTO") && nomeOrigem.contains("SALARIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1634";
        contaMovimento = "1634";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TARIFA") && nomeOrigem.contains("BANCARIA")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("PGTO") && nomeOrigem.contains("FERIAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "313";
        contaMovimento = "313";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SIND DOS TRAB MOT AJUD DE CAMINH")) {
        conta = "4659";
        contaMovimento = "4659";
    }
    if (nomeOrigem.contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("ADTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("E. J. V. TRANSPORTES LTDA - ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("ELAINE CRISTINA AFONSO DE LIMA DA SILVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("G E M TRANSPORTE DE CARGAS LTDA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RT 10 MUDANCAS E TRANSPORTES LTDA ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("VALERIO LAEMMEL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("V. PERECK & CIA. LTDA - ME") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5001957";
        contaMovimento = "5001957";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADIANTAMENTO DE DIARIAS")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EMPRESTIMO") && nomeOrigem.contains("PAULO") && nomeOrigem.contains("HENRIQUE")) {
        conta = "338";
        contaMovimento = "338";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SINUELO SUPERMERCADO E MATERIAIS DE CONSTRUCAO - LANCHE")) {
        conta = "3716";
        contaMovimento = "3716";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALCEU RUBENS VALENGA")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("J S INDUSTRIA E COMERCIO DE MOVEIS LTDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (nomeOrigem.contains("P&J COMERCIO E MANUTENCAO ESTOFADOS E CADEIRAS LTD") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5031922";
        contaMovimento = "5031922";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento03.contains("APLICACAO") && nomeOrigem.contains("ITAU") && nomeOrigem.contains("BANCO")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADIANT SALARIO VIA NET")) {
        conta = "312";
        contaMovimento = "312";
    }
    if (nomeOrigem.contains("GERAIS") && nomeOrigem.contains("MAPFRE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("S") && nomeOrigem.contains("SEGUROS")) {
        conta = "5176";
        contaMovimento = "5176";
    }
    if (nomeOrigem.contains("MINISTERIO") && nomeOrigem.contains("FAZENDA") && nomeOrigem.contains("DA") && nomeOrigem.contains("INSS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1659";
        contaMovimento = "1659";
    }
    if (nomeOrigem.contains("EMPRESTIMO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SALDO") && nomeOrigem.contains("DEVEDOR") && nomeOrigem.contains("BL:")) {
        conta = "8107";
        contaMovimento = "8107";
    }
    if (nomeOrigem.contains("PORTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("CIA") && nomeOrigem.contains("SEGURO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5176";
        contaMovimento = "5176";
    }
    if (nomePortador.contains("VIAGENS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BORRACHARIA ANTONIO PLANALTO")) {
        conta = "8383";
        contaMovimento = "8383";
    }
    if (nomeOrigem.contains("BORRACHARIA DA VITORIA") && nomePortador.contains("VIAGENS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8383";
        contaMovimento = "8383";
    }
    if (nomeOrigem.contains("E") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DEPARTAMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("AGUA")) {
        conta = "4476";
        contaMovimento = "4476";
    }
    if (nomeOrigem.contains("REVESTIMENTOS") && nomeOrigem.contains("E") && nomeOrigem.contains("PISOS") && nomeOrigem.contains("CW") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5114899";
        contaMovimento = "5114899";
    }
    if (nomeOrigem.contains("LIBERTY") && nomeOrigem.contains("A") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("S") && nomeOrigem.contains("SEGUROS")) {
        conta = "5176";
        contaMovimento = "5176";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALISSON ZANUSO DALLA CHIESA")) {
        conta = "5112298";
        contaMovimento = "5112298";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("M F J N TRANSPORTES DE CARGAS LTDA ME")) {
        conta = "8048";
        contaMovimento = "8048";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POSTOS PELANDA 21 PISTA")) {
        conta = "5111153";
        contaMovimento = "5111153";
    }
    if (complemento03.contains("TARIFA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BANCO BRADESCO S/A")) {
        conta = "4698";
        contaMovimento = "4698";
    }
    if (nomeOrigem.contains("RESTAURANTE RODA DAGUA LTDA - REFEICAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3716";
        contaMovimento = "3716";
    }
    if (nomeOrigem.contains("5952") && nomeOrigem.contains("DARF") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1580";
        contaMovimento = "1580";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CHEQUE COMPENSADO")) {
        conta = "316";
        contaMovimento = "316";
    }
    if (nomeOrigem.contains("BR") && nomePortador.contains("VIAGENS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BORRACHARIA") && nomeOrigem.contains("135")) {
        conta = "8383";
        contaMovimento = "8383";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).equals("C")) { //ROT-2024-03122965
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("C")) { //ROT-2024-03122965
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) { //ROT-2021-0311491
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).equals("C")) { //ROT-2024-03122965
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("C")) { //ROT-2024-03122965
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    return conta;
}
public String getContaMovimento3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getRegraContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'PIX ENVIADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGARME2', Complemento (06) nao contem 'PAGA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PUNTO2', Complemento (06) nao contem 'PAGO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'VALOR', Fornecedor/Cliente contem 'LIQUIDADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AME1', Complemento (04) contem 'EM BRANCO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (04) nao contem 'PAGAMENTO', Complemento (04) nao contem 'ASSINATURA', Complemento (04) nao contem 'SAQUE', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (03) nao contem 'APROVAD', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO1', Complemento (04) nao contem 'CONFIRMED', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO2', Complemento (04) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DETODOS', Complemento (03) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (04) nao contem 'COMPLETO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) {
        conta = "Quando Complemento (01) contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'REEMBOLSO', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'DINHEIRO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'VIA LOJA', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (04) nao contem 'EM BRANCO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (05) contem 'NAO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) {
        conta = "Quando Tipo Planilha contem 'PRATO', Complemento (01) contem 'PRATO', Complemento (03) nao contem 'CART', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_POLICARD', Complemento (03) contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '2', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '3', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '4', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '5', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '6', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '7', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '8', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '9', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AIQFOME1', Fornecedor/Cliente contem 'CANCELADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_STONE2', Complemento (04) contem 'CANCELAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '10', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '11', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '12', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '13', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '14', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '15', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '16', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '17', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '18', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_BMGCARD', Complemento (04) contem 'NAO', Complemento (04) contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_REDECARD3', Complemento (06) nao contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DOM1', Complemento (04) nao contem 'ENTRADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).equals("C")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) igual a 'C', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("C")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (02) igual a 'C', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    return conta;
}
public String getContaPortador(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (nomePortador.contains("BRADESCO")) {
        conta = "19";
        contaMovimento = "19";
    }
    if (nomePortador.contains("ITAU")) {
        conta = "13";
        contaMovimento = "13";
    }
    if (nomePortador.contains("VIAGENS")) {
        conta = "316";
        contaMovimento = "316";
    }
    return conta;
}
public String getContaPortador2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros2(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros3(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros4(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros5(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros6(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaDesconto(String contaDesconto, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaDesconto;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMulta(String contaMulta, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("cntaJuros");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMulta;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public boolean getTratarComoExtrato(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoExtrato = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoExtrato;
}
public boolean getTratarComoDesconto(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoDesconto = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoDesconto;
}
public boolean getTratarComoJuros(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoJuros = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoJuros;
}
public boolean getTratarLinhaIgnorar(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarIgnoraLinha = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarIgnoraLinha;
}
public String getTratarValorAlternativo(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoAlternativo  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoAlternativo;
}
public String getTratarComoDiv(String documento, String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoDiv  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoDiv;
}
public String getCodigoClassificacao(String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String documento   = objHistorico.optString("documento");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoClassificacao  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoClassificacao;
}
public String getModificaData(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoData  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoData;
}
public String getCampoFiscal(String parametro, JSONObject objHistorico) {
    String especie         = objHistorico.optString("especie");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String returnaCodigo  = "";

    return returnaCodigo.trim();
}
public int getContadorCabecalho(int contador, String line) {
    return contador;
}
public double getValorPrincipal(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorPrincipal = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return valorPrincipal;
}
public String getHistorico(String conta, String histParam, String tipoLancamento, String nomeOrigem, String documento, 
                           String nomePortador, String complemento01, String complemento02, String complemento03, 
                           String nomeArquivo, String codCentroCusto) {
    String historico = "";
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getRegraHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAPECO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CHAPECO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCIANO DE CASTILHO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LUCIANO DE CASTILHO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELCIO DOMINGOS DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELCIO DOMINGOS DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE LIPSKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JORGE LIPSKI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO TEIXEIRA DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANTONIO TEIXEIRA DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA TOBIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BORRACHARIA TOBIAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLEXLOG"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FLEXLOG, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA CONVENIENCIA 21"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PELANDA CONVENIENCIA 21, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENILSON SEBASTIAO ANTONIOLI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DENILSON SEBASTIAO ANTONIOLI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO DE DIARIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADIANTAMENTO DE DIARIAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT SALARIO VIA NET"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADIANT SALARIO VIA NET, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHEQUE COMPENSADO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CHEQUE COMPENSADO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HORIZONS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HORIZONS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARGET"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TARGET, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BERTIOGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BERTIOGA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAFELANDIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CAFELANDIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMPL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CREDITO EM CONTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CREDITO EM CONTA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRO BUENO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALEXANDRO BUENO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ENTREGAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALDEIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BALDEIO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ATACADAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIAM CAETANO CHAVE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CRISTIAM CAETANO CHAVE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESCARGA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVO ITAIM SUPERMERMERCADO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DAVO ITAIM SUPERMERMERCADO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO PRODOESTE ARAXA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTO PRODOESTE ARAXA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESGARGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESGARGA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("D N PNEUS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem D N PNEUS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SDB COMERCIO DE ALIMENTOS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SDB COMERCIO DE ALIMENTOS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ENTREGA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTACIONAMENTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESTACIONAMENTO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PERNOITE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PERNOITE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DIARIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FRETE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICO DE CHAPA LEVE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SERVICO DE CHAPA LEVE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LONA ENVELOPAMENTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LONA ENVELOPAMENTO, HISTORICO = PAGAMENTO Fornecedor/Cliente Complemento (02) Complemento (03)";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO SALITRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTO SALITRE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR SOLDAS, BORRACHAS E LAVACAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VJR SOLDAS, BORRACHAS E LAVACAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AVARIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COLETAS GALPAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COLETAS GALPAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO PECAS CARRETAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AUTO PECAS CARRETAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO POSTO INTEGRACAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AUTO POSTO INTEGRACAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ESTRELA DA SERRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BORRACHARIA ESTRELA DA SERRA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTRADAO ACESSORIOS AUTOMOTIVOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESTRADAO ACESSORIOS AUTOMOTIVOS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREIOS UNIAO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FREIOS UNIAO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA CATARINENSE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MECANICA CATARINENSE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSIMAR 26 PALLETS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSIMAR 26 PALLETS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO RECICLAGEM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCELO RECICLAGEM, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OLDEMIR ROCHA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OLDEMIR ROCHA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POLIMENTO TANQUE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POLIMENTO TANQUE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO CAMINHOS DA NEVE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTO CAMINHOS DA NEVE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTAURANTE RODA DAGUA LTDA - REFEICAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RESTAURANTE RODA DAGUA LTDA - REFEICAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNIK E CIA LANCHE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RUDNIK E CIA LANCHE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SINUELO SUPERMERCADO E MATERIAIS DE CONSTRUCAO - LANCHE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SINUELO SUPERMERCADO E MATERIAIS DE CONSTRUCAO - LANCHE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPER MONIARI CENTRO DE DISTRIBUICAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUPER MONIARI CENTRO DE DISTRIBUICAO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR BORRACHARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VJR BORRACHARIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO CARTOES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANCO BRADESCO CARTOES, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO ITAUCARD CARTOES S/A"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANCO ITAUCARD CARTOES S/A, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPANHIA BRASILEIRA DE SOLUCOES E SERVICOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMPANHIA BRASILEIRA DE SOLUCOES E SERVICOS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOPARANA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RODOPARANA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIND DOS TRAB MOT AJUD DE CAMINH"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIND DOS TRAB MOT AJUD DE CAMINH, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO RENAN BAIER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO RENAN BAIER, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO RICARDO SALIM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LEANDRO RICARDO SALIM, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUPEPSA TRANSPORTES DE CARGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LUPEPSA TRANSPORTES DE CARGAS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P K NOVAK MP TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem P K NOVAK MP TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUZANA APARECIDA VICENTIM MADEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUZANA APARECIDA VICENTIM MADEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADEMILTO BATISTA DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADEMILTO BATISTA DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADILSON IARGAS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADILSON MACHADO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADILSON TADEU COELHO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADVANCE PROCESSO LOGISTICO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AIRTON DE LIMA SOARES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AGNUS LOGISTICA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AJBORGES TRANSPORTE RODOVIARIO LTDA EPP"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AJBORGES TRANSPORTE RODOVIARIO LTDA EPP, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A JORDINO PRIMO TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem A JORDINO PRIMO TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCEU RUBENS VALENGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALCEU RUBENS VALENGA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALESSANDRA VENANCIO LANA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALESSANDRA VENANCIO LANA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE BORGES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALEXANDRE BORGES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE DE LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALEXANDRE DE LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX MAURICIO DE LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALEX MAURICIO DE LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALI TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALI TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALLESON WILLE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALLESON WILLE, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALVARO FRANCISCO REGIS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANDERSON DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAIR BEZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAMIR WALDEMAR PILATY, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAIR BEZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANDERSON ALBANO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAIR BEZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAMIR WALDEMAR PILATY, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANDERSON ALBANO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALTAMIR WALDEMAR PILATY, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANA FLAVIA DA SILVA SCOPARO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANDERSON DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON VIEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANDERSON VIEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO ALCIMIR BUENO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANTONIO ALCIMIR BUENO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALVARO FRANCISCO REGIS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AKALU ACESSORIOS - TRES BARRAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AKALU ACESSORIOS - TRES BARRAS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANGELO CARVINHO NETO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANGELO CARVINHO NETO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALISSON ZANUSO DALLA CHIESA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALISSON ZANUSO DALLA CHIESA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO CORREA DA CRUZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANTONIO CORREA DA CRUZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APARECIDA DE ASSIS MOURA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem APARECIDA DE ASSIS MOURA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANTONIO DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO SOCORRO DE OLIVEIRA NERES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANTONIO SOCORRO DE OLIVEIRA NERES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVIC DISTRIBUIDOR DE ACUMULADORES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AVIC DISTRIBUIDOR DE ACUMULADORES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO SERGIO WEIGERT DE CASTILHOS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AUGUSTO SERGIO WEIGERT DE CASTILHOS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRUNO HENRIQUE PONCHEK"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BRUNO HENRIQUE PONCHEK, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGNIN TRANSPORTES LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CARGNIN TRANSPORTES LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BOAS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO/CARGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO/CARGA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CARLOS ALBERTO DE ARAUJO SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C A DE LIMA TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem C A DE LIMA TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELSO SOUZA ALVES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CELSO SOUZA ALVES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIATRAN TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CIATRAN TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDIO CLAUDINO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLAUDIO CLAUDINO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLEBER RICARDO DELASARE TRANSPORTES ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLEBER RICARDO DELASARE TRANSPORTES ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLARO S/A"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLARO S/A, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SILVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DANIEL SILVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLENISON CANESCHI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLENISON CANESCHI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COTRANSMAF COOPERATIVA DE CAMINHONEIROS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COTRANSMAF COOPERATIVA DE CAMINHONEIROS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO ABREU PONCIANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CRISTIANO ABREU PONCIANO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL FERREIRA DE MELO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DANIEL FERREIRA DE MELO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIELLI DA SILVA GONCALVES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DANIELLI DA SILVA GONCALVES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARCI JOAO BECCHI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DARCI JOAO BECCHI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO PEDRO DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO PEDRO DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SALDANHA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DANIEL SALDANHA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESTRO E SANTOS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESTRO E SANTOS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVID WILIAN FRANCA DE GOES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DAVID WILIAN FRANCA DE GOES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON DE QUADROS VARGAS ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDSON DE QUADROS VARGAS ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIONATHAN RHUAN DRANKA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DIONATHAN RHUAN DRANKA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DYHONATA FELIPE DA CRUZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DYHONATA FELIPE DA CRUZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON ZANCHETTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDSON ZANCHETTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DILSON DOS SANTOS MATOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DILSON DOS SANTOS MATOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS BENTO DOS SANTOS ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DIMAS BENTO DOS SANTOS ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO ALMEIDA DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDUARDO ALMEIDA DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON JUNY VIDAL LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDSON JUNY VIDAL LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO MATHEUS DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDUARDO MATHEUS DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO LIMA MOREIRA DE JESUS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDUARDO LIMA MOREIRA DE JESUS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESA DE TRANSPORTES RODOJACTO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EMPRESA DE TRANSPORTES RODOJACTO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E. J. V. TRANSPORTES LTDA - ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem E. J. V. TRANSPORTES LTDA - ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELAINE CRISTINA AFONSO DE LIMA DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELAINE CRISTINA AFONSO DE LIMA DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EVALDO KUTACZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EVALDO KUTACZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELIAS GEIST PIMENTEL LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELIAS GEIST PIMENTEL LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABIANO PAGNO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FABIANO PAGNO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABLI TRANSPORTES EIRELI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FABLI TRANSPORTES EIRELI, HISTORICO = PAGAMENTO Fornecedor/Cliente DOC Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FATO TRANSPORTES EIRELI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FATO TRANSPORTES EIRELI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FARIDE CAITANO DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FARIDE CAITANO DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FELIPE MONCHALOSKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FELIPE MONCHALOSKI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLAVIO JOSE TOZO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FLAVIO JOSE TOZO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOACIR HOBMEIR RODRIGUES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOACIR HOBMEIR RODRIGUES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO LYRIO DE SOUZA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FERNANDO LYRIO DE SOUZA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FL LOGISTICA E TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FL LOGISTICA E TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("G E M TRANSPORTE DE CARGAS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem G E M TRANSPORTE DE CARGAS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABRIEL BIANCHINI DA SILVA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GABRIEL BIANCHINI DA SILVA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTRAN SOFTWARE PARA TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GESTRAN SOFTWARE PARA TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEOVANE VITORIO ALBINO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JEOVANE VITORIO ALBINO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILBERTO NEIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GILBERTO NEIS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GR ELETRICA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GR ELETRICA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELBERT VICTOR FERREIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HELBERT VICTOR FERREIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME APARECIDO DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GUILHERME APARECIDO DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA DE BISCOITOS KLAIN LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem INDUSTRIA DE BISCOITOS KLAIN LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME VICENTINI BARBOSA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GUILHERME VICENTINI BARBOSA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISAIR DIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ISAIR DIAS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J L LIBERATTI TRANSPORTES LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem J L LIBERATTI TRANSPORTES LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JADIR ELIAS FRAINER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JADIR ELIAS FRAINER, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JHONATAN DE OLIVEIRA SIMAO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JHONATAN DE OLIVEIRA SIMAO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BATISTA PROEZA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO BATISTA PROEZA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO DE SOUZA CARDOZO NETO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO DE SOUZA CARDOZO NETO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BENTO JUNIOR"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO BENTO JUNIOR, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCIELEN FERNANDES RODRIGUES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOCIELEN FERNANDES RODRIGUES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCINEI CRUZ VALTER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOCINEI CRUZ VALTER, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAQUIM THIBES DE CAMPOS TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAQUIM THIBES DE CAMPOS TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL NUNES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOEL NUNES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE ALEXSON DE LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JORGE ALEXSON DE LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL FERREIRA DE ALMEIDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOEL FERREIRA DE ALMEIDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE AMARILDO COSTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE AMARILDO COSTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ABEL GREIN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE ABEL GREIN, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURICIO DE CARVALHO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE MAURICIO DE CARVALHO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE CELSO DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE CELSO DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE DURANTE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE DURANTE, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURO PAVOSKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE MAURO PAVOSKI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE OLIVIR CHARNESKI TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE OLIVIR CHARNESKI TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE NILCO DOS REIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE NILCO DOS REIS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KLAUS E TATSCH LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem KLAUS E TATSCH LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ROBERTO CORREA BECK"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSE ROBERTO CORREA BECK, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSINEIA DOS SANTOS DE LARA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOSINEIA DOS SANTOS DE LARA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J S INDUSTRIA E COMERCIO DE MOVEIS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem J S INDUSTRIA E COMERCIO DE MOVEIS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES GAMBA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JUARES GAMBA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELANE E RODRIGUES TRANSP. LOG. LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCELANE E RODRIGUES TRANSP. LOG. LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO ALEXANDRE FELBER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCIO ALEXANDRE FELBER, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAURINDO ARLINDO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LAURINDO ARLINDO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES CAETANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JUARES CAETANO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JULIANO RODRIGUES COLOMBO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JULIANO RODRIGUES COLOMBO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAERTE COLACO PINTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LAERTE COLACO PINTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO ALVES DE MELO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LEANDRO ALVES DE MELO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO PAULO SILVEIRA ROSA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LEANDRO PAULO SILVEIRA ROSA, HISTORICO = PAGAMENTO Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LH TRANSPORTES RODOVIARIO LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LH TRANSPORTES RODOVIARIO LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGSON TRANSPORTES EIRELI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LOGSON TRANSPORTES EIRELI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIDERANCA TRANSPORTES LOG LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LIDERANCA TRANSPORTES LOG LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOPES E CORREA TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LOPES E CORREA TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOURIVAL ALVES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LOURIVAL ALVES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAP DEDETIZADORA LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MAP DEDETIZADORA LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO PEREIRA DE SOUZA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCO ANTONIO PEREIRA DE SOUZA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ RICARDO NOTTO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LUIZ RICARDO NOTTO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ SERGIO DA LUZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LUIZ SERGIO DA LUZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE COSTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCIO JOSE COSTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO LOPES CORREA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCO ANTONIO LOPES CORREA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA LUIZA GOUVEIA TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARIA LUIZA GOUVEIA TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO BATISTA LOPES ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCELO BATISTA LOPES ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE MELO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCIO JOSE MELO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAURICIO BERTOLA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MAURICIO BERTOLA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA FERREIRA DA COSTA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARIA FERREIRA DA COSTA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIO MONCHALOSKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARIO MONCHALOSKI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAYCO SCHMITZ MACCAGNAN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MAYCO SCHMITZ MACCAGNAN, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F J N TRANSPORTES DE CARGAS LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem M F J N TRANSPORTES DE CARGAS LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F 10 LOGISTICA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem M F 10 LOGISTICA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL OLIVEIRA FREZARIN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MICHEL OLIVEIRA FREZARIN, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL JONAS DE LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MICHEL JONAS DE LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MJO TRANSPORTADORA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MJO TRANSPORTADORA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOISES CUSTODIO PRIMO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MOISES CUSTODIO PRIMO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MS CARGAS LOGISTICA E TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MS CARGAS LOGISTICA E TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MURIALDO MADEIRA NUNES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MURIALDO MADEIRA NUNES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR JOSE RODYCZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ODAIR JOSE RODYCZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINISTERIO DA PREVIDENCIA SOCIAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MINISTERIO DA PREVIDENCIA SOCIAL, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONICA MAGALHAES DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MONICA MAGALHAES DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORIDES PEREIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ORIDES PEREIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUEL MAURICIO DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MIGUEL MAURICIO DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO MARCELO BUENO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PAULO MARCELO BUENO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLANDO MARCELINO SOARES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ORLANDO MARCELINO SOARES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLEMATTOS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ORLEMATTOS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO HENRIQUE FERREIRA PINTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PAULO HENRIQUE FERREIRA PINTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMAR DE ANDRADE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OSMAR DE ANDRADE, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OURO PRETO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OURO PRETO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMARI DRANKA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OSMARI DRANKA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZORIO CAETANO CORREA NETO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OZORIO CAETANO CORREA NETO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO ALVES MUNIZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PAULO ALVES MUNIZ, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZIEL DA SILVA TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OZIEL DA SILVA TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P&J COMERCIO E MANUTENCAO ESTOFADOS E CADEIRAS LTD"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem P&J COMERCIO E MANUTENCAO ESTOFADOS E CADEIRAS LTD, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDRO DIONISIO DE CAMARGO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PEDRO DIONISIO DE CAMARGO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 116"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTOS PELANDA 116, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P R SCOPARO TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem P R SCOPARO TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 21 PISTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTOS PELANDA 21 PISTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA ANALIPE II"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTOS PELANDA ANALIPE II, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RENATO TABORDA GUERRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RENATO TABORDA GUERRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREFEITURA MUNICIPAL DE CURITIBA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PREFEITURA MUNICIPAL DE CURITIBA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RICARDO TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL RAHN TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RAFAEL RAHN TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBISON CLEY DE SOUZA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROBISON CLEY DE SOUZA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICHARD ANTONIO THIESEN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RICHARD ANTONIO THIESEN, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBERTO TEIXEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROBERTO TEIXEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROALVES TRANSPORTES LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROALVES TRANSPORTES LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROGERIO VIANA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROGERIO VIANA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RONALDO PEREIRA DE LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RONALDO PEREIRA DE LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SADIR FERREIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SADIR FERREIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVANO LUIZ DE SOUZA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SILVANO LUIZ DE SOUZA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente DOC Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SETCEPAR TRANSPORTES E LOGISTICA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SETCEPAR TRANSPORTES E LOGISTICA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOLEVE TRANSPORTES RODOVIARIOS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RODOLEVE TRANSPORTES RODOVIARIOS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODRIGO SCAPPIN FERREIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RODRIGO SCAPPIN FERREIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSEMARIE DO COUTO MACHADO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROSEMARIE DO COUTO MACHADO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RT 10 MUDANCAS E TRANSPORTES LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RT 10 MUDANCAS E TRANSPORTES LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUI SANDOVAL ALVES RAMOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RUI SANDOVAL ALVES RAMOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILDONEI TELMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SILDONEI TELMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERGIO ADEMIR SCHNEIDER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SERGIO ADEMIR SCHNEIDER, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLANGE APARECIDA VESPERO PERES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SOLANGE APARECIDA VESPERO PERES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIMAO AUGUSTINHO DE OLIVEIRA JUNIOR"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIMAO AUGUSTINHO DE OLIVEIRA JUNIOR, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SONIA TOLEDO REIS EVANGELISTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SONIA TOLEDO REIS EVANGELISTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TLOG TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TLOG TRANSPORTES LTDA, HISTORICO = Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSECCHI TRANSPORTE DE MARILIA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANSECCHI TRANSPORTE DE MARILIA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSMIRANDA TRANSPORTES RODOVIARIO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANSMIRANDA TRANSPORTES RODOVIARIO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANS SPENGLER CARGAS E ENCOMENDAS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANS SPENGLER CARGAS E ENCOMENDAS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UIRANDI E SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UIRANDI E SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UZIEL DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UZIEL DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIENA ESTOFADOS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VIENA ESTOFADOS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALERIO LAEMMEL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VALERIO LAEMMEL, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("V. PERECK & CIA. LTDA - ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem V. PERECK & CIA. LTDA - ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLMIR MAGALHAES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VOLMIR MAGALHAES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WELL LOG TRANSPORTES E DESPACHOS LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem WELL LOG TRANSPORTES E DESPACHOS LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON NERIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem WILSON NERIS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANA FLAVIA DA SILVA SCOPARO LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDINEY APARECIDO VIDAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLAUDINEY APARECIDO VIDAL, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOMINGOS FRANCISCO MOLARI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DOMINGOS FRANCISCO MOLARI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAL FAVARETTO DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDVAL FAVARETTO DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAN LOPES DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDVAN LOPES DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAF TRANSPORTE DE CARGAS LTDA ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GAF TRANSPORTE DE CARGAS LTDA ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILSON DOUGLAS FIGURA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GILSON DOUGLAS FIGURA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISEU ESTEVAO DA SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELISEU ESTEVAO DA SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRZ INFORMATICA LTDA."))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GRZ INFORMATICA LTDA., HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO ERNANDO RIBEIRO BATISTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO ERNANDO RIBEIRO BATISTA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONAS LUIS LORO ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JONAS LUIS LORO ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LJP TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LJP TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS HENRIQUE DE OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LUIS HENRIQUE DE OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO DE OLIVEIRA FREZARIM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCIO DE OLIVEIRA FREZARIM, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO RODRIGO BUENO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARCIO RODRIGO BUENO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR SAULO KATSCKI ME"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ODAIR SAULO KATSCKI ME, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TATIANE DE JESUS OLIVEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TATIANE DE JESUS OLIVEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TPR TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TPR TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEREZINHA APARECIDA DE MORAES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TEREZINHA APARECIDA DE MORAES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSJUCK TRANSPORTE E LOGISTICA LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANSJUCK TRANSPORTE E LOGISTICA LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED CURITIBA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UNIMED CURITIBA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO NACIONAL DE TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UNIAO NACIONAL DE TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VITOR GOUVEA DOS SANTOS HOMEM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VITOR GOUVEA DOS SANTOS HOMEM, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VAGNER CAMARGO LUNARDI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VAGNER CAMARGO LUNARDI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDEMIRO HENNING"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VALDEMIRO HENNING, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDIR GOBERTTI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VALDIR GOBERTTI, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALMIR CARDOSO DOS SANTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VALMIR CARDOSO DOS SANTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLNEI BERTON BAREA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VOLNEI BERTON BAREA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER ANTONIO LIMA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem WAGNER ANTONIO LIMA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER DE LEAO VIEIRA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem WAGNER DE LEAO VIEIRA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUBIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CUBIS, Fornecedor/Cliente contem EQUIPAMENTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XISTO"))  historico = "HISTORICO POR REGRA = Quando Fornecedor/Cliente contem BORRACHARIA, Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem XISTO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ICATU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ICATU, Fornecedor/Cliente contem SEGUROS, HISTORICO = PAGAMENTO Fornecedor/Cliente Portador Complemento (01)";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5952"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DARF, Fornecedor/Cliente contem 5952, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("1708"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DARF, Fornecedor/Cliente contem 1708, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5856"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DARF, Fornecedor/Cliente contem 5856, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("6912"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DARF, Fornecedor/Cliente contem 6912, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIGGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LIGGA, Fornecedor/Cliente contem TELECOM, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BRADESCO, Fornecedor/Cliente contem SEGUROS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ECO, Fornecedor/Cliente contem PECAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRF"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FGTS, Fornecedor/Cliente contem GRF, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRRF"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FGTS, Fornecedor/Cliente contem GRRF, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VARGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MECANICA, Fornecedor/Cliente contem VARGAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MG, Fornecedor/Cliente contem SEFAZ, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAGAMENTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem NU, Fornecedor/Cliente contem PAGAMENTOS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPEN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POINT"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OPEN, Fornecedor/Cliente contem POINT, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MELQUIDES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADZGALLA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MELQUIDES, Fornecedor/Cliente contem MADZGALLA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PGTO, Fornecedor/Cliente contem SALARIO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVOPA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SERVOPA, Fornecedor/Cliente contem CAMINHOES, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIGMA, Fornecedor/Cliente contem SOM, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARIFA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TARIFA, Fornecedor/Cliente contem BANCARIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRUCK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRUCK, Fornecedor/Cliente contem CENTER, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETEFY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOLOGIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FRETEFY, Fornecedor/Cliente contem TECNOLOGIA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCIONE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVESTRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALCIONE, Fornecedor/Cliente contem SILVESTRE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TADEU"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DIMAS, Fornecedor/Cliente contem TADEU, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHAIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESCARGA, Fornecedor/Cliente contem PINHAIS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARGOTI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LEANDRO, Fornecedor/Cliente contem MARGOTI, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUBARAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TUBARAO, Fornecedor/Cliente contem JORGE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADAPT"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TAR, Fornecedor/Cliente contem ADAPT, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASSAI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADISTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ASSAI, Fornecedor/Cliente contem ATACADISTA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DELTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTO, Fornecedor/Cliente contem DELTA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ANTONIO PLANALTO") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BORRACHARIA ANTONIO PLANALTO, Portador contem VIAGENS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA DA VITORIA") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BORRACHARIA DA VITORIA, Portador contem VIAGENS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEITA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FEDERAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RECEITA, Fornecedor/Cliente contem FEDERAL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GNRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SEFAZ, Fornecedor/Cliente contem GNRE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VPERECK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VPERECK, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PGTO, Fornecedor/Cliente contem FERIAS, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VISCO, Fornecedor/Cliente contem BRASIL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DO, Fornecedor/Cliente contem BRASIL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADILSON TADEU COELHO, Complemento (03) contem ADTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO, Fornecedor/Cliente contem AIRTON DE LIMA SOARES, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO, Fornecedor/Cliente contem ADILSON IARGAS, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO, Fornecedor/Cliente contem ADILSON MACHADO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADVANCE PROCESSO LOGISTICO LTDA, Complemento (03) contem ADTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES") && StringUtil.removeSpecialCharsToUC(complemento03).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AIRTON DE LIMA SOARES, Complemento (03) contem 28, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AGNUS LOGISTICA LTDA, Complemento (03) contem ADTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ANA FLAVIA DA SILVA SCOPARO LTDA, Complemento (03) contem ADTO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO, Fornecedor/Cliente contem BOAS TRANSPORTES LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (03) contem ADTO, Fornecedor/Cliente contem CARLOS ALBERTO DE ARAUJO SILVA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANCO, Fornecedor/Cliente contem BRADESCO, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO S/A") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TARIFA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANCO BRADESCO S/A, Complemento (03) contem TARIFA, HISTORICO = PAGAMENTO Fornecedor/Cliente - Documento/NF - Complemento (03)";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONVENIENCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PELANDA, Fornecedor/Cliente contem CONVENIENCIA, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGCONDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERADOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LOGCONDOR, Fornecedor/Cliente contem OPERADOR, Fornecedor/Cliente contem LOGISTICO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARTAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CARGA, Fornecedor/Cliente contem CARTAO, Fornecedor/Cliente contem TRANSPORTES, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMATICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VELOE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DEBITO, Fornecedor/Cliente contem AUTOMATICO, Fornecedor/Cliente contem VELOE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GIRO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OPERACAO, Fornecedor/Cliente contem CAPITAL, Fornecedor/Cliente contem GIRO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TINFEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("05917707928"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALEX, Fornecedor/Cliente contem TINFEL, Fornecedor/Cliente contem 05917707928, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BARIGUI, Fornecedor/Cliente contem CAMINHOES, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BARIGUI, Fornecedor/Cliente contem VEICULOS, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CWB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURGOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CWB, Fornecedor/Cliente contem FURGOES, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BURBELLO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESCR, Fornecedor/Cliente contem CONTABIL, Fornecedor/Cliente contem BURBELLO, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FF, Fornecedor/Cliente contem INDUSTRIAL, Fornecedor/Cliente contem EIRELI, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAPSKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GAPSKI, Fornecedor/Cliente contem CIA, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODONTOPREV") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ODONTOPREV, Fornecedor/Cliente contem S, Fornecedor/Cliente contem A, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GGNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOMUNICACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GGNET, Fornecedor/Cliente contem TELECOMUNICACOES, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROMAQ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEDACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HIDROMAQ, Fornecedor/Cliente contem VEDACOES, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MILI, Fornecedor/Cliente contem S, Fornecedor/Cliente contem A, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARTICIPACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PELANDA, Fornecedor/Cliente contem PARTICIPACOES, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RETIFICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTOCAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RETIFICA, Fornecedor/Cliente contem MOTOCAR, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PR, Fornecedor/Cliente contem /, Fornecedor/Cliente contem SEFAZ, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIGMA, Fornecedor/Cliente contem RODAS, Fornecedor/Cliente contem C, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOMPRECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANSPORTADORA, Fornecedor/Cliente contem BOMPRECO, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SOL, Fornecedor/Cliente contem EMBALAGENS, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UMBARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem POSTO, Fornecedor/Cliente contem UMBARA, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARATT"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CRISTIANO, Fornecedor/Cliente contem JOSE, Fornecedor/Cliente contem BARATT, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABARD"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARLOS, Fornecedor/Cliente contem RICARDO, Fornecedor/Cliente contem GABARD, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABILIDADE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UNICA, Fornecedor/Cliente contem CONTABILIDADE, Fornecedor/Cliente contem TRANSPORTE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZINHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAVACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ZINHO, Fornecedor/Cliente contem LAVACAO, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTOBENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PORTOBENS, Fornecedor/Cliente contem ADMINISTRADORA, Fornecedor/Cliente contem CONSORC, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SEFAZ, Fornecedor/Cliente contem /, Fornecedor/Cliente contem SC, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONIARI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("10"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MONIARI, Fornecedor/Cliente contem SUPERMERCADOS, Fornecedor/Cliente contem 10, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUMULADORES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TUDOR, Fornecedor/Cliente contem ACUMULADORES, Fornecedor/Cliente contem EIRELI, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAJAI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMPL, Fornecedor/Cliente contem ., Fornecedor/Cliente contem ITAJAI, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORIPA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMPL, Fornecedor/Cliente contem ., Fornecedor/Cliente contem FLORIPA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADIANT, Fornecedor/Cliente contem ., Fornecedor/Cliente contem SALARIAL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESTIMO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HENRIQUE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EMPRESTIMO, Fornecedor/Cliente contem PAULO, Fornecedor/Cliente contem HENRIQUE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACINI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INFORMATICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FACINI, Fornecedor/Cliente contem INFORMATICA, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NICHELE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JEAN, Fornecedor/Cliente contem LUCAS, Fornecedor/Cliente contem NICHELE, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUSTAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COBRANCA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TAR, Fornecedor/Cliente contem CUSTAS, Fornecedor/Cliente contem COBRANCA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MP, Fornecedor/Cliente contem SERVICE, Fornecedor/Cliente contem LTDA, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESCARA, Fornecedor/Cliente contem DE, Fornecedor/Cliente contem PAPEL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DESCARGA, Fornecedor/Cliente contem DE, Fornecedor/Cliente contem PAPEL, HISTORICO = PAGAMENTO Fornecedor/Cliente";
    

    return historico.replaceAll("  "," ").trim();
}
public int getParcelaBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public int getTotalParcelas(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public String getMesAnoBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String mesAnoBase = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return mesAnoBase;
}
public double getTaxaTarifa(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorTaxaTarifa = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("VISTA")) {
        valorTaxaTarifa = 0.0319;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("PARC")) {
        valorTaxaTarifa = 0.0379;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_VRALIMENTACAO1")) {
        valorTaxaTarifa = 0.063;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SENFF")) {
        valorTaxaTarifa = 0.04;
    }
    return valorTaxaTarifa;
}
public String getHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAPECO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCIANO DE CASTILHO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELCIO DOMINGOS DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:10";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE LIPSKI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:1006";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO TEIXEIRA DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:60";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA TOBIAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLEXLOG"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA CONVENIENCIA 21"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:105";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENILSON SEBASTIAO ANTONIOLI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO DE DIARIAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT SALARIO VIA NET"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHEQUE COMPENSADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HORIZONS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARGET"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BERTIOGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAFELANDIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CREDITO EM CONTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRO BUENO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALDEIO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIAM CAETANO CHAVE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVO ITAIM SUPERMERMERCADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO PRODOESTE ARAXA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESGARGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("D N PNEUS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SDB COMERCIO DE ALIMENTOS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTACIONAMENTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PERNOITE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIARIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICO DE CHAPA LEVE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LONA ENVELOPAMENTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + complemento02 + " " + "" + " " + complemento03 + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO SALITRE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR SOLDAS, BORRACHAS E LAVACAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVARIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COLETAS GALPAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO PECAS CARRETAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO POSTO INTEGRACAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ESTRELA DA SERRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTRADAO ACESSORIOS AUTOMOTIVOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREIOS UNIAO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA CATARINENSE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSIMAR 26 PALLETS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO RECICLAGEM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OLDEMIR ROCHA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POLIMENTO TANQUE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO CAMINHOS DA NEVE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTAURANTE RODA DAGUA LTDA - REFEICAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNIK E CIA LANCHE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SINUELO SUPERMERCADO E MATERIAIS DE CONSTRUCAO - LANCHE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPER MONIARI CENTRO DE DISTRIBUICAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR BORRACHARIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO CARTOES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO ITAUCARD CARTOES S/A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPANHIA BRASILEIRA DE SOLUCOES E SERVICOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOPARANA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIND DOS TRAB MOT AJUD DE CAMINH"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO RENAN BAIER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:7";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO RICARDO SALIM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:305";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUPEPSA TRANSPORTES DE CARGAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:7";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P K NOVAK MP TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUZANA APARECIDA VICENTIM MADEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADEMILTO BATISTA DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AJBORGES TRANSPORTE RODOVIARIO LTDA EPP"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A JORDINO PRIMO TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCEU RUBENS VALENGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALESSANDRA VENANCIO LANA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE BORGES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE DE LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX MAURICIO DE LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALI TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALLESON WILLE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON VIEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO ALCIMIR BUENO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AKALU ACESSORIOS - TRES BARRAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANGELO CARVINHO NETO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALISSON ZANUSO DALLA CHIESA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO CORREA DA CRUZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APARECIDA DE ASSIS MOURA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO SOCORRO DE OLIVEIRA NERES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVIC DISTRIBUIDOR DE ACUMULADORES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO SERGIO WEIGERT DE CASTILHOS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRUNO HENRIQUE PONCHEK"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGNIN TRANSPORTES LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO/CARGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C A DE LIMA TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELSO SOUZA ALVES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIATRAN TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDIO CLAUDINO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLEBER RICARDO DELASARE TRANSPORTES ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLARO S/A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SILVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLENISON CANESCHI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COTRANSMAF COOPERATIVA DE CAMINHONEIROS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO ABREU PONCIANO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL FERREIRA DE MELO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIELLI DA SILVA GONCALVES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARCI JOAO BECCHI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO PEDRO DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SALDANHA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESTRO E SANTOS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVID WILIAN FRANCA DE GOES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON DE QUADROS VARGAS ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIONATHAN RHUAN DRANKA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DYHONATA FELIPE DA CRUZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON ZANCHETTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DILSON DOS SANTOS MATOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS BENTO DOS SANTOS ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO ALMEIDA DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON JUNY VIDAL LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO MATHEUS DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO LIMA MOREIRA DE JESUS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESA DE TRANSPORTES RODOJACTO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E. J. V. TRANSPORTES LTDA - ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELAINE CRISTINA AFONSO DE LIMA DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EVALDO KUTACZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELIAS GEIST PIMENTEL LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABIANO PAGNO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABLI TRANSPORTES EIRELI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "DOC" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FATO TRANSPORTES EIRELI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FARIDE CAITANO DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FELIPE MONCHALOSKI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLAVIO JOSE TOZO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOACIR HOBMEIR RODRIGUES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO LYRIO DE SOUZA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FL LOGISTICA E TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("G E M TRANSPORTE DE CARGAS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABRIEL BIANCHINI DA SILVA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTRAN SOFTWARE PARA TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEOVANE VITORIO ALBINO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILBERTO NEIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GR ELETRICA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELBERT VICTOR FERREIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME APARECIDO DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA DE BISCOITOS KLAIN LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME VICENTINI BARBOSA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISAIR DIAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J L LIBERATTI TRANSPORTES LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JADIR ELIAS FRAINER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JHONATAN DE OLIVEIRA SIMAO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BATISTA PROEZA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO DE SOUZA CARDOZO NETO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BENTO JUNIOR"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCIELEN FERNANDES RODRIGUES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCINEI CRUZ VALTER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAQUIM THIBES DE CAMPOS TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL NUNES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE ALEXSON DE LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL FERREIRA DE ALMEIDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE AMARILDO COSTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ABEL GREIN"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURICIO DE CARVALHO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE CELSO DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE DURANTE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURO PAVOSKI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE OLIVIR CHARNESKI TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE NILCO DOS REIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KLAUS E TATSCH LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ROBERTO CORREA BECK"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSINEIA DOS SANTOS DE LARA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J S INDUSTRIA E COMERCIO DE MOVEIS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES GAMBA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELANE E RODRIGUES TRANSP. LOG. LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO ALEXANDRE FELBER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAURINDO ARLINDO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES CAETANO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JULIANO RODRIGUES COLOMBO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAERTE COLACO PINTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO ALVES DE MELO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO PAULO SILVEIRA ROSA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LH TRANSPORTES RODOVIARIO LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGSON TRANSPORTES EIRELI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIDERANCA TRANSPORTES LOG LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOPES E CORREA TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOURIVAL ALVES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAP DEDETIZADORA LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO PEREIRA DE SOUZA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ RICARDO NOTTO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ SERGIO DA LUZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE COSTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO LOPES CORREA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA LUIZA GOUVEIA TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO BATISTA LOPES ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE MELO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAURICIO BERTOLA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA FERREIRA DA COSTA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIO MONCHALOSKI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAYCO SCHMITZ MACCAGNAN"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F J N TRANSPORTES DE CARGAS LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F 10 LOGISTICA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL OLIVEIRA FREZARIN"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL JONAS DE LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MJO TRANSPORTADORA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOISES CUSTODIO PRIMO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MS CARGAS LOGISTICA E TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MURIALDO MADEIRA NUNES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR JOSE RODYCZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINISTERIO DA PREVIDENCIA SOCIAL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONICA MAGALHAES DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORIDES PEREIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUEL MAURICIO DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO MARCELO BUENO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLANDO MARCELINO SOARES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLEMATTOS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO HENRIQUE FERREIRA PINTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMAR DE ANDRADE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OURO PRETO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMARI DRANKA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZORIO CAETANO CORREA NETO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO ALVES MUNIZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZIEL DA SILVA TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P&J COMERCIO E MANUTENCAO ESTOFADOS E CADEIRAS LTD"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDRO DIONISIO DE CAMARGO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 116"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P R SCOPARO TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 21 PISTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA ANALIPE II"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RENATO TABORDA GUERRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREFEITURA MUNICIPAL DE CURITIBA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL RAHN TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBISON CLEY DE SOUZA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICHARD ANTONIO THIESEN"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBERTO TEIXEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROALVES TRANSPORTES LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROGERIO VIANA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RONALDO PEREIRA DE LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SADIR FERREIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVANO LUIZ DE SOUZA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "DOC" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SETCEPAR TRANSPORTES E LOGISTICA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOLEVE TRANSPORTES RODOVIARIOS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODRIGO SCAPPIN FERREIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSEMARIE DO COUTO MACHADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RT 10 MUDANCAS E TRANSPORTES LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUI SANDOVAL ALVES RAMOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILDONEI TELMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERGIO ADEMIR SCHNEIDER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLANGE APARECIDA VESPERO PERES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIMAO AUGUSTINHO DE OLIVEIRA JUNIOR"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SONIA TOLEDO REIS EVANGELISTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TLOG TRANSPORTES LTDA"))  historico = "" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSECCHI TRANSPORTE DE MARILIA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSMIRANDA TRANSPORTES RODOVIARIO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANS SPENGLER CARGAS E ENCOMENDAS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UIRANDI E SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UZIEL DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIENA ESTOFADOS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALERIO LAEMMEL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("V. PERECK & CIA. LTDA - ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLMIR MAGALHAES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WELL LOG TRANSPORTES E DESPACHOS LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON NERIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDINEY APARECIDO VIDAL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOMINGOS FRANCISCO MOLARI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAL FAVARETTO DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAN LOPES DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAF TRANSPORTE DE CARGAS LTDA ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILSON DOUGLAS FIGURA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISEU ESTEVAO DA SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRZ INFORMATICA LTDA."))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO ERNANDO RIBEIRO BATISTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONAS LUIS LORO ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LJP TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS HENRIQUE DE OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO DE OLIVEIRA FREZARIM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO RODRIGO BUENO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR SAULO KATSCKI ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TATIANE DE JESUS OLIVEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TPR TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEREZINHA APARECIDA DE MORAES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSJUCK TRANSPORTE E LOGISTICA LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED CURITIBA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO NACIONAL DE TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VITOR GOUVEA DOS SANTOS HOMEM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VAGNER CAMARGO LUNARDI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDEMIRO HENNING"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDIR GOBERTTI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALMIR CARDOSO DOS SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLNEI BERTON BAREA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER ANTONIO LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER DE LEAO VIEIRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUBIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XISTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:454";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ICATU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomePortador + " " + "" + " " + complemento01 + " " + ""  + " " + "" + "  CodigoHistorico:389";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5952"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "  CodigoHistorico:0";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("1708"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5856"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("6912"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIGGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRF"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRRF"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VARGAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAGAMENTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPEN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POINT"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MELQUIDES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADZGALLA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVOPA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARIFA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCARIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRUCK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTER"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETEFY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOLOGIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCIONE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVESTRE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TADEU"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHAIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARGOTI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUBARAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADAPT"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASSAI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADISTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DELTA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ANTONIO PLANALTO") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA DA VITORIA") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEITA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FEDERAL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GNRE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VPERECK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERIAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES") && StringUtil.removeSpecialCharsToUC(complemento03).contains("28"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO S/A") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TARIFA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + "-" + " " + complemento03 + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONVENIENCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + documento + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGCONDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERADOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARTAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMATICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VELOE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GIRO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TINFEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("05917707928"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CWB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURGOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BURBELLO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAPSKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODONTOPREV") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GGNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOMUNICACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROMAQ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEDACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARTICIPACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RETIFICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTOCAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOMPRECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UMBARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARATT"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABARD"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABILIDADE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZINHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAVACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTOBENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORC"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SC"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONIARI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("10"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUMULADORES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAJAI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORIPA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIAL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESTIMO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HENRIQUE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACINI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INFORMATICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NICHELE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUSTAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COBRANCA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TROCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PNEUS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ERVINO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIELINSK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACEBOOK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ONL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIDER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JACOMAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("L"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZANUZO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDICIONADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO SALITRE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995993.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR SOLDAS, BORRACHAS E LAVACAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996068.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARMIGIANI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997546.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO CARTOES"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997657.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO ITAUCARD CARTOES S/A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997662.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CORITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOOT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLUB"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997787.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NURNBERG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997801.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CW") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PISOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REVESTIMENTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997836.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIST") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNET"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997908.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORENCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997951.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIAT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHRYSLER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOVEIS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997944.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIBERTY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORTEPLAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998107.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998095.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEITA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FEDERAL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998117.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GNRE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998122.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("L"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998677.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998687.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCOPARO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998715.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COLETAS GALPAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995845.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA TOBIAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995831.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ANTONIO PLANALTO") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995785.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA DA VITORIA") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995791.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA ESTRELA DA SERRA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995824.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPARTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGUA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995855.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995866.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTRADAO ACESSORIOS AUTOMOTIVOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995883.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ERVINO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIELINSK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995879.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLEXLOG"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995897.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREIOS UNIAO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LANCHONETE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("16") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995915.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA CATARINENSE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995957.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LONA ENVELOPAMENTO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995932.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BONATTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTRICAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995938.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO RECICLAGEM"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995946.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO CAMINHOS DA NEVE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995986.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TITANFOZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACINI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INFORMATICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892163.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZANUZO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDICIONADO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1999567.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVARIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995748.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WENDT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REVENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GLP"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1999595.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO DE DIARIAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885785.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT SALARIO VIA NET"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885793.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARTAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885878.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALBERT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("O") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOLETTA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESPACHANTE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887504.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOTOLO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887735.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887804.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARIGUI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887817.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARRETAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887865.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAVICHIOLO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TORTATO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887878.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRACCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887943.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CWB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURGOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOVIAR"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887972.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CWB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURGOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888173.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETEBRAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888258.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HAGAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888254.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUSTICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888262.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAPSKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888277.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODONTOPREV") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888364.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ICATU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888308.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPRESSORAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888300.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROMAQ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEDACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888304.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPERMIX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAT"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888312.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIBANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOLDING") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888320.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACESSORIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888327.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAGAMENTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888363.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPEN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POINT"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888384.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARGET"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889917.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UMBARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889938.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NEWTON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOM"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889931.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARATT"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889971.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRUCK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTER"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890003.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABARD"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890044.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABILIDADE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890087.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNTOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NACIONAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890098.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VECODIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890108.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETEFY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOLOGIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZINHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAVACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890123.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VESCOVI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890113.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BERTIOGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892055.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAJAI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892089.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIAL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1891996.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDREI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HARTKOPF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("12177686962"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892015.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARTINS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAMOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NETO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892171.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREZARIN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPOSITOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892182.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NICHELE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892195.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARGOTI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892523.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIAM CAETANO CHAVE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901526.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONVENIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997687.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOTIVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997727.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GARCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APOIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRATIVO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997977.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JENIFER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOURENCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIMA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997989.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEISEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998156.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACEBOOK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ONL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998175.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROVERA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIESEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998232.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREFEITURA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MUNICIPAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998222.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANDRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHELE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEMARCHI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998255.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCALVI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998261.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOPARANA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998240.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIDER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998271.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIND DOS TRAB MOT AJUD DE CAMINH"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998288.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JACOMAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998301.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SETCEPAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SINDICATO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889868.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHASSIPAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALINHAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887887.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BURBELLO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888216.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOVIARIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIREL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888229.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISLUCNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888314.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEZAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KARVAT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888332.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERGIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890069.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAVACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CCJ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892042.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VPERECK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1999534.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("1708"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885801.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5856"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885807.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("5952"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885819.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("6912"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1885841.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHEQUE COMPENSADO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887409.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIGGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOM"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887431.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CGMP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("-") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARAR"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887438.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMATICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VELOE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887451.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GASTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARTAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CREDITO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887474.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GIRO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887487.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PNEUS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887725.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TINFEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("05917707928"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887526.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("W") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887770.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887781.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREVIDENCIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887859.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NEK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OFICINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887869.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOLAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887930.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888181.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888238.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRF"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888241.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888344.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888360.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MELQUIDES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADZGALLA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889754.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUBIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889757.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARTICIPACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889787.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONVENIENCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889778.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889796.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889791.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RETIFICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTOCAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889827.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRUCK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889837.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889822.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVOPA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889860.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889872.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889896.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TARIFA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCARIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889901.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOMPRECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889954.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRIFORTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONCRETO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892069.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAFELANDIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892074.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892093.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORIPA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892083.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPARTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892130.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TADEU"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892098.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESTIMO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HENRIQUE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892142.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESTIMO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVEDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BL:"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892154.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LENILDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VATRIM"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892540.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892556.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MVX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892602.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOBENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892654.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRETARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARANA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892623.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901534.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVO ITAIM SUPERMERMERCADO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901544.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESGARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901547.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADEMILTO BATISTA DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048317.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048371.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048453.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048337.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON IARGAS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048346.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048355.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON TADEU COELHO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048380.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + nomeOrigem + "";  //id -> 2048405.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVANCE PROCESSO LOGISTICO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048397.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES") && StringUtil.removeSpecialCharsToUC(complemento03).contains("28"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048464.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AIRTON DE LIMA SOARES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048472.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048422.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGNUS LOGISTICA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048440.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AJBORGES TRANSPORTE RODOVIARIO LTDA EPP"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048493.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A JORDINO PRIMO TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048505.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCEU RUBENS VALENGA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048541.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALESSANDRA VENANCIO LANA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048609.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE BORGES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048641.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE DE LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048732.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEX MAURICIO DE LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048743.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALI TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048770.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALLESON WILLE"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048851.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048888.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048829.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048835.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048863.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048954.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048878.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAIR BEZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048894.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048899.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON ALBANO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048938.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTAMIR WALDEMAR PILATY"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048962.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048975.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048984.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON VIEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048991.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO ALCIMIR BUENO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049108.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARO FRANCISCO REGIS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049024.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APARECIDA DE ASSIS MOURA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049209.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049246.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049178.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO TEIXEIRA DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049200.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO SOCORRO DE OLIVEIRA NERES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049189.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVIC DISTRIBUIDOR DE ACUMULADORES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049233.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO SERGIO WEIGERT DE CASTILHOS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049221.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELSO SOUZA ALVES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049375.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIATRAN TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049433.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDIO CLAUDINO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049466.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLEBER RICARDO DELASARE TRANSPORTES ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049480.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESTRO E SANTOS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049597.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAVID WILIAN FRANCA DE GOES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049569.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON DE QUADROS VARGAS ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049662.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENILSON SEBASTIAO ANTONIOLI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049590.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIONATHAN RHUAN DRANKA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049625.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DYHONATA FELIPE DA CRUZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049645.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON ZANCHETTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049671.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DILSON DOS SANTOS MATOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049605.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIMAS BENTO DOS SANTOS ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049614.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO ALMEIDA DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049691.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON JUNY VIDAL LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049667.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO MATHEUS DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049705.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDUARDO LIMA MOREIRA DE JESUS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049697.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABLI TRANSPORTES EIRELI"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2049901.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FATO TRANSPORTES EIRELI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049919.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FARIDE CAITANO DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049910.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FELIPE MONCHALOSKI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049934.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLAVIO JOSE TOZO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049957.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOACIR HOBMEIR RODRIGUES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050138.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO LYRIO DE SOUZA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049947.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FL LOGISTICA E TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049962.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("G E M TRANSPORTE DE CARGAS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049982.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GABRIEL BIANCHINI DA SILVA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049971.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTRAN SOFTWARE PARA TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049988.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEOVANE VITORIO ALBINO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050111.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILBERTO NEIS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050003.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GR ELETRICA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050039.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELBERT VICTOR FERREIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050095.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME APARECIDO DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA DE BISCOITOS KLAIN LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050099.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHERME VICENTINI BARBOSA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050085.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISAIR DIAS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050104.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J L LIBERATTI TRANSPORTES LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050132.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JADIR ELIAS FRAINER"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050118.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JHONATAN DE OLIVEIRA SIMAO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050122.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO RENAN BAIER"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050169.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BATISTA PROEZA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050154.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO DE SOUZA CARDOZO NETO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050163.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO BENTO JUNIOR"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050160.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCIELEN FERNANDES RODRIGUES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050203.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOCINEI CRUZ VALTER"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050197.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAQUIM THIBES DE CAMPOS TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050186.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL NUNES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050215.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE ALEXSON DE LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050235.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL FERREIRA DE ALMEIDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050212.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE AMARILDO COSTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050254.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE LIPSKI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050239.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ABEL GREIN"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050249.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURICIO DE CARVALHO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050280.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE CELSO DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050262.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892639.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARTINS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892662.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUSTAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COBRANCA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892680.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892671.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUBARAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892688.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892686.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTOMEC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888357.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888347.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POINTER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIAL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889806.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMBUSTIVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889819.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOPARANA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROD") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889846.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SC"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889854.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TATUQ"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889947.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRO BUENO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901491.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901495.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901499.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901521.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SDB COMERCIO DE ALIMENTOS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901647.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901584.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTACIONAMENTO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901614.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("H") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("F") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRESTADORA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901641.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PERNOITE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901645.00
    if (StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XISTO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887838.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890027.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLARO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887417.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOUZA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOUSA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887961.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPECAUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEIC"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888201.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FGTS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRRF"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888249.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GGNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TELECOMUNICACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888293.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JFC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888323.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEDETIZADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EPP"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888334.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIESEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888352.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VARGAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888356.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONIARI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("10"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("-") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOCIEDADE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890090.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890106.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAPECO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KARINE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELAINE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WENDT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01050837983"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892512.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONATAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELENO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DRESCH") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892497.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901615.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MDX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATERIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUCAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901648.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICO DE CHAPA LEVE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901649.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AKALU ACESSORIOS - TRES BARRAS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049051.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANGELO CARVINHO NETO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049078.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALISSON ZANUSO DALLA CHIESA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO CORREA DA CRUZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049120.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRUNO HENRIQUE PONCHEK"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049327.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGNIN TRANSPORTES LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049339.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049349.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOAS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049321.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO/CARGA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049419.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS ALBERTO DE ARAUJO SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049360.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C A DE LIMA TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049333.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLARO S/A"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049451.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SILVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049540.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLENISON CANESCHI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049490.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COTRANSMAF COOPERATIVA DE CAMINHONEIROS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049499.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRISTIANO ABREU PONCIANO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049512.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL FERREIRA DE MELO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049527.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIELLI DA SILVA GONCALVES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049551.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARCI JOAO BECCHI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049559.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANIEL SALDANHA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049532.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESA DE TRANSPORTES RODOJACTO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049891.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E. J. V. TRANSPORTES LTDA - ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049840.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELCIO DOMINGOS DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049860.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELAINE CRISTINA AFONSO DE LIMA DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049851.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EVALDO KUTACZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049873.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELIAS GEIST PIMENTEL LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049866.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABIANO PAGNO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049883.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE ROBERTO CORREA BECK"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050311.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSINEIA DOS SANTOS DE LARA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050316.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J S INDUSTRIA E COMERCIO DE MOVEIS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050333.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE DURANTE"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050267.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE MAURO PAVOSKI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050277.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE OLIVIR CHARNESKI TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050293.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE NILCO DOS REIS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050289.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KLAUS E TATSCH LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050341.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE COSTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050520.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO LOPES CORREA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050537.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA LUIZA GOUVEIA TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050556.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO BATISTA LOPES ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050498.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO JOSE MELO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050524.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAURICIO BERTOLA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050561.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA FERREIRA DA COSTA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050545.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZIEL DA SILVA TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P&J COMERCIO E MANUTENCAO ESTOFADOS E CADEIRAS LTD"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050908.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDRO DIONISIO DE CAMARGO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050862.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P K NOVAK MP TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050871.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA CONVENIENCIA 21"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050892.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 116"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050922.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P R SCOPARO TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050963.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA 21 PISTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050930.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS PELANDA ANALIPE II"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050944.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RENATO TABORDA GUERRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050973.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREFEITURA MUNICIPAL DE CURITIBA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050947.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICARDO TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050979.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL RAHN TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050969.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBISON CLEY DE SOUZA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051009.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RICHARD ANTONIO THIESEN"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050997.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBERTO TEIXEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051006.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROALVES TRANSPORTES LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051002.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROGERIO VIANA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051033.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RONALDO PEREIRA DE LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051037.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SADIR FERREIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051068.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVANO LUIZ DE SOUZA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2051095.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SETCEPAR TRANSPORTES E LOGISTICA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051110.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOLEVE TRANSPORTES RODOVIARIOS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051022.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODRIGO SCAPPIN FERREIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051030.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSEMARIE DO COUTO MACHADO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051055.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RT 10 MUDANCAS E TRANSPORTES LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051056.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUI SANDOVAL ALVES RAMOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILDONEI TELMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051089.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERGIO ADEMIR SCHNEIDER"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051083.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLANGE APARECIDA VESPERO PERES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051142.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIMAO AUGUSTINHO DE OLIVEIRA JUNIOR"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051139.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUZANA APARECIDA VICENTIM MADEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051162.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SONIA TOLEDO REIS EVANGELISTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051150.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TLOG TRANSPORTES LTDA"))    historico = "" + nomeOrigem + " -" + documento + "";  //id -> 2051196.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSECCHI TRANSPORTE DE MARILIA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051217.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSMIRANDA TRANSPORTES RODOVIARIO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051227.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANS SPENGLER CARGAS E ENCOMENDAS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051235.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UIRANDI E SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051254.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UZIEL DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051261.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAZUREK"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097232.00

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra4(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALASKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097288.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARAXA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ERALDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIANNA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097043.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOTUCATU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDISON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREITAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097049.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARAPONGAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMARILDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TILIAKE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097038.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDISON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GONCALVES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARAXA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097091.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMARILDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TILIAKE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("947457"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097028.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMPINAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APARECIDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MUNIZ"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097075.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTEIRO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097083.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMPO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANDE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDISON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREITAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAMOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORIANOPOLIS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097099.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAQUES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HINKE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097108.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CESAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KUROSKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097254.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GOIANIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EVERSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIBEIRO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097149.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAQUES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HINKE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHAIS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097204.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAQUES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HINKE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOTUCATU"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097210.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GR ELETRICA  LTDA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("FABIO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097192.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JEAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAZUREK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IRANI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097219.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("F") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097341.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODRIGUES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097237.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALASKI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097322.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHEIRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMARILDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TILIAKE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097246.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COZINHAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUENO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997828.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHAIS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892103.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO PEDRO DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050176.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F J N TRANSPORTES DE CARGAS LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050580.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUNHER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097271.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMARILDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TILIAKE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097307.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097375.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JORGE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CUNHER"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097392.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLNEI BERTON BAREA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051385.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER ANTONIO LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051389.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WAGNER DE LEAO VIEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051393.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO S/A") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TARIFA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + " -" + complemento03 + "";  //id -> 2051428.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO S/A") && StringUtil.removeSpecialCharsToUC(complemento03).contains("DOC") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TED") && StringUtil.removeSpecialCharsToUC(complemento03).contains("INTERNET"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + " -" + complemento03 + "";  //id -> 2051434.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2097332.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALINE DOS SANTOS VEIGA"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2097885.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TAR") && StringUtil.removeSpecialCharsToUC(complemento03).contains("NEGAT"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2098252.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDRE LUIZ BUENO DE LIRA"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098170.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANGELO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NEVES"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098191.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ABSOLUTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VERTEXMULTIMERCADO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098222.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("COBRANCA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2098263.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEGACY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIXA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098242.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("APLICACAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2098354.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TAR") && StringUtil.removeSpecialCharsToUC(complemento03).contains("PIX"))    historico = "PAGAMENTO " + nomeOrigem + " -" + complemento03 + "";  //id -> 2098337.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ADTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("CARGA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2098315.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(complemento03).contains("DESCARGA") && StringUtil.removeSpecialCharsToUC(complemento03).contains("CLIENTE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2098347.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTABILISTA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPRIMENTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCRITORIO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098379.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIEGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIBEIRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRINDADE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORICULTURA"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098534.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NELSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098590.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIONATAN NUNES MORAES 09629419998"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098559.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELTRAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098578.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES GAMBA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050321.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELANE E RODRIGUES TRANSP. LOG. LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050484.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO ALEXANDRE FELBER"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050510.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAURINDO ARLINDO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050348.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUARES CAETANO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050337.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JULIANO RODRIGUES COLOMBO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050340.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO RICARDO SALIM"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050361.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAERTE COLACO PINTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050345.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO ALVES DE MELO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050354.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO PAULO SILVEIRA ROSA"))    historico = "PAGAMENTO " + nomeOrigem + " " + documento + "";  //id -> 2050360.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LH TRANSPORTES RODOVIARIO LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050372.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGSON TRANSPORTES EIRELI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050389.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIDERANCA TRANSPORTES LOG LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050376.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOPES E CORREA TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050413.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOURIVAL ALVES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050415.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCIANO DE CASTILHO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050419.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAP DEDETIZADORA LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050468.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCO ANTONIO PEREIRA DE SOUZA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050542.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ RICARDO NOTTO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050445.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ SERGIO DA LUZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050452.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIO MONCHALOSKI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050559.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAYCO SCHMITZ MACCAGNAN"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050566.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M F 10 LOGISTICA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050577.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL OLIVEIRA FREZARIN"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050586.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHEL JONAS DE LIMA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050584.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MJO TRANSPORTADORA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050699.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOISES CUSTODIO PRIMO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050702.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MS CARGAS LOGISTICA E TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050731.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MURIALDO MADEIRA NUNES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050735.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINISTERIO DA PREVIDENCIA SOCIAL"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050710.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONICA MAGALHAES DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050726.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORIDES PEREIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050754.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUEL MAURICIO DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050695.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO MARCELO BUENO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050843.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLANDO MARCELINO SOARES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORLEMATTOS TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050766.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO HENRIQUE FERREIRA PINTO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050822.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMAR DE ANDRADE"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050779.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OURO PRETO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050785.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OSMARI DRANKA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050782.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OZORIO CAETANO CORREA NETO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050813.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO ALVES MUNIZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050818.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIENA ESTOFADOS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051353.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALERIO LAEMMEL"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051332.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("V. PERECK & CIA. LTDA - ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051371.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLMIR MAGALHAES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051363.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WELL LOG TRANSPORTES E DESPACHOS LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051395.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON NERIS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051407.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051421.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPANHIA BRASILEIRA DE SOLUCOES E SERVICOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997761.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NURNBERG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997810.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO DE OLIVEIRA FREZARIM"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050517.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento03).contains("ENTREGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INOLAN AIRTON HOMIAK"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2098710.00
    if (StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS") && StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("F") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098772.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO ABREU PONCIANO 58645837668"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098806.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("L") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("&") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098792.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MHLOG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098835.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REGINALDO APARECIDO ESTRUZANI"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098876.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR JOSE RODYCZ"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050740.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO PECAS CARRETAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995764.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO POSTO INTEGRACAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995769.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("135") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995796.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGCONDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERADOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995922.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSIMAR 26 PALLETS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995907.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OLDEMIR ROCHA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995963.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POLIMENTO TANQUE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1995974.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTAURANTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHURRASCARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("47"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996015.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTAURANTE RODA DAGUA LTDA - REFEICAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996021.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNIK E CIA LANCHE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996028.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SINUELO SUPERMERCADO E MATERIAIS DE CONSTRUCAO - LANCHE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996036.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPER MONIARI CENTRO DE DISTRIBUICAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996051.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VJR BORRACHARIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1996064.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRITONE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARTICIPACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889963.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1887852.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATHEUS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOLENTINO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GANDRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PONCIANO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892567.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO PRODOESTE ARAXA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901633.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTRAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOFTWARE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888286.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAPFRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GERAIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888338.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997620.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVIC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRIBUIDORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUMULADOR"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997628.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALAROTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1997632.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PGTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERIAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998163.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PJ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998208.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1998694.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VCM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOBILIARIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CORPORATIVO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1999584.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1999574.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TROCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PNEUS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901652.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HORIZONS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1888306.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINISTERIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INSS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889768.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCIONE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVESTRE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892002.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIGMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOM"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889879.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889923.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889910.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AURELIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892027.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRUNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTHAUS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892037.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CREDITO EM CONTA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892117.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTROLE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892112.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADAPT"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892675.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENTREGAS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901489.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASSAI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATACADISTA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901517.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALDEIO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901620.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DELTA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901631.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("D N PNEUS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901551.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLUXLOG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERACOES"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901591.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTOBENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORC"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1889814.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TUDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUMULADORES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890078.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VICTOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HUGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARVALHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEITE"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1890118.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRETARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RS"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892614.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1892594.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIARIA"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 1901609.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADILSON MACHADO"))    historico = "PAGAMENTO " + nomeOrigem + "";  //id -> 2048360.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANA FLAVIA DA SILVA SCOPARO LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2048927.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDINEY APARECIDO VIDAL"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049458.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOMINGOS FRANCISCO MOLARI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049635.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAL FAVARETTO DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049712.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDVAN LOPES DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049718.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAF TRANSPORTE DE CARGAS LTDA ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049977.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GILSON DOUGLAS FIGURA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049993.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISEU ESTEVAO DA SILVA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2049870.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRZ INFORMATICA LTDA."))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050068.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO ERNANDO RIBEIRO BATISTA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050165.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONAS LUIS LORO ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050223.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LJP TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050380.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS HENRIQUE DE OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050428.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUPEPSA TRANSPORTES DE CARGAS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050455.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCIO RODRIGO BUENO"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050533.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ODAIR SAULO KATSCKI ME"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2050751.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TATIANE DE JESUS OLIVEIRA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051187.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TPR TRANSPORTES LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051201.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEREZINHA APARECIDA DE MORAES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051190.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSJUCK TRANSPORTE E LOGISTICA LTDA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051221.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED CURITIBA"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051273.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO NACIONAL DE TRANSPORTES"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051291.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VITOR GOUVEA DOS SANTOS HOMEM"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051358.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VAGNER CAMARGO LUNARDI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051319.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDEMIRO HENNING"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051323.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALDIR GOBERTTI"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051327.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALMIR CARDOSO DOS SANTOS"))    historico = "PAGAMENTO " + nomeOrigem + " -" + documento + "";  //id -> 2051345.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEBASTIAO NUNES SOBRINHO 47355271920"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098906.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THAIS ATHAYDES LEITE"))    historico = "PAGAMENTO " + nomeOrigem + " DOC" + documento + "";  //id -> 2098949.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATHEUS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOLENTINO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GANDRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PONCIANO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("H") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("F") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRESTADORA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomePortador + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HAGAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomePortador + " " + "" + " " + complemento01 + " " + ""  + " " + "" + "  CodigoHistorico:389";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JUSTICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomePortador + " " + "" + " " + complemento01 + " " + ""  + " " + "" + "  CodigoHistorico:389";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JFC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "" + " " + nomePortador + " " + "" + " " + complemento01 + " " + ""  + " " + "" + "  CodigoHistorico:389";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LENILDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VATRIM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALBERT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("O") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOLETTA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESPACHANTE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLARO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CGMP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("-") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARAR"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GASTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARTAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CREDITO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PNEUS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOTOLO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("W") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREVIDENCIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARRETAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAVICHIOLO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TORTATO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NEK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OFICINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHASSIPAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALINHAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOLAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRACCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOUZA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOUSA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CWB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURGOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOVIAR"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPECAUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEIC"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOVIARIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIREL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRETEBRAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTRAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOFTWARE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPRESSORAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPERMIX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAT"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISLUCNET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIBANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOLDING") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTOMEC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACESSORIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEZAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KARVAT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEDETIZADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EPP"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAPFRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GERAIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARCELO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEXANDRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIESEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINISTERIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INSS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains(".") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRUCK") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SETCEPAR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SINDICATO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEFAZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NEWTON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOM"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRITONE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARTICIPACOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNTOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NACIONAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VECODIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POINTER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIAL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMBUSTIVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOPARANA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROD") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TATUQ"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERGIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CURITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("-") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOCIEDADE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VICTOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HUGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARVALHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEITE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VESCOVI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AURELIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRUNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTHAUS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRIFORTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONCRETO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDREI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HARTKOPF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("12177686962"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPARTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTROLE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPRESTIMO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVEDOR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BL:"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARTINS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAMOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NETO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREZARIN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPOSITOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SILVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MVX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOBENS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRADORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRETARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARANA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRANCISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARTINS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRET") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAVACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CCJ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KARINE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELAINE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WENDT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01050837983"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JONATAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELENO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DRESCH") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESCARGA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SECRETARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLUXLOG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPERACOES"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MDX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATERIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUCAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("135") && StringUtil.removeSpecialCharsToUC(nomePortador).contains("VIAGENS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEPARTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGUA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORRACHARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LANCHONETE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("16") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BONATTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTRICAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESTAURANTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHURRASCARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("47"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TITANFOZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANDERSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARMIGIANI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEI"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONVENIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOTIVA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CORITIBA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOOT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLUB"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NURNBERG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NURNBERG") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("C") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COZINHAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUENO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CW") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PISOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REVESTIMENTOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIST") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("/") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNET"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORENCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMINHOES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIAT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHRYSLER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOVEIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GARCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APOIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRATIVO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JENIFER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOURENCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIMA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIBERTY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGUROS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("A"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORTEPLAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra5(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEISEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROVERA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MECANICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIESEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREFEITURA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MUNICIPAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANDRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MICHELE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEMARCHI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ME"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCALVI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PECAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VISCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("M") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCOPARO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WENDT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REVENDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GLP"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELANDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AVIC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRIBUIDORA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUMULADOR"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALAROTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATS"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PJ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("E") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VCM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOBILIARIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CORPORATIVO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LTDA"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + ""  + " " + "" + "";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO BRADESCO S/A") && StringUtil.removeSpecialCharsToUC(complemento03).contains("DOC") && StringUtil.removeSpecialCharsToUC(complemento03).contains("TED") && StringUtil.removeSpecialCharsToUC(complemento03).contains("INTERNET"))  historico = "PAGAMENTO" + " " + nomeOrigem + " " + "-" + " " + documento + " " + "-" + " " + complemento03 + " " + ""  + " " + "" + "";
    

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra6(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getCentroCusto(String CentroCusto, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto) {
          String retornaCentroCusto = CentroCusto;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaCentroCusto;
}
public String getTabelaContabil(String TabelaContabil, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaTabelaContabil = TabelaContabil;
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaTabelaContabil;
}
public String getParticipante(String participante, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaParticipantePai = participante;
    complemento04 = "";
    complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaParticipantePai;
}
public String getFilial(String codFilial, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto, String filial) {
          String retornaFilial = codFilial;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaFilial;
}
public String getRegrasParaAcumular(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String getRegrasParaAcumularPortador(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String  getReplaceTermos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = "";
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return parametro2.trim();
}
public String  getReplaceTermosAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double numeroAba  		= objHistorico.optDouble("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String  getLimpaCampos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");

    return lote.trim();
}
public String  getLimpaCamposAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String getTipoGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String graph = "";

    //feito para manter o legado sem problemas, sera sobreposto por regras! ;-)
    //tipos esperados: Column, Multiple_Column_Stacked, Multiple_Columns, Line, Multiple_Lines, Pie, Donut
    //Card refere-se ao Lucro/Prejuizo
    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    if (complemento01.startsWith("07") || complemento01.startsWith("12")) graph = "CardChart";

    if (complemento01.startsWith("01") || complemento01.startsWith("02") || complemento01.startsWith("04") || 
    	complemento01.startsWith("08") || complemento01.startsWith("09") || complemento01.startsWith("10") || 
    	complemento01.startsWith("11") || complemento01.startsWith("21"))  graph = "ColumnChart";

    if (complemento01.startsWith("15") || complemento01.startsWith("16") || complemento01.startsWith("17")) 
    	graph = "ColumnChartStacked";

    if (complemento01.startsWith("05") || complemento01.startsWith("06")) graph = "LineChart";

    if (complemento01.startsWith("18") || complemento01.startsWith("19") || complemento01.startsWith("20")) 
    	graph = "LineChartMultiple";

    if (complemento01.startsWith("03") || complemento01.startsWith("13") || complemento01.startsWith("14")) 
    	graph = "DonutChart";

    return graph;
}
public String getSimboloValor(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String simboloValor = "R$";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return simboloValor.replaceAll("Nenhum","");
}
public String getSeriesGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String series = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return series;
}
public String getTituloGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String Titulo_Grafico = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return Titulo_Grafico;
}
public String getColunaAlternativa(String parametro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String retornaColunas  = "";

    return retornaColunas.replace(",",";").trim();
}

/*#############################################@ EXTRATO-BOTICARIO-EXCEL @##############################################*/
public HashMap readBoticario(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ ERP-SISPLAN @##############################################*/
public HashMap readSisplanSistemaPlanejamento(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
	
    return mapaVariavel;
}


//####################################################################################################################################
//									EXTRATO UNICRED2 PDF
//####################################################################################################################################

public boolean readExtratoUnicred2PDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}



public boolean readExtratoSafraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
 
    return true;
}


/*#############################################@ EXTRATO-CEF-HTML @##############################################*/
public boolean readExtratoCEFHtml(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



/*#############################################@ EXTRATO-TRIBANCO2-PDF @##############################################*/
public boolean readExtratoTribanco2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

	return true;
}


//####################################################################################################################################
//									EXTRATO UNIPRIME PDF
//####################################################################################################################################

public boolean readExtratoUniprimePDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}


public boolean readExtratoFibraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - ABC
## ################################################################################################################## */
public boolean readExtratoABCPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


//####################################################################################################################################
//									EXTRATO BBM PDF
//####################################################################################################################################

public boolean readExtratoBBMPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


public boolean readExtratoBIBPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoGuanabaraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


//####################################################################################################################################
//									EXTRATO BBM PDF
//####################################################################################################################################

public boolean readExtratoSofisaPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
  
    return true;
}


public boolean readExtratoVotorantimPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}

public boolean readExtratoVotorantim3PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoXPInvestimentosPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}

public boolean readExtratoXPInvestimentos2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoNubankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoMercadoPagoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoVotorantim2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoAsaasPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



/*#############################################@ EXTRATO-CONTASIMPLES-PDF @##############################################*/
public boolean readExtratoContaSimplesPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}


public boolean readExtratoStonePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-TOPAZIO-EXCEL @##############################################*/
public boolean readExtratoC6Excel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readSantanderRET(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


public boolean readExtratoCoraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBtgPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readFrancesinhagrupoAilosPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}



public boolean readExtratoXPInvestimentosExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readInvestimentoBradescoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoOmieCashPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

	return true;
}


public boolean readExtratoArbiExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
 }


public boolean readExtratoMovilepayPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-SISPRIME-EXCEL @##############################################*/
public boolean readExtratoSisprime(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}




public HashMap readExtratoItauPdfFrancesinha(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}

public HashMap readExtratItauPdfFrancesinha2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public boolean readExtratoTransfeeraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoLinkerPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoEfiPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	  return true;
}


public HashMap readFrancesinhaSicrediExcel (MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public boolean readExtratoMercadoPagoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}



public HashMap readFrancesinhaSicoobPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}



public boolean readExtratoBMGExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoTargetPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-target-EXCEL @##############################################*/
public boolean readExtratoTargetExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}



public boolean readExtratoCredisisPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


		
		/*#############################################@ EXTRATO-Fibra-EXCEL @##############################################*/
public boolean readExtratoFibraExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
    return true;
}


		
		/*#############################################@ EXTRATO-INDUSTRIAL-EXCEL @##############################################*/
public boolean readExtratoIndustrialExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


				
		/*#############################################@ EXTRATO-PAULISTA-EXCEL @##############################################*/
public boolean readExtratoPaulistaExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


	
/*#############################################@ EXTRATO-BBM-TXT @##############################################*/
public boolean readExtratoBBMTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


		
/*#############################################@ EXTRATO-Votorantim-EXCEL @##############################################*/
public boolean readExtratoVotorantimExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}



//#2307-009642 - Leal

public HashMap readFrancesinhaBradescoPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}



/*#############################################@ EXTRATO-HDT-EXCEL @##############################################*/


//#2312-024479 By Leal

public boolean readExtratoHDTExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoUBPPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public HashMap readSicoobComprovantesPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readFrancesinhaSicrediPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readErpFolhaDominio(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public boolean readExtratoSisprimePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoPaybrokersPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


public HashMap readErpFolhaWk(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public boolean readExtratoGrafenoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoGrafenoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
 }


public HashMap readFrancesinha_BBPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    return mapaVariavel;
}


/*#############################################@ CARTAO-ABREAPETITE-EXCEL @##############################################*/
public HashMap readCartaoAbrapetite(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}


//##############################################**CARTAO ALELO CSV**#######################
public HashMap readAleloCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-AMERICANEXPRESS-EXCEL @##############################################*/
public HashMap readCartaoAmericanExpressDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ CARTAO-AMERICANEXPRESS-EXCEL @##############################################*/
public HashMap readCartaoAmericanExtratoDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ EXTRATO-BENVISA-EXCEL @##############################################*/
public HashMap readCartaoBenVisaExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-BIN-EXCEL @##############################################*/
public HashMap readCartaoBinExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


/*#############################################@ CARTAO-BONUS-EXCEL @##############################################*/
public HashMap readExtratoBonus(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ EXTRATO-CABAL-EXCEL @##############################################*/
public HashMap readCartaoCabal(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ EXTRATO-CALCARD-EXCEL @##############################################*/
public HashMap readCartaoCalcard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}

/*#############################################@ EXTRATO-CALCARD-EXCEL @##############################################*/
public HashMap readCartaoCalcardExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCielo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCieloExcel2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   
    return mapaVariavel;
}

/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCieloExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

 
    return mapaVariavel;
}

public HashMap readCartaoCieloRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

 
    return mapaVariavel;
}


/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartao_Cielo_Simples_Sem_Bandeira(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ CARTAO-CARREFOUR-EXCEL @##############################################*/
public HashMap readCartaoCarrefour(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}


/*#############################################@ CARTAO-ABREAPETITE-EXCEL @##############################################*/
public HashMap readCartaoCooper(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
      
    return mapaVariavel;
}


/*#############################################@ CARTAO-SANTANDERCREDITO-EXCEL @##############################################*/
public HashMap readCartaoCreditoSantander(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ CARTAO-ELAVON-EXCEL @##############################################*/
public HashMap readExtratoElavon(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNet(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  

    return mapaVariavel;
}

/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNet2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   
    return mapaVariavel;
}

/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNetRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
	
    return mapaVariavel;
}



/*#############################################@ CARTAO-GOODCARD-EXCEL @##############################################*/
public HashMap readExtratoGoodcard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   return mapaVariavel;
}



/*#############################################@ CARTAO-GREENCARD-EXCEL @##############################################*/
public HashMap readCartaoGreenCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-IFOOD-EXCEL @##############################################*/
public HashMap readExtratoIFood(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-MASTERFARMA-EXCEL @##############################################*/
public HashMap readCartaoMasterFarma(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-MERCADOLIVRE-EXCEL @##############################################*/
public HashMap readCartaoMercadoLivre(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-MOIP-EXCEL @##############################################*/
public HashMap readExtratoMoip2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-MOIP-EXCEL @##############################################*/
public HashMap readExtratoMoip(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-MOOZ-EXCEL @##############################################*/
public HashMap readCartaoMoozCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-NUTRICARD-EXCEL @##############################################*/
public HashMap readExtratoNutricard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-PAGSEGURO-EXCEL @##############################################*/
public HashMap readExtratoPagSeguro(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-PAGUECOM-EXCEL @##############################################*/
public HashMap readPaguecomCSV(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-PAYPAL-EXCEL @##############################################*/
public HashMap readCartaoPayPal2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ EXTRATO-PAYPAL-EXCEL @##############################################*/
public HashMap readCartaoPayPal(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}


/*#############################################@ CARTAO-POLICARD-EXCEL @##############################################*/
public HashMap readCartaoPoliCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardNovoPadrao(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDeb(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardCred(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	

    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
	return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDefaultNovo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}

/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}


/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardTxt(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
			   
   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-SAFRA-CSV @##############################################*/
public HashMap readCartaocSafraCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-SEMPARAR-EXCEL @##############################################*/
public HashMap readExtratoSemParar(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-SEMPARAR-EXCEL @##############################################*/
public HashMap readExtratoSemParar2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}


/*#############################################@ CARTAO-SENFF-EXCEL @##############################################*/
public HashMap readExtratoSenff(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-SENFF-EXCEL @##############################################*/
public HashMap readExtratoSenffLayout2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipagFluxoCaixa(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}

/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipag(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  
    return mapaVariavel;
}
/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipagRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  
    return mapaVariavel;
}


/*#############################################@ CARTAO-NUTRICARD-EXCEL @##############################################*/
public HashMap readExtratoSodexo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ EXTRATO-STELO-EXCEL @##############################################*/
public HashMap readCartaoSteloCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

	return mapaVariavel;
}


/*#############################################@ CARTAO-STONE-EXCEL @##############################################*/
public HashMap readExtratoStone(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-SUMUP-EXCEL @##############################################*/
public HashMap readCartaoSumup(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

    return mapaVariavel;
}


/*#############################################@ EXTRATO-TICKET-EXCEL @##############################################*/
public HashMap readExtratoTicketNovo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ EXTRATO-TICKET-EXCEL @##############################################*/
public HashMap readExtratoTicket(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-TRIOCARD-EXCEL @##############################################*/
public HashMap readCartaoTrioCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   

   return mapaVariavel;
}


/*#############################################@ EXTRATO-VALECARD-PDF @##############################################*/
public HashMap readExtratoValeCardPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

   return mapaVariavel;
}


/*#############################################@ CARTAO-VRALIMENTACAO-TXT @##############################################*/
public HashMap readExtratoVRAlimentacao(String lineParam, MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}



public HashMap readExtratoMagaLU(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


public HashMap readExtratoPagarME(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	return mapaVariavel;
}


public HashMap readExtratoNetshoes(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	return mapaVariavel;
}



/*#############################################@ EXTRATO-LIV-PDF @##############################################*/
public HashMap readCartaoLivPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-FIDELIDADE-EXCEL @##############################################*/
public HashMap readCartaoFidelidade(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*     Leitura de Planilha Padrao - EXTRATO AIQUEFOME

## ################################################################################################################## */
public HashMap readExtratoAiquefome(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
        
          
	return mapaVariavel;
}						
           
        


 /*     Leitura de Planilha Padrao - EXTRATO UBEREATS

        ## ################################################################################################################## */
        public HashMap readExtratoUbereats(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
        
           
				 return mapaVariavel;
            }


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoAmazoniaTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoSquidExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoAmazoniaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-TRIBANCO-PDF @##############################################*/
public boolean readExtratoTribancoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


public boolean readExtratoPagseguroExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoBS2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBanesePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoNordestePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public HashMap readErpFolhaAlterdataProgresso(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public boolean readExtratoBancoDaycovalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoBancoPaulistaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BANESTE-EXCEL @##############################################*/
public boolean readExtratoBanesteDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   


   return true;
}


/*#############################################@ EXTRATO-BANPARA-EXCEL @##############################################*/
public boolean readExtratoBanpara(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

    return true;
}


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoBanparaTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

	return true;
}


/*#############################################@ EXTRATO-BANRISUL-TXT @##############################################*/
public boolean readExtratoBANRISULDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratoBancoBrasilExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-BBFINANCIAMENTOS-EXCEL @##############################################*/
public boolean readExtratoBancoDoBrasilFinanciamentos(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	
    return true;
}


public boolean readExtratoBancoDoBrasilPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDoc2(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}

/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDoc(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

  

  return true;
}

/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
    return true;
}


/*#############################################@ EXTRATO-BRADESCO-EXCEL @##############################################*/
public boolean readExtratoBRADESCODefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}

/*#############################################@ EXTRATO-BRADESCO-EXCEL @##############################################*/
public boolean readExtratoBradescoDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   

    return true;
}


public boolean readExtratBradescoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BRADESCO-TXT @##############################################*/
public boolean readExtratoBradescoTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	return true;
}


/*#############################################@ EXTRATO-CEF-EXCEL @##############################################*/
public boolean readExtratoCEFExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}
 


public boolean readExtratoCaixaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-CEF-TXT @##############################################*/
public boolean readExtratoCEFDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}

/*#############################################@ EXTRATO-CEF-TXT @##############################################*/
public boolean readExtratoCEFDefaultNovo(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


/*#############################################@ EXTRATO-DAYCOVAL-EXCEL @##############################################*/
public boolean readExtratoDaycoval(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

	return true;
}


/*#############################################@ EXTRATO-ITAU-EXCEL @##############################################*/
public boolean readExtratoItauDefault(MemoryFile memFile, String anoData, String tipoExtrato, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {



    return true;
}


public boolean readExtratoItauPdfInterno(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}

public boolean readExtratoItauPdfInterno2(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-ITAU-TXT @##############################################*/
public boolean readExtratoItauTXT(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


/*#############################################@ EXTRATO-SAFRA-EXCEL @##############################################*/
public boolean readExtratoSafraExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

  
  return true;
}


/*#############################################@ EXTRATO-SANTANDER-EXCEL @##############################################*/
public boolean readExtratoSantanderDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratSantanderPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	
    return true;
}


/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoSicoobDefaultNovo(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
   
    return true;
}

/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoSicoobDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


public boolean readExtratSicoobPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	
    return true;
}


/*#############################################@ EXTRATO-SICOOB-TXT @##############################################*/
public boolean readExtratoSicoobTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	return true;
}


/*#############################################@ EXTRATO-SICREDI-EXCEL @##############################################*/

public boolean readExtratoSicrediDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

    return true;
}


public boolean readExtratoSicrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-SICREDI-TXT @##############################################*/
public boolean readExtratoSicrediTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


/*#############################################@ EXTRATO-TRIBANCO-EXCEL @##############################################*/
public boolean readExtratoTribancoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


/*#############################################@ EXTRATO-UNICRED-EXCEL @##############################################*/
public boolean readExtratoUnicredDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

 

	return true;
}


/*#############################################@ EXTRATO-UNICRED-TXT @##############################################*/
public boolean readExtratoUNICREDTxt(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


/*#############################################@ EXTRATO-UNIPRIME-EXCEL @##############################################*/
public boolean readExtratoUniprime(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

    return true;
}



/*#############################################@ EXTRATO-UNIPRIME-TXT @##############################################*/
public boolean readExtratoBancoUniprime(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {


    return true;
}

/*#############################################@ EXTRATO-UNIPRIME-TXT @##############################################*/
public boolean readExtratoUniprimeTxt(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoViacrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



public boolean readExtratBradesco2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();

     
    return true;
}


public boolean readExtratoInterPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
 
     
    return true;
}



public HashMap readExtratoFolhaSageExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
     

    return mapaVariavel;
}

public HashMap readExtratoFolhaSageExcelv2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
     

    return mapaVariavel;
}








/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoViacredi(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratoItauConsolidadoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
	
    return true;
}


/*#############################################@ EXTRATO-CREDISAN-EXCEL @##############################################*/
public boolean readExtratoCredisanExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    JSONObject extratoEmpresa = new JSONObject();
    return true;
	
}



/*#############################################@ EXTRATO-CONTASIMPLES-EXCEL @##############################################*/
public boolean readExtratoContaSimplesExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}



/*#############################################@ EXTRATO-ORIGINAL-PDF @##############################################*/
public boolean readExtratoOriginalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - SOFISA
## ################################################################################################################## */
public boolean readExtratoSofisaExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - ABC
## ################################################################################################################## */
public boolean readExtratoAbcExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


//####################################################################################################################################
//									EXTRATO UNICRED PDF
//####################################################################################################################################

public boolean readExtratoUnicredPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}

public boolean readExtratoUnicred3PDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}


/*#############################################@ EXTRATO-EWALLY-EXCEL @##############################################*/
public boolean readExtratoEwallyExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


/*#############################################@ EXTRATO-BANCONORDESTE-EXCEL @##############################################*/
public boolean readExtratoBancoNordesteExcel(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-BMPMONEYPLUS-EXCEL @##############################################*/
public boolean readExtratoBMPMoneyPlusExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-STONE-EXCEL @##############################################*/
public boolean readExtratoStoneExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-JUNO-EXCEL @##############################################*/
public boolean readExtratoJunoDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-CRESOL-EXCEL @##############################################*/
public boolean readExtratoCresolExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


//#############################################@ EXTRATO-ORIGINAL-EXCEL @##############################################/

public boolean readExtratoOriginalExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoPagbankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoCresolPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
	
	return true;
}


public boolean readExtratoC6BankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


//####################################################################################################################################
//									EXTRATO BRB PDF
//####################################################################################################################################

public boolean readExtratoBRBPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-TOPAZIO-EXCEL @##############################################*/
public boolean readExtratoTopazioExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


public HashMap readFrancesinha_BradescoExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BRADESCO-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BradescoPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public HashMap readFaturaCartaoCredito_SicoobPDFF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BB-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BBPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public HashMap readFrancesinhaSantanderPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BRADESCO-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BanrisulPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

	return mapaVariavel;
}


public boolean readExtratoSulcrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoCredisanPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   
    return true;
}


public boolean readExtratoPoupeCrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


//2312-024960
public HashMap readFrancesinhaUnicrediPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    return mapaVariavel;
}


public HashMap readFrancesinha_CefPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public boolean readExtratoAilosCiviaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


public boolean readExtratoBMGPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



public boolean readExtratoSicoobCapitalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoMercantilPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoInfinitePayPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBKBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoNextPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


public boolean readExtratoEfiExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoPagPixBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoBanrisulPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   
    return true;
}


public HashMap readFrancesinhaSafraPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


public boolean readExtratoCrehnorPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoCoraExcel(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoNBCPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoBTGExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoOteroBankExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public HashMap readExtrato_ApliBB_PDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
	return mapaVariavel;
}


public boolean readExtratoPinkPayPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public HashMap readExtratoSicoobConveniosPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}



public HashMap readFrancesinhaCresolPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public boolean readExtratoSquidPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}

