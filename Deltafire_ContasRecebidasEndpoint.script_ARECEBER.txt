{import: io_contabil.Database};
{import: io_contabil.RegrasSemCartoes};
{import: io_contabil.Duplicatas};
{import: io_contabil.Util};
{import: io_contabil.RunExtratosECartoes};
{import: io_contabil.Ottimizza_MeuCaixa};
{import: io_contabil.Lancamentos};
{import: io_contabil.TemplateUtils};
{import: io_contabil.OICUtils};
{import: io_contabil.Classes.Extrato};


// TEMPLATE 24.04.2024
// Colocado tipoPlanilha no Lote Encerrado
// colocado para trocar XLSX por CSV se marcado no roteiro 
 
public JSONArray run(InoutLogger logger) throws Exception {

	JSONArray  records  = new JSONArray();
	JSONObject ultimoJS = new JSONObject();

	// gera seguranca nas conexoes com Heroku
	// Create a trust manager that does not validate certificate chains
	javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[] {
		new javax.net.ssl.X509TrustManager(){
			public java.security.cert.X509Certificate[] getAcceptedIssuers(){ return null; }

			public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType) { }

			public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType) { }
		}
	};

	// Install the all-trusting trust manager
	try {
		javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance("TLS");
		sc.init(null, trustAllCerts, new java.security.SecureRandom());
		javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
	} catch (Exception e) {
		// 
	}
	
	
	// Carrega as propriedades
	SysProperties props = SysProperties.getInstance();
	SysProperties propsEmp = SysProperties.getInstance();
	JSONObject roteiroCRMPrincipal = getRoteiro();
	JSONObject roteiroCRM = getRoteiro();
	JSONObject jStatus = new JSONObject();
	
 
	props.load("contabil/" + roteiroCRM.optString("contabilidade") + "/contabil.properties");
	propsEmp.load("contabil/" + roteiroCRM.optString("contabilidade") + "/empresa.properties");

	//Conectar na Base de Dados IO_CONTABIL.
	DataBase dbIOCont = null;
	//Contectar na Base de Dados depara do heroku(nuvem)
	DBPostgreSQL dbIODepara = null;

 	String empresa = getNomeEmpresa();
	
	
	String codEmpresa = props.get(empresa + "_COD_EMPRESA");
	 
	if (codEmpresa == null) {
		empresa = propsEmp.get("NOME_EMPRESA").toUpperCase();
		codEmpresa = props.get(empresa + "_COD_EMPRESA");		
	}
	
	//#2303-002125
	//codEmpresa que sera utilizado para consultar o plano de contas
	String codEmpresaPlanoContas = codEmpresa;
	if (roteiroCRM.optString("contabilidade").toUpperCase().contains("CONTIBEMASSESSORIA")) {
		codEmpresaPlanoContas = "000";
	}
	//2312-024058
	if (roteiroCRM.optString("contabilidade").toUpperCase().contains("SETEC")) {
		codEmpresaPlanoContas = "000";
	}
 
	String tipoProduto = "";
	try {
		tipoProduto = props.get(empresa + "_TIPO_PRODUTO");
	} catch (Exception xx) {tipoProduto = "OIC_PACOTE";}
	
	
	if (tipoProduto.equals("")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("IMPLANTA")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("AVULSO")) tipoProduto = "OIC_PACOTE";
	
 	
	String processaOud = "";
	try {
		processaOud = props.get("PROCESSA_OUD");
	} catch (Exception e) {processaOud = "FALSE";}
	if (processaOud.equals("")) processaOud = "FALSE";

	String statusCRM = props.get(empresa + "_STATUS_CRM");
	String emailCanal = props.get("EMAIL_CANAL");
	String ERPContabil = props.get("ERP_CONTABILIDADE");
	String cnpjEmpresa = props.get(empresa + "_CNPJ_EMPRESA");
	String nomeEmpresa = props.get(empresa + "_NOME_EMPRESA");
	String fornecedorUnico = props.get("FORNECEDOR_UNICO");
	String emailResponsavel = props.get(empresa + "_EMAIL_RESPONSAVEL");
	
	String fazLcdpr = "";
	
	try {
		fazLcdpr = props.get(empresa+"_EQUIPE_FECHAMENTO");
	} catch (Exception e) {fazLcdpr = "FALSE";}

	if (fazLcdpr.toUpperCase().contains("LCDPR")) fazLcdpr = "TRUE";
	if (fazLcdpr.equals("")) fazLcdpr = "FALSE";
 	
	String mantemArquivo = propsEmp.get("MANTEM_ARQUIVO");
	if (mantemArquivo == null) mantemArquivo = "";
	
	String tipoLancamento = getNomeRota();
	if (tipoLancamento.toUpperCase().contains("PAGAS"))    tipoLancamento = "PAGAR";
	if (tipoLancamento.toUpperCase().contains("RECEBIDA")) tipoLancamento = "RECEBER";


	String compDirName = nomeEmpresa + "_#" + codEmpresa;
	String dirName = "";
	if (tipoLancamento.contains("PAGAR"))   dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/APagar";
	if (tipoLancamento.contains("RECEBER")) dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/AReceber";

	String backupDirName = dirName + "/Processado";

	boolean erroShrink = false;
	boolean apagaContaT = false;
	boolean apagaExtrato = false;
	boolean comparaRazao = false;
	boolean fazConciliacao = false;
	boolean geraRegraPortador = false;
	boolean encontrouComplemento = true;
	boolean cabecalhoNaoEncontrada = true;
	boolean criaCabecalhoConciliacao = true;
	boolean geraCabecalhoCordilheira = true;
	
	String tipoEmail            = "";
	String arquivoAgora         = tipoLancamento + "-" + DateUtil.dateToString(new Date(),"yyyyMMddhhmm");
	int    contadorArquivo      = 0;

	HashMap mapaLote			= new HashMap();
	HashMap mapaJuros   		= new HashMap();
	HashMap mapaPlano   		= new HashMap();
	HashMap mapaDePara			= new HashMap();
	HashMap mapaArquivo 		= new HashMap();
	HashMap mapaOficial			= new HashMap(500, 0.75f);
	HashMap mapaDesconto		= new HashMap();
	HashMap mapaVariavel		= new HashMap(500, 0.75f);
	HashMap mapaDocumento 		= new HashMap();
	HashMap mapaPartPlano 		= new HashMap();
	HashMap mapaFornecedor 		= new HashMap();
	HashMap mapaConciliacao 	= new HashMap();
	HashMap mapaParticipante	= new HashMap();
	HashMap mapaParcelaDominio	= new HashMap();

	JSONObject recordF = new JSONObject();


	String cruzaExtrato			= "";
	String Cruza_Extrato_com_Extrato = "";
	String mesAnoAnterior		= "";
	String mesAno2Anterior		= "";
	String mesAnoAtual			= "";
	int mesRef					= 0;
	int anoRef					= 0;
	String contaJuros			= "";
	String contaDesconto		= "";
	String contaMulta			= "";
	String contaTransitoria		= "";
	String contaEmpresaBranco	= "";
	String movimentoPortador	= "";
	String contaFixaDebito		= "";
	String contaFixaCredito		= "";
	String contaPortador		= "";		//pg - cred | rec - deb
	String contaMovimento		= "";		//pg - deb | rec - cred
	String tabelaContabil       = "";
	String dataMovimento        = "";
	String classificaPlano      = "";
	String classificaFornec     = "";
	String loteConciliacao 		= "";
	String [] loteFiscal		= new String[20];
	

	String Conta_Fixa_Cruzamento_Extrato = "";
	String contaInvertida	= "";
	String contaBuscaPlano	= "";
	String nomeArquivo      = "";
	String chave			= "";
	String classificacao	= "";
	String dataLote			= DateUtil.dateToString(new Date(),"yyyy-MM");
	String lote						= "";
 	String regraContaMovimento 		= "";
	String regraHistorico 			= "";
	String separadorCsv				= ";";
	String separadorTxt				= "";
	String tipoPlanilha				= "";
	String contaTemp				= "";
	String mesesdoAno			    = "JAN;FEV;MAR;ABR;MAI;JUN;JUL;AGO;SET;OUT;NOV;DEZ";
	
	boolean geraFiscal = false;
	boolean apagaStatus = false;
	boolean acumulouAntes = false;
	boolean leuFinanceiro = false;
	boolean primeiroArquivo = true;
	boolean ehExtratoPadrao = false;
	boolean primeiraVezDuplicata = true;
	boolean forcarPartidaDobrada = false;
	boolean dupliNaoEncontContabil= false;
	
	boolean temOFX = false;
	boolean temOMC	= false;
	boolean temFiltro = false;
	boolean temFiscal = false;
	boolean temLinhas = false;
	boolean temIgnorar = false;
	
	boolean logs = false;
	
	StringBuilder logsTxt = new StringBuilder();
	
	int abaConvertida = 0;
	
	String retornaPadroes = "";
	String nomeArquivoProtocolo = "";
	
	List<String> bancosLidos = new ArrayList<String>();
	
	String zerarColAlternativo		= "";
	logger.logInfo("TemplateDev Empresa -> " + nomeEmpresa);
	JSONObject deParaObj 			= new JSONObject();
	
	Extrato extrato = new Extrato();
	
	LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
	
	//logger.logDebug("Padrao empresa " + mantemArquivo);
	try {

		// #DOCUMENTACAO
		// FOR leitura dos arquivos das extensoes abaixo
		// altera-se aqui para NAO LER xlsx por exemplo
		
		// liberado em 25/11/2020 @DiMaz
		// se precisar alterar somente as quantidades qX e qY 
		// cada unidade processa cerca de 3 arquivos ou seja 3 no qY processa uns 9 arquivos excel e uns 9 pdf por vez.
		// aumentar muito o XLSX pode causar TRAVAMENTOS
		int qX	= 9;	//ofx,csv,txt
		int qY	= 3;	//xlsx,pdf
		int qTotal = (qX*3)+(qY*2);
		String extensao = "";
		for(int extArquivo = 0; extArquivo < qTotal; extArquivo++) {
			if (extArquivo < qX)									extensao = ".ofx,.OFX,.omc,.OMC,.html,.HTML,.ret,.RET";
			if (extArquivo >= qX && extArquivo < (2*qX))			extensao = ".pdf,.PDF";
			if (extArquivo >= (2*qX) && extArquivo < (2*qX+qY))		extensao = ".xlsx,.XLSX";
			if (extArquivo >= (2*qX+qY) && extArquivo < (3*qX+qY))	extensao = ".txt,.TXT,.ret,.RET";
			if (extArquivo >= (3*qX+qY))							extensao = ".csv,.CSV"; 
			
			if (roteiroCRMPrincipal.has("ignoraExel") && roteiroCRMPrincipal.optString("ignoraExel").toUpperCase().equals("TRUE")) {
				extensao = extensao.replace(".XLSX",".CSV").replace(".xlsx",".csv");
			}			
			boolean ignoraAbas = false;
			
			// ------------------------------------------------------------------------------------------
			// colocado para nao ler pelo template mais de 3 planilhas xlsx por rodada
			// Motivo: quando tem planilha grande em excel para ler na personalizada
			// o sistema roda varias vezes a leitura da planilha no template e depois tudo de novo na personalizada.
			if (mantemArquivo.equals("SIM") && extensao.contains(".XLSX") && extArquivo > 20) continue;
			// ------------------------------------------------------------------------------------------
 
			for (int porAba = 0; porAba < 60; porAba++) {

				// #DOCUMENTACAO
				// tratamento de abas vindas do CRM
				
				String apagaArquivo		= backupDirName;
				String abasEspecificas	= roteiroCRMPrincipal.optString("Abas_Especificas");
				abasEspecificas 		= abasEspecificas.replace(",",";"); 

				if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1;2;3;4;5;6;7;8;9;10";
				// if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1";
				if (!extensao.contains("XLSX") || ignoraAbas)  abasEspecificas = "";

				// liberado em 25/11/2020 @DiMaz
				// tratar js.put("Abas_Especificas", "0-60");
				// grande numero de abas pode travar o nosso sistema
				String abasFor = "";
				if (!abasEspecificas.contains(";") && abasEspecificas.contains("-") && abasEspecificas.length() <= 7) {
					try {
						int a = Integer.parseInt(abasEspecificas.substring(0,abasEspecificas.indexOf("-")));
						int b = Integer.parseInt(abasEspecificas.substring(abasEspecificas.indexOf("-")+1));
						for (int k = a; k <= b; k++){
							if (k < b) abasFor += k+";";
							else abasFor += k;
						}
					} catch (Exception fr) {}
					if(!abasFor.equals("")) abasEspecificas = abasFor;
				}

				
				if (abasEspecificas.equals("")) {
					if (porAba > 0) break;
				}
				if (!abasEspecificas.equals("")) {
					if (!abasEspecificas.contains(String.valueOf(porAba))) {
						continue;
					}

					String ultimaAba = abasEspecificas;
					if (ultimaAba.contains(";")) ultimaAba = ultimaAba.substring(ultimaAba.lastIndexOf(";")+1).trim();
					if (!ultimaAba.equals(String.valueOf(porAba)) && extensao.contains(".XLSX")) apagaArquivo = null;
				}

				// #DOCUMENTACAO
				// auto ajuste do separador de CSV e TXt
				
				// logger.logInfo("Antes do separas"); apareceujwr
				
 
 				if(extensao.contains("CSV"))  separadorCsv = verificaSeparador(separadorCsv, dirName, extensao, props, logger);
  				if(extensao.contains("TXT"))  separadorTxt = verificaSeparador(separadorTxt, dirName, extensao, props, logger);
				
 
 				
				// #DOCUMENTACAO
				// carregamento do arquivo
				
				if (mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) apagaArquivo = null;
				// salva arquivo no hasmap para posterior eliminacao 

				
				FilesLoader fileLoader = new FilesLoader(dirName, extensao, apagaArquivo, true, logger);
				int[] abas = {porAba};
				fileLoader.setSheetsToRead(abas);
				try {
					fileLoader.loadFiles();
				} catch (Exception e) {
					// logger.logDebug("NAO CONVERTEU PDF " + e.getMessage());
					File file2 = new File(dirName);
					
					File []  arquivoParaConverter = file2.listFiles();
					if (FileUtil.dirHasFiles(dirName)) {
						for (File fl: arquivoParaConverter) {
							if (fl.getName().toUpperCase().contains(".PDF")) {
								// LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
								// String idConversor  = TemplateUtils.getIdLote(fl.getName());
								// logger.logDebug("FOI PRO CONVERSORANTES " + fl.getName());
								boolean deubom = false;
								deubom = buscaProtocoloConversor("", apiWeb, tipoLancamento.toLowerCase(), fl.getName(), logger);
								try { 
									FileUtil.deleteFile(fl);
								} catch (Exception XX) {}

								// if (deubom) continue;
							}
						}
					}
				}
				try { forcarPartidaDobrada	= Boolean.parseBoolean(roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toLowerCase().trim()); } 
				catch (Exception bl) {forcarPartidaDobrada = false;}
				
				//2304-003551. Quando utiliza esse ERP ? obrigado a sem em partida dobrada.
				if (roteiroCRMPrincipal.optString("erpContabilidade").equals("DOMINIO2") || roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("CORDILHEIRA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE")) {
                    forcarPartidaDobrada = true;
                }
				//2403-032980 - Forcar partida dobrada para todas as empresas dessa contabilidade
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("ATHENAS") && roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("PREVISACONTAB")){
					// logger.logInfo("Entra na condicao de forcar partida dobrada");
					forcarPartidaDobrada = true;
				}
				
				for (MemoryFile memFile: fileLoader.getMemFiles()) {
				
					// caso arquivo tenha mais de 250.000 linhas sera ignorado  . Xavier e Mello em 07.06.2023
					if (memFile.getTotalLines() > 250000 ){
						temLinhas = true;
						break;
					}			

					nomeArquivo = memFile.getFilename().replace("%","");
					
					if (nomeArquivo.contains("_id")) nomeArquivoProtocolo = nomeArquivo;
					
					// logger.logInfo("TEMPLATE NOME ARQUIVO == "+nomeArquivo);
					
					if (nomeArquivo.toUpperCase().startsWith("ABA_")) {
						
						abaConvertida = TemplateUtils.verificaAba(nomeArquivo);
						abasEspecificas = roteiroCRMPrincipal.optString("Abas_Especificas");
						
						// logger.logDebug("ACE " + nomeArquivo + " | " + abaConvertida + " | " + abasEspecificas);
						
						if (!abasEspecificas.equals("")) {
							if (!abasEspecificas.contains(String.valueOf(abaConvertida))) continue;
						}
					} else abaConvertida = porAba;
				
					contadorArquivo++;

					
					// =======================  =================   =======================
					// =======================  VARIAVEIS PADROES   =======================
					// =======================  =================   =======================
					String historico      = "";

					String codCcOrigem    = "";
					String cpfCnpj        = "";
					String nomeOrigem     = "";
					String nomePortador   = "";
					String nomePortador2  = "";
					String documento      = "";
					int    parcelaDoc     = 1;
					double valorDocumento = 0.00;
					double valorPagamento = 0.00;
					double valorDesconto  = 0.00;
					double valorJuros     = 0.00;
					double valorMulta     = 0.00;
					double valorAlternativo = 0;
					
					int icodCcOrigem    = -1;
					int icpfCnpj        = -1;
					int inomeOrigem     = -1;
					int inomePortador   = -1;
					int idocumento      = -1;
					int idataMovimento  = -1;
					int ivalorDocumento = -1;
					int ivalorAlternativo = -1;
					int ivalorPagamento = -1;
					int ivalorDesconto  = -1;
					int ivalorJuros     = -1;
					int ivalorMulta     = -1;
					int icomplemento01  = -1;
					int icomplemento02  = -1;
					int icomplemento03	= -1;
					int icomplemento04  = -1;
					int icomplemento05	= -1;
					int icomplemento06	= -1;
					int icomplemento07	= -1;
					int icomplemento08	= -1;
					int icomplemento09	= -1;
					int icomplemento10	= -1;
					int idataFake		= -1;

					String contaGetConta	= "";
					contaPortador	= "";		//pg - cred | rec - deb
					contaMovimento	= "";		//pg - deb | rec - cred 

					String complemento01	= "";
					String complemento02	= "";
					String complemento03	= "";
					String complemento04	= "";
					String complemento05	= "";
					String complemento06	= "";
					String complemento07	= "";
					String complemento08	= "";
					String complemento09	= "";
					String complemento10	= "";
					String codCentroCusto	= "";
					String codFilial        = "";

					double valorTotalDoc	= 0.0;
					double valorTotalJuros	= 0.0;
					double valorTotalDesc	= 0.0;
					
					double [] valorDocumentoArray = {0,0,0,0,0,0,0,0,0,0};  

					String classJur			= "";
					String classDes			= "";
					String classMul			= "";

					String codErroString	= "";
					int cont				= 0;
					int contAuxiliar		= 0;
					String linhasProblema	= "";
					String idEmpresa        = "";
					String idRoteiro  	    = "";

					String histAux			= "";
					String anoData			= "";
					boolean zerar			= true;
					boolean filtro			= true;
					

					String lerAposPrincipal   = "";
					boolean isLinhaPrincipal  = false;
					boolean ignorarAntes	  = false;
					boolean tratarComoExtrato = false;
					boolean tratarComoDesconto = false;
					boolean tratarComoJuros = false;

					dataMovimento        = "";

					double partidaDobradaJuros		= 0;
					double partidaDobradaDesconto	= 0;
					double partidaDobradaMulta		= 0;
					double valorSomaArray			= 0;

					String numSeparadorDuplicata = ""; //convertido em int depois
					
					StringBuilder cabecalhoPlanilha = new StringBuilder();
					StringBuilder cabecalhoRegra    = new StringBuilder(); // quarda pemanente as 9 primeiras linhas de cada planilha / aba
					
					int  	      contadorCabecalho = 0; 
					
					// #DOCUMENTACAO
					// definicao de separador do arquivo
					// se ouver separador em TXT deve ser tratado caso a caso
					// evitar usar tabulacao como separador 
					
					if(extensao.contains(".xlsx,.XLSX")) memFile.setFieldSeparator("\\|");
					if(extensao.contains(".pdf,.PDF"))   memFile.setFieldSeparator("\\|");
					if(extensao.contains(".csv,.CSV"))	 memFile.setFieldSeparator(separadorCsv);
					if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(separadorTxt);
					
					// if (codEmpresa.equals("9999")) memFile.setFieldSeparator(";");
					
					if (nomeArquivo.toUpperCase().contains(".PDF")) {
						
						// logger.logInfo("ARREPENDE " + nomeArquivo /*memFile.getLines().toString().contains("##$%#&") +*/  + " | " +  StringUtil.removeSpecialCharsToUC(memFile.getLines().toString().toUpperCase()));
						boolean rodaConversorNovo = TemplateUtils.verificaConversorNovo(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()).toUpperCase());
						// logger.logInfo("RCN " + rodaConversorNovo);
						if (rodaConversorNovo) {
							// LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
							String idConversor  = TemplateUtils.getIdLote(nomeArquivo);
							// logger.logDebug("FOI PRO CONVERSOR1 " + nomeArquivo);
							boolean deubom = false;
							deubom = buscaProtocoloConversor(idConversor, apiWeb, tipoLancamento.toLowerCase(), nomeArquivo, logger);
							
							if (deubom) {
								File file2 = new File(dirName);
						
								File []  arquivoParaConverter = file2.listFiles();
								if (FileUtil.dirHasFiles(dirName)) {
									for (File fl: arquivoParaConverter) {
										if (fl.getName().toUpperCase().contains(nomeArquivo.toUpperCase())) {
											try { 
												FileUtil.deleteFile(fl);
											} catch (Exception XX) {}

											break;
										}
									}
								}
							}
							continue;
						}
					}
					
 					
					if(roteiroCRMPrincipal.has("delimitadorDoArquivo") && !roteiroCRMPrincipal.optString("delimitadorDoArquivo").equals("")) {
						if(extensao.contains(".txt,.TXT")) memFile.setFieldSeparator(roteiroCRMPrincipal.optString("delimitadorDoArquivo"));
					}
					
					//nao pode usar o line contem  ';' pois nao existe line neste ponto ainda.
					if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
						if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(";");
					}
 					
					String abaArquivo = String.valueOf(abaConvertida);
					if (abaConvertida == 0) abaArquivo = "0";

					// colocado para nao importar 2x o mesmo arquivo e mesma aba
					ttArquivo ttArq    = (ttArquivo)mapaArquivo.get(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo);
					if (ttArq          == null) {
						ttArq          = new ttArquivo();
						ttArq.arquivo  = abaArquivo+"-"+nomeArquivo+"-"+abaArquivo;
					
					} else continue;
					mapaArquivo.put(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo,ttArq);
					
					// putStatus(dirName, "01--Etapa 1 de 4--" + tipoLancamento + ".status", jStatus, logger);
					// logger.logDebug("NAAQ " + nomeArquivo.toUpperCase() + " | " + extensao + " | " + separadorCsv);
	
					// #DOCUMENTACAO
					// conecta ao BANCO DE DADOS
					if (dbIOCont == null) {
						dbIOCont = connectIOContabil(props, logger);
					}

					if (dbIODepara == null) {
						dbIODepara = connectDeParaDb(logger);
					}
					
					if(primeiroArquivo) {
						limparIORoteiro(codEmpresa, tipoLancamento, dbIOCont, logger);
						primeiroArquivo = false;
					}

					//########################################################################

					contaJuros		    = roteiroCRM.optString("contaFixaJuros");
					contaFixaCredito    = roteiroCRM.optString("contaFixaCredito");
					contaFixaDebito     = roteiroCRM.optString("contaFixaDebito");
					contaDesconto 	    = roteiroCRM.optString("contaFixaDesconto");
					
					
					contaMulta		    = roteiroCRM.optString("contaFixaMulta");
					idEmpresa      	    = roteiroCRM.optString("idEmpresa");
					idRoteiro   	    = roteiroCRM.optString("idRoteiro");
					movimentoPortador   = roteiroCRM.optString("movimentoPortador");
					classificaPlano     = roteiroCRM.optString("classificaPlano");
					classificaFornec    = roteiroCRM.optString("classificaFornec");
					cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
					Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
					numSeparadorDuplicata   = roteiroCRM.optString("Coluna_Valor_Duplicata_Dominio");

					tipoPlanilha = "MOVIMENTO";
					boolean enviaEmailExtrato = false;
					boolean naoLeMais = false;

					tipoEmail = "CLIENTE";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZA"))  tipoEmail = "CANAL";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZAF")) tipoEmail = "SUPORTE";

					String debitoCredito   		 = "";
					String chaveExtrato    		 = ""; 

					//if(roteiroCRM.has("contaBuscaPlano"))contaBuscaPlano = roteiroCRM.optString("contaBuscaPlano"); 

					// =======================  ========================   =======================
					// =======================  VARIAVEIS PERSONALIZADAS   =======================
					// =======================  ========================   =======================


					JSONObject objetoParametro = new JSONObject();

					// #DOCUMENTACAO
					// busca de indices da planilha principal
					if (tipoPlanilha.equals("MOVIMENTO")) {
						roteiroCRM = getRoteiro();

						inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
						idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
						inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
						idocumento      = getIndice("documento", idocumento, roteiroCRM);
						ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
						ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
						ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
						ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
						icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
						ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
						ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
						icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
						icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
						icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
						icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
						icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
						icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
						icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
						icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
						icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
						icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
						idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
						icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
						
						zerar 			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
					}
					jStatus = new JSONObject();
					// logger.logDebug("PUTSTATUS 524 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
					if (memFile.getTotalValidLines() > 0) {
						// logger.logDebug("PUTSTATUS 527 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
						putStatus(dirName, "", jStatus, logger);
					}
					
					if (nomeEmpresa.toUpperCase().contains("LMCCC")) logger.logInfo("Entrando Etapa 02");
					
					try{
						// #DOCUMENTACAO
						// leitura linha a linha
						while (memFile.hasNextLine()) {
							// logger.logDebug("PUTSTATUS WHILE " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba);
							try {
								String line = memFile.nextLine();
								line = StringUtil.removeSpecialCharsToUC(line);
								
								// logger.logDebug("Line -> "+tipoPlanilha + "<<>>" + porAba + "<<>>" + cutString(line,0,30));
								// logger.logDebug("TP = "+tipoPlanilha+" | LN = "+line);
								// JWR colocado para nao ocorrer mais casos de lentidao absurda em planilhas que nao conseguiram ler nenhum lancamento ate a linha 500
								contAuxiliar ++;
								
								contadorCabecalho++;
								if (contadorCabecalho<15) {
									cabecalhoPlanilha.append(line).append(" "); 
									cabecalhoRegra.append(stringNormalizer(line.replaceAll("\\|","").replaceAll("\"","").replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replaceAll("  ", " "), true)).append(" "); 
								}
								else {
									cabecalhoPlanilha = new StringBuilder();
									
									// ganha performance nao tendo que ler a planilha vezes pelo template se nao for roteiro secundario 
									if (mantemArquivo.equals("SIM") && tipoPlanilha.equals("MOVIMENTO") && abaConvertida > 2) ignoraAbas = true;
								}
								// logger.logDebug("PUTSTATUS 550");
								if (cont < 10)   putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + "-" + cont + ".status", jStatus, logger);  
								
								// JWR colocado para nao ocorrer mais casos de lentidao absurda em planilhas que nao conseguiram ler nenhum lancamento ate a linha 500
								if (cont == 0 && contAuxiliar == 500 && !nomeArquivo.toUpperCase().contains("FILTRO_")) {
									break;
								}
								   

								////////////////////////////////////////////////////////////////////////////////
								///////////////////////////////////////////////////////////// INICIO DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								JSONObject jDadosPadrao = new JSONObject();
								jDadosPadrao.put("TIPOLANCAMENTO", tipoLancamento).put("NOMEEMPRESA",nomeEmpresa)
											.put("CODEMPRESA", codEmpresa).put("CONTABILIDADE", roteiroCRM.optString("contabilidade"))
											.put("NOMEARQUIVO", nomeArquivo);
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OMC
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--								
								if (nomeArquivo.toUpperCase().contains(".OMC")) {
 
									tipoPlanilha = "EXTRATO";
									jDadosPadrao.put("TIPOPLANILHA",   tipoPlanilha);
									
									// logger.logInfo("2 de 4 = NA = "+nomeArquivo);
 
									mapaVariavel = readOttimizzaMeuCaixa(memFile, dbIOCont, jDadosPadrao, mapaVariavel, logger);
									jStatus = new JSONObject();
									putStatus(dirName, "",  new JSONObject(), logger);
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									// if(roteiroCRM.optString("empresa").toUpperCase().contains("POSTOBRAGA")){//yuri
										cruzaExtrato = "FALSE";
										Cruza_Extrato_com_Extrato = "FALSE";
									// }
									
									mapaArquivo.put(nomeArquivo,ttArq);
									temOMC = true;
									// double tempoInicio1 = System.currentTimeMillis();
									// logger.logDebug("Tempo Rota2; " + String.format("%.2f", (System.currentTimeMillis() - tempoInicio1) / 1000));
									break;
								}

								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OFX
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
								// logger.logDebug("NAOFX NO TEMPLATES " + nomeArquivo.toUpperCase() + " | " + mantemArquivo + " | " +tipoProduto);
								if (nomeArquivo.toUpperCase().contains(".OFX")) {
									
									if (!mantemArquivo.equals("SIM") || !tipoProduto.equals("OIC_PACOTE")) {
										tipoPlanilha = "EXTRATO-OFX";
										

										// quando o OFX vem em apenas 1 linha todas as informacoes
										// quebramos linha e geramos um novo arquivo para gerar como um ofx normal
										if (line.contains("ACCTID")) {
											String fileOfx = dirName + "/" + nomeArquivo.toLowerCase().replaceAll(".ofx","_2.ofx");
											FileWriter writer = new FileWriter(fileOfx);
											writer.writeNewFile(line.replaceAll("><",">\r\n<"));	
										}
										putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", new JSONObject(), logger);     putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", jStatus, logger);
										jDadosPadrao.put("CODEMPRESA", codEmpresa).put("TIPOLANCAMENTO", tipoLancamento)
													.put("NOMEEMPRESA", nomeEmpresa).put("NOMEARQUIVO", nomeArquivo);
										if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) jDadosPadrao.put("CHECKNUM", "CHECKNUM");	//usar para retornar o documento do OFX no complemento02
										readOFXDefault(memFile, jDadosPadrao, dbIOCont, logger);
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 615");
										putStatus(dirName, "",  new JSONObject(), logger);
										temOFX = true;
										if (nomeEmpresa.toUpperCase().contains("LMCCC")) logger.logInfo("Finaliou leitura OFX");
					
										break;
									}
									
									// quando FOR OFX e estiver rodando pelo template
									// e a empresa for OIC pacote rodar pela especifica, entao foi dado um break para agili
									if (mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
										break;
									}
									
								}
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do roteiro movimento (principal), OFX e demais devem ficar para a rota normal
								// if(codEmpresa.equals("3673")){
									// logger.logDebug("mAATEMPLATE " + mantemArquivo + " | " + tipoProduto + " | " + apagaArquivo + " | " + roteiroCRM.optString("Planilhas_Padroes") + " | " + tipoPlanilha + " | " + tipoProduto);									
								// }
 								/*if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE"))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

 
									JSONObject variaveis = new JSONObject();
									variaveis.put("line", 			line);
									variaveis.put("anoData", 		anoData); 
									variaveis.put("dirName", 		dirName);
									variaveis.put("jStatus", 		jStatus);
									variaveis.put("extensao", 		extensao);
									variaveis.put("codEmpresa", 	codEmpresa);
									variaveis.put("nomeArquivo", 	nomeArquivo);
									variaveis.put("nomeEmpresa", 	nomeEmpresa);
									variaveis.put("nomePortador", 	nomePortador);
									variaveis.put("tipoPlanilha", 	tipoPlanilha);
									variaveis.put("complemento01", 	complemento01);
									variaveis.put("complemento02", 	complemento02);
									variaveis.put("nomePortador2", 	nomePortador2);
									variaveis.put("tipoLancamento", tipoLancamento);
									variaveis.put("cabecalhoPlanilha", cabecalhoPlanilha.toString());																		
																		
									String retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									//logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									// logger.logDebug("NP2 == "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										logger.logDebug("PUTSTATUS 657");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}*/
								if(codEmpresa.contains("409")) logger.logInfo("CP == "+cabecalhoPlanilha.toString());
								if (!cabecalhoPlanilha.toString().equals("") && (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

									JSONObject variaveis = new JSONObject();
									variaveis.put("line", line).put("anoData", anoData).put("dirName", dirName).put("jStatus", jStatus)
											 .put("extensao", extensao).put("codEmpresa", codEmpresa).put("nomeArquivo", nomeArquivo)
											 .put("nomeEmpresa", nomeEmpresa).put("nomePortador", nomePortador).put("tipoPlanilha", tipoPlanilha)
											 .put("complemento01", complemento01).put("complemento02", complemento02)
											 .put("nomePortador2", nomePortador2).put("tipoLancamento", tipoLancamento)
											 .put("cabecalhoPlanilha", cabecalhoPlanilha.toString());									
									
									// if (codEmpresa.contains("104")) {
										// roteiroCRM.put("Planilhas_Padroes", "Extrato_C6Bank_PDF");
									// }
									
									// logger.logDebug("nome do arquivo " + nomeArquivo);
									
									// logger.logInfo("LN TEMPLATE = "+line);
									
									retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									
									// logger.logDebug("retorna padroes -> " + retornaPadroes);
									
									
									// logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									
									// logger.logDebug("NP23 " + nomePortador + " | " + nomePortador2);
									
									// logger.logDebug("NP2 ==== "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}

								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								//                      LEITURA PADRAO DE DUPLICATAS
								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && !mantemArquivo.equals("SIM")){

 
									jDadosPadrao.put("erpContabilidade", roteiroCRMPrincipal.optString("erpContabilidade"))
												.put("LINE", line).put("PRIMEIRAVEZ", primeiraVezDuplicata).put("DIRNAME", dirName)
												.put("TIPOPLANILHA", tipoPlanilha).put("TIPOLANCAMENTO", tipoLancamento);
									
									if (!numSeparadorDuplicata.equals("")) jDadosPadrao.put("NUMSEPARADOR", numSeparadorDuplicata);
									
									if (!roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
										jDadosPadrao.put("CONTROLAPARCELA",  true);  

									} 
 
									primeiraVezDuplicata = leituraDuplicataPadrao(jDadosPadrao, memFile, mapaVariavel, dbIOCont, logger);

									if(!primeiraVezDuplicata){
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 687");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								} 
								
								if (cont < 2) {
									// logger.logDebug(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()));
									if (TemplateUtils.verificaConciliacao(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()))) {
										mapaConciliacao = leituraConciliacao(mapaConciliacao, memFile, logger);
										fazConciliacao = true;
										break;
									}
								}

								//implementa leitura do arquivo de participantes lcdpr
								if (roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO") && !mantemArquivo.equals("SIM")) {
									if (fazLcdpr.equals("TRUE") && cont < 2) {
										if (memFile.getLines().toString().toUpperCase().contains("RELACAO DE PARTICIPANTES DA ATIVIDADE RURAL")){
											mapaParticipante = leituraLivroCaixaDigitalProdutorRural(mapaParticipante, memFile, logger);
											break;
										}
									}
									/// BUSCA COTNRATOS EM ABERTO (RECEBIMENTOS) PARA BAIXA DE CONTRATOS IMOBILIARIOS
									if(roteiroCRM.optString("Integracao_contratos").toUpperCase().contains("TRUE")) {
										
										if (line.contains("DOCUMENTO") && 
											line.contains("EMISSAO") && 
											line.contains("V. PARCELA") && 
											line.contains("DEVOLUCAO") && 
											line.contains("SALDO") && 
											line.contains("SITUACAO")) {
											

											tipoPlanilha = "DUPLICATA-DOMINIO"; 

											if(primeiraVezDuplicata) limparIODuplicataTipoPlanilha(codEmpresa, dbIOCont, tipoPlanilha, logger);

											JSONObject jIndices = new JSONObject();
												
											jIndices.put("IVENCIMENTO", 9).put("INOMEORIGEM", 4).put("IDUPLICATA", 4).put("IVALORPARCELA", 12)
													.put("CODEMPRESA", codEmpresa).put("TIPOPLANILHA", tipoPlanilha);

											primeiraVezDuplicata = inserirIODuplicata_DominioPlanilha02(jIndices, memFile, dbIOCont, logger);
											primeiraVezDuplicata = false;
											jStatus = new JSONObject();
											// logger.logDebug("PUTSTATUS 730");
											putStatus(dirName, "", jStatus, logger);

											break;
										}
									}
								}
																
								
									
								////////////////////////////////////////////////////////////////////////////////
								//////////////////////////////////////////////////////////////// FIM DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								// #DOCUMENTACAO
								// lipeza de variaveis e de indices ao mudar de TIPOPLANILHA
								// logger.logDebug("CPTS " + cabecalhoPlanilha.toString());
								JSONObject jDadosObj = new JSONObject();
								if(!tipoPlanilha.equals(getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj))){
									inomeOrigem			= -1;		nomeOrigem		= "";
									idataMovimento		= -1;		dataMovimento	= "";
									inomePortador		= -1;		nomePortador	= "";
									idocumento			= -1;		documento		= "";
									icpfCnpj			= -1;		cpfCnpj			= "";
									icodCcOrigem		= -1;       codCcOrigem		= "";
									icomplemento01		= -1;      	complemento01	= "";
									icomplemento02		= -1;      	complemento02	= "";
									icomplemento03		= -1;      	complemento03	= "";
									icomplemento04		= -1;      	complemento04	= "";
									icomplemento05		= -1;      	complemento05	= "";
									icomplemento06		= -1;      	complemento06	= "";
									ivalorDocumento		= -1;		complemento07	= "";
									ivalorAlternativo	= -1;		complemento08	= "";
									ivalorJuros			= -1;		complemento09	= "";
									ivalorDesconto		= -1;		complemento10	= "";
									ivalorMulta			= -1;
									ivalorPagamento		= -1;
									idataFake			= -1;
								}
								// #DOCUMENTACAO
								// busca tipoplanilha e indices da planilhas secundarias
								
								tipoPlanilha = getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj);
								// if(codEmpresa.equals("214")){
									// logger.logInfo("L = TP -> "+tipoPlanilha+" | LN = "+line);
								// }
								
								if (nomeArquivo.toUpperCase().contains(".PDF") && !nomeArquivo.toUpperCase().contains(".CSV")) {
									if (TemplateUtils.verificaConversorNovoTipoPlanilha(tipoPlanilha)) {
										// LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
										String idConversor  = TemplateUtils.getIdLote(nomeArquivo);
										// logger.logDebug("FOI PRO CONVERSOR1 " + nomeArquivo);
										boolean deubom = false;
										deubom = buscaProtocoloConversor(idConversor, apiWeb, tipoLancamento.toLowerCase(), nomeArquivo, logger);
										
										if (deubom) {
											File file2 = new File(dirName);
									
											File []  arquivoParaConverter = file2.listFiles();
											if (FileUtil.dirHasFiles(dirName)) {
												for (File fl: arquivoParaConverter) {
													if (fl.getName().toUpperCase().contains(".PDF")) {
														try {
															FileUtil.deleteFile(fl);
														} catch (Exception XX) {}
														break;
													}
												}
											}
										}
										continue;
									}
								}
								
								//#2306-007459
								if(tipoPlanilha.contains("CARTAO_SIPAG7") && extensao.contains("CSV")){
									memFile.setFieldSeparator(";");
								}
 
								if(!tipoPlanilha.equals("MOVIMENTO")){
									roteiroCRM = buscaRoteiro("getRoteiro"+tipoPlanilha, logger);
									inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
									idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
									inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
									idocumento      = getIndice("documento", idocumento, roteiroCRM);
									ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
									ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
									ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
									ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
									icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
									ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
									ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
									icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
									icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
									icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
									icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
									icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
									icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
									icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
									icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
									icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
									icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
									idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
									icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
									
									zerar			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
									
									
									// Em casos onde a planilha secund?ria precisa de uma aba espec?fica descomentar essa linha
									if(!roteiroCRM.optString("Abas_Especificas").equals("") && !roteiroCRM.optString("Abas_Especificas").contains(String.valueOf(abaConvertida))) continue;

								}
								
								if(nomeArquivo.toUpperCase().contains("OTTIMIZZA")){
									if(!logsTxt.toString().contains("MANTEMARQUIVO"))logsTxt.append("STATUS;DATA;VALOR;DOCUMENTO;CLIENTE/FORNECEDOR;PORTADOR;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;COMPLEMENTO06;TIPOPLANILHA;MANTEMARQUIVO;PROCESSAOUD;LINHA;");
									logs = true;
								}

								// #DOCUMENTACAO
								// tratamento de "Agrupar Colunas Excel" e "Agrupar a partir da coluna"
								try {
									fazerShrinkDelimitandoPosicoes(roteiroCRM, memFile);
								} catch (IllegalArgumentException e) {
									//TODO: handle exception
									erroShrink = true;
									logger.logError("Deu ruim no shrink \n"+e);
									break;
								}
								/////////////////////////////
								// VALIDACAO POR CABECALHO //
								/////////////////////////////
 

 								inomeOrigem		= getIndiceCabecalho("nomeOrigem", inomeOrigem, memFile, roteiroCRM);
								idataMovimento	= getIndiceCabecalho("dataMovimento", idataMovimento, memFile, roteiroCRM);
								inomePortador	= getIndiceCabecalho("nomePortador", inomePortador, memFile, roteiroCRM);
								idocumento		= getIndiceCabecalho("documento", idocumento, memFile, roteiroCRM);
								ivalorDocumento	= getIndiceCabecalho("valorDocumento", ivalorDocumento, memFile, roteiroCRM);
								ivalorJuros		= getIndiceCabecalho("valorJuros", ivalorJuros, memFile, roteiroCRM);
								ivalorDesconto	= getIndiceCabecalho("valorDesconto", ivalorDesconto, memFile, roteiroCRM);
								ivalorMulta		= getIndiceCabecalho("valorMulta", ivalorMulta, memFile, roteiroCRM);
								ivalorAlternativo = getIndiceCabecalho("valorAlternativo", ivalorAlternativo, memFile, roteiroCRM);
								ivalorPagamento	= getIndiceCabecalho("valorPagamento", ivalorPagamento, memFile, roteiroCRM);
								icodCcOrigem	= getIndiceCabecalho("codCcOrigem", icodCcOrigem, memFile, roteiroCRM);
								
								icomplemento01	= getIndiceCabecalho("complemento01", icomplemento01, memFile, roteiroCRM);
								icomplemento02	= getIndiceCabecalho("complemento02", icomplemento02, memFile, roteiroCRM);
								icomplemento03	= getIndiceCabecalho("complemento03", icomplemento03, memFile, roteiroCRM);
								icomplemento04	= getIndiceCabecalho("complemento04", icomplemento04, memFile, roteiroCRM);
								icomplemento05	= getIndiceCabecalho("complemento05", icomplemento05, memFile, roteiroCRM);
								icomplemento06	= getIndiceCabecalho("complemento06", icomplemento06, memFile, roteiroCRM);
								icomplemento07	= getIndiceCabecalho("complemento07", icomplemento07, memFile, roteiroCRM);
								icomplemento08	= getIndiceCabecalho("complemento08", icomplemento08, memFile, roteiroCRM);
								icomplemento09	= getIndiceCabecalho("complemento09", icomplemento09, memFile, roteiroCRM);
								icomplemento10	= getIndiceCabecalho("complemento10", icomplemento10, memFile, roteiroCRM);
								idataFake		= getIndiceCabecalho("dataFake", idataFake, memFile, roteiroCRM);
								icpfCnpj		= getIndiceCabecalho("cpfCnpj", icpfCnpj, memFile, roteiroCRM);
								
								isLinhaPrincipal = false;
								ignorarAntes = false;

								JSONObject histobj = new JSONObject();
								lerAposPrincipal = roteiroCRM.optString("lerAposPrincipal").toUpperCase();

								// #DOCUMENTACAO
								// ignorar antes
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO")) {

									histobj.put("nomeOrigem", getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger)).put("documento", getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger)).put("complemento01", getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger)).put("complemento02", getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger)).put("complemento03", getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger)).put("complemento04", getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger)).put("complemento05", getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger)).put("complemento06", getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger)).put("nomePortador", getCampoString(nomePortador,	inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger)).put("dataMovimento", "").put("mesAnoAnterior", "").put("mesAno2Anterior", "").put("mesAnoAtual", "").put("contaMovimento", "").put("contaPortador", "").put("contaDebito", "").put("contaCredito", "").put("contaJuros", contaJuros).put("contaDesconto", contaDesconto)
										   .put("contaMulta", contaMulta).put("valorDocumento", "").put("valorJuros", "")
										   .put("valorDesconto", "").put("valorMulta","").put("codFilial", "")
										   .put("numeroAba", String.valueOf(abaConvertida)).put("tipoPlanilha", tipoPlanilha)
										   .put("nomeArquivo", nomeArquivo.toUpperCase());

									ignorarAntes = getTratarLinhaIgnorar(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento,
																		 getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger),
																		 getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger), histobj);

									if (ignorarAntes) continue;

									double valorValido = 0;
									try{valorValido = Math.abs(memFile.getDoubleField(ivalorDocumento));}
									catch (Exception vlrd) { valorValido = 0; }

									if(ivalorDocumento < 0 && ivalorPagamento >= 0){
										try{valorValido = Math.abs(memFile.getDoubleField(ivalorPagamento));}
										catch (Exception vlrd) { valorValido = 0; }
									}


									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&  valorValido > 0) isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !histobj.optString("nomeOrigem").equals("")) isLinhaPrincipal = true;

								}

								if (naoLeMais) continue;
								if (tipoPlanilha.equals("")) continue;
								
								//2404-034999 e 2404-036372 - Extratos santander pdf e excel processavam duas vezes, com o tipoPlanilha "EXTRATO" em uma e "MOVIMENTO" em outra
								if(roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("SZXCONSULTORIA") &&
								codEmpresa.equals("00012") && tipoPlanilha.contains("MOVIMENTO")){

									if(ehExtratoPadrao){
										continue;
									}

									if(contadorCabecalho <= 5){ //Para a busca ser feita apenas nas 5 primeiras linhas
										if(memFile.getLines().toString().toUpperCase().contains("CENTRAL DE ATENDIMENTO SANTANDER") || memFile.getLines().toString().toUpperCase().contains("INTERNET BANKING") ||
										memFile.getLines().toString().toUpperCase().contains("SANTANDER.COM") || (line.contains("AGENCIA") && line.contains("CONTA")) ||
										(memFile.getLines().toString().toUpperCase().contains("ISIN/IDENTIFICADOR") && memFile.getLines().toString().toUpperCase().contains("CARTEIRA"))){ //
											ehExtratoPadrao = true;
											continue;

										}
									}
								}

								

								// #DOCUMENTACAO
								// leitura de xlsx e csv
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") || (!roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA(") && !roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA ("))) {
									TemplateUtils templateUtil = new TemplateUtils();
									zerar 			  = !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
 									
									// #Fabrica(2019-05-20)
									if (tipoPlanilha.contains("OTTCARTAO")) {
										dataMovimento = templateUtil.getDataOttCartao(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), tipoPlanilha, idataMovimento, line, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);logger.logInfo("DT dps -> " + dataMovimento);
										dataLote	  = getCampoDate(dataMovimento, "", "yyyy-MM");
									}
									
									if (!tipoPlanilha.contains("OTTCARTAO")) {
										// #Fabrica(2019-05-20)
										try{
											dataMovimento     = getDate(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);
											 
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
										}catch(Exception e){
											// dataMovimento   = "";
											// dataLote        = "";
										}
									}
									
									 
									if(templateUtil.validaPlanilhaPadrao(tipoLancamento, memFile)) break;
									// logger.logDebug("TP -> "+tipoPlanilha+" - Empresa -> "+nomeEmpresa+" - DM -> "+line);
									
									
 								   
									// leitura de data mantida por seguranca
									// String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger).trim();
									// if (!dataString.equals("")) {
									// 	String dataMovimentoAux	  = getCampoDate(dataString);
									// 	if (dataMovimentoAux.contains("/")) {
									// 		dataMovimento     = getCampoDate(dataString);
									// 		dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
									// 	}
									// }

									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals("")) isLinhaPrincipal = true;
								
									
									if (!zerarColAlternativo.equals("")) {
										if (zerarColAlternativo.contains("documento"))		documento		= "";
										if (zerarColAlternativo.contains("nomeOrigem"))		nomeOrigem		= "";
										if (zerarColAlternativo.contains("nomePortador"))   nomePortador	= "";
										if (zerarColAlternativo.contains("complemento01"))  complemento01	= "";
										if (zerarColAlternativo.contains("complemento02"))  complemento02	= "";
										if (zerarColAlternativo.contains("complemento03"))  complemento03   = "";
										if (zerarColAlternativo.contains("complemento04"))  complemento04   = "";
										if (zerarColAlternativo.contains("complemento05"))  complemento05   = "";
										if (zerarColAlternativo.contains("complemento06"))  complemento06   = "";
										if (zerarColAlternativo.contains("complemento07"))  complemento07   = "";
										if (zerarColAlternativo.contains("complemento08"))  complemento08   = "";
										if (zerarColAlternativo.contains("complemento09"))  complemento09   = "";
										if (zerarColAlternativo.contains("complemento10"))  complemento10   = "";
									}
									
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, logger);
									
									if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
										complemento09 = templateUtil.validaComplementoVencimento(roteiroCRM, roteiroCRMPrincipal, line, memFile, logger);
									}
									
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, logger);

									historico		= "";
									parcelaDoc      = 1;

									valorDocumento	= 0;
									valorDocumentoArray[0] = 0;
									valorDocumentoArray[1] = 0;
									valorDocumentoArray[2] = 0;
									valorDocumentoArray[3] = 0;
									valorDocumentoArray[4] = 0;
									valorDocumentoArray[5] = 0;
									valorDocumentoArray[6] = 0;
									valorDocumentoArray[7] = 0;
									valorDocumentoArray[8] = 0;
									valorDocumentoArray[9] = 0;
									
									valorJuros		= 0;
									valorDesconto	= 0;
									valorMulta		= 0;
									valorPagamento	= 0;
									
									debitoCredito 	= "";
									valorAlternativo = 0;
									
									if(ivalorJuros >=0){
										try{valorJuros = Math.abs(memFile.getDoubleField(ivalorJuros));}
										catch (Exception vlrj) { valorJuros = 0;}
									}
									
									if(ivalorDesconto >=0){
										try{valorDesconto = Math.abs(memFile.getDoubleField(ivalorDesconto));}
										catch(Exception vlrd) {valorDesconto = 0;}
									}
									
									// quando no CRM colocarmos que a coluna de juros eh a mesma de valor desconto 
									// no caso do valor ser negativo, jogaremos zero para juros, ficando o valor absoluto da coluna como desconto
									// no caso do valor ser positivo, jogamos zero em valor desconto, ficando apenas com o valor dos juros
									if((ivalorDesconto == ivalorJuros) && valorJuros > 0 && ivalorJuros > 0){
										try{
											if(memFile.getDoubleField(ivalorDesconto) < 0) valorJuros = 0;
											else valorDesconto = 0;
										} catch(Exception vlrd) {}
									}
									
									if(ivalorMulta >=0){
										try{valorMulta = Math.abs(memFile.getDoubleField(ivalorMulta));}
										catch(Exception vlrm) {valorMulta = 0;}
									}
									
									//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if(ivalorDocumento >=0){
										try{valorDocumento = memFile.getDoubleField(ivalorDocumento);}
										catch (Exception vlrd) { valorDocumento = 0; }
									}
									
									// if(codEmpresa.contains("611")) logger.logInfo("TP = "+tipoPlanilha+" | V = "+valorDocumento+" | DT = "+dataMovimento+" | NO = "+nomeOrigem+" | NP = "+nomePortador);
									
									
									if(logs && cont <= 200){
										
										logsTxt.append("\r\n");
										logsTxt.append("ANALISTA AUX").append(";").append(dataMovimento).append(";").append(valorDocumento).append(";")
											   .append(documento).append(";").append(nomeOrigem).append(";").append(nomePortador).append(";").append(complemento01)
											   .append(";").append(complemento02).append(";").append(complemento03).append(";").append(complemento04).append(";")
											   .append(complemento05).append(";").append(complemento06).append(";").append(tipoPlanilha).append(";")
											   .append(mantemArquivo.equals("SIM") ? "LENDO PELO TEMPLATE (SIM)" : "LENDO ESPECIFICO (NAO)").append(";")
											   .append(line).append(";");
																	
									}

									// logger.logDebug("ROTEIRO coluna Extra => " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " |TP => " + tipoPlanilha);
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
										String [] indiceValores = roteiroCRM.optString("Colunas_de_Valores_Extras").split(";");
										valorSomaArray = 0;
										for(int iv = 0; iv < indiceValores.length; iv++) {
											// try{
												// logger.logDebug("IDValores -> " + indiceValores[iv].toString());
												// if(!indiceValores[iv].contains("*") && !indiceValores[iv].contains("/") && !indiceValores[iv].contains("+") && !indiceValores[iv].contains("-") && !indiceValores[iv].contains("#")){
													// logger.logDebug("ENTROU IF");
													// String rotuloColuna = "";
													// String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";");
													// logger.logDebug("ROTULO ARRAY => " +rotuloArray[iv].toString());
													// indiceValores[iv]	= getIndiceCabecalhoExtra(rotuloArray[iv], memFile);
													// logger.logDebug("INDICE dps => " +indiceValores[iv].toString());
												// }
											// }catch(Exception xx){
												// logger.logDebug("CAIU CATCH");
											// }
												
											//ssss
											double denomidador = 0; 
											int indiceDenominador = -1;
											String sinal = "";
											boolean multiplica100 = false;
											boolean divide100 = false;
											
											if (indiceValores[iv].contains("*100")) multiplica100 = true;
											if (indiceValores[iv].contains("/100")) divide100 = true;
											indiceValores[iv] = indiceValores[iv].replace("*100","").replace("/100","");
											
											if (indiceValores[iv].contains("*")) sinal = "*";
											if (indiceValores[iv].contains("/")) sinal = "/";
											if (indiceValores[iv].contains("+")) sinal = "+";
											if (indiceValores[iv].contains("-")) sinal = "-";										

																					
											if (!sinal.equals("") && indiceValores[iv].contains(sinal)) {
 												try {
													if (!indiceValores[iv].contains("#")) {
														denomidador = Math.abs(memFile.getDoubleField(Integer.parseInt(cutString(indiceValores[iv], sinal))));
													}
													else {
														denomidador = DecimalUtil.toDecimal(cutString(indiceValores[iv], "#"));
													}
												} catch (Exception xx) {denomidador = 0;}
												indiceValores[iv] = cutString(indiceValores[iv], 0, sinal);
											} 
											 	
											
											try{
											
												valorDocumentoArray[iv] = Math.abs(memFile.getDoubleField(Integer.parseInt(indiceValores[iv])));
												if (sinal.equals("*") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] * denomidador;
												if (sinal.equals("/") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] / denomidador;
												if (sinal.equals("+") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] + denomidador;
												if (sinal.equals("-") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] - denomidador;
												if (multiplica100) valorDocumentoArray[iv] = valorDocumentoArray[iv] * 100;
												if (divide100)     valorDocumentoArray[iv] = valorDocumentoArray[iv] / 100;
												
 
												
 											}
											catch (Exception vlrd) { 

 
 
												valorDocumentoArray[iv] = 0; 
											}
											
											if(valorDocumentoArray[iv] < 0){
												valorDocumentoArray[iv] = 0;
											} 
											
											valorSomaArray += valorDocumentoArray[iv];
										}
									}
									
									
									if(ivalorPagamento >=0){
										try{valorPagamento	= memFile.getDoubleField(ivalorPagamento);}
										catch(Exception vlrp) {valorPagamento = 0;}
									}
									
									if(ivalorAlternativo >= 0){
										try{valorAlternativo = memFile.getDoubleField(ivalorAlternativo);}
										catch (Exception vlrd) { valorAlternativo = 0; }
									}
									
									if (tipoLancamento.equals("PAGAR"))
										debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER"))
										debitoCredito = "EXTRATO-CREDITO";
								
									
									////////////////////////////////////////////////
									////	busca Coluna Alternativa 
									JSONObject obj1 = new JSONObject();
									String validar	= "dataMovimento;nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador;valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";
									obj1.put("validar", validar).put("documento", documento).put("nomeOrigem", nomeOrigem).put("nomePortador", nomePortador)
										.put("dataMovimento", dataMovimento).put("complemento01", complemento01).put("complemento02", complemento02)
										.put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", complemento05)
										.put("complemento06", complemento06).put("complemento07", complemento07).put("complemento08", complemento08)
										.put("complemento09", complemento09).put("complemento10", complemento10).put("codCentroCusto", codCcOrigem)
										.put("tipoPlanilha", tipoPlanilha).put("numeroAba",	String.valueOf(abaConvertida)).put("nomeArquivo", nomeArquivo.toUpperCase());
									
									JSONObject alternativeObj = getAlternativeDataInt (obj1, memFile);
									String changed = alternativeObj.optString("changeIt");
									
									if(!changed.equals("")) {
										zerarColAlternativo = changed;
										if (changed.contains("dataMovimento")) {
											dataMovimento	= alternativeObj.optString("dataMovimento");
											dataLote		= alternativeObj.optString("dataLote");
										}
										if (changed.contains("documento"))		documento		= alternativeObj.optString("documento");
										if (changed.contains("nomeOrigem"))		nomeOrigem		= alternativeObj.optString("nomeOrigem");
										if (changed.contains("nomePortador"))   nomePortador	= alternativeObj.optString("nomePortador");
										
										if (changed.contains("complemento01"))  complemento01	= alternativeObj.optString("complemento01");
										if (changed.contains("complemento02"))  complemento02	= alternativeObj.optString("complemento02");
										if (changed.contains("complemento03"))  complemento03   = alternativeObj.optString("complemento03");
										if (changed.contains("complemento04"))  complemento04   = alternativeObj.optString("complemento04");
										if (changed.contains("complemento05"))  complemento05   = alternativeObj.optString("complemento05");
										if (changed.contains("complemento06"))  complemento06   = alternativeObj.optString("complemento06");
										if (changed.contains("complemento07"))  complemento07   = alternativeObj.optString("complemento07");
										if (changed.contains("complemento08"))  complemento08   = alternativeObj.optString("complemento08");
										if (changed.contains("complemento09"))  complemento09   = alternativeObj.optString("complemento09");
										if (changed.contains("complemento10"))  complemento10   = alternativeObj.optString("complemento10");
										
										if (changed.contains("valorDocumento"))	valorDocumento	= alternativeObj.optDouble("valorDocumento");
										
										if (changed.contains("valorPagamento"))	valorPagamento  = alternativeObj.optDouble("valorPagamento");
										if (changed.contains("valorDesconto"))	valorDesconto	= alternativeObj.optDouble("valorDesconto");
										if (changed.contains("valorJuros"))		valorJuros		= alternativeObj.optDouble("valorJuros");
										if (changed.contains("valorMulta"))		valorMulta		= alternativeObj.optDouble("valorMulta");
									}
									

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(ivalorAlternativo >= 0) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && ivalorAlternativo >= 0){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if((ivalorDocumento < 0 || tipoPlanilha.contains("PADRAOOTTIMIZZA")) && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento>0 && ivalorJuros < 0 && ivalorDesconto < 0 && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}

									valorDocumento = Math.abs(valorDocumento);
									

									
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0)) isLinhaPrincipal = true;
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&
										lerAposPrincipal.equals("") && (valorDocumento == 0 && valorSomaArray == 0)) {
											
										continue;
									}
								}
								
 

								// #DOCUMENTACAO
								// leitura de TXT
								if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && roteiroCRM.optString("dataMovimento").replaceAll(" ", "").toUpperCase().startsWith("COLUNA(") && roteiroCRM.optString("dataMovimento").endsWith(")")) {
  
									String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, roteiroCRM, logger).trim();
  
   
									if (!dataString.equals("") && dataString.contains("/")) {
										String dataMovimentoAux	  = getCampoDate(dataString);
										if (dataMovimentoAux.contains("/")) {
											dataMovimento     = getCampoDate(dataString);
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
 										}
									}
  									
  
									// ajusta data quando vem no formato 01012021  
									if (!dataString.equals("") && !dataString.contains("/") && dataString.contains("20")) {
										try {
											Date dts = DateUtil.stringToDate(dataString, "ddMMyyyy");
											dataMovimento = DateUtil.dateToString(dts, "dd/MM/yyyy");
											dataLote = DateUtil.dateToString(dts, "yyyy-MM");
											if (!dataMovimento.contains("/20")) {   // data bichada sera ignorada
												dataMovimento = "";
												continue;
											}
										} catch (Exception dt1) {
											continue;
										}
									}
  
 
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, roteiroCRM, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, roteiroCRM, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, roteiroCRM, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, roteiroCRM, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, roteiroCRM, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, roteiroCRM, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, roteiroCRM, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, roteiroCRM, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, roteiroCRM, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, roteiroCRM, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, roteiroCRM, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, roteiroCRM, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, roteiroCRM, logger);
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, roteiroCRM, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, 	line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, roteiroCRM, logger);


									valorDocumento = getDoubleTXT2020(roteiroCRM.optString("valorDocumento").toUpperCase(), line, objetoParametro);
									
									if (tipoPlanilha.contains("OTTCARTAO")) {
									    String valorStr = getCampoString("", -1, 	line, false, roteiroCRM.optString("valorDocumento").toUpperCase(), memFile, roteiroCRM, logger);
										if (!valorStr.contains(".") && !valorStr.contains(",")) valorDocumento = valorDocumento / 100;
									}

									valorJuros	   = getDoubleTXT2020(roteiroCRM.optString("valorJuros").toUpperCase(), line, objetoParametro);
									valorDesconto  = getDoubleTXT2020(roteiroCRM.optString("valorDesconto").toUpperCase(), line, objetoParametro);
									valorMulta 	   = getDoubleTXT2020(roteiroCRM.optString("valorMulta").toUpperCase(), line, objetoParametro);
									valorPagamento = getDoubleTXT2020(roteiroCRM.optString("valorPagamento").toUpperCase(), line, objetoParametro);

									if (tipoLancamento.equals("PAGAR")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-CREDITO";

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}

									if(!roteiroCRM.optString("valorDocumento").toUpperCase().contains("COLUNA") && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento > 0 && !roteiroCRM.optString("valorJuros").toUpperCase().contains("COLUNA") && !roteiroCRM.optString("valorDesconto").toUpperCase().contains("COLUNA") && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}
									
									//#2305-0004328. Coluna de valor extra para o formato txt
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
                                        valorSomaArray = TemplateUtils.lerValoresExtrasArquivoTxt(valorDocumentoArray, line, roteiroCRM, null);
                                    }
									valorDocumento = Math.abs(valorDocumento);
									
									// if(logs && cont <= 200){
										// logsTxt.append("\r\n");
										
										// logsTxt.append("ANALISTA AUX");												logsTxt.append(";");
										// logsTxt.append(dataMovimento); 												logsTxt.append(";");
										// logsTxt.append(valorDocumento);												logsTxt.append(";");
										// logsTxt.append(documento);													logsTxt.append(";");
										// logsTxt.append(nomeOrigem);													logsTxt.append(";");
										// logsTxt.append(nomePortador);												logsTxt.append(";");
										// logsTxt.append(complemento01);												logsTxt.append(";");
										// logsTxt.append(complemento02);												logsTxt.append(";");
										// logsTxt.append(complemento03);												logsTxt.append(";");
										// logsTxt.append(complemento04);												logsTxt.append(";");
										// logsTxt.append(complemento05);												logsTxt.append(";");
										// logsTxt.append(complemento06);												logsTxt.append(";");
										// logsTxt.append(tipoPlanilha);												
										// if(mantemArquivo.equals("SIM"))logsTxt.append("LENDO PELO TEMPLATE");		logsTxt.append(";");
										// if(mantemArquivo.equals("NAO"))logsTxt.append("LENDO ESPECIFICO");			logsTxt.append(";");
										// logsTxt.append(line);														logsTxt.append(";");
																		
									// }
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals(""))  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0))		  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !nomeOrigem.equals("")) isLinhaPrincipal = true;
								}


								// #DOCUMENTACAO
								// mes ano anterior 
								if(dataMovimento.length() > 9){
									mesRef	= Integer.parseInt(dataMovimento.substring(3,5));
									anoRef	= Integer.parseInt(dataMovimento.substring(6,10));
									mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
								}
								
								// #DOCUMENTACAO
								// filtro de datas (parametro definido por integracao no CRM, e informado a cada processamento de arquivos)
								//if (nomeArquivo.toUpperCase().contains("FILTRO_")) filtro = validaFiltro(nomeArquivo, dataMovimento);
								if (nomeArquivo.toUpperCase().contains("FILTRO_")) {
									temFiltro = true;
									filtro = validaFiltro(nomeArquivo, dataMovimento);
								}
								
								if (!filtro) continue;

								valorTotalDoc   += valorDocumento;
								valorTotalJuros += valorJuros;
								valorTotalDesc  += valorDesconto;

								if (documento.contains(".") && documento.contains("E")) {
									documento = removerNotacaoCientificaExcel(documento);
								}
								
								// #DOCUMENTACAO
								// cpfCnpj
								boolean aceitaCpf			= true;
								boolean cnpjSomenteNumeros	= Boolean.parseBoolean(roteiroCRM.optString("cnpjSomenteNumeros").toLowerCase().trim());

								if(!cpfCnpj.equals("")) cpfCnpj = trataCpfCnpj(cpfCnpj, cnpjSomenteNumeros, aceitaCpf);
								
								// #DOCUMENTACAO
								// ajustes fornecedor/cliente e portador
								if (nomeOrigem.equals("") && !roteiroCRM.optString("lerAposPrincipal").toUpperCase().contains("FORNECEDOR")) nomeOrigem = complemento01 + " " + dataMovimento + " R$" + String.valueOf(valorDocumento);
								nomeOrigem = nomeOrigem.trim();
								
								//Removemos o replace de AMP por conta de um efeito colateral #202212-0022861
								//nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("AMP","").trim();
								nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								// nomeOrigem = stringNormalizer(nomeOrigem, true);
								nomeOrigem = StringUtil.removeSpecialCharsToUC(nomeOrigem);
								
								// 202301-0023496 JWR Coloquei esse balde com o X para remontar o nomeOrigem
								// Descomentar caso d? problema com caracteres especiais
								/*String letrasPermitidas = "ABCDEFGHIJKLMNOPRSTUVWXYZ 0123456789.-/&";
								String nomeOrigemNovo = "";
								for (int xx = 0; xx < nomeOrigem.length(); xx++) {
									if (nomeOrigem.length() > xx) {
										if (letrasPermitidas.contains(nomeOrigem.substring(xx, xx+1))) {
											nomeOrigemNovo = nomeOrigemNovo + nomeOrigem.substring(xx, xx+1);
										}
									}
								}
								nomeOrigem = nomeOrigemNovo;*/

								
								if (roteiroCRM.optString("portador").toUpperCase().contains("NOME") && roteiroCRM.optString("portador").toUpperCase().contains("ARQUIVO")) nomePortador = StringUtil.removeSpecialCharsToUC(nomeArquivo).toUpperCase();
								nomePortador = nomePortador.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("\\?", "").trim();
								nomePortador = stringNormalizer(nomePortador, true);

								complemento01 = complemento01.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento02 = complemento02.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento03 = complemento03.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento04 = complemento04.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento05 = complemento05.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento06 = complemento06.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();

								// logger.logDebug("DAMA " + dataMovimento + " | " + valorDocumento + " | " + isLinhaPrincipal);
								if(dataMovimento.equals("")) continue;
								// quando for ler linha principal zerar as variaveis que vem depois da principal para nao sobrepor campos.
								if(isLinhaPrincipal) {
									// #DOCUMENTACAO
									// cont define que eh um novo lancamento (normalmente uma nova linha)
									cont++;

									if (lerAposPrincipal.contains("FORNECEDOR"))	nomeOrigem = "";
									if (lerAposPrincipal.contains("DOCUMENTO"))		documento = "";
									if (lerAposPrincipal.contains("PORTADOR")) 		nomePortador = "";
									if (lerAposPrincipal.contains("COMPLEMENTO01")) complemento01 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO02")) complemento02 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO03")) complemento03 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO04")) complemento04 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO05")) complemento05 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO06")) complemento06 = "";

								}
								
								if(cont == 0) continue;
								
								histobj.put("nomeOrigem", nomeOrigem).put("documento", documento).put("complemento01", complemento01).put("complemento02", complemento02)
									   .put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", complemento05).put("complemento06", complemento06)
									   .put("complemento07", complemento07).put("complemento08", complemento08).put("complemento09", complemento09).put("complemento10", complemento10)
									   .put("dataMovimento", dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior).put("mesAnoAtual", mesAnoAtual)
									   .put("nomePortador", nomePortador).put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "")
									   .put("contaJuros", contaJuros).put("contaDesconto", contaDesconto).put("contaMulta", contaMulta).put("valorDocumento", valorDocumento).put("tipoPlanilha", tipoPlanilha)
									   .put("valorJuros", valorJuros).put("valorDesconto", valorDesconto).put("valorMulta", valorMulta).put("codFilial", codFilial).put("nomeArquivo", nomeArquivo.toUpperCase()); // foi ajustado 

								//feita limpeza de campo para poder pegar melhor os juros e descontos.
								documento     = getLimpaCamposAvancado("documento", documento, histobj);


								// #DOCUMENTACAO
								// TRATA PLANILHA OU LANCAMENTO EXPECIFICO COMO EXTRATO
								tratarComoExtrato = getTratarComoExtrato(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								nomeOrigem = nomeOrigem.replaceAll("  ", " ").trim();
								if (tratarComoExtrato) {
									if (nomeOrigem.length() > 199) nomeOrigem = cutString(nomeOrigem, 0, 180); // #Fabrica(2019-10-03) @Becker
									JSONObject jDados = extrato.jDadosBuilder(nomePortador, codEmpresa, dataMovimento, debitoCredito, nomeArquivo, nomeOrigem, valorDocumento, complemento02, cont);
									/*JSONObject jDados = new JSONObject();
									jDados.put("PORTADOR",    		nomePortador);
									jDados.put("EMPRESA",     		codEmpresa);
									jDados.put("DATAMOVIMENTO",	 	dataMovimento);
									jDados.put("NOMEARQUIVO",       debitoCredito+nomeArquivo.toUpperCase()); // #DOCUMENTACAO EVITA PROBLEMA DE TRANSFERENCIAS NO MESMO ARQUIVO
									jDados.put("NOMEORIGEM",    	nomeOrigem);
									jDados.put("VALORDOCUMENTO",    valorDocumento);
									jDados.put("COMPLEMENTO01",     complemento02);
									jDados.put("DEBITO-CREDITO",    debitoCredito);
									jDados.put("CONT",  			String.valueOf(cont));*/
									// logger.logDebug("nomePortador -> " + nomePortador);
									boolean primExtrato = insertIOExtrato(jDados, dbIOCont, logger );
									jStatus = new JSONObject();
									putStatus(dirName, "", jStatus, logger);
									continue;									
								}
								
								debitoCredito = ""; // zera aqui para n?o confundir com extratos bancarios.


								// #DOCUMENTACAO
								// trata lancamento como juros (de outro lancamento)
								complemento10 = "";
								tratarComoJuros = getTratarComoJuros(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoJuros) {
									complemento10 = dataMovimento + "-" + documento + "-JUROS";
									ttJuros ttJ    = (ttJuros)mapaJuros.get(complemento10);
									if (ttJ == null) {
										ttJ  = new ttJuros();
										ttJ.documento  = documento;
										ttJ.valorJur   = valorDocumento;
										ttJ.valorLido  = 0;
									}
									mapaJuros.put(complemento10,ttJ);
									continue;
								}

								// #DOCUMENTACAO
								// trata lancamento como desconto (de outro lancamento)
								tratarComoDesconto = getTratarComoDesconto(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoDesconto) {
									complemento10  = dataMovimento + "-" + documento + "-DESCONTO";
									ttDesconto ttD    = (ttDesconto)mapaDesconto.get(complemento10);

									if(valorDocumento == 0) continue;

									if (ttD == null) {
										ttD  = new ttDesconto();
										ttD.documento  = documento;
										ttD.valorDesc  = valorDocumento;
										ttD.valorLido  = 0;
									}
									mapaDesconto.put(complemento10,ttD);
									continue;
								}

								int restoLinha = 0;
								restoLinha = (cont % 100);
								
								// logger.logDebug("PUTSTATUS 1591");
								if (restoLinha == 0) putStatus(dirName, "02--Etapa 2 de 4 - " + String.valueOf(cont) + "--" + tipoLancamento + ".status", jStatus, logger);


								String contLinhaTexto = String.valueOf(cont);
								contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
								String consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

								classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;
								
								
								// quando usa o getColunaAlternativa tem que refatorar o datalote
								dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");								
								
								//alterado para evitar problemas de lote (maiusculo)
								lote = (nomeEmpresa + "_" + codEmpresa + "__" + nomeArquivo  + "__" + dataLote + "_" + tipoLancamento).replaceAll("\\." , "");
								chave = lote + "-" + String.valueOf(abaConvertida) + String.valueOf(contadorArquivo) + "-" + contLinhaTexto;
								
									
								// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+dataMovimento+" | LOTEEE == "+lote.replace("_rodaconversor", "")+" | TP === "+tipoPlanilha+" | COD ROT == "+roteiroCRMPrincipal.optString("codigo"));
								
								if(chave.length() > 200)  chave = chave.substring(0, 199);
								
								// #DOCUMENTACAO
								////////////////////////////////////////////////////////////// ACUMULA ANTES
								histobj.put("nomeOrigem", nomeOrigem).put("documento", documento).put("complemento01", complemento01)
									   .put("complemento02", complemento02).put("complemento03", complemento03).put("complemento04", complemento04)
									   .put("complemento05", complemento05).put("complemento06", complemento06).put("nomePortador", nomePortador)
									   .put("dataMovimento", dataMovimento).put("mesAnoAnterior", mesAnoAnterior)
									   .put("mesAno2Anterior", mesAno2Anterior).put("mesAnoAtual", mesAnoAtual)
									   .put("valorDocumento", valorDocumento).put("valorJuros", valorJuros).put("valorDesconto", valorDesconto)
									   .put("valorMulta",valorMulta).put("tipoPlanilha", tipoPlanilha).put("nomeArquivo", nomeArquivo.toUpperCase())
									   .put("line", line.toUpperCase()).put("cabecalhoRegra", cabecalhoRegra.toString());
  								
								String modificaData = getModificaData(histobj);
								
								if (modificaData.startsWith("01"))  dataMovimento = getNextDay(dataMovimento, 1, true);
								if (modificaData.startsWith("02"))  dataMovimento = getNextDay(dataMovimento, 2, true);
								if (modificaData.startsWith("03"))  dataMovimento = getNextDay(dataMovimento, 1, false);
								if (modificaData.startsWith("04"))  dataMovimento = getNextDay(dataMovimento, 2, false);
								if (modificaData.startsWith("05"))  dataMovimento = "01/" + cutString(dataMovimento, "/");
								if (modificaData.startsWith("06"))  dataMovimento = getLastDayOfMonth(dataMovimento, true);
								
								
								// METODO QUE REFATORA OS CAMPOS COM BASE NO CABECALHO DO CRM
								// EXEMPLO QUANDO ENCONTRAR #LINE NO CAMPO COMPLEMENTO03, VAMOS JOGAR O LINE NESTE COMPLEMENTO
								// UM COMPLEMENTO02 POR EXEMPLO PODE RECEBER DADOS DE TIPOPLANILHA
								nomeOrigem       = getRefatoraCampo(nomeOrigem, roteiroCRM.optString("fornecedor"), histobj);
								nomePortador     = getRefatoraCampo(nomePortador, roteiroCRM.optString("portador"), histobj);
								documento        = getRefatoraCampo(documento, roteiroCRM.optString("documentoNF"), histobj);
								complemento01    = getRefatoraCampo(complemento01, roteiroCRM.optString("complemento01"), histobj);
								complemento02    = getRefatoraCampo(complemento02, roteiroCRM.optString("complemento02"), histobj);
								complemento03    = getRefatoraCampo(complemento03, roteiroCRM.optString("complemento03"), histobj);
								complemento04    = getRefatoraCampo(complemento04, roteiroCRM.optString("complemento04"), histobj);
								complemento05    = getRefatoraCampo(complemento05, roteiroCRM.optString("complemento05"), histobj);
								complemento06    = getRefatoraCampo(complemento06, roteiroCRM.optString("complemento06"), histobj);
								complemento07    = getRefatoraCampo(complemento07, roteiroCRM.optString("complemento07"), histobj);
								complemento08    = getRefatoraCampo(complemento08, roteiroCRM.optString("complemento08"), histobj);
								complemento09    = getRefatoraCampo(complemento09, roteiroCRM.optString("complemento09"), histobj);
								complemento10    = getRefatoraCampo(complemento10, roteiroCRM.optString("complemento10"), histobj);
								 

								
								String testeChave = getRegrasParaAcumular(lote, chave, tipoLancamento, documento, nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
								if(testeChave.toUpperCase().contains("ACUMULAANTES") || testeChave.toUpperCase().contains("ACUMULARANTES")) {
									chave = testeChave;
									if(chave.length() > 180) chave = cutString(chave, 0, 179);
									acumulouAntes = true;
								}
								////////////////////////////////////////////////////////////////////////////////////
								String key = chave  + "-CTB";
								nomeOrigem = nomeOrigem.replaceAll("  "," ").trim();

								partidaDobradaJuros		= 0;
								partidaDobradaDesconto	= 0;
								partidaDobradaMulta		= 0;

								if (forcarPartidaDobrada) {
									partidaDobradaJuros		= valorJuros;
									partidaDobradaDesconto	= valorDesconto;
									partidaDobradaMulta		= valorMulta;
									valorJuros				= 0;
									valorDesconto			= 0;
									valorMulta				= 0;
								}
								
								if (tipoPlanilha.contains("OTTCARTAO")) {
									
									if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).equals("")) continue;
									if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && dataMovimento.equals("")) continue;
									complemento01 = tipoPlanilha;
									complemento02 = "VENDA";
									
									nomePortador = tipoPlanilha;
									
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
 									
								} else {
								
									// quando se mantem o arquivo, somente devem ser processados arquivos padroes
									// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
									// Trocado para validar se a planilha comeca como movimento - importante por causa da iguacu, Onnegestao, confialtiva que tinham movimento no roteiro secundario e estavam sendo bloqueados
									if (mantemArquivo.equals("SIM") && !tipoPlanilha.contains("PADRAOOTTIMIZZA") && 
									   !roteiroCRM.optString("nomeRelatorioRef").equals("PLANILHA_SIMPLES") && 
									   (tipoPlanilha.contains("SECUNDARIO") || tipoPlanilha.startsWith("MOVIMENTO"))) { //#Soares esteve aqui -> chamado referente a mudan?a: 202210-0019668
									   // Colocado este IF para dar mais performance, ou seja, se ja tiver lido mais de 15 linhas
									   // e planilha for para ser rodada na personalizada
									   // break agiliza a saida da leitura da planilha. Xavier em 19.08
									   if (contadorCabecalho < 15) continue;
									   logs = false;
									   // logger.logDebug("FB");
									   break;
									}
									
									// definido que as planilhas simples que rodam pelo template leem apenas a aba 0
									if (tipoPlanilha.equals("MOVIMENTO") && mantemArquivo.equals("SIM") && 
										porAba > 0 && roteiroCRM.optString("nomeRelatorioRef").equals("PLANILHA_SIMPLES")) { //#Soares esteve aqui -> chamado referente a mudan?a: 202210-0019668
									   
									   logs = false;
									   // logger.logDebug("SB");
									   break;
									}
									
								}
								//#FABRICA 31/08/2022 - @sergio - 202208-0017778
								//Estavamos processando as planilhas padroes sem apaga-las no processo
								//O if abaixo faz com que paguemos a planilha, ap?s processar pelo padrao
								
								// logger.logDebug("TPAQ " + tipoPlanilha);
								
								if(tipoPlanilha.contains("PADRAOOTTIMIZZA")){
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
									
								}
					
								// logger.logDebug("ANTES ttMov2");
								// #DOCUMENTACAO
								// insere numa tabela temporaria
								ttMovimentoPadrao ttMov2      = (ttMovimentoPadrao)mapaVariavel.get(key);
								if (ttMov2 == null) {
									ttMov2 = new ttMovimentoPadrao();
									ttMov2.lote              = lote;
									ttMov2.codEmpresa        = codEmpresa;
									ttMov2.nomeEmpresa       = nomeEmpresa;
									ttMov2.dataMovimento     = dataMovimento;
									ttMov2.tipoMovimento     = "CTB";
									ttMov2.tipoLancamento    = tipoLancamento;
									ttMov2.historico         = historico;
									ttMov2.contaJuros        = contaJuros;
									ttMov2.contaMulta        = contaMulta;
									ttMov2.contaDesconto     = contaDesconto;
									ttMov2.centroCusto       = codCcOrigem;
									ttMov2.cpfCnpj           = cpfCnpj;
									ttMov2.chave             = chave + "-CTB";
									ttMov2.classificacao     = classificacao;
									ttMov2.codFilial         = codFilial;
									ttMov2.complemento07     = complemento07;
									ttMov2.complemento08     = complemento08;
									ttMov2.complemento09     = complemento09;
									ttMov2.complemento10     = complemento10;
									ttMov2.nomeArquivo       = nomeArquivo.toUpperCase();
									ttMov2.tipoPlanilha      = tipoPlanilha;
									ttMov2.chaveExtrato      = chaveExtrato;
									ttMov2.debitoCredito     = debitoCredito;
									ttMov2.contLinha         = contLinhaTexto;
									ttMov2.historicoMulta    = "";
									ttMov2.historicoJuros    = "";
									ttMov2.historicoDesconto = "";
									ttMov2.contaDebito       = "";
									ttMov2.contaCredito      = "";
									ttMov2.naturezaContabil  = "";
									ttMov2.contador 		 = 0;
									ttMov2.parcelaDoc        = parcelaDoc;
									ttMov2.abaPlanilha       = String.valueOf(abaConvertida);

									if(!lerAposPrincipal.contains("FORNECEDOR"))	ttMov2.nomeOrigem    = nomeOrigem;
									if(!lerAposPrincipal.contains("DOCUMENTO")) 	ttMov2.documento 	 = documento;
									if(!lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = nomePortador;
									if(!lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = complemento01;
									if(!lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = complemento02;
									if(!lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = complemento03;
									if(!lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = complemento04;
									if(!lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = complemento05;
									if(!lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = complemento06;
									
									// logger.logDebug("TTMOVTP -> "+tipoPlanilha);


								}

								///  -------------------------------------------------------------------------------------------------------
								///	 QUANDO FOR PLANILHA COM MAIS DE UMA LINHA, JOGAR OS VALORES PARA CIMA (dentro da parte de inclusao)
								///  E PASSAR PARA BAIXO OS CAMPOS QUE PODEM SER SOBREPOSTOS. Exemplo para a linha de baixo:
								///  if (!complemento02.equals("")) ttMov2.complemento02 = complemento02;
								///  -------------------------------------------------------------------------------------------------------

								// #DOCUMENTACAO
								// acumula linhas secundarias ou apenas l? as secundarias
								if (!nomeOrigem.equals("")    && lerAposPrincipal.contains("FORNECEDOR"))	 ttMov2.nomeOrigem    = (ttMov2.nomeOrigem    + " " + nomeOrigem).trim();
								if (!documento.equals("") 	  && lerAposPrincipal.contains("DOCUMENTO")) 	 ttMov2.documento	  = (ttMov2.documento + " " + documento).trim();
								if (!nomePortador.equals("")  && lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = (ttMov2.nomePortador  + " " + nomePortador).trim();
								if (!complemento01.equals("") && lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = (ttMov2.complemento01 + " " + complemento01).trim();
								if (!complemento02.equals("") && lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = (ttMov2.complemento02 + " " + complemento02).trim();
								if (!complemento03.equals("") && lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = (ttMov2.complemento03 + " " + complemento03).trim();
								if (!complemento04.equals("") && lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = (ttMov2.complemento04 + " " + complemento04).trim();
								if (!complemento05.equals("") && lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = (ttMov2.complemento05 + " " + complemento05).trim();
								if (!complemento06.equals("") && lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = (ttMov2.complemento06 + " " + complemento06).trim();
								
								ttMov2.valorDocumento   = ttMov2.valorDocumento  + valorDocumento;
								ttMov2.valorDesconto    = ttMov2.valorDesconto   + valorDesconto;
								ttMov2.valorMulta       = ttMov2.valorMulta      + valorMulta;
								ttMov2.valorJuros       = ttMov2.valorJuros      + valorJuros;

								leuFinanceiro = true;
								mapaVariavel.put(key,ttMov2);
								
								// logger.logDebug("TEPE " + tipoPlanilha + " | " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " | " + ttMov2.valorDocumento + " | " + ttMov2.dataMovimento);
								
								if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {

									for (int iv =0; iv < 10; iv++) { 
										
										if (valorDocumentoArray[iv] == 0) continue;
										
										String rotuloColuna = "";
										String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";"); 
										
										try {
											rotuloColuna = rotuloArray[iv];
										} 
										catch (Exception xx) {
											continue;
										}
										
										if (rotuloColuna.equals("")) continue;
										
									
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + rotuloColuna + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										histobj.put("dataMovimento", dataMovimento);
										
										ttTemp.complemento05 = rotuloColuna;
										histobj.put("complemento05", rotuloColuna);
										
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										
										ttTemp.valorDocumento   = valorDocumentoArray[iv] ;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;
										
										JSONObject obj1 = new JSONObject();
										String validar	= "dataMovimento;nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador;valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";
										
										obj1.put("validar", validar).put("documento", documento).put("nomeOrigem", nomeOrigem).put("nomePortador", nomePortador)
											.put("dataMovimento", ttTemp.dataMovimento).put("complemento01", complemento01).put("complemento02", complemento02)
											.put("complemento03", complemento03).put("complemento04", complemento04).put("complemento05", ttTemp.complemento05)
											.put("complemento06", complemento06).put("complemento07", complemento07).put("complemento08", complemento08)
											.put("complemento09", complemento09).put("complemento10", complemento10).put("codCentroCusto", codCcOrigem)
											.put("tipoPlanilha", tipoPlanilha).put("numeroAba",	String.valueOf(abaConvertida)).put("nomeArquivo", nomeArquivo.toUpperCase());
										
										JSONObject alternativeObj = getAlternativeDataInt (obj1, memFile);
										String changed = alternativeObj.optString("changeIt");
										
										if(!changed.equals("")) {
											zerarColAlternativo = changed;
											if (changed.contains("dataMovimento")) {
												ttTemp.dataMovimento	= alternativeObj.optString("dataMovimento");
											}
											if (changed.contains("documento"))		ttTemp.documento = alternativeObj.optString("documento");
											if (changed.contains("nomeOrigem"))		ttTemp.nomeOrigem = alternativeObj.optString("nomeOrigem");
											if (changed.contains("nomePortador"))   ttTemp.nomePortador	= alternativeObj.optString("nomePortador");
											
											if (changed.contains("complemento01"))  ttTemp.complemento01 = alternativeObj.optString("complemento01");
											if (changed.contains("complemento02"))  ttTemp.complemento02 = alternativeObj.optString("complemento02");
											if (changed.contains("complemento03"))  ttTemp.complemento03 = alternativeObj.optString("complemento03");
											if (changed.contains("complemento04"))  ttTemp.complemento04 = alternativeObj.optString("complemento04");
											if (changed.contains("complemento05"))  ttTemp.complemento05 = alternativeObj.optString("complemento05");
											if (changed.contains("complemento06"))  ttTemp.complemento06 = alternativeObj.optString("complemento06");
											if (changed.contains("complemento07"))  ttTemp.complemento07 = alternativeObj.optString("complemento07");
											if (changed.contains("complemento08"))  ttTemp.complemento08 = alternativeObj.optString("complemento08");
											if (changed.contains("complemento09"))  ttTemp.complemento09 = alternativeObj.optString("complemento09");
											if (changed.contains("complemento10"))  ttTemp.complemento10 = alternativeObj.optString("complemento10");
											
											
											if (changed.contains("valorJuros"))		ttTemp.valorJuros = alternativeObj.optDouble("valorJuros");
											if (changed.contains("valorMulta"))		ttTemp.valorMulta = alternativeObj.optDouble("valorMulta");
											if (changed.contains("valorDesconto"))	ttTemp.valorDesconto = alternativeObj.optDouble("valorDesconto");
											if (changed.contains("valorDocumento"))	ttTemp.valorDocumento = alternativeObj.optDouble("valorDocumento");
										}

										if (tipoPlanilha.contains("OTTCARTAO")) {
											ttTemp.complemento01 = tipoPlanilha;
											ttTemp.complemento02 = rotuloColuna;
										}
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, rotuloColuna, classificacao);
									}
								}
								
								// Para cartoes, criamos o modelo de gerar tafifa por regra
								if (tipoPlanilha.contains("OTTCARTAO")) {

									histobj.put("complemento02", "TARIFA").put("complemento03", complemento03).put("dataMovimento", dataMovimento).put("complemento05", "TARIFA");									
 									
									double taxaTarifa = getTaxaTarifa("", tipoLancamento, documento, nomeOrigem, histobj);
  									 
									
									if (taxaTarifa > 0) {
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "TARIFA" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										
										
										ttTemp.complemento05 = "TARIFA";
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										ttTemp.valorDocumento   = ttTemp.valorDocumento * taxaTarifa;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;

 										ttTemp.complemento01 = tipoPlanilha;
										ttTemp.complemento02 = "TARIFA";
										
 										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "TARIFA", classificacao);
									}
								}
								
								

									
								if (forcarPartidaDobrada) {
									if (partidaDobradaJuros		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_JUR-" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento = partidaDobradaJuros;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "JUROS", classificacao);
									}
									
									if (partidaDobradaDesconto	> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_DES-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaDesconto;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "DESCONTO", classificacao);
									}
									
									if (partidaDobradaMulta		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_MUL-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaMulta;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "MULTA", classificacao);
									}
								}								
							} catch (Exception e) {
							}
						} // while
					}finally {
						
						/*if (memFile != null) { //closeFile
							try {memFile.closeFile(); } 
							catch (Exception ex) { }
						}*/ //closeFile
						
					}
				}

			}
			try {
				Iterator itArquivo = mapaArquivo.keySet().iterator();
				while (itArquivo.hasNext()) { 
					String key = (String)itArquivo.next();
					ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
					
					try {
		 
						FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
					} catch (Exception xx) {}
				}
			} catch (Exception xx) {} 
					
			

		}
	} catch (Exception ee) {
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
			putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + "0" + "--" + tipoLancamento + ".status", jStatus, logger);
		}
		if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
			putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + "0" + "--" + tipoLancamento + ".status", jStatus, logger);
		}
		logger.logError("EndpointA: ", ee);
	}
	
	
	
	try {
		Iterator itArquivo = mapaArquivo.keySet().iterator();
		while (itArquivo.hasNext()) { 
			String key = (String)itArquivo.next();
			ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
			
			try {
 
				FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
			} catch (Exception xx) {}
 		}
	} catch (Exception xx) {} 
			

	if(erroShrink){
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		throw new Exception();
	}
	
	if (nomeEmpresa.toUpperCase().contains("LMCCC")) logger.logInfo("Carregando TT Mov");
					
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// BUSCA INFORMACAO DE EXTRATOS SALVOS
	if (leuFinanceiro && cruzaExtrato.contains("TRUE") || (tipoPlanilha.contains("EXTRATO") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("TRUE") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("FALSE") && cruzaExtrato.contains("FALSE"))) {
			
		   
		try {
			JSONArray extratoEmpresa = new JSONArray();
			
			// if (!nomeArquivoProtocolo.equals("")) extratoEmpresa = extrato.getExtratosEmpresaProtocolo(codEmpresa, nomeArquivoProtocolo, dbIOCont, logger);
			// else 
			extratoEmpresa = getExtratosEmpresa(codEmpresa, dbIOCont, logger);

			if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
				for (int t=0; t<extratoEmpresa.length(); t++) {

					JSONObject recMov = extratoEmpresa.optJSONObject(t);

					recMov.put("CODEMPRESA", codEmpresa).put("NOMEEMPRESA", nomeEmpresa);
					
					

					//QUANDO FOR CRUZAMENTO DE EXTRATO, MANTER NOME UNICO NO ARQUIVO FINAL.
					if (leuFinanceiro && cruzaExtrato.contains("TRUE")) {
						recMov.put("NOMEARQUIVO", nomeArquivo);
					}
					else {
						recMov.put("NOMEARQUIVO", "");
					}

					recMov.put("TIPOLANCAMENTO", tipoLancamento).put("CONTAMOVIMENTO", "").put("CONTAPORTADOR", "").put("CONTLINHATEXTO", String.valueOf(t));

					ttMovimentoPadrao ttMovExtrato = getMovimentoExtrato(recMov, logger);					
					if (nomeArquivo.toUpperCase().contains("FILTRO_")){
						boolean filtro = validaFiltro(nomeArquivo, ttMovExtrato.dataMovimento);
						temFiltro = true;
						if(!filtro) continue;
					}
					 
					
					String consolidaClass = StringUtil.leftPad(String.valueOf(t), 06, "0");
					ttMovExtrato.classificacao = ttMovExtrato.dataMovimento.replace("/","").trim() + "5" + consolidaClass;
					
					String leuCnpj = "";
					if (ttMovExtrato.nomeOrigem.contains(".") && ttMovExtrato.nomeOrigem.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.nomeOrigem);
						
						if (!leuCnpj.equals("")) {
							ttMovExtrato.nomeOrigem = ttMovExtrato.nomeOrigem.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll("/","").replaceAll(" ","").replaceAll("-",""));
						}	
					}	
					if (ttMovExtrato.complemento01.contains(".") && ttMovExtrato.complemento01.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.complemento01);
						if (!leuCnpj.equals("")) {
							ttMovExtrato.complemento01 = ttMovExtrato.complemento01.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll(" ","").replaceAll("/","").replaceAll("-",""));
						}
					}
					mapaVariavel.put(ttMovExtrato.chave, ttMovExtrato);
					apagaExtrato    = true;

				}
			}
		}
		catch (Exception xx) {
			// logger.logDebug("ATENCAO - PROBLEMA NA LEITURA DE EXTRATO - BANCO");
		}

	} // if tipo planilha nao igual extrato
	
	// logger.logDebug("ETAPA 03 TEMPLATE ");
	
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// INICIO DAS ITERACOES
	StringBuilder[] txtFiscal = new StringBuilder[20];
  	for (int i= 0; i < 20; i++) {
		txtFiscal[i] = new StringBuilder("");
		loteFiscal[i] = "";		
	}

	StringBuilder txtFornecedor = new StringBuilder();
	StringBuilder txtPortador   = new StringBuilder();
	StringBuilder txtConciliacao= new StringBuilder();
	String nomePortadorAnterior = "";
	
	// if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // #Fabrica(2019-08-13) @Vini
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("PAGAR")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // JWR 01022021
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("RECEBER")) txtFiscal[0].append("PGTOCLI").append(cnpjEmpresa).append("\r\n"); // JWR 01022021

	StringBuilder ResumoTxt = new StringBuilder();
	String rn = "\r\n";
	ResumoTxt = new StringBuilder();
	ResumoTxt.append("").append(rn).append(rn);

	ResumoTxt.append("STATUS;DATA;TIPO DATA;VALOR;DOCUMENTO;CLIENTE/FORNECEDOR;PORTADOR;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;COMPLEMENTO06;;CTA DEBITO ENCONTRADA;CTA CREDITO ENCONTRADA;REGRA CONTA CRM;HISTORICO;REGRA HISTORICO;;DATA;DEBITO;CLASS DEB;NOME CONTA;CREDITO;CLASS CRED;NOME CONTA;VALOR;HISTORICO;");
	ResumoTxt.append("ORIGEM");

	StringBuilder txtDePara = new StringBuilder();

	txtDePara.append("DATA;VALOR;FORNECEDOR/CLIENTE;PORTADOR;CONTA DEBITO;CONTACREDITO;DOCUMENTO;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;C.CUSTO;ARQUIVO");
	txtDePara.append("\r\n");
	
	if (nomeEmpresa.toUpperCase().contains("LMCCC")) logger.logInfo("Iniciando  Etapa 03");
					
					
	// logger.logDebug("DIRNAME " + dirName);
	if (mantemArquivo.equals("SIM")) {
		File fileDepoisLista = new File(dirName);
		File [] filesDepois = fileDepoisLista.listFiles(); 
		
		if (filesDepois.length > 1) putStatus(dirName, "", jStatus, logger);
	}
	// logger.logDebug("TEMPLATE ETAPA 03 ");


	int contRegra = -1;
	
	String loteEtapaTres = "";
	
	
	try {
		Iterator itExtrato = mapaVariavel.keySet().iterator();
		while (itExtrato.hasNext()) {
			String chaveExtrato     = "";

			String key = (String)itExtrato.next();
			ttMovimentoPadrao ttMov = (ttMovimentoPadrao)mapaVariavel.get(key);
			
			// if (nomeArquivo.toUpperCase().contains(".OMC")) ttMov.tipoPlanilha = "EXTRATO";

			// alterado de equals para contains o tipo planilha movimento xavier 27.03
			if(!ttMov.tipoPlanilha.contains("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			
 			loteEtapaTres = ttMov.lote;
 
			
			// #DOCUMENTACAO
			// TRATA LOTES (MAIUSCULO e MINUSCULO)
			
			if(ttMov.lote.lastIndexOf("__") > ttMov.lote.indexOf("__")){
				ttMov.lote = nomeEmpresa +"_"+ codEmpresa +"_"+ 
				             cutString(ttMov.lote, ttMov.lote.indexOf("__"), ttMov.lote.lastIndexOf("__")).toLowerCase() +"_"+ ttMov.lote.substring(ttMov.lote.lastIndexOf("__"));
			}
			

			// #DOCUMENTACAO
			// EVITA GERAR 2 ARQUIVOS QUANDO TEM TRATAR COMO EXTRATO
			// ajusta o ott_oud__ para poder reprocessar o arquivo automaticamnete pelo portal
			ttMov.lote = ttMov.lote.replace(ttMov.debitoCredito,"").replace("extrato-debito","").replace("extrato-credito","").replace("___","_").replace("__","_");
			if (!ttMov.lote.toLowerCase().contains("ott_oud__") && ttMov.lote.toLowerCase().contains("ott_oud_")) {
				ttMov.lote = ttMov.lote.replace("ott_oud_","ott_oud__");
			}
			
			// #DOCUMENTACAO
			// JUNCAO DOS LANCAMENTOS COM OS JUROS E DESCONTOS (TRATAR COMO JUROS OU DESCONTO)
			String chaveJuros = ttMov.dataMovimento + "-" + ttMov.documento + "-JUROS";
			ttJuros ttJ  = (ttJuros)mapaJuros.get(chaveJuros);
			if (ttJ != null && ttJ.valorLido == 0) {
				ttMov.valorJuros  = ttJ.valorJur;
				ttJ.valorLido     = 1;
				mapaJuros.put(chaveJuros,ttJ);

			}

			String chaveDesconto = ttMov.dataMovimento + "-" + ttMov.documento + "-DESCONTO";
			ttDesconto ttD  = (ttDesconto)mapaDesconto.get(chaveDesconto);
			if (ttD != null && ttD.valorLido == 0) {
				ttMov.valorDesconto  = ttD.valorDesc;
				ttD.valorLido     = 1;
				mapaDesconto.put(chaveDesconto,ttD);

			}
			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			//logger.logDebug("ANTES 3 DE 4");
			
			if(codEmpresa.contains("20") && contRegra < 4000) logger.logInfo("Lendo " + tipoLancamento);
			 
			// if (codEmpresa.contains("277")) logger.logDebug("TRESDEQUATRO " + " | " + ttMov.tipoP + ttMov.debitoCredito + " | " +  ttMov.dataMovimento + " | " + ttMov.valorDocumento);
			
 			if (restoLinha == 0) putStatus(dirName, "03--Etapa 3 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			
			// logger.logInfo("3 de 4 = NA = "+ttMov.nomeArquivo+" | LT = "+ttMov.lote);
			
			// if(codEmpresa.contains("464")) logger.logInfo("SHR DT -> " + ttMov.dataMovimento + " |VD -> " + ttMov.valorDocumento+" | NO == "+ttMov.nomeOrigem+" | TL = "+ttMov.tipoLancamento+" | DC = "+ttMov.debitoCredito);
			
			// if (codEmpresa.contains("1722")) 
			// logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.lote + " | " + ttMov.dataMovimento + " | " + ttMov.tipoLancamento + " | " + ttMov.debitoCredito + " | " + ttMov.dataMovimento + " | " + ttMov.valorDocumento);
			// if (codEmpresa.contains("244")) logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.nomeOrigem);
			
			
			// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+ttMov.dataMovimento+" | LOTEEE == "+ttMov.lote.replace("rodaconversor", "")+" | TP === "+ttMov.tipoPlanilha);
			if (ttMov.tipoPlanilha.contains("CARTAO")) ttMov.tipoPlanilha = ttMov.tipoPlanilha.replaceAll("[0-9]", "").trim(); //JWR
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("\'","");
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("\"","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\'","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\"","");
			ttMov.complemento02 = ttMov.complemento02.replaceAll("\'","");
			ttMov.complemento02 = ttMov.complemento02.replaceAll("\"","");
			ttMov.complemento03 = ttMov.complemento03.replaceAll("\'","");
			ttMov.complemento03 = ttMov.complemento03.replaceAll("\"","");
			ttMov.complemento04 = ttMov.complemento04.replaceAll("\'","");
			ttMov.complemento04 = ttMov.complemento04.replaceAll("\"","");
			ttMov.complemento05 = ttMov.complemento05.replaceAll("\'","");
			ttMov.complemento05 = ttMov.complemento05.replaceAll("\"","");
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
   			ttMov.nomePortador = ttMov.nomePortador.replaceAll("\\|","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\\|","");
			
			classificaPlano     = roteiroCRM.optString("classificaPlano");
			classificaFornec    = roteiroCRM.optString("classificaFornec");
			cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
			Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
			
			if(/*roteiroCRM.optString("empresa").toUpperCase().contains("POSTOBRAGA") && */ttMov.nomeArquivo.toUpperCase().contains(".OMC")){//yuri
				cruzaExtrato = "FALSE";
				Cruza_Extrato_com_Extrato = "FALSE";
			}
			
			String integraFiscal = roteiroCRM.optString("Integracao_fiscal").toUpperCase();
			String integraContrato = roteiroCRM.optString("Integracao_contratos").toUpperCase();
			
			// if (codEmpresa.contains("856")) logger.logDebug("PORTADOR " + ttMov.nomeOrigem);
			
			//logger.logInfo("NO == "+ttMov.nomeOrigem+" | V = "+ttMov.valorDocumento+" | TL = "+ttMov.tipoLancamento+" | DC = "+ttMov.debitoCredito);

			if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) continue;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-DEBITO")) continue;
			// logger.logDebug("PORTAS1 " + cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_"));
			// logger.logDebug("PORTAS2 " + ttMov.nomePortador);
			if (ttMov.nomePortador.toUpperCase().contains("OTT_OUD") && ttMov.nomePortador.toUpperCase().contains("CEF")) ttMov.nomePortador = cutString(ttMov.nomePortador.toUpperCase(), 0, "OTT_") + " " + cutString(ttMov.nomePortador.toUpperCase(), ttMov.nomePortador.toUpperCase().indexOf(cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_"))+cutString(ttMov.nomePortador.toUpperCase(), "_ID", "_").length()+1);
			
			// logger.logDebug("TIPOS " + tipoPlanilha);
			
			if (ttMov.tipoPlanilha.contains("EXTRATO") || ttMov.tipoPlanilha.contains("FRANCESINHA")) {
				JSONObject histobj = new JSONObject();
				histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
					   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
					   .put("complemento06", ttMov.complemento06).put("nomePortador", ttMov.nomePortador).put("dataMovimento", ttMov.dataMovimento)
					   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
					   .put("valorMulta",ttMov.valorMulta).put("tipoPlanilha", ttMov.tipoPlanilha);
  								
				String modificaData = getModificaData(histobj);
				
				if (modificaData.startsWith("01"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 1, true);
				if (modificaData.startsWith("02"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 2, true);
				if (modificaData.startsWith("03"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 1, false);
				if (modificaData.startsWith("04"))  ttMov.dataMovimento = getNextDay(ttMov.dataMovimento, 2, false);
				if (modificaData.startsWith("05"))  ttMov.dataMovimento = "01/" + cutString(ttMov.dataMovimento, "/");
				if (modificaData.startsWith("06"))  ttMov.dataMovimento = getLastDayOfMonth(ttMov.dataMovimento, true);
			}
 
  
			// ------------------------------------------------------------------------------------------------------------------
			// 	 		INICIA PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------
			String DATAMOVIMENTO   = "";
			String PORTADOR        = "";
			String CHAVE           = "";
			boolean jaCruzou       = false;
			
			ttMov.valorJuros = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
			ttMov.valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
			ttMov.valorMulta = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorMulta));
			ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
			// ajuste 11/2020 @DiMaz
			if (ttMov.valorDocumento == 0) continue;
 

			// #DOCUMENTACAO
			// EXTRATO COM EXTRATO
			if (Cruza_Extrato_com_Extrato.contains("TRUE") && ttMov.tipoPlanilha.contains("EXTRATO")) {

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);
				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();
				String transferencia = "NAO";

				if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-DEBITO"))  transferencia = "SIM";
				if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) transferencia = "SIM";

				if (transferencia.equals("SIM")) {
					for (int xx = 0;xx<1;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;

							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							
							extratoEmpresa = extrato.buscaExtratoPorChaveExtratoLido(chaveExtrato, ttMov.nomeArquivo, dbIOCont, logger);

							/*extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();*/

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");

					ttMov.complemento04 = ttMov.nomeOrigem;
					ttMov.nomeOrigem    = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;
					ttMov.tipoPlanilha  = "EXTRATO-TRANSFERENCIA";
					
					extrato.atualizaExtratoLido(CHAVE, dbIOCont, logger);

					/*dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();*/
					jaCruzou = true;

				}
			}

			// #DOCUMENTACAO
			// EXTRATO COM PLANILHA
			if (cruzaExtrato.contains("TRUE")  && !jaCruzou) {

				Conta_Fixa_Cruzamento_Extrato  = roteiroCRMPrincipal.optString("Conta_Fixa_Cruzamento_Extrato");

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm   = new Date();
				Date dataMovimentoDateMenosDois = new Date();
				Date dataMovimentoDateMenosTres = new Date();
				Date dataMovimentoDateMaisUm    = new Date();
				Date dataMovimentoDateMaisDois  = new Date();
				Date dataMovimentoDateMaisTres  = new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm   = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm    = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois  = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres  = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();

				String transferencia = "NAO";

				if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
					for (int xx = 0;xx<7;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;
							if (xx ==1) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisUm, "dd/MM/yyyy");
							if (xx ==2) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosUm, "dd/MM/yyyy");
							if (xx ==3) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisDois, "dd/MM/yyyy");
							if (xx ==4) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosDois, "dd/MM/yyyy");
							if (xx ==5) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisTres, "dd/MM/yyyy");
							if (xx ==6) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosTres, "dd/MM/yyyy");


							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							
							extratoEmpresa = extrato.buscaExtratoPorChaveExtratoLido(chaveExtrato, ttMov.nomeArquivo, dbIOCont, logger);

							/*extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();*/

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");
					if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) ttMov.complemento02 = recMov.optString("COMPLEMENTO"); //checknum

					ttMov.nomePortador  = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;
					
					extrato.atualizaExtratoLido(CHAVE, dbIOCont, logger);

					/*dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();*/

				}

			}
			
			if (ttMov.lote.contains("_ancora_")) {
				ttMov.lote = ttMov.lote.replace("_ancora_", "");
			}
			
			if (ttMov.lote.contains("_ANCORA_")) {
				ttMov.lote = ttMov.lote.replace("_ANCORA_", "");
			}


			// ------------------------------------------------------------------------------------------------------------------
			// 	 		FINALO DO PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------




			classificacao = "";

			String key2 = ttMov.chave;

			if(ttMov.dataMovimento.length() > 9){
				mesRef  = Integer.parseInt(ttMov.dataMovimento.substring(3,5));
				anoRef  = Integer.parseInt(ttMov.dataMovimento.substring(6,10));
				mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
			}

			String trimestreMesAnoAnterior	    = "";
			String trimestreMesAnoAtual   	    = "";
			String descricaoPlanoContaPortador  = "";
			String descricaoPlanoContaMovimento = "";

			// #DOCUMENTACAO
			// TRIMESTRE
			if (mesAnoAnterior.startsWith("01") || mesAnoAnterior.startsWith("02") || mesAnoAnterior.startsWith("03")) trimestreMesAnoAnterior = "1. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("04") || mesAnoAnterior.startsWith("05") || mesAnoAnterior.startsWith("06")) trimestreMesAnoAnterior = "2. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("07") || mesAnoAnterior.startsWith("08") || mesAnoAnterior.startsWith("09")) trimestreMesAnoAnterior = "3. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("10") || mesAnoAnterior.startsWith("11") || mesAnoAnterior.startsWith("12")) trimestreMesAnoAnterior = "4. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAtual.startsWith("01") || mesAnoAtual.startsWith("02") || mesAnoAtual.startsWith("03")) trimestreMesAnoAtual = "1. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("04") || mesAnoAtual.startsWith("05") || mesAnoAtual.startsWith("06")) trimestreMesAnoAtual = "2. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("07") || mesAnoAtual.startsWith("08") || mesAnoAtual.startsWith("09")) trimestreMesAnoAtual = "3. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("10") || mesAnoAtual.startsWith("11") || mesAnoAtual.startsWith("12")) trimestreMesAnoAtual = "4. Trimestre/" + mesAnoAtual.substring(3);


			if (ttMov.nomeOrigem.equals("")) ttMov.nomeOrigem = ttMov.complemento01 + " " + ttMov.dataMovimento + " R$" + String.valueOf(ttMov.documento);
			ttMov.nomeOrigem = ttMov.nomeOrigem.trim();
			if (ttMov.nomePortador.equals("")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("_")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("-")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.replaceAll("\\$", "").equals("")) ttMov.nomePortador = "EM BRANCO";
			

			contaJuros        = roteiroCRM.optString("contaFixaJuros");
			contaFixaCredito  = roteiroCRM.optString("contaFixaCredito");
			contaFixaDebito   = roteiroCRM.optString("contaFixaDebito");
			contaDesconto     = roteiroCRM.optString("contaFixaDesconto");
			contaMulta        = roteiroCRM.optString("contaFixaMulta");
			
			

			 if(ttMov.valorJuros > 0) logger.logInfo("ValorJuros -> " + ttMov.valorJuros + " |contaJuros -> " + contaJuros + " |VAlorMulta -> " + ttMov.valorMulta + " | contaMulta -> " + contaMulta + " |TTMovNO -> " + ttMov.nomeOrigem +  " | roteiroCRM -> " + roteiroCRM.optString("idRoteiro"));
			

			contaMovimento = "";
			contaPortador  = "";


			if(ttMov.tipoLancamento.contains("PAGAR")) {
				contaMovimento = contaFixaDebito;
				contaPortador  = contaFixaCredito;
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				contaPortador  = contaFixaDebito;
				contaMovimento = contaFixaCredito;
			}
			
			
			
			// exemplo de como vem um registro do complemento_lancaments 
			// 54999667000179-PAG-ANTONIO FLAVIO DE ARAUJO JUNIOR-2021-05-21-180.0
 			
			if (contaMovimento.equals("") && encontrouComplemento){
				try {
				
					String chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 3) + "-" + ttMov.nomeOrigem + "-" + 
					                          cutString(ttMov.dataMovimento, 6) + "-" + cutString(ttMov.dataMovimento, "/", "/") + "-" + cutString(ttMov.dataMovimento, 0, "/") + "-" + 
											  ttMov.valorDocumento;
											  
 																				
											  
 					ttPlano ttP  = (ttPlano)mapaDePara.get(chaveComplemento); 
					if (ttP == null) {							
						ttP  = new ttPlano(); 
						ttP.descricaoPlano = chaveComplemento;
						ttP.contaAnalitica = "";
						ttP.contaContabil     = "";
						mapaDePara.put(chaveComplemento,ttP);
							
						try{
							deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
							}
						catch (Exception e) { 
						}
						if (deParaObj != null && !deParaObj.toString().equals("{}")) {
							if (ttMov.tipoPlanilha.contains("EXTRATO")) {
									ttMov.complemento02 = deParaObj.optString("complemento");
							} else {
								ttMov.complemento01 = deParaObj.optString("complemento");
							}
 							

						} else {
						
							//	 verifica se banco de dados possui ao menos algum lancamento de complemento
							//   se nao encontrar, joga false na encontrouComplemento para ter mais performance e nao buscar no 
							//   banco  de dados a toa
							chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 2);
							try{
								deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
								}
							catch (Exception e) { 
							}
							if (deParaObj == null || deParaObj.toString().equals("{}"))  encontrouComplemento = false;
 						
						}
						

					}  
				} catch  (Exception Ee) {}
			}
			
 
			// Quando pede para cruzar extrato e nao encontra relacionamento com o extrato
			// joga conta fixa de extrato em DEBITO quando for extato e CREDITO quando for planilha
			if ((cruzaExtrato.contains("TRUE") || cruzaExtrato.contains("VERDADEIRO")) && PORTADOR.equals("")) {
				if (ttMov.tipoPlanilha.contains("EXTRATO"))  contaMovimento  = Conta_Fixa_Cruzamento_Extrato;
				if (!ttMov.tipoPlanilha.contains("EXTRATO")) contaPortador   = Conta_Fixa_Cruzamento_Extrato;
			}


			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			contaMovimento    = getConta09(contaMovimento, ttMov.nomeOrigem,  ttMov.documento, "", ttMov.complemento01,  ttMov.complemento02,  ttMov.complemento03, "",  ttMov.centroCusto);
			contaPortador     = getConta09(contaPortador, "", "", ttMov.nomePortador, "", "", "", ttMov.nomeArquivo, "");
			//ttMov.centroCusto = getCentroCusto("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, "", ttMov.centroCusto);
			//2310-017917 - As regras de centro custo tem validacao com o nome do arquivo e n?o funcionava porque nomeArquivo nao estava sendo passado no getCentroCusto
			ttMov.centroCusto = getCentroCusto("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, nomeArquivo, ttMov.centroCusto); 
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
			if (!ttMov.codFilial.equals("") && roteiroCRMPrincipal.optString("erpContabilidade").equals("CUCA-FRESCA")) ttMov.cpfCnpj = ttMov.codFilial;

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			JSONObject histobj = new JSONObject();

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
				   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
				   .put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07).put("complemento08", ttMov.complemento08)
				   .put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10).put("dataMovimento", ttMov.dataMovimento)
				   .put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior).put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador)
				   .put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
				   .put("contaDesconto", ttMov.contaDesconto).put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
				   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto).put("valorMulta", ttMov.valorMulta)
				   .put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha).put("numeroAba", ttMov.abaPlanilha).put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermos("complemento08", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermos("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getLimpaCampos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCampos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCampos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCampos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCampos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCampos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCampos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCampos("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCampos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCampos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCampos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCampos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCampos("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01).put("complemento02", ttMov.complemento02)
				   .put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04).put("complemento05", ttMov.complemento05)
				   .put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07).put("complemento08", ttMov.complemento08)
				   .put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10).put("nomePortador", ttMov.nomePortador);

			ttMov.complemento01 = getLimpaCamposAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCamposAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCamposAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCamposAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCamposAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCamposAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCamposAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCamposAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCamposAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCamposAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCamposAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCamposAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCamposAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getReplaceTermosAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermosAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermosAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermosAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermosAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermosAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermosAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermosAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermosAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermosAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermosAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermosAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermosAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01)
				   .put("complemento02", ttMov.complemento02).put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04)
				   .put("complemento05", ttMov.complemento05).put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07)
				   .put("complemento08", ttMov.complemento08).put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10)
				   .put("dataMovimento", ttMov.dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior)
				   .put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador).put("contaMovimento", contaMovimento)
				   .put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
				   .put("contaDesconto", ttMov.contaDesconto).put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
				   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
				   .put("valorMulta", ttMov.valorMulta).put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha)
				   .put("numeroAba", ttMov.abaPlanilha).put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			
			// Quando selecionado para controlar parcela, buscar complemento apos a limpeza para poder jogar em parcela
			String parcelaString = "1";
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO01")) parcelaString = ttMov.complemento01;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO02")) parcelaString = ttMov.complemento02;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO03")) parcelaString = ttMov.complemento03;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO04")) parcelaString = ttMov.complemento04;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO05")) parcelaString = ttMov.complemento05;

			try {
				ttMov.parcelaDoc = Integer.parseInt(parcelaString);
			}
			catch (Exception xx) { ttMov.parcelaDoc = 1;}
			
			//Feito para retirar os indices apos o tipoPlanilha, estavam impactando nas regras do oud
			if(!ttMov.tipoPlanilha.equals("")){
				String sequencia = "";
				try{
					sequencia = cutString(ttMov.tipoPlanilha, ttMov.tipoPlanilha.length()-4).replaceAll("[^0-9]", "");
				}catch(Exception s1){}
				if(ttMov.tipoPlanilha.contains(sequencia)){
					try{
						ttMov.tipoPlanilha = cutString(ttMov.tipoPlanilha, 0, sequencia);
						
					}catch(Exception s2){}
				}
			}
			
			// logger.logDebug("TTMS " + ttMov.tipoPlanilha + " | " + ttMov.complemento01 + " | " + ttMov.nomeOrigem + " | " + ttMov.complemento02);
			
		
			contaMovimento = getContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento2(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento3(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaPortador  = getContaPortador(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//#2305-004914. Carrega a chamadas das rotinas getContaMovimento e getContaPortador caso n?o tenha ainda.
			// Classe Principal SC
			Class<?> sc = this.getClass();
			// Instancia da Classe Principal
			Object scInstance = sc.newInstance();
			// Get all Methods from superclass 'SC'.
			java.lang.reflect.Method[] methods = sc.getDeclaredMethods();
			boolean methodFoundPortador = false;
			boolean methodFoundMovimento = false;			
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundPortador = false;
				methodFoundMovimento = false;
				if(methodName.toUpperCase().contains("GETCONTAMOVIMENTO")) {
					methodFoundMovimento = true;
				}
				if(methodName.toUpperCase().contains("GETCONTAPORTADOR")) {
					methodFoundPortador = true;
				}
				
				try {
					if(methodFoundMovimento) {					
						// Invoca metodo de getContaMovimento.
						contaMovimento = (String) method.invoke(scInstance, contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
					}
					if(methodFoundPortador) {
						// Invoca metodo de getContaPortador.					
						contaPortador = (String) method.invoke(scInstance, contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
					}
				} catch (Exception e) {}
			}
			
			// if (codEmpresa.equals("00001")) logger.logInfo("Pelo getContaMovimento " + contaMovimento);
			
			// Soares - Mudanca no template referente a uma parte do chamado =>> 202208-0017982
			
			if(roteiroCRM.optString("gravaCnpjMovimento").toUpperCase().contains("TRUE")){
				if(contaMovimento.equals("")) {
					if(!ttMov.cpfCnpj.equals("")){
						contaMovimento = ttMov.cpfCnpj;
						if((roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().startsWith("SCI") || roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("PROSOFT")) && !ttMov.cpfCnpj.equals(""))
							contaMovimento = ttMov.cpfCnpj + "P";
					}
				}
				else {ttMov.cpfCnpj = "";}
			}
 			
			regraContaMovimento  = getRegraContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			// logger.logDebug("CONTINHA "  + contaMovimento + " | " + regraContaMovimento);
			// logger.logDebug("CONTA MOV == "+contaMovimento+" | NO == "+ttMov.nomeOrigem+" | TP = "+ttMov.tipoPlanilha);

			double valorPrincipal 	 = getValorPrincipal("", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			if (valorPrincipal> 0 && ttMov.valorDocumento > valorPrincipal) {
				ttMov.valorJuros     = ttMov.valorDocumento - valorPrincipal;
				ttMov.valorDocumento = valorPrincipal;
			}
			
			ttMov.complemento03 	= ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";
 			ttMov.contaJuros        = getContaJuros(contaJuros,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			ttMov.contaDesconto     = getContaDesconto(contaDesconto,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
 			ttMov.contaMulta        = getContaMulta(contaMulta,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			tabelaContabil   		= getTabelaContabil("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);
			ttMov.complemento03  	= ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();
			// if(roteiroCRM.optString("empresa").toUpperCase().contains("FARMAGIL")){
				// logger.logDebug("TIPO PLANILHINHA == "+ttMov.tipoPlanilha+" | ttMov.contaDesconto - "+ttMov.contaDesconto+" - contaDesconto - "+contaDesconto+" | "+roteiroCRM.optString("contaFixaDesconto"));
			// }
			// logger.logDebug("Contabilidade - "+roteiroCRM.optString("contabilidade")+" - empresa => "+roteiroCRM.optString("empresa"));
			// logger.logDebug("TP - "+tipoPlanilha+" - conta fixa => "+roteiroCRM.optString("contaFixaJuros")+""+roteiroCRM.optString("contaFixaMulta")+""+roteiroCRM.optString("contaFixaDesconto")+"");
			// logger.logDebug("ttMov.contaJuros - "+ttMov.contaJuros+" - ttMov.contaDesconto - "+ttMov.contaDesconto+" - ttMov.contaMulta - "+ttMov.contaMulta);

			// quando for forcada partida dobrada , vamos jogar a conta de juros automaticamente na conta movimento
			if (!contaMovimento.contains("IGNORA")) { // colocado para ignorar os lancamentos de partida dobrada quando o lancamento principal eh ignorado 20122022 JWR
				if (ttMov.chave.contains("DOBRADA_JUR") && !ttMov.contaJuros.equals("")) contaMovimento = ttMov.contaJuros;//#2304-002846
				if (ttMov.chave.contains("DOBRADA_DES")) {
					// invers?o de contas em desconto.
					contaMovimento = contaPortador;
					if (!ttMov.contaDesconto.equals("")) contaPortador = ttMov.contaDesconto;
				}
				if (ttMov.chave.contains("DOBRADA_MUL") && !ttMov.contaMulta.equals("")) contaMovimento = ttMov.contaMulta;
			}
			

			boolean regraCRM = false;
			// logger.logDebug("contaMovimento F -> " + contaMovimento);
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;

		   	//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";


					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}		
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);
				}
			}
			
			

			regraCRM = false;
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;
			
 			
			if (contaMovimento.equals("")){
				// logger.logDebug("Chegou 2");
				try {
					String classificacaoPlanoContas = getCodigoClassificacao(ttMov.nomeOrigem, histobj); // exemplo: 2.1.1.01.
					JSONObject futureObject = new JSONObject();
					//JSONObject ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
					futureObject.put("codEmpresaPlano", codEmpresaPlanoContas).put("fazLcdpr", fazLcdpr);
					JSONObject ret = new JSONObject();
					try {
						ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
						// if(codEmpresa.equals("276")){

							// logger.logInfo("Info buscaContaNovo - Cod: "+codEmpresa+" - Nome: "+ttMov.nomeOrigem+" - CNPJ: "+ttMov.cpfCnpj+" - Classi: "+classificacaoPlanoContas+" - Tipo: "+ttMov.tipoLancamento);

							// logger.logInfo("Ret: "+ret.toString());

							// }
					} catch (Exception e) {
						// logger.logDebug("XABU RET " + e.getMessage());
					}
					if (ret != null) {
						if(ttMov.tipoLancamento.contains("PAGAR") && ret.has("contaDebito")) contaMovimento = ret.optString("contaDebito");
						if(ttMov.tipoLancamento.contains("RECEBER") && ret.has("contaCredito")) contaMovimento = ret.optString("contaCredito");
					}
					// if (codEmpresa.equals("00001")) logger.logInfo("Cmm " + contaMovimento);
					//JWR 30012024 
					// logger.logDebug("PEGOU PELO PARTICIPAS " + contaMovimento);
					if (roteiroCRMPrincipal.optString("erpContabilidade").equals("JBSOFTWARE") && contaMovimento.contains("P")) contaMovimento = contaMovimento.replaceAll("P", "");
					
					if (contaMovimento == null || contaMovimento.trim().length() == 0) {
						contaMovimento = "";
						
						// CASO NAO ACHOU CONTA EM REGRAS NEM NO DEPARA ATUAL
						// VERIFICA SE E A PRIMEIRA VEZ QUE BUSCA A DESCRICAO NA NUVEM
						// INSERIDO PARA TRATGAR O BUSSOLA 3.0 
						
						ttPlano ttP  = (ttPlano)mapaDePara.get(ttMov.nomeOrigem);
						if (ttP == null) {							
							ttP  = new ttPlano(); 
							ttP.descricaoPlano = ttMov.nomeOrigem;
							ttP.contaAnalitica = "";
	
							ttP.contaContabil     = "";
							mapaDePara.put(ttMov.nomeOrigem,ttP);
							
							// BUSCA DEPARA PREENCHIDO PELO CONTADOR NO BUSSOLA 3.0 
							String cnpjEmpresaRequest = cnpjEmpresa.replaceAll("[^0-9]","").trim();
							String cnpjContabilidadeRequest = roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/","");
							// if (codEmpresa.equals("00001")) logger.logInfo("SUJANDO "  + cnpjEmpresaRequest + " | " + cnpjContabilidadeRequest + " | " + ttMov.nomeOrigem);
							// logger.logDebug("SUJANDO 2 = "  + ttMov.valorDocumento + " | " + ttMov.nomeOrigem);
							try{
								// logger.logDebug("ttMov.nomeOrigem -> " + ttMov.nomeOrigem);
								deParaObj = findDeParaDescricao(dbIODepara, cnpjEmpresaRequest, cnpjContabilidadeRequest, ttMov.nomeOrigem);
 								
								}
							catch (Exception e) { 
								logger.logDebug("CATCH DPR " + e.getMessage());
							}
							if (deParaObj != null ) {
								if(ttMov.tipoLancamento.contains("PAGAR")) contaMovimento = deParaObj.optString("conta_debito");
								if(ttMov.tipoLancamento.contains("RECEBER")) contaMovimento = deParaObj.optString("conta_credito");
								// logger.logDebug("contaMovimento -> " + contaMovimento);
								if (contaMovimento == null) contaMovimento = "";
								// logger.logDebug("CONTS " + contaMovimento);
								// Quando cliente inserir a contaT no DEpara Nuvem, vamos apagar no final da rota 
								if (contaMovimento.contains("T")) {
									apagaContaT    = true;
								}
								
								// logger.logDebug("CMM " + contaMovimento + " | " + apagaContaT);
								
								
							}else contaMovimento = "";
							
							
							// SE ENCONTROU DAPARA NA NUVEM GRAVA NO H2 PARA NA PROXIMA VEZ// ACHAR LOCALMENTE O DEPARA
							/*if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("PAGAR")) {
									if (!hasPessoaPag(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("PAGAR")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "",
															contaMovimento, "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "", contaMovimento, "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}
							if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("RECEBER")) {
									if (!hasPessoaRec(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("RECEBER")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento,
													"", "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento, "", "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}*/
							
							// RETIRA  T DA CONTA MOVIMENTO
							contaMovimento = contaMovimento.replaceAll("T", "").replaceAll("t","");
							ttP.contaContabil     = contaMovimento;
							mapaDePara.put(ttMov.nomeOrigem,ttP);
						
						} 
						else {
							contaMovimento = ttP.contaContabil;
						}
						
						
					}  
				} catch  (Exception Ee) {}
			}

			if (fazLcdpr.equals("TRUE")) {
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO") && !contaMovimento.contains("R")) {
					ObjParticipante objParticipante = (ObjParticipante)mapaParticipante.get(ttMov.nomeOrigem);
					if (objParticipante != null) {
						contaMovimento = contaMovimento + "R" + objParticipante.codigoParticipante;
					}
				}
				
		   	}
			

			
 			
			if(roteiroCRMPrincipal.optString("erpContabilidade").contains("DEXION")){
				if (contaMovimento.equals("")) {
						JSONObject descricaoPlano = dbIOCont.sql("SELECT CONTACONTABIL FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOPLANO LIKE ?")
						.fields("CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(ttMov.cpfCnpj + "%")
						.queryUnique();
						contaMovimento = descricaoPlano.optString("CONTACONTABIL").trim();
				}
			}

			if (contaPortador.equals("")) {
				try {
					ttFornecedor ttF  = (ttFornecedor)mapaFornecedor.get(ttMov.nomePortador+"PORT");
					if (ttF == null) {					
						ttF  = new ttFornecedor(); 

						JSONArray portadorDePara =  findPortador(dbIOCont, codEmpresa, ttMov.nomePortador);
						if (portadorDePara != null && portadorDePara.length() > 0) {
							JSONObject ret = portadorDePara.optJSONObject(0);
							contaPortador = ret.optString("CONTACONTABIL").trim();
						}

						ttF.contaMovimento = contaPortador;
						ttF.nomeOrigem     = ttMov.nomePortador + "PORT";
						mapaFornecedor.put(ttMov.nomePortador + "PORT",ttF);
					} else {
						contaPortador = ttF.contaMovimento;
					}
				}
				catch  (Exception Ee) {}
			}

			String contaTipoFornecedor = "999333";

			boolean eFornecedor = false;
			String  razaoSocial = ttMov.nomeOrigem;
			String  razaoSocialDuplicata = ttMov.nomeOrigem;
			if (contaMovimento.toUpperCase().contains("FISCAL"))  eFornecedor = true;

			if (!contaMovimento.equals("")){			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";

					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
								.fields("DESCRICAOPLANO,CONTAANALITICA")
								.param(codEmpresaPlanoContas)
								.param(contaMovimento)
								.queryUnique();

					if (descricaoPlano != null && descricaoPlano.has("DESCRICAOPLANO") && descricaoPlano.has("CONTAANALITICA") ) {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");						
					}
					ttP.contaContabil     = contaMovimento;
					mapaPlano.put(contaMovimento,ttP);
				}

				descricaoPlanoContaMovimento = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					razaoSocial = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}

				// Joga no nome do fornecedor o que esta no plano de contas
				if (!classificaPlano.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaPlano))) {
					ttMov.nomeOrigem = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}
				if (ttP.descricaoPlano.length() < 2 || ttP.descricaoPlano.equals("") || ttP.descricaoPlano == null) {
					eFornecedor = true;
				}		

				if (razaoSocial.length() < 4) razaoSocial = ttMov.nomeOrigem;

				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					eFornecedor = true;
				}  
			}

			if (!contaPortador.equals("")){
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaPortador);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaPortador,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaPortador,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}
					ttP.contaContabil     = cutString(contaPortador,0, 20);
					mapaPlano.put(contaPortador,ttP);
				}
				descricaoPlanoContaPortador = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
			}
			
			if(ttMov.tipoLancamento.contains("PAGAR")) {
				ttMov.contaDebito  = cutString(contaMovimento,0, 20);
				ttMov.contaCredito = cutString(contaPortador,0, 20);
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				ttMov.contaCredito  = cutString(contaMovimento,0, 20);
				ttMov.contaDebito   = cutString(contaPortador,0, 20);
			}
			
			// logger.logDebug("CONTASTEMP " + ttMov.contaDebito + " | " + ttMov.contaCredito);
			
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
  				temIgnorar = true;
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;");
				ResumoTxt.append(ttMov.dataMovimento).append(";").append(ttMov.dataMovimento).append(";")
						 .append(ttMov.valorDocumento).append(";").append(ttMov.documento).append(";")
						 .append(ttMov.nomeOrigem).append(";").append(ttMov.nomePortador).append(";")
						 .append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";")
						 .append(ttMov.complemento05).append(";").append(ttMov.complemento06).append(";;")
						 .append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";");
				
				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
 				
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;").append(ttMov.dataMovimento).append(";").append(ttMov.dataMovimento).append(";")
						 .append(ttMov.valorDocumento).append(";").append(ttMov.documento).append(";").append(ttMov.nomeOrigem).append(";")
						 .append(ttMov.nomePortador).append(";").append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";").append(ttMov.complemento05).append(";")
						 .append(ttMov.complemento06).append(";;").append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";");
 				
 				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			String parcelaAtualeFinal = "";
			String parcelaAtual       = "";

			int parcelaBase = getParcelaBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			int totalParcelas = getTotalParcelas(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String mesAnoBase = getMesAnoBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!mesAnoBase.equals("") && parcelaBase > 0) parcelaAtual       = String.valueOf(getParcelaFinanciamento(mesAnoAtual, mesAnoBase,parcelaBase, totalParcelas));
			if (!mesAnoBase.equals("")) parcelaAtualeFinal = parcelaAtual.trim() + "/" + String.valueOf(totalParcelas).trim();

			ttMov.historico = getHistorico(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.nomeOrigem,
										   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
										   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			
			histobj.put("contaMovimento", contaMovimento).put("contaPortador", contaPortador).put("contaDebito", ttMov.contaDebito)
				   .put("contaCredito", ttMov.contaCredito).put("contaJuros", ttMov.contaJuros).put("contaMulta", ttMov.contaMulta)
				   .put("contaDesconto", ttMov.contaDesconto).put("parcelaAtual", parcelaAtual).put("parcelaAtualeFinal", parcelaAtualeFinal)
				   .put("trimestreMesAnoAnterior", trimestreMesAnoAnterior).put("trimestreMesAnoAtual", trimestreMesAnoAtual).put("descricaoPlanoMovimento", descricaoPlanoContaMovimento.toUpperCase())
				   .put("descricaoPlanoPortador", descricaoPlanoContaPortador.toUpperCase());

			if(roteiroCRM.optString("Realizar_Busca_Plano").equals("TRUE")){

				// #Fabrica(2019-08-27) @Vini
				JSONObject fornecFilial = new JSONObject();
				String cAnalitica = "";
				String auxNomeOrig = "";
				auxNomeOrig = ttMov.nomeOrigem.replaceAll("-","").replaceAll("/","").replaceAll("\\.","").replaceAll("[0-9]*", "").replaceAll("\\s+","").replaceAll("ME","").replaceAll("EPP","").replaceAll("LTDA","").replaceAll("EIRELI","").replaceAll("SA","").trim();
				if (auxNomeOrig.length()> 11) auxNomeOrig = cutString(auxNomeOrig,0,10);
				//pesquisa no banco de dados pela descricao continua para pegar a classifica??o usada na nova regra
				fornecFilial = dbIOCont.sql("SELECT CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOCONTINUA LIKE ?")
				.fields("CONTAANALITICA")
				.param(codEmpresaPlanoContas)
				.param(auxNomeOrig+"%")
				.queryUnique();
				cAnalitica = fornecFilial.optString("CONTAANALITICA").replaceAll("[^0-9]*", "").trim();                
				histobj.put("classificacao", cAnalitica); // classificacao para criacao de regra
			}

			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//yuri - 2309-016305
			boolean methodFoundHistorico = false;
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundHistorico = false;
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA2")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA3")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA4")) {
					methodFoundHistorico = true;
				}
				
				if(methodFoundHistorico) {					
					// Invoca metodo de getHistoricoRegra
					ttMov.historico = (String) method.invoke(scInstance, contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				}
			}
			// if(codEmpresa.equals("244")) logger.logDebug("HST == "+ttMov.historico+" | VLR == "+ttMov.valorDocumento);
			
			regraHistorico = getRegraHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
						
			if (!ttMov.historicoJuros.contains("JUROS")) ttMov.historicoJuros = "JUROS REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoJuros = getHistorico(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoJuros = getHistoricoJuros(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!ttMov.historicoDesconto.contains("DESCONTO")) ttMov.historicoDesconto = "DESCONTO REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoDesconto = getHistorico(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.nomeOrigem,
												   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoDesconto = getHistoricoDesconto(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (ttMov.historicoMulta.equals("")) ttMov.historicoMulta = "MULTA REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoMulta = getHistorico(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoMulta = getHistoricoMulta(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			// quando for forcada partida dobrada , vamos jogar o historico  de juros automaticamente no historico  movimento
			if (ttMov.chave.contains("DOBRADA_JUR")) ttMov.historico = ttMov.historicoJuros;
			if (ttMov.chave.contains("DOBRADA_DES")) ttMov.historico = ttMov.historicoDesconto;
			if (ttMov.chave.contains("DOBRADA_MUL")) ttMov.historico = ttMov.historicoMulta; 
			
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
										  
			if(!ttMov.codFilial.equals("") && (roteiroCRMPrincipal.optString("erpContabilidade").contains("SCI") || roteiroCRMPrincipal.optString("erpContabilidade").contains("PROSOFT"))){
				ttMov.lote = ttMov.codFilial+"_"+ttMov.lote;
			}

			String codParticipante   = getParticipante("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, 
														ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, 
														ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			if (!ttMov.codFilial.equals("")) {
				ttMov.historico 		= ttMov.historico 			 + " Filial:" + ttMov.codFilial;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Filial:" + ttMov.codFilial;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Filial:" + ttMov.codFilial;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Filial:" + ttMov.codFilial;
			}
						
			if (!codParticipante.equals("")) {
				ttMov.historico 		= ttMov.historico			 + " Participante:" + codParticipante;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Participante:" + codParticipante;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Participante:" + codParticipante;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Participante:" + codParticipante;
			}

			ttMov.historico 		= ttMov.historico.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoJuros 	= ttMov.historicoJuros.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoDesconto = ttMov.historicoDesconto.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoMulta 	= ttMov.historicoMulta.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
									
			if(roteiroCRMPrincipal.optString("erpContabilidade").equals("JBSOFTWARE")){
				ttMov.historico += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoJuros += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoDesconto += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoMulta += "GPLCTO:" + ttMov.contLinha;
			}

			// ------------------------------------------------
			//           GERA ARQUIVO PARA O FISCAL
			// ------------------------------------------------
			ttMov.documento = ttMov.documento.trim();
			if (ttMov.documento.startsWith("0")) {
				for (int xx=0;xx<10;xx++) {
					if (ttMov.documento.length() > 1 && ttMov.documento.startsWith("0")) ttMov.documento = ttMov.documento.substring(1);
				}
			}

			JSONObject jDescricaoDupl = new JSONObject();
			if (eFornecedor)   jDescricaoDupl.put("TIPO","FORNECEDOR");

			// Teste 64 kb
			if (fazConciliacao && ttMov.complemento06.contains("PRODUCAO")) {
				if (criaCabecalhoConciliacao) {
					txtConciliacao.append("NF;PARC;DIVERGENTE;VALOR A PAGAR;VALOR RAZAO").append("\r\n");
					criaCabecalhoConciliacao = false;
				}

				String chaveConciliacao = ttMov.documento + "-" + cutString(ttMov.complemento02, 0, "/").replaceAll("0","") + "-" + cutString(ttMov.nomeOrigem, 0, 5);
				//000014184-4-INDUS
				// logger.logDebug("CHAVINHA " + chaveConciliacao);
				ObjConciliacao ttConciliacao = (ObjConciliacao) mapaConciliacao.get(chaveConciliacao);

				if (ttConciliacao != null) {
					txtConciliacao.append(ttMov.documento).append(";").append(cutString(ttMov.complemento02, 0, "/").replaceAll("0","")).append(";")
								  .append(ttConciliacao.valorConciliacao == ttMov.valorDocumento ? "CONCILIADO" : "NAO CONCILIADO").append(";")
								  .append(ttMov.valorDocumento).append(";").append(ttConciliacao.valorConciliacao).append("\r\n");

				} else {
					txtConciliacao.append(ttMov.documento).append(";").append(cutString(ttMov.complemento02, 0, "/").replaceAll("0","")).append(";")
								  .append("NAO CONCILIADO").append(";")
								  .append(ttMov.valorDocumento).append(";").append(0).append("\r\n");
				}
				loteConciliacao = nomeEmpresa + "_" + codEmpresa + "_" + "_CONCILIACAO_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + ttMov.tipoLancamento;
			}

			if(integraFiscal.contains("TRUE") && ttMov.tipoPlanilha.contains("MOVIMENTO") && !razaoSocial.equals("") && !ttMov.documento.equals("") && !regraCRM && !contaMovimento.equals("")){
				//Atendimento: 2308-013102 -> Problema ao gerar os relatorios de PELO_FISCAL e Duplicatas nao encontradas
				// eFornecedor = true;
				temFiscal = true;
				apagaStatus = true;
				
				//JWR 02022021 - estava adicionando a parcela no documento para a busca de duplicata em roteiros secundarios.
				//Adicionada a validacao "roteiroCRM.has("usarComplementoParcela")"
				if (roteiroCRM.has("usarComplementoParcela") && !roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
					ttMov.documento = ttMov.documento + "-" + ttMov.parcelaDoc;
				}
				
				String dataVencimentoTTMov = "";
				
				if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
					dataVencimentoTTMov = ttMov.complemento09;
				}
					
				 
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("QUESTOR")) {

					JSONObject jDadosAux = new JSONObject();
					jDadosAux.put("CODEMPRESA", codEmpresa).put("DATAVENCTTMOV", dataVencimentoTTMov).put("RAZAOSOCIAL",razaoSocial)
							 .put("TABELACONTABIL", tabelaContabil);
					
					TemplateUtils templateUtil = new TemplateUtils();
					jDescricaoDupl = templateUtil.geraFiscalQuestor(roteiroCRMPrincipal, jDadosAux, jDescricaoDupl, dbIOCont, ttMov, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							jDescricaoDupl.put("USAFILIAL", roteiroCRMPrincipal.optString("Usa_Filial_Questor").toUpperCase());
														
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalQuestor(jDescricaoDupl).toString());

							geraFiscal = true;
							
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
				
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil questor
							dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
							contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");
							
							if(dupliNaoEncontContabil){
								contaMovimento = contaTemp;
								if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
								if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

								histobj.put("contaMovimento", contaMovimento);
								ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
							}else {
								if(cabecalhoNaoEncontrada){
									txtFornecedor.append("Codigo;Fornecedor/Cliente;Duplicata;Data;Valor bruto;Valor liquido;Banco;Obs:").append("\r\n");
									cabecalhoNaoEncontrada = false;
								}
								String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
								jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
								txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA")).append(";").append(razaoSocialDuplicata).append(";")
											 .append(ttMov.documento).append(";").append(ttMov.dataMovimento).append(";").append(String.format("%.2f", ttMov.valorDocumento))
											 .append(";").append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",",")).append(";").append(ttMov.nomePortador).append(";")
											 .append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2))
											 .append("\r\n");

								jDescricaoDupl.put("TIPO","FORNECEDOR");

								geraFiscal = true;
								loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
								
								ttMov.tipoPlanilha = "NAO LER";
								mapaVariavel.put(key,ttMov);
								continue;
							}
						}
					}
				}
				
				
				
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CONTABIT")) {

					JSONObject jDadosAux = new JSONObject();
					jDadosAux.put("CODEMPRESA", codEmpresa).put("DATAVENCTTMOV", dataVencimentoTTMov).put("RAZAOSOCIAL", razaoSocial)
							 .put("TABELACONTABIL", tabelaContabil);
					
					TemplateUtils templateUtil = new TemplateUtils();
					JSONArray jDescricaoDuplArray = templateUtil.geraFiscalContabit(roteiroCRMPrincipal, jDadosAux, new JSONArray(), dbIOCont, ttMov, logger);
					
					if (jDescricaoDuplArray != null && !jDescricaoDuplArray.toString().equals("[]")) {
						for (int i = 0;i <= jDescricaoDuplArray.length()-1; i ++) {
							// logger.logDebug("SO O I -> " + i);
							JSONObject jDescricaoDuplGet = jDescricaoDuplArray.getJSONObject(i);
							// logger.logDebug("jDescricaoDuplGet -> " + jDescricaoDuplGet.toString());
							if(jDescricaoDuplGet.has("RAZAOSOCIAL")){
								txtFiscal[0].append(TemplateUtils.geraLinhaFiscalContabit(jDescricaoDuplGet, ttMov).toString());
								geraFiscal = true;
								loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
								if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
								ttMov.tipoPlanilha = "NAO LER";
								mapaVariavel.put(key,ttMov);
								eFornecedor = false;
								continue;
							}else{ //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil questor
								dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
								contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");
								if(dupliNaoEncontContabil){
									contaMovimento = contaTemp;
									if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
									if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;
									histobj.put("contaMovimento", contaMovimento);
									ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
									// ttMov.historico = getHistoricoRegra2(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
								}else {
									if(cabecalhoNaoEncontrada){
										txtFornecedor.append("Codigo").append(";").append("Fornecedor/Cliente").append(";").append("Duplicata").append(";")
										.append("Data").append(";").append("Valor bruto").append(";").append("Valor liquido").append(";").append("Banco")
										.append(";").append("Obs:").append("\r\n");
										cabecalhoNaoEncontrada = false;
									}
									String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
									jDescricaoDuplGet.put("VALORLIQUIDO",  valorLiquido);
									txtFornecedor.append(jDescricaoDuplGet.optString("CODEMPRESA")).append(";").append(razaoSocialDuplicata).append(";")
									.append(ttMov.documento).append(";").append(ttMov.dataMovimento).append(";").append(ttMov.valorDocumento).append(";")
									.append(valorLiquido).append(";").append(ttMov.nomePortador).append(";").append("\r\n");
									// txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
									jDescricaoDuplGet.put("TIPO","FORNECEDOR");
									geraFiscal = true;
									
									loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
									if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
									if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
									ttMov.tipoPlanilha = "NAO LER";
									mapaVariavel.put(key,ttMov);
									eFornecedor = false;
									break;
								}
							}
						}
					}
				}
				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("MAKROWEB")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("VALORMULTA",  ttMov.valorMulta);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
						ttMov.parcelaDoc     = jDescricaoDupl.optInt("PARCELADOC");
						ttMov.valorDesconto  = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
						ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
						ttMov.valorJuros 	 = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
						
						String valorDescontoAux  = preparaDoublePrecisao(String.valueOf(ttMov.valorDesconto));
						String valorDocumentoAux = preparaDoublePrecisao(String.valueOf(ttMov.valorDocumento));
						String valorAcrecimoAux 	 = preparaDoublePrecisao(String.valueOf(ttMov.valorJuros+ttMov.valorMulta));
						
						//#2309-015394
						//double valorAux = ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta;
						//String valorCalcAux = "";
						// #Fabrica(2019-08-06) @Vini
						//valorCalcAux = preparaDoublePrecisao(String.valueOf(DecimalUtil.toDecimal(String.format("%.2f", valorAux))));
						
						// if (!String.format("%.2f", ttMov.valorDocumento).equals(jDescricaoDupl.optString("VALORPARCELA"))) { //<--- antigo
						if (ttMov.valorDocumento > jDescricaoDupl.optDouble("VALORPARCELA")) {
							jDescricaoDupl.put("TIPO", "FORNECEDOR");
						} else {													

							txtFiscal[0].append(StringUtil.leftPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 14,  "0"));
							txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 8, "0"));
							txtFiscal[0].append(StringUtil.leftPad(String.valueOf(ttMov.parcelaDoc), 2, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(ttMov.dataMovimento.replaceAll("/",""));
							txtFiscal[0].append(StringUtil.leftPad(valorDescontoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorAcrecimoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							//#2309-015394
							//txtFiscal[0].append(StringUtil.leftPad(valorCalcAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9,  "0"));
							txtFiscal[0].append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;

							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					  
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					
					 jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalCordilheira(jDescricaoDupl, ttMov, geraCabecalhoCordilheira).toString());
							
							geraCabecalhoCordilheira = false;

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							txtFornecedor.append("\r\n");

							jDescricaoDupl.put("TIPO","FORNECEDOR");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				// if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CUCA-FRESCA")) {

					// JSONObject jDados = new JSONObject();
					// jDados.put("CODEMPRESA",     codEmpresa);
					
					// //usando a filial do questor em duplicatas em aberto
				   
					// jDados.put("RAZAOSOCIAL",    razaoSocial);
					// jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					// jDados.put("DOCUMENTO",      ttMov.documento);
					// jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					// jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					// jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					// jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					// jDados.put("VALORJUROS",     ttMov.valorJuros);
					// jDados.put("VALORMULTA",     ttMov.valorMulta);
					// jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					// jDados.put("TABELACONTABIL", tabelaContabil);
					// jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					// Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					// dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					// double valorSaldoDuplicata2 = 0;
					// if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					// valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					// ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					// if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						// if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							// String separadorFiscal = "";
							// String dataVencimento  = "";
							// //String parcela		   = "1";
							// String duplicataParcela = jDescricaoDupl.optString("DUPLICATA")+"/"+String.valueOf(ttMov.parcelaDoc);
							
							// txtFiscal[0].append(cnpjEmpresa);
							// txtFiscal[0].append("    ");

							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append("E");
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append("S");

							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("DATAVENCIMENTO"), 10, " ")); //lendo do duplicatasem aberto
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("SITUACAO"), 5, " ")); //especie
							// txtFiscal[0].append(StringUtil.rightPad("", 3, " ")); //serie
							
							// txtFiscal[0].append(StringUtil.rightPad("", 2, " ")); //sub-serie
							// txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 9, "0"));
							// txtFiscal[0].append(StringUtil.leftPad("", 9, "0"));
							
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 18, " ")); // preciso criar a leitura do CNPJ do cliente, est? sendo usado o objeto "CODIGOFORNECEDOR" para guardar essa informa??o
							// txtFiscal[0].append(StringUtil.leftPad(duplicataParcela, 21, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(dataVencimento, 10, " ")); //data do vencimento
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0")); //? preciso criar a leitura do valor ? baixar, est? sendo usado o objeto "VALORPARCELA" para guardar no banco
							
							// if(contaPortador.length() > 1){
								// contaPortador = contaPortador.substring(0, contaPortador.length()-1) + "-" + contaPortador.substring(contaPortador.length()-1);
								// if(contaPortador.length() > 5) contaPortador = contaPortador.substring(0, contaPortador.length()-5) + "." + contaPortador.substring(contaPortador.length()-5);
							// }
							
							// txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9, "0")); //a conta do banco
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.centroCusto, 4, " "));
							
							// //txtFiscal[0].append(StringUtil.rightPad(ttMov.historico, 3, ""));	
							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append(StringUtil.rightPad("10", 3, " ")); //10 pagamento fornecedor 
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append(StringUtil.rightPad("11", 3, " ")); // 11 recebimento duplicata
							
							// txtFiscal[0].append(StringUtil.leftPad("", 15, " "));	//numero do cheque na planilha
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.dataMovimento, 10, " "));
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorJuros), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDesconto), 13, "0"));
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // correcao monetaria
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // despesas/receitas
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // Base de Calculo Retencao
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // IRRF Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // PIS Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // CSLL Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							// txtFiscal[0].append("    "); //n?o encontrado o c?digo da receita
							
							// txtFiscal[0].append("\r\n");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// } else {
							// if(cabecalhoNaoEncontrada){
								// txtFornecedor.append("Codigo");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Fornecedor/Cliente");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Duplicata");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Data");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor bruto");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor liquido");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Banco");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Obs:");
								// txtFornecedor.append("\r\n");
								// cabecalhoNaoEncontrada = false;
							// }
							// String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							// jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							// txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							// txtFornecedor.append(";");
							// txtFornecedor.append(razaoSocialDuplicata);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.documento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.dataMovimento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							// txtFornecedor.append(";");
							// txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.nomePortador);
							// txtFornecedor.append(";");
							// txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							// txtFornecedor.append("\r\n");

							// jDescricaoDupl.put("TIPO","FORNECEDOR");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// }
					// }
				// }
				
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO")) {
					JSONObject jDados = new JSONObject();
					
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("LER DA DUPLICATA MAIS ANTIGA"))  {
						
						
						if (dataVencimentoTTMov.equals("")) {
						
							JSONObject recordsDupVenc = new JSONObject();  
							try {
								String sql = "SELECT VENCIMENTO FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.DUPLICATA = ? ORDER BY VENCIMENTO LIMIT 1"; 
								recordsDupVenc = dbIOCont.sql(sql)
								.setFields("VENCIMENTO")
								.param(codEmpresa)
								.param(ttMov.documento)
								.debug(logger)
								.queryUnique();	

							} catch (Exception e1) {
								// logger.logDebug("ERROR: " + e1.getMessage());
							}
						
							if(recordsDupVenc != null && recordsDupVenc.has("VENCIMENTO")){
								dataVencimentoTTMov = cutString(recordsDupVenc.optString("VENCIMENTO"), 8, 10) + "/" +cutString(recordsDupVenc.optString("VENCIMENTO"), "-", "-") + "/" + cutString(recordsDupVenc.optString("VENCIMENTO"), 0, "-") ;
							}
						}   
						
						
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}else if(!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO")){
						jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					}else if(roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO")){
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					 
					
					
					jDados.put("CODEMPRESA", codEmpresa).put("RAZAOSOCIAL", razaoSocial).put("NOMEORIGEM", ttMov.nomeOrigem).put("DOCUMENTO", ttMov.documento)
						  .put("DATAMOVIMENTO", ttMov.dataMovimento).put("OBSERVACAO", ttMov.dataMovimento).put("PARCELADOC",  99)
						  .put("VALORDOCUMENTO", ttMov.valorDocumento).put("VALORJUROS", ttMov.valorJuros).put("VALORMULTA", ttMov.valorMulta)
						  .put("VALORDESCONTO",  ttMov.valorDesconto).put("TABELACONTABIL", tabelaContabil).put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optInt("ValidaFornecedorFiscal"));
						  
					//#2402-029579 - ValidaFornecedorFiscal
					jDescricaoDupl = buscarIODuplicataDominio(jDados, dbIOCont, logger);

					// Descomentar a proxima linha para testar data de vencimento  a jDescricaoDupl.optString("DATAVENCIMENTO") que vem das duplicatas em aberto! OBS: Complemento06, deve estar lendo a data de vencimento da planilha financeira
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  { 
					   if(jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaBaixaPorDataVencimento(jDescricaoDupl, dataVencimentoTTMov);
					}

					String chaveParcela = ttMov.documento + "-PARCELA";
					ttParcelaDominio ttP    = (ttParcelaDominio)mapaParcelaDominio.get(chaveParcela);
					if (ttP == null) {
						ttP  			= new ttParcelaDominio();
						ttP.documento   = ttMov.documento;
						ttP.ultimaParcela = 0;
					}
					ttP.ultimaParcela++;
					
					mapaParcelaDominio.put(chaveParcela,ttP);
					
					jDados.put("PARCELADOC", ttP.ultimaParcela);                 
					jDescricaoDupl = buscarIODuplicataDominio(jDados, dbIOCont, logger);	

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");
 
					String chaveDuplicata = "";
					if (jDescricaoDupl.has("CODIGOFORNECEDOR")) chaveDuplicata = ttMov.codEmpresa + "-ESPECIAL-" + jDescricaoDupl.optString("CODIGOFORNECEDOR") + "-" + ttMov.documento + "-SEG-";
					
					String serie = "";
					String subSerie = "";
					String especie = "";
					double valorSegmento = 0;

					JSONArray recordsDup = new JSONArray();

					/*
					DESCOMENTAR ESSA LINHA QUANDO TIVER DATA DE VENCIMENTO
					VAI SEPARAR QUANDO ENCONTRAR A DATA DE VENCIMENTO NO BANCO
					COLOCAR O COMPLEMENTO QUE TIVER A DATA DE VENCIMENTO : ttMov.complemento06
					*/
					// if (ttMov.tipoPlanilha.equals("MOVIMENTO")) {
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  { 

						 boolean isData = false;
						 Date dtV = new Date();
						 try{ 
							 dtV = DateUtil.stringToDate(jDescricaoDupl.optString("DATAVENCIMENTO"), "dd/MM/yyyy");
							isData = true; 
							 if(!getCampoDate(DateUtil.dateToString(dtV, "dd/MM/yyyy")).equals(getCampoDate(dataVencimentoTTMov))) isData = false; 
						 } catch(Exception ii){ 
							isData = false; 
						 }
						 if(!chaveDuplicata.equals("")){
							if(isData){
								try {
									String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.CHAVE LIKE ? AND VENCIMENTO = ? "; 
									recordsDup = dbIOCont.sql(sql)
									  .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
									  .param(codEmpresa)
									  .param(chaveDuplicata + "%")
									  .param(dtV)
									  .debug(logger)
									  .query();								
								} catch (Exception e1) {
									// logger.logDebug("ERROR: " + e1.getMessage());
								}
							}
							// if(!isData){
								// try {
									// String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE IO_DUPLICATA.CHAVE LIKE ? "; 
									// recordsDup = dbIOCont.sql(sql)
									  // .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
									  // .param(chaveDuplicata + "%")
									  // .debug(logger)
									  // .query();								
								// } catch (Exception e1) {
									// logger.logDebug("ERROR: " + e1.getMessage());
								// }
							// }
						 }
					}

					 else  { 
						if(!chaveDuplicata.equals("")){
							try {
								// INSERIDO O WHERE CODEMPRESA = ? PARA CORRE??O DO CHAMADO 202301-0023064.
								String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.CHAVE LIKE ? "; 
								recordsDup = dbIOCont.sql(sql)
								  .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
								  .param(codEmpresa)
								  .param(chaveDuplicata + "%")
								  .debug(logger)
								  .query();	

							} catch (Exception e1) {
								logger.logDebug("ERROR: " + e1.getMessage());
							}
						}
					}
					/* EXEMPLO DE COMO TEM QUE SAIR
					
					|0000|07701892000105|
					|5100|39||0|21338|15/08/2017|14/08/2017|0|||180,00|||||||||||||
					|5110|15/08/2017|3612|434|180,00|5|21338 ATLANTA ALARMES -  MONITOL MONIT. TOLEDO LTDA.||418|
					*/

					JSONObject recordsDupSeg = new JSONObject(); 
					if (recordsDup.length() > 0) recordsDupSeg = recordsDup.optJSONObject(0);
					
					if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
						serie   = recordsDupSeg.optString("SERIE");
						especie = recordsDupSeg.optString("CHAVEDUPLICATA");
					}

					double valorSaldoDuplicata = 0;
					double valorSomaSegmentos  = 0;
					
					// soma os segmentos pois eles nao sao baixados. Ou seja, se pago um valor parcial no dominio soma dos segmentos 
					// continua sendo o valor origial (total) da nota fiscal
					// utilizado para achar a proporcao do valor para cada segmento
					for (int seg =0; seg<recordsDup.length(); seg ++) {
						recordsDupSeg =  recordsDup.optJSONObject(seg);
						if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
							valorSomaSegmentos = valorSomaSegmentos + DecimalUtil.toDecimal(String.format("%.2f", recordsDupSeg.optDouble("VALORPARCELA")));
						}		
					}

					boolean leuDuplicata = false;
					
					// valor saldo duplicata = valor que esta em aberto no Dominio. Baixa nao pode ser maior que valor de saldo no Dominio
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));
					
					if (jDescricaoDupl.optString("TIPO").equals("FISCAL") && !roteiroCRMPrincipal.optString("ValidaFornecedorFiscal").equals("")) {
						jDescricaoDupl.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optInt("ValidaFornecedorFiscal"));
						jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, ttMov.nomeOrigem);
					}
					
					if (valorSomaSegmentos > 0) valorSaldoDuplicata = valorSomaSegmentos;

					valorSaldoDuplicata  = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					double diferencaParcela = DecimalUtil.toDecimal(String.format("%.2f", DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento )) - valorSomaSegmentos));
					
					if (!especie.equals("") || !serie.equals("")) {
						if ((ttMov.valorDocumento) <= valorSaldoDuplicata ) {
							double valorTotalBaixado = 0;
							for (int seg =0; seg<recordsDup.length(); seg ++) {
							
								recordsDupSeg =  recordsDup.optJSONObject(seg);
                                String segmento = "";
								
								if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
									serie   	  = recordsDupSeg.optString("SERIE");
									subSerie   	  = recordsDupSeg.optString("SITUACAO");      // GUARDA SUB SERIE 
									especie 	  = recordsDupSeg.optString("CHAVEDUPLICATA");
									valorSegmento = recordsDupSeg.optDouble("VALORPARCELA");
                                    segmento      = recordsDupSeg.optString("CHAVE");
									if (segmento.contains("-SEG-")) {
                                        segmento = cutString(segmento, "-SEG-");
                                        segmento = cutString(segmento, 0, "-");
                                    }	
								}	

                                if(segmento.equals("0")){
                                    if(seg>0) continue;
                                    valorSomaSegmentos = DecimalUtil.toDecimal(String.format("%.2f",valorSegmento));
                                    diferencaParcela = 0;
                                }

								// (zerado para validacao)
								diferencaParcela = 0;

                                //if (subSerie.equals("")) subSerie = "0";

                                String codContabil = "";
                                if(ttMov.tipoLancamento.contains("PAGAR")) {
                                    ttMov.contaDebito  = contaMovimento;
                                    ttMov.contaCredito = contaPortador;
                                    codContabil = "5100";
                                }
                                if(ttMov.tipoLancamento.contains("RECEBER")) {
									ttMov.contaDebito   = contaPortador;
									ttMov.contaCredito  = contaMovimento;
									codContabil = "5200";
									if(especie.equals("39")) codContabil = "5300";
									
									histobj.put("especie", especie);
									String codigoFiscalNovo = getCampoFiscal("", histobj);
									if (!codigoFiscalNovo.equals("")) codContabil = codigoFiscalNovo;
								}

                                String delimitador = "|";
                                String tipoSerie = delimitador + codContabil + delimitador + especie + delimitador + serie + delimitador + subSerie + delimitador;
								
								// if(ttMov.codEmpresa.contains("351")) logger.logDebug("Fiscal pelo Template");
								
                                if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
                                    txtFiscal[0].append(tipoSerie);
                                    //txtFiscal[0].append(jDescricaoDupl.optString("DUPLICATA"));
									if(ttMov.tipoLancamento.contains("PAGAR")) { //2311-020947
										txtFiscal[0].append(cutString(jDescricaoDupl.optString("DUPLICATA"), 0, "-"));
									}
									if(ttMov.tipoLancamento.contains("RECEBER")) {
										txtFiscal[0].append(jDescricaoDupl.optString("DUPLICATA"));
									}
									txtFiscal[0].append(delimitador).append(jDescricaoDupl.optString("DATAVENCIMENTO")).append(delimitador)
												.append(ttMov.dataMovimento).append(delimitador);
									
									 
									
									ttDocumento ttDoc    = (ttDocumento)mapaDocumento.get(ttMov.documento+"-"+seg);
									if (ttDoc == null) {
										ttDoc  = new ttDocumento();
										ttDoc.documento  = ttMov.documento;
										ttDoc.valorDocumento  = 0;
 									}
									
									double valorBaixar = 0;
									
									ttDoc.valorDocumento   = ttDoc.valorDocumento + DecimalUtil.toDecimal(String.format("%.2f", ((ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta + diferencaParcela) * (valorSegmento /  valorSomaSegmentos))));
									valorBaixar = DecimalUtil.toDecimal(String.format("%.2f", ((ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta + diferencaParcela) * (valorSegmento /  valorSomaSegmentos))));										
									
  
									if ((valorSegmento - ttDoc.valorDocumento) <= 0.02 && (valorSegmento - ttDoc.valorDocumento) > 0) valorBaixar = valorBaixar  + (valorSegmento - ttDoc.valorDocumento);
									if ((ttDoc.valorDocumento - valorSegmento) <= 0.02 && (ttDoc.valorDocumento - valorSegmento) > 0) valorBaixar = valorBaixar  - (ttDoc.valorDocumento - valorSegmento);
									
									 valorTotalBaixado += valorBaixar; 
									 
 									 
 									
									// calcula se o valor a ser baixado somando os segmentos eh maior que o valor pago pelo cliente
									// quando isto ocorrer, deve-se ajustar no ultimo segmento o valor
									 if ((valorTotalBaixado - ttMov.valorDocumento) <= 0.02 && (valorTotalBaixado - ttMov.valorDocumento) > 0) {
										 valorBaixar = valorBaixar  - (valorTotalBaixado - ttMov.valorDocumento);
										 ttDoc.valorDocumento = ttDoc.valorDocumento  - (valorTotalBaixado - ttMov.valorDocumento);
									 }
									
									 if ((ttMov.valorDocumento - valorTotalBaixado) <= 0.02 && (ttMov.valorDocumento - valorTotalBaixado) > 0) {
										 valorBaixar = valorBaixar  - (ttMov.valorDocumento - valorTotalBaixado);
										 ttDoc.valorDocumento = ttDoc.valorDocumento  - (ttMov.valorDocumento - valorTotalBaixado);
									 }
									 
 									
									mapaDocumento.put(ttMov.documento+"-"+seg,ttDoc);									
									
									txtFiscal[0].append(String.format("%.2f", (valorBaixar)).replaceAll("\\.",","));

                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALJUROS").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALMULTA").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALDESCONTO").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    // txtFiscal[0].append("||||||||||");
                                    // if(ttMov.tipoLancamento.contains("RECEBER")) txtFiscal[0].append("||");
                                    txtFiscal[0].append("||||||||");
                                    if(ttMov.tipoLancamento.contains("RECEBER")) txtFiscal[0].append("||||");
                                    
									if(ttMov.tipoLancamento.contains("PAGAR")) {
										txtFiscal[0].append(delimitador).append(jDescricaoDupl.optString("CPFCNPJ")).append(delimitador);
									}
									txtFiscal[0].append(segmento).append(delimitador);
                                    //txtFiscal[0].append(jDescricaoDupl.optString("OBSERVACAO"));	// FEITO PARA SPEROTO VANZELLA
                                    //txtFiscal[0].append(delimitador);
                                    txtFiscal[0].append("\r\n");


                                    if (ttMov.valorDocumento > ttMov.valorDesconto) {
										codContabil = codContabil.replaceAll("00","10");

										txtFiscal[0].append(delimitador).append(codContabil).append(delimitador).append(ttMov.dataMovimento).append(delimitador)
													.append(cutString(ttMov.contaDebito.toUpperCase(), 0, "R")).append(delimitador).append(cutString(ttMov.contaCredito.toUpperCase(), 0, "R")).append(delimitador);
										 
										txtFiscal[0].append(String.format("%.2f", (valorBaixar)).replaceAll("\\.",","));

										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										if(ttMov.historico.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historico, "CodigoHistorico:", " "));
										txtFiscal[0].append(delimitador).append(cutString(cutString(ttMov.historico, 0, "Filial:"), 0 ,"Codigo"))
													.append(delimitador).append("").append(delimitador + codEmpresa + delimitador).append("\r\n");
									}

									if (ttMov.valorDesconto > 0 && seg == 0) {

										txtFiscal[0].append(delimitador).append(codContabil).append(delimitador).append(ttMov.dataMovimento)
													.append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(ttMov.contaDebito).append(delimitador).append(contaDesconto);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(contaDesconto).append(delimitador).append(ttMov.contaCredito);
										}
										txtFiscal[0].append(delimitador).append(String.format("%.2f", ttMov.valorDesconto).replaceAll("\\.",","))
													.append(delimitador).append("");
										if(ttMov.historicoDesconto.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoDesconto, "CodigoHistorico:", " "));
										
										txtFiscal[0].append(delimitador).append(cutString(cutString(ttMov.historicoDesconto, 0, "Filial:"), 0 ,"Codigo"))
													.append(delimitador).append("").append(delimitador + codEmpresa + delimitador).append("\r\n");
									}

									 if (ttMov.valorJuros > 0  && seg == 0) {
										txtFiscal[0].append(delimitador).append(codContabil).append(delimitador).append(ttMov.dataMovimento).append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(contaJuros).append(delimitador).append(ttMov.contaDebito);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(ttMov.contaCredito).append(delimitador).append(contaJuros);
										}
										txtFiscal[0].append(delimitador).append(String.format("%.2f", ttMov.valorJuros).replaceAll("\\.",","))
													.append(delimitador).append("");
													
										if(ttMov.historicoJuros.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoJuros, "CodigoHistorico:", " "));
										
										txtFiscal[0].append(delimitador).append(cutString(cutString(ttMov.historicoJuros, 0, "Filial:"), 0 ,"Codigo"))
													.append(delimitador).append("").append(delimitador + codEmpresa + delimitador).append("\r\n");
									}

									 if (ttMov.valorMulta > 0 && seg == 0) {
										txtFiscal[0].append(delimitador).append(codContabil).append(delimitador).append(ttMov.dataMovimento)
													.append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(contaMulta).append(delimitador).append(ttMov.contaDebito);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(ttMov.contaCredito).append(delimitador).append(contaMulta);
										}
										
										txtFiscal[0].append(delimitador).append(String.format("%.2f", ttMov.valorMulta).replaceAll("\\.",","))
													.append(delimitador).append("");
													
										if(ttMov.historicoMulta.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoMulta, "CodigoHistorico:", " "));
										
										txtFiscal[0].append(delimitador).append(cutString(cutString(ttMov.historicoMulta, 0, "Filial:"), 0 ,"Codigo"))
													.append(delimitador).append("").append(delimitador + codEmpresa + delimitador).append("\r\n");
									}

                                    diferencaParcela = 0;

                                    geraFiscal = true;
                                    loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
                                    
									if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
									
									eFornecedor = false;
                                    leuDuplicata = true;

                                }
                            }
                            if (leuDuplicata) continue;
                        } else {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo;Fornecedor/Cliente;Duplicata;Data;Valor bruto;Valor liquido;Banco;Obs:")
											 .append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							//#2402-029218 - Quando h? Filial mandamos o codFilial e n?o o codEmpresa
							txtFornecedor.append(ttMov.codFilial.equals("") ? jDescricaoDupl.optString("CODEMPRESA") : ttMov.codFilial).append(";").append(razaoSocialDuplicata).append(";").append(ttMov.documento).append(";")
										 .append(ttMov.dataMovimento).append(";").append(String.format("%.2f", ttMov.valorDocumento)).append(";")
										 .append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",",")).append(";").append(ttMov.nomePortador).append(";")
										 .append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata))
										 .append("\r\n");

                            geraFiscal = true;
                            loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
                            
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
                            
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
                            mapaVariavel.put(key,ttMov);
                        }
                    }
                    else {
						if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
							jDescricaoDupl.put("TIPO","FORNECEDOR"); // se nao acha serie vai para duplicatas nao encontradas
							eFornecedor = true;
						}
					}
				}


				if (eFornecedor) {

					dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
					contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");


					if(dupliNaoEncontContabil){
						contaMovimento = contaTemp;
						if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
						if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

						histobj.put("contaMovimento", contaMovimento);
						ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);


					}else{
						if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FORNECEDOR")) {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo;Fornecedor/Cliente;Duplicata;Data;Valor bruto;Valor liquido;Banco;Obs:")
											 .append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorFinal = String.format("%.2f", ttMov.valorDocumento);
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							
							
							jDescricaoDupl.put("NOMEORIGEM", ttMov.nomeOrigem).put("DOCUMENTO", ttMov.documento)
										  .put("DATAMOVIMENTO", ttMov.dataMovimento).put("VALORFINAL", valorFinal)
										  .put("VALORLIQUIDO",  valorLiquido);
							
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA")).append(";")
										 .append(jDescricaoDupl.optString("NOMEORIGEM")).append(";")
										 .append(jDescricaoDupl.optString("DOCUMENTO")).append(";")
										 .append(jDescricaoDupl.optString("DATAMOVIMENTO")).append(";")
										 .append(jDescricaoDupl.optString("VALORFINAL").replaceAll("\\.",",")).append(";")
										 .append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",",")).append(";")
										 .append(ttMov.nomePortador).append(";");
										 
							if (jDescricaoDupl.has("FORNECEDORESNAOBATEM")) {
								txtFornecedor.append("Nome do Fornecedor/Cliente nao confere com a duplicata aberta no fiscal ");
							}
							else {
								txtFornecedor.append("Duplicata nao encontrada no Fiscal ");
																
							}							
							txtFornecedor.append("\r\n");


							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
							
						}
					}
				}
			}
			
			/*	
			if (integraContrato.toUpperCase().equals("TRUE")) {
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO")) {
					String dataVencimentoTTMov = "";
					
 				
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) dataVencimentoTTMov = ttMov.complemento01;
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) dataVencimentoTTMov = ttMov.complemento02; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) dataVencimentoTTMov = ttMov.complemento03; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) dataVencimentoTTMov = ttMov.complemento04; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) dataVencimentoTTMov = ttMov.complemento05; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) dataVencimentoTTMov = ttMov.complemento06; 
					}	
					
						
					JSONObject jDados = new JSONObject();
					
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					else {
						jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					}
					
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("OBSERVACAO", 	 ttMov.dataMovimento);
					jDados.put("PARCELADOC",     99);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
 					
 					try {
						Date dtvenc = DateUtil.stringToDate(dataVencimentoTTMov, "dd/MM/yyyy");	 
				
						jDescricaoDupl = dbIOCont.sql("SELECT CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND DUPLICATA = ? AND VALORPARCELA >= ? and VENCIMENTO = ? order by VENCIMENTO   limit 1 ")
						.fields("CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO")
						.param(codEmpresa)
						.param(ttMov.documento)
						.param(ttMov.valorDocumento)
						.param(dtvenc)
						.queryUnique();
					} catch (Exception e2) {
						logger.logDebug("ERROR: " + e2.getMessage());
						continue;
					}
					
 					
					if (jDescricaoDupl != null && jDescricaoDupl.has("VALORPARCELA")) { 

 						Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
						dataLote = DateUtil.dateToString(dtL, "yyyy-MM");
	 
						boolean leuDuplicata = false;
						double valorSaldoDuplicata = 0;
						
						// valor saldo duplicata = valor que esta em aberto no Dominio. Baixa nao pode ser maior que valor de saldo no Dominio
						if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));
						 
 						if ((ttMov.valorDocumento) <= valorSaldoDuplicata ) { 
 
							String codContabil = "5700";								 							
							// |5700|1875|57593981053| | |1|25/02/2021|01/03/2021|5527,28|1649,16||||||

							String delimitador = "|";
							String tipoSerie = delimitador + codContabil + delimitador + ttMov.documento + delimitador + ttMov.complemento01 + delimitador + delimitador + delimitador + ttMov.complemento02  + delimitador;


						 try {
								String dataVencimento = jDescricaoDupl.optString("VENCIMENTO");
								Date dt        = DateUtil.stringToDate(dataVencimento, "yyyy-MM-dd HH:mm:ss");
								dataVencimento = DateUtil.dateToString(dt, "dd/MM/yyyy");
								dataVencimentoTTMov = dataVencimento;
							} catch (Exception e4) {
 							}
								
								
							if(jDescricaoDupl.has("VALORPARCELA")) {
								txtFiscal[0].append(tipoSerie);
								txtFiscal[0].append(dataVencimentoTTMov);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(ttMov.dataMovimento);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta)).replaceAll("\\.",","));
 								txtFiscal[0].append(delimitador);
							    txtFiscal[0].append(String.format("%.2f", (ttMov.valorJuros)).replaceAll("\\.",","));
								txtFiscal[0].append("||||||");								 
								txtFiscal[0].append("\r\n");

								geraFiscal = true;
								loteFiscal[0]= nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								eFornecedor = false;
								leuDuplicata = true;

							}
							
 						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil Dominio
							 
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Contrato " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata));
							txtFornecedor.append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 							mapaVariavel.put(key,ttMov);
							
						}
					}
					else {
						if(cabecalhoNaoEncontrada){
							txtFornecedor.append("Codigo");
							txtFornecedor.append(";");
							txtFornecedor.append("Fornecedor/Cliente");
							txtFornecedor.append(";");
							txtFornecedor.append("Duplicata");
							txtFornecedor.append(";");
							txtFornecedor.append("Data");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor bruto");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor liquido");
							txtFornecedor.append(";");
							txtFornecedor.append("Banco");
							txtFornecedor.append(";");
							txtFornecedor.append("Obs:");
							txtFornecedor.append("\r\n");
							cabecalhoNaoEncontrada = false;
						}
						String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
						jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
						txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
						txtFornecedor.append(";");
						txtFornecedor.append(razaoSocialDuplicata);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.documento);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.dataMovimento);
						txtFornecedor.append(";");
						txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
						txtFornecedor.append(";");
						txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.nomePortador);
						txtFornecedor.append(";");
						txtFornecedor.append("Contrato " + ttMov.documento + " nao encontrado no Dominio ");
						txtFornecedor.append("\r\n");

						geraFiscal = true;
						loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
						if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 						mapaVariavel.put(key,ttMov);
					}
 				}

			}
			
			*/
			
			boolean ctFiscal = false;
			if(ttMov.tipoLancamento.contains("PAGAR")	&& ttMov.contaDebito.toUpperCase().contains("FISCAL")) ctFiscal = true;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.contaCredito.toUpperCase().contains("FISCAL")) ctFiscal = true;

			dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
			contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");

			if(contaMovimento.toUpperCase().contains("FISCAL") || ctFiscal) {
				contaMovimento = contaTemp;
				if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
				if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

				histobj.put("contaMovimento", contaMovimento);
				ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			}

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO,CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}					
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);


				}
			}
			 //Tratamento para inverter conta em lencamento simples feito para JBSOFTWARE
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM")){
				if(ttMov.contaDebito.contains("INVERTE") && !ttMov.contaCredito.contains("INVERTE")) ttMov.contaCredito = ttMov.contaCredito+ "INVERTE";
				if(!ttMov.contaDebito.contains("INVERTE") && ttMov.contaCredito.contains("INVERTE")) ttMov.contaDebito = ttMov.contaDebito+ "INVERTE";
			} 

			chave = ttMov.chave;
			//chave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String testeChave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
			if(!testeChave.toUpperCase().contains("ACUMULAANTES") && !testeChave.toUpperCase().contains("ACUMULARANTES")) chave = testeChave;
			
			if(chave.length() > 180) chave = cutString(chave, 0, 179);
			
			chave = chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";
			ttMov.chave = ttMov.chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";

			apagaStatus = true;
			String keyAc = chave;
			
			// logger.logDebug("EMPR " + nomeEmpresa + " | " + tipoProduto + " | " + mantemArquivo + " | " + processaOud);
			
			if (((!tipoProduto.equals("OIC_PACOTE") && mantemArquivo.equals("SIM"))  || processaOud.equals("TRUE")) && !ttMov.lote.toUpperCase().contains("_OUD_")) {
				ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
			}
			else {
				if (ttMov.nomeArquivo.contains(".omc")) {
					ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
				}
			}
			if(codEmpresa.contains("1126"))
				logger.logInfo("LOTEE " + ttMov.lote);
 
 			
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);		
			

			ttMovimentoPadrao ttMov3       = (ttMovimentoPadrao)mapaOficial.get(keyAc);
			if (ttMov3  == null) {
				ttMov3                = new ttMovimentoPadrao(ttMov);
				ttMov3.valorDesconto   = 0;
				ttMov3.valorJuros      = 0;
				ttMov3.valorDocumento  = 0;
				ttMov3.valorMulta      = 0;
				ttMov3.documento       = "";
			}
			if (ttMov3.documento.equals("")) {
				ttMov3.documento         = ttMov.documento;
			} else { if (!ttMov3.documento.contains(ttMov.documento)) ttMov3.documento = ttMov3.documento + ", " + ttMov.documento; }


			ttMov3.valorDesconto     = ttMov3.valorDesconto   + ttMov.valorDesconto;
			ttMov3.valorDocumento    = ttMov3.valorDocumento  + ttMov.valorDocumento;
			ttMov3.valorMulta        = ttMov3.valorMulta      + ttMov.valorMulta;
			ttMov3.valorJuros        = ttMov3.valorJuros      + ttMov.valorJuros;
			ttMov3.chave = chave;


			// logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador);
			String testeChavePortador = getRegrasParaAcumularPortador("", "", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
 			if (!testeChavePortador.equals("")) ttMov3.contador = 3;
			
			if (!ttMov.chave.equals(chave)) ttMov3.contador = 3;

			// for?a lancamento aberto no FB software
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
				roteiroCRMPrincipal.optString("erpContabilidade").contains("DYAD") ||//removido o erp FORTES dessa valida??o - 202301-0023113
				roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM") ||
				roteiroCRMPrincipal.optString("erpContabilidade").contains("PROSYST")) ttMov3.contador = 3;
				
			//logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador+" - AGORA E AGORA -> "+roteiroCRMPrincipal.optString("erpContabilidade"));

			mapaVariavel.put(key,ttMov);
			mapaOficial.put(keyAc,ttMov3);			 			
 
			if(ttMov.tipoPlanilha.contains("EXTRATO") || ttMov.tipoPlanilha.contains("CARTAO")){
				if(roteiroCRMPrincipal.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			}else if(roteiroCRM.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			
			//#2305-005880
			//if (ttMov.tipoPlanilha.contains("OTTCARTAO")) ttMov3.contador = 0;
			if (ttMov.tipoPlanilha.contains("OTTCARTAO") && !roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET")) ttMov3.contador = 0;
			
			// if(ttMov.codEmpresa.contains("68345")) logger.logDebug("VALOR = "+ttMov.valorDocumento+" | DT == "+ttMov.dataMovimento+" | CONT = "+ttMov3.contador+" | CHAVE == "+chave);
 
			
			if  ((ttMov.valorJuros > 0 || ttMov.valorDesconto > 0 || ttMov.valorMulta > 0 || ttMov3.contador == 3) && !ttMov.tipoPlanilha.equals("NAO LER")) {
				chave = chave.replaceAll("CTB","CTBPORT");
				if (!testeChavePortador.equals("")) chave = testeChavePortador;

				key = chave;
				ttMovimentoPadrao ttMov2       = (ttMovimentoPadrao)mapaOficial.get(key);
				if (ttMov2  == null) {
					ttMov2                = new ttMovimentoPadrao(ttMov);
					ttMov2.contador        = 0;
					ttMov2.valorDesconto   = 0;
					ttMov2.valorJuros      = 0;
					ttMov2.valorDocumento  = 0;
					ttMov2.valorMulta      = 0;
					ttMov2.classificacao     = ttMov.classificacao;

				}
				ttMov2.tipoMovimento     = "CTBPORT";
				ttMov2.valorDesconto     = ttMov2.valorDesconto   + ttMov.valorDesconto;
				ttMov2.valorMulta        = ttMov2.valorMulta      + ttMov.valorMulta;
				ttMov2.valorJuros        = ttMov2.valorJuros      + ttMov.valorJuros;
				ttMov2.chave             = chave;
				ttMov2.chaveExtrato      = "";
				ttMov2.documento         = ttMov3.documento;
				ttMov2.valorDocumento    = ttMov2.valorDocumento + ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta;
				ttMov2.contador          = ttMov2.contador + ttMov3.contador;
				if(tipoLancamento.contains("PAGAR") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")) {
					ttMov2.naturezaContabil  = "C";
					ttMov2.contaDebito       = "";
					ttMov2.contaCredito      = ttMov.contaCredito;
				}
				if(tipoLancamento.contains("RECEBER") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")){
					ttMov2.naturezaContabil  = "D";
					ttMov2.contaDebito       = ttMov.contaDebito;
					ttMov2.contaCredito      = "";
				}
				if (ttMov2.valorDocumento == 0) continue; //JWR
				ttMov2.historico = getHistoricoPortador(contaPortador, ttMov2.historico, ttMov2.tipoLancamento, ttMov2.documento, ttMov2.nomeOrigem, histobj);
				
				//Descomentar caso haja problema com a perna de portador do lancamento
				if (!ttMov2.codFilial.equals("") && !ttMov2.historico.contains("Filial:")) ttMov2.historico = ttMov2.historico + " Filial:" + ttMov2.codFilial;
				
				String tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV FORNECEDOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("FORNECEDOR"))    ttMov3.historico = cutString(ttMov3.historico,0," Filial:") + " Filial:"+filial;
					if(tratarDiv.contains("PORTADOR"))      ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
  					ttMov3.historicoJuros	 = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoMulta 	 = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV DESCONTO", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("DESCONTO"))    ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV JUROS", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("JUROS"))    ttMov3.historicoJuros = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV MULTA", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("MULTA"))    ttMov3.historicoMulta = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV PORTADOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("PORTADOR"))    ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
				}

				mapaOficial.put(key,ttMov2);
				ttMov3.classificacao = ttMov2.classificacao;
				mapaOficial.put(keyAc,ttMov3);
			}
		}
		if(contRegra == -1){
			String codEmp = props.get(empresa + "_COD_EMPRESA");
			String nomeEmp = props.get(empresa + "_NOME_EMPRESA");
			
			String info = tipoPlanilha + ";" + roteiroCRM.optString("codigo");
			compDirName = nomeEmp + "_#" + codEmp;
			String tipoPlanilhaDirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/" + compDirName + "/DePara/Processado/";
			String tipoPlanilhaPath = tipoPlanilhaDirName + "TIPOPLANILHA" + ".txt";
			// inout/contabil/Depaula/vektor_#123/Depara/TIPOPLANILHA.txt
			FileWriter 	arquivoTp = new FileWriter(tipoPlanilhaPath);
			arquivoTp.writeNewFile(info);
			//sssssss
		}


		//-------------------------------------------------------------------------
		// GERA OS ARQUICOS PARA BAIXA DE DUPLICATAS -- FISCAL
		//-------------------------------------------------------------------------
		if (geraFiscal) {

			String auxExtencao = ".txt";
			if(roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA") ||
				roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CONTABIT")) auxExtencao = ".csv";
			String filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + auxExtencao;
			FileWriter writer = new FileWriter(filename);
			writer.writeNewFile(txtFiscal[0].toString());
			
			if (nomeArquivo.toUpperCase().contains("_ID") && !loteFiscal[0].contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + tipoLancamento;

			loteFiscal[0] = loteFiscal[0].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
			
			filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + ".csv";
			writer = new FileWriter(filename);
			writer.writeNewFile(txtFornecedor.toString());
			
			//JWR 2303-000613 Descomentar para quando utilizar arquivos fiscais separados por filial
			/*if (!loteFiscal[i].equals("") && geraNaoEncontradas) {
				loteFiscal[i] = loteFiscal[i].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
				filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[i] + ".csv";
				writer = new FileWriter(filename);
				writer.writeNewFile(txtFornecedor.toString());
				geraNaoEncontradas = false;
			}*/
			
			
		}
		
		// Teste 64 kb
		if (fazConciliacao) {
			String auxExtencao = ".csv";
			String filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteConciliacao+auxExtencao;
			FileWriter writer = new FileWriter(filename);
			writer.writeNewFile(txtConciliacao.toString());
		}


		//-------------------------------------------------------------------------
		//--- DESABILITAR AQUI SOMENTE SE O BANCO DE DADOS CONTIVER TABELA IO_RAZAO
		//-------------------------------------------------------------------------


		
		mapaVariavel		= new HashMap();

		if (apagaStatus) {
			jStatus = new JSONObject();
			// logger.logDebug("PUTSTATUS 4745");
			putStatus(dirName, "", jStatus, logger);
		}
		
		// =======================================================================================
		// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base
		// =======================================================================================
  	   
		
		Iterator itLote = mapaLote.keySet().iterator();
		while (itLote.hasNext()) {

			String key = (String)itLote.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			lote = ttLot.lote;

			try {
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				dbIOCont.delete("IO_MOVIMENTO")
				.where("LOTE=?")
				.param(lote)
				.execute();
				
 				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_MOVIMENTO")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param("%" + tipoLancamento + "%")
					.param(nomeEmpresa + "_" + "%")
					
					.execute();
					
				}
				
				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_ARQUIVOS")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param(cutString(lote, 0, "_") + "%")
					.param("%" + tipoLancamento + "%")
					.execute();
					
				}
				
				
			} catch (Exception eDel) {
				logger.logError("EndpointB: ERROR DELETE IO_MOVIMENTO", eDel);
			}
		}
		// logger.logDebug("ETAPA 04 TEMPLATE ");
	
	// if (nomeEmpresa.toUpperCase().contains("LMCCC")) logger.logInfo("Entrando Etapa 04");
					
		contRegra = -1;
		Iterator it = mapaOficial.keySet().iterator();
		while (it.hasNext()) {
			
			String chaveExtrato     = "";

			String key = (String)it.next();
			ttMovimentoPadrao ttMov = new ttMovimentoPadrao();
			try {
				ttMov = (ttMovimentoPadrao)mapaOficial.get(key);
			}
			catch (Exception xx) { continue;}

  
			if (ttMov.tipoPlanilha.equals("NAO LER")) continue;


			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				if(tipoLancamento.contains("PAGAR") && ttMov.debitoCredito.equals("EXTRATO-CREDITO")) continue;
				if(tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.equals("EXTRATO-DEBITO"))  continue;

			}
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll(";","").trim();

			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			if (restoLinha == 0) putStatus(dirName, "04--Etapa 4 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			// quando cliente escolhe para agrupar tudo em um unico lote, mudamos o nome do arquivo.
			
			if (ttMov.valorDocumento == 0) continue;
			
			//logger.logInfo("Conseguiu ler pelo tempDev");
			
			// logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.lote + " | " + ttMov.dataMovimento + " | " + ttMov.tipoLancamento + " | " + ttMov.debitoCredito);
			// logger.logDebug("PORTAS2 " + ttMov.nomePortador);
			String idLote = cutString(ttMov.lote, "ott_oud", ttMov.lote.indexOf("ott_oud") + 16);//202302-0025707
			
			if (ttMov.lote.contains("ott_oud__id")) idLote = cutString(ttMov.lote, "ott_oud__id", "_");//2308-011361
			if (ttMov.lote.contains("ott_oud_id")) idLote = cutString(ttMov.lote, "ott_oud_id", "_");//2308-011361

			if (roteiroCRMPrincipal.optString("agrupaArquivos").toUpperCase().contains("TRUE")) {
				if (ttMov.lote.contains("_CORA_")) {
					ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_CORA_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
				} 
				
				else {
					if (ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) {

						ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_OTTIMIZZA_PROJETO_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
					}
					else {
						if (ttMov.lote.toUpperCase().contains("_OUD_")) {
	
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_ott_oud__id" + idLote + "_" + arquivoAgora  + "_OUD_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						}
					
						else {
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						
						}
					}
				}
				
				
			}
			
			if (ttMov.lote.toLowerCase().contains("ott_oud_")) ttMov.lote = ttMov.lote.replaceAll("__", "_");
  			
			// logger.logDebug("LOTIZIN " + nomeEmpresa + " | " + ttMov.lote);
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);
			

			if(tipoLancamento.contains("PAGAR")){
				ttMov.naturezaContabil = "D";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "C";
			}
			if(tipoLancamento.contains("RECEBER")){
				ttMov.naturezaContabil = "C";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "D";
			}

			JSONObject extratoEmpresa = new JSONObject();

			// CASO A LINHA DO EXTATO JA TENHA SIDO LIDA PELA PLANILHA DE PAGAMENTOS, DEVE SER IGNORADA
			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				chaveExtrato = ttMov.chaveExtrato;

				extratoEmpresa = dbIOCont.sql("SELECT CHAVE, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE = ? ")
				.fields("CHAVE, EXTRATOLIDO")
				//.param(chaveExtrato + "%")
				.param(chaveExtrato)
				.queryUnique();

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					if (extratoEmpresa.has("EXTRATOLIDO")) {

						double extratoLido = extratoEmpresa.optDouble("EXTRATOLIDO");

						if (extratoLido == 1) continue;
						
						extrato.atualizaExtratoLido(chaveExtrato, dbIOCont, logger);

						/*dbIOCont.update("IO_EXTRATO")
						.fields("EXTRATOLIDO")
						.where("CHAVE = ? ")
						.param(1)
						.param(chaveExtrato)
						.execute();*/

					}
				}

			}
			// logger.logInfo("NPT " + nomeArquivoProtocolo);
			if (!nomeArquivoProtocolo.equals("")) {
				try {
					String banco = "";
					
					if (!ttMov.complemento08.equals("")) {
						banco = "BANCO: "+ttMov.complemento08+" ";
					}
					if (!ttMov.nomePortador.equals("EM BRANCO")) {
						banco += ttMov.nomePortador;
					}
					
					// logger.logInfo("Leu o banco " + banco);
					
					if (!bancosLidos.toString().contains(banco)) {
						bancosLidos.add(banco);
					}
				} catch (Exception e) {
					logger.logInfo("Bcc " + e.getMessage());
				}

			}


			// -----------------------------------------------------------------------------------------------------------
			// COMPARA COM RAZAO APENAS QUANDO O NOME DO ARQUIVO CONTIVER OTTIMIZZA, ASSIM FICA MAIS RAPIDA A INTEGRACAO
			// QUANDO O CLIENTE FINAL ESTIVER RODANDO.
			// -----------------------------------------------------------------------------------------------------------

			if (!ttMov.tipoMovimento.equals("CTBPORT") && ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) {

				String tipoData = "MOVIMENTO";

				comparaRazao = true;


				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm= new Date();
				Date dataMovimentoDateMenosDois= new Date();
				Date dataMovimentoDateMenosTres= new Date();
				Date dataMovimentoDateMaisUm= new Date();
				Date dataMovimentoDateMaisDois= new Date();
				Date dataMovimentoDateMaisTres= new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;

				String valorFinal = String.format("%.2f", ttMov.valorDocumento);
				valorFinal = valorFinal.replaceAll("\\.",",");

				JSONArray registro = new JSONArray();

				

				JSONObject histobj = new JSONObject();
				ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01, histobj);
				ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02, histobj);
				ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03, histobj);
				ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04, histobj);
				ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05, histobj);
				ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06, histobj);
				ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07, histobj);
				ttMov.complemento08 = getReplaceTermos("complemento09", ttMov.complemento08, histobj);
				ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09, histobj);
				ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10, histobj);
				ttMov.nomeOrigem = getReplaceTermos("nomeOrigem", ttMov.nomeOrigem, histobj);
				ttMov.documento = getReplaceTermos("documento", ttMov.documento, histobj);
				ttMov.nomePortador = getReplaceTermos("nomePortador", ttMov.nomePortador, histobj);

				histobj.put("nomeOrigem", ttMov.nomeOrigem).put("documento", ttMov.documento).put("complemento01", ttMov.complemento01)
					   .put("complemento02", ttMov.complemento02).put("complemento03", ttMov.complemento03).put("complemento04", ttMov.complemento04)
					   .put("complemento05", ttMov.complemento05).put("complemento06", ttMov.complemento06).put("complemento07", ttMov.complemento07)
					   .put("complemento08", ttMov.complemento08).put("complemento09", ttMov.complemento09).put("complemento10", ttMov.complemento10)
					   .put("dataMovimento", ttMov.dataMovimento).put("mesAnoAnterior", mesAnoAnterior).put("mesAno2Anterior", mesAno2Anterior)
					   .put("mesAnoAtual", mesAnoAtual).put("nomePortador", ttMov.nomePortador).put("contaMovimento", contaMovimento)
					   .put("contaPortador", contaPortador).put("contaDebito", "").put("contaCredito", "").put("contaJuros", ttMov.contaJuros)
					   .put("contaDesconto", ttMov.contaDesconto); histobj.put("contaMulta", ttMov.contaMulta).put("centroCusto", ttMov.centroCusto)
					   .put("valorDocumento", ttMov.valorDocumento).put("valorJuros", ttMov.valorJuros).put("valorDesconto", ttMov.valorDesconto)
					   .put("valorMulta", ttMov.valorMulta).put("codFilial", ttMov.codFilial).put("tipoPlanilha", ttMov.tipoPlanilha)
					   .put("numeroAba", ttMov.abaPlanilha);

				String contaPrincipal = "";
				String contraSecundaria = "";

				if (tipoLancamento.contains("PAGAR")) {
					contaPrincipal = ttMov.contaDebito;
					contraSecundaria = ttMov.contaCredito;

				}
				if (tipoLancamento.contains("RECEBER")) {
					contaPrincipal = ttMov.contaCredito;
					contraSecundaria = ttMov.contaDebito;
				}

				regraContaMovimento = getRegraContaMovimento(contaPrincipal, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				regraHistorico = getRegraHistoricoRegra(contaPrincipal, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

				 
				ResumoTxt.append("\r\n").append("NAO ENCONTRADO;").append(ttMov.dataMovimento).append(";").append(tipoData).append(";")
						 .append(valorFinal).append(";").append(ttMov.documento).append(";").append(ttMov.nomeOrigem).append(";")
						 .append(ttMov.nomePortador).append(";").append(ttMov.complemento01).append(";").append(ttMov.complemento02).append(";")
						 .append(ttMov.complemento03).append(";").append(ttMov.complemento04).append(";").append(ttMov.complemento05).append(";")
						 .append(ttMov.complemento06).append(";;").append(ttMov.contaDebito).append(";").append(ttMov.contaCredito).append(";")
						 .append(regraContaMovimento).append(";").append(ttMov.historico).append(";").append(regraHistorico).append(";;")
						 .append(ttMov.nomeArquivo).append(";");
				 
			}			
 
			if(tipoLancamento.contains("PAGAR")){

				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "C";
				if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
			}
			if(tipoLancamento.contains("RECEBER")){
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "D";
				if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
			}

			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
				if(tipoLancamento.contains("PAGAR")){

					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
				}
				if(tipoLancamento.contains("RECEBER")){
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
				}
			}

			String classificacaoFinal = classificacao + ttMov.classificacao + "01";
			 

			if ((classificacao.startsWith("X") || roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) && ttMov.tipoMovimento.equals("CTBPORT")) { continue;}
			
			if(!ttMov.tipoPlanilha.equals("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			// if(ttMov.codEmpresa.contains("611")) logger.logInfo("ANTES JS PUT " + ttMov.valorDocumento + " | " + ttMov.dataMovimento + " | " + ttMov.nomeOrigem + " | CD = " + ttMov.contaDebito + " | CC = " + ttMov.contaCredito +" | TP = "+ttMov.tipoPlanilha+" | NP = "+ttMov.nomePortador);
			// logger.logDebug("AQQQQ " + roteiroCRM.optString("erpContabilidade") + " | " + roteiroCRMPrincipal.optString("erpContabilidade") + " | " + ttMov.complemento05 + " | " + roteiroCRM.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + ttMov.contaJuros + " | " + ttMov.contaDebito + " | " + ttMov.contaCredito + " | " + classificacao);
			
			if (classificacao.startsWith("X")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote).put("CNPJEMPRESA", cnpjEmpresa).put("DOCUMENTO", ttMov.documento).put("CODEMPRESA", ttMov.codEmpresa)
				.put("NOMEEMPRESA", ttMov.nomeEmpresa).put("DATAMOVIMENTO", ttMov.dataMovimento).put("TIPOMOVIMENTO", ttMov.tipoMovimento)
				.put("TIPOLANCAMENTO", ttMov.tipoLancamento).put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", ttMov.contaCredito)
				.put("HISTORICO", ttMov.historico).put("VALORDOCUMENTO", ttMov.valorDocumento).put("VALORLIQUIDACAO", ttMov.valorDocumento)
				.put("VALORDESCONTO", ttMov.valorDesconto).put("VALORJUROS", ttMov.valorJuros).put("VALORMULTA", ttMov.valorMulta)
				.put("NOMEPORTADOR", ttMov.nomePortador).put("CENTROCUSTO", ttMov.centroCusto).put("NATUREZACONTABIL", ttMov.naturezaContabil)
				.put("NOMEORIGEM", ttMov.nomeOrigem).put("CPFCNPJ", ttMov.cpfCnpj).put("SERIE", ttMov.serie).put("STATUSMOVIMENTO", ttMov.statusMovimento)
				.put("CHAVE", ttMov.chave  + "-CTB").put("CLASSIFICACAO", classificacaoFinal);

 
				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro")).put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"))
					.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/","")).put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01")).put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"))
						  .put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03")).put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"))
						  .put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}
					
  				 

				js.put("COMPLEMENTO01", ttMov.complemento01).put("COMPLEMENTO02", ttMov.complemento02).put("COMPLEMENTO03", ttMov.complemento03)
				.put("COMPLEMENTO04", ttMov.complemento04).put("COMPLEMENTO05", ttMov.complemento05).put("COMPLEMENTO06", ttMov.complemento06)
				.put("COMPLEMENTO07", ttMov.complemento07).put("COMPLEMENTO08", ttMov.complemento08).put("COMPLEMENTO09", ttMov.complemento09)
				.put("COMPLEMENTO10", ttMov.complemento10).put("NOMEARQUIVO", ttMov.nomeArquivo);
				
				if(tipoLancamento.contains("PAGAR")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaJuros);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaMulta);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", ttMov.contaDesconto);
							}
						}
					
					}
				}
				if(tipoLancamento.contains("RECEBER")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", ttMov.contaJuros);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", ttMov.contaMulta);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDesconto).put("CONTACREDITO", ttMov.contaDebito);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaCredito);
							}
						}
					}
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");
				
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
 				

				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", ttMov.contaCredito).put("TIPOMOVIMENTO", "CTBCC").put("CHAVE", ttMov.chave + "-CTBCC").put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);

					//records.put(rec3);
				}
				continue;
			}

			String classJur = "";
			String classDes = "";
			String classMul = "";

			if(tipoLancamento.contains("PAGAR")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}
			}
			
			
			if(tipoLancamento.contains("RECEBER")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}

				}
			}
			  


			if (ttMov.tipoMovimento.equals("CTBPORT")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote).put("CNPJEMPRESA", cnpjEmpresa).put("DOCUMENTO", ttMov.documento).put("CODEMPRESA", ttMov.codEmpresa)
				  .put("NOMEEMPRESA", ttMov.nomeEmpresa).put("DATAMOVIMENTO", ttMov.dataMovimento).put("TIPOMOVIMENTO", "CTBPORT")
				  .put("TIPOLANCAMENTO", ttMov.tipoLancamento).put("HISTORICO", ttMov.historico).put("VALORDOCUMENTO", ttMov.valorDocumento)
				  .put("VALORLIQUIDACAO", ttMov.valorDocumento).put("VALORDESCONTO", ttMov.valorDesconto).put("VALORJUROS", ttMov.valorJuros)
				  .put("VALORMULTA", ttMov.valorMulta).put("NOMEPORTADOR", ttMov.nomePortador).put("CENTROCUSTO", ttMov.centroCusto)
				  .put("NATUREZACONTABIL", ttMov.naturezaContabil).put("NOMEORIGEM", ttMov.nomeOrigem).put("CPFCNPJ", ttMov.cpfCnpj).put("SERIE", ttMov.serie)
				  .put("STATUSMOVIMENTO", ttMov.statusMovimento).put("CHAVE", ttMov.chave + "-CTBPORT").put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01")).put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"))
						  .put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03")).put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"))
						  .put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01).put("COMPLEMENTO02", ttMov.complemento02).put("COMPLEMENTO03", ttMov.complemento03).put("COMPLEMENTO04", ttMov.complemento04)
				.put("COMPLEMENTO05", ttMov.complemento05).put("COMPLEMENTO06", ttMov.complemento06).put("COMPLEMENTO07", ttMov.complemento07).put("COMPLEMENTO08", ttMov.complemento08)
				.put("COMPLEMENTO09", ttMov.complemento09).put("COMPLEMENTO10", ttMov.complemento10).put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", "").put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", "");
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBPORT");				
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBPORT", js);
			 
				//records.put(js);
			}
			if (ttMov.tipoMovimento.equals("CTB")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote).put("CNPJEMPRESA", cnpjEmpresa).put("DOCUMENTO", ttMov.documento).put("CODEMPRESA", ttMov.codEmpresa)
				  .put("NOMEEMPRESA", ttMov.nomeEmpresa).put("DATAMOVIMENTO", ttMov.dataMovimento).put("TIPOMOVIMENTO", "CTB").put("TIPOLANCAMENTO", ttMov.tipoLancamento)
				  .put("HISTORICO", ttMov.historico).put("VALORDOCUMENTO", ttMov.valorDocumento).put("VALORLIQUIDACAO", ttMov.valorDocumento)
				  .put("VALORDESCONTO", ttMov.valorDesconto).put("VALORJUROS", ttMov.valorJuros).put("VALORMULTA", ttMov.valorMulta).put("NOMEPORTADOR", ttMov.nomePortador)
				  .put("CENTROCUSTO", ttMov.centroCusto).put("NATUREZACONTABIL", ttMov.naturezaContabil).put("NOMEORIGEM", ttMov.nomeOrigem).put("CPFCNPJ", ttMov.cpfCnpj)
				  .put("SERIE", ttMov.serie).put("STATUSMOVIMENTO", ttMov.statusMovimento).put("CHAVE", ttMov.chave + "-CTB").put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01).put("COMPLEMENTO02", ttMov.complemento02).put("COMPLEMENTO03", ttMov.complemento03).put("COMPLEMENTO04", ttMov.complemento04)
				.put("COMPLEMENTO05", ttMov.complemento05).put("COMPLEMENTO06", ttMov.complemento06).put("COMPLEMENTO07", ttMov.complemento07).put("COMPLEMENTO08", ttMov.complemento08)
				.put("COMPLEMENTO09", ttMov.complemento09).put("COMPLEMENTO10", ttMov.complemento10).put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", ttMov.contaDebito).put("CONTACREDITO", "");
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", "").put("CONTACREDITO", ttMov.contaCredito);
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTADEBITO", ttMov.contaDebito);
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");				
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
				
				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito);
					rec3.put("CONTACREDITO", ttMov.contaCredito);
					rec3.put("TIPOMOVIMENTO", "CTBCC");
					rec3.put("CHAVE", ttMov.chave + "-CTBCC");
					rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);
					//records.put(rec3);
				}

				 
				if (ttMov.valorJuros > 0)  {
					classificacaoFinal = classJur;
					JSONObject jsJUR = new JSONObject(js.toString());
					jsJUR.put("LOTE", ttMov.lote);
					jsJUR.put("CNPJEMPRESA", cnpjEmpresa);
					jsJUR.put("DOCUMENTO", ttMov.documento);
					jsJUR.put("CODEMPRESA", ttMov.codEmpresa);
					jsJUR.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsJUR.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsJUR.put("TIPOMOVIMENTO", "CTBJUR");
					jsJUR.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsJUR.put("HISTORICO", ttMov.historicoJuros);
					jsJUR.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsJUR.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsJUR.put("VALORDESCONTO", ttMov.valorDesconto);
					jsJUR.put("VALORJUROS", ttMov.valorJuros);
					jsJUR.put("VALORMULTA", ttMov.valorMulta);
					jsJUR.put("NOMEPORTADOR", ttMov.nomePortador);
					jsJUR.put("CENTROCUSTO", ttMov.centroCusto);
					jsJUR.put("NATUREZACONTABIL", "D");
					jsJUR.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsJUR.put("CPFCNPJ", ttMov.cpfCnpj);
					jsJUR.put("SERIE", ttMov.serie);
					jsJUR.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsJUR.put("CHAVE", ttMov.chave + "-CTBJUR");
					jsJUR.put("CLASSIFICACAO", classificacaoFinal);

					jsJUR.put("COMPLEMENTO01", ttMov.complemento01).put("COMPLEMENTO02", ttMov.complemento02).put("COMPLEMENTO03", ttMov.complemento03)
					.put("COMPLEMENTO04", ttMov.complemento04).put("COMPLEMENTO05", ttMov.complemento05).put("COMPLEMENTO06", ttMov.complemento06)
					.put("COMPLEMENTO07", ttMov.complemento07).put("COMPLEMENTO08", ttMov.complemento08).put("COMPLEMENTO09", ttMov.complemento09)
					.put("COMPLEMENTO10", ttMov.complemento10).put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsJUR.put("CONTADEBITO",  ttMov.contaJuros);
						jsJUR.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsJUR.put("CONTADEBITO",  "");
						jsJUR.put("CONTACREDITO", ttMov.contaJuros);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJUR");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJUR", jsJUR);
				
				
					//records.put(jsJUR);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsJUR.toString());
						 rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBJURCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBJURCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBJURCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJURCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJURCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorDesconto > 0)  {
					classificacaoFinal = classDes;
					JSONObject jsDES = new JSONObject(js.toString());
					jsDES.put("LOTE", ttMov.lote);
					jsDES.put("CNPJEMPRESA", cnpjEmpresa);
					jsDES.put("DOCUMENTO", ttMov.documento);
					jsDES.put("CODEMPRESA", ttMov.codEmpresa);
					jsDES.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsDES.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsDES.put("TIPOMOVIMENTO", "CTBDES");
					jsDES.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsDES.put("HISTORICO", ttMov.historicoDesconto);
					jsDES.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsDES.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsDES.put("VALORDESCONTO", ttMov.valorDesconto);
					jsDES.put("VALORJUROS", ttMov.valorJuros);
					jsDES.put("VALORMULTA", ttMov.valorMulta);
					jsDES.put("NOMEPORTADOR", ttMov.nomePortador);
					jsDES.put("CENTROCUSTO", ttMov.centroCusto);
					jsDES.put("NATUREZACONTABIL", "C");
					jsDES.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsDES.put("CPFCNPJ", ttMov.cpfCnpj);
					jsDES.put("SERIE", ttMov.serie);
					jsDES.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsDES.put("CHAVE", ttMov.chave + "-CTBDES");
					jsDES.put("CLASSIFICACAO", classificacaoFinal);

					jsDES.put("COMPLEMENTO01", ttMov.complemento01);
					jsDES.put("COMPLEMENTO02", ttMov.complemento02);
					jsDES.put("COMPLEMENTO03", ttMov.complemento03);
					jsDES.put("COMPLEMENTO04", ttMov.complemento04);
					jsDES.put("COMPLEMENTO05", ttMov.complemento05);
					jsDES.put("COMPLEMENTO06", ttMov.complemento06);
					jsDES.put("COMPLEMENTO07", ttMov.complemento07);
					jsDES.put("COMPLEMENTO08", ttMov.complemento08);
					jsDES.put("COMPLEMENTO09", ttMov.complemento09);
					jsDES.put("COMPLEMENTO10", ttMov.complemento10);
					jsDES.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsDES.put("CONTADEBITO", "");
						jsDES.put("CONTACREDITO", ttMov.contaDesconto);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTADEBITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsDES.put("CONTADEBITO",  ttMov.contaDesconto);
						jsDES.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTACREDITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDES");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDES", jsDES);
				 
					//records.put(jsDES);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsDES.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBDESCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBDESCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBDESCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDESCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDESCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorMulta > 0)  {
					classificacaoFinal = classMul;
					JSONObject jsMUL = new JSONObject(js.toString());
					jsMUL.put("LOTE", ttMov.lote);
					jsMUL.put("CNPJEMPRESA", cnpjEmpresa);
					jsMUL.put("DOCUMENTO", ttMov.documento);
					jsMUL.put("CODEMPRESA", ttMov.codEmpresa);
					jsMUL.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsMUL.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsMUL.put("TIPOMOVIMENTO", "CTBMUL");
					jsMUL.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsMUL.put("HISTORICO", ttMov.historicoMulta);
					jsMUL.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsMUL.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsMUL.put("VALORDESCONTO", ttMov.valorDesconto);
					jsMUL.put("VALORJUROS", ttMov.valorJuros);
					jsMUL.put("VALORMULTA", ttMov.valorMulta);
					jsMUL.put("NOMEPORTADOR", ttMov.nomePortador);
					jsMUL.put("CENTROCUSTO", ttMov.centroCusto);
					jsMUL.put("NATUREZACONTABIL", "D");
					jsMUL.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsMUL.put("CPFCNPJ", ttMov.cpfCnpj);
					jsMUL.put("SERIE", ttMov.serie);
					jsMUL.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsMUL.put("CHAVE", ttMov.chave + "-CTBMUL");
					jsMUL.put("CLASSIFICACAO", classificacaoFinal);

					jsMUL.put("COMPLEMENTO01", ttMov.complemento01);
					jsMUL.put("COMPLEMENTO02", ttMov.complemento02);
					jsMUL.put("COMPLEMENTO03", ttMov.complemento03);
					jsMUL.put("COMPLEMENTO04", ttMov.complemento04);
					jsMUL.put("COMPLEMENTO05", ttMov.complemento05);
					jsMUL.put("COMPLEMENTO06", ttMov.complemento06);
					jsMUL.put("COMPLEMENTO07", ttMov.complemento07);
					jsMUL.put("COMPLEMENTO08", ttMov.complemento08);
					jsMUL.put("COMPLEMENTO09", ttMov.complemento09);
					jsMUL.put("COMPLEMENTO10", ttMov.complemento10);
					jsMUL.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsMUL.put("CONTADEBITO",  ttMov.contaMulta);
						jsMUL.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsMUL.put("CONTADEBITO",  "");
						jsMUL.put("CONTACREDITO", ttMov.contaMulta);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMUL");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMUL", jsMUL);				 
					
					//records.put(jsMUL);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsMUL.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBMULCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBMULCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBMULCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMULCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMULCC", rec3);
					   //records.put(rec3);
					}
				}
			}
		}
		// JWR adicionamos essa parte para mandar uma mensagem personalizada para o cliente, no caso de apenas nao conseguir ler os movimentos e nao um erro de layout
		// vamos descomentar depois de adicionar todas as validacoes sobre fiscal e afins
		// logger.logDebug("contRegra -> " + contRegra + " | temFiltro -> " + temFiltro);
		
		/*if (roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("MICALI")) */
 		
		/*if (contRegra > 0 && nomeArquivo.toUpperCase().contains("_ID") && nomeArquivo.toUpperCase().contains(".PDF")) {
			// logger.logDebug("ENTROU 34");
			putStatus(dirName, "03--Etapa 3 de 4 LEUCONVERSORANTIGO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
		}*/
		
		putStatus(dirName, "", jStatus, logger);
		
		//#2304-002843. Melhorias no feedback
		if (contRegra < 0 && nomeArquivo.toUpperCase().contains("_ID") && !nomeArquivo.toUpperCase().startsWith("OK_DEPARACONTA") && ((roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && !temFiscal && !mantemArquivo.equals("SIM")) || !roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE"))) {
			if (temFiltro) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temIgnorar) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			 	}
			} else if (temLinhas) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temOFX || retornaPadroes.equals("break")) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temOMC) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUOMC- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUOMC- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			}
			else {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			}
			
		}
		if (!nomeArquivoProtocolo.equals("")) {
			
			JSONObject bancosLidosObj = new JSONObject();
			
			bancosLidosObj.put("bancosProcessados", bancosLidos);
			
			try {
				String retornoGenericPost = apiWeb.genericPost(bancosLidosObj,
																"/api/v1/protocolo_integracao/"+TemplateUtils.getIdLote(nomeArquivoProtocolo)+"/oic",
																"https://beta-integrador-contabil.herokuapp.com",
																logger);
			} catch (Exception e) {
				logger.logInfo("Problema genericPost " + e.getMessage());
			}
		}
		
		if (apagaExtrato) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				
				extrato.apagaExtrato(codEmpresa, dbIOCont, logger);
				
				/*dbIOCont.delete("IO_EXTRATO")
				.where("CODEMPRESA=?")
				.param(codEmpresa)
				.execute();*/
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR EXTRATO " + e.getMessage());
			}
		}
		
		
		// Apaga as Contas T quando sao informadas pelos contadore no Conf. REfras 
		if (apagaContaT) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				
				if (tipoLancamento.contains("PAGAR")) {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBFOR LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
				else {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBCLI LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR IO_PESSOA  " + e.getMessage());
			}
		}
		// resumo comparativo com razao
		String idLoteResumo = "";
		if (comparaRazao) {
			if(loteEtapaTres.toUpperCase().contains("_ID") && fornecedorUnico.contains("EXIBE_RESUMO")){
				idLoteResumo = "_ID"+cutString(loteEtapaTres.toUpperCase(), "_ID", "_")+"_";
			}
			String filenameRazao = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_APOS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerRazao = new FileWriter(filenameRazao);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerRazao.writeNewFile(ResumoTxt.toString());
		}
		
		if(logs){
			String filenameLogs = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_LOGS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerLogs = new FileWriter(filenameLogs);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerLogs.writeNewFile(logsTxt.toString());
		}

		//-------------------------------------------------------------------------------------
		// GERA ARQUIVO COM CONTAS NAO ENCONTRADAS
		//-------------------------------------------------------------------------------------
		String filename = backupDirName + "/ARQUIVO_APOIO_" + tipoLancamento + ".csv";
		// Cria o arquivo de DE-PARA FORNECEDOR
		FileWriter writer = new FileWriter(filename);
		writer.writeNewFile(txtDePara.toString());

		Iterator ite = mapaLote.keySet().iterator();
		while (ite.hasNext()) {
			String key = (String)ite.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			// =======================================================================================
			// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base *
			// =======================================================================================
			lote = ttLot.lote;     

  			
			ultimoJS = new JSONObject();
			ultimoJS.put("LOTE", lote).put("DOCUMENTO", "").put("CODEMPRESA", codEmpresa).put("NOMEEMPRESA", nomeEmpresa).put("DATAMOVIMENTO", "").put("TIPOMOVIMENTO", "")
					.put("TIPOLANCAMENTO", "").put("CONTADEBITO", "LOTE_ENCERRADO").put("CONTACREDITO", "LOTE_ENCERRADO").put("HISTORICO", ttLot.tipoPlanilha)
					.put("VALORLIQUIDACAO", 0).put("VALORDOCUMENTO", 0).put("VALORDESCONTO", 0).put("VALORJUROS", 0).put("VALORMULTA", 0).put("NOMEPORTADOR", "")
					.put("CENTROCUSTO", "").put("NATUREZACONTABIL", "").put("NOMEORIGEM", "").put("CPFCNPJ", "").put("SERIE", "").put("STATUSMOVIMENTO", 0)
					.put("CHAVE","LOTE_ENCERRADO " + lote).put("CLASSIFICACAO", "LOTE_ENCERRADO").put("STATUSMOVIMENTO", 1);
			
			records.put(ultimoJS);
			// Resumo Planilha
			try {
				String dirName1 = dirName.substring(0, dirName.lastIndexOf("/"))+"/DePara/";
				File file = new File(dirName1);
				try {
					String diretorio = dirName1;
					File file2 = new File(diretorio);
					File[] files = file2.listFiles();
					if (FileUtil.dirHasFiles(diretorio)) {
						for (File fl: files) {
							if (fl.isFile()){
								if(fl.getName().contains(lote) && fl.getName().toLowerCase().endsWith(".csv") && !fl.getName().startsWith("OK_") ){
									// ELIMINA ARQUIVO IMPORTADO
									file = new File(dirName1);
									if (file.exists()){
										FileUtil.deleteFile(dirName1+fl.getName());
									}
								}
							}
						}
					}
				} catch (Exception ee) {
					logger.logError(ee);
				}
			}catch (Exception e) {
				logger.logError(e);
			}
		}
	} catch (Exception ee) {
		logger.logError("EndpointA: ", ee);
	} finally {
	
		try {
			if (dbIOCont != null) {
				dbIOCont.closeConnection();
			}
			if (dbIODepara != null) {
				dbIODepara.closeConnection();
			}
		} catch (Exception ee) {}
	}
	return records;
}

class ttLote {
	public String lote;
	public String tipoPlanilha;
	public ttLote(){}
	public ttLote(ttLote tt){
		lote=tt.lote;
		tipoPlanilha=tt.tipoPlanilha;		
	}
}

class ttArquivo {
	public String arquivo;
	public String abas;
	public ttArquivo(){}
	public ttArquivo(ttArquivo tt){
		arquivo=tt.arquivo;
		abas=tt.abas;
	}
}

class ttDocumento {
    public String documento;
	public double valorDocumento;
     public ttDocumento(){}
    public ttDocumento(ttDocumento ttD){
        documento = ttD.documento;
 		valorDocumento  = ttD.valorDocumento;
    }
}
class ttJuros {
	public String documento;
	public double valorJur;
	public int valorLido;
	public ttJuros(){}
	public ttJuros(ttJuros ttJ){
		documento = ttJ.documento;
		valorLido = ttJ.valorLido;
		valorJur  = ttJ.valorJur;
	}
}

class ttDesconto {
	public String documento;
	public double valorDesc;
	public int valorLido;
	public ttDesconto(){}
	public ttDesconto(ttDesconto ttD){
		documento  = ttD.documento;
		valorDesc  = ttD.valorDesc;
		valorLido  = ttD.valorLido;
	}
}

class ttPlano {
	public String contaContabil;
	public String descricaoPlano;
	public String contaAnalitica;
	public ttPlano(){}
	public ttPlano(ttPlano ttP){
		contaContabil = ttP.contaContabil;
		descricaoPlano = ttP.descricaoPlano;
		contaAnalitica = ttP.contaAnalitica;
	}
}

class ttFornecedor {
	public String nomeOrigem;
	public String contaMovimento;
	public ttFornecedor(){}
	public ttFornecedor(ttFornecedor ttF){
		nomeOrigem 	 = ttF.nomeOrigem;
		contaMovimento = ttF.contaMovimento;
	}
}



public String verificaSeparador(String separadorCsv, String dirName, String extensao, SysProperties props, InoutLogger logger) {

	try {
		if(extensao.contains("CSV")) {

			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if(memFile.getFilename().startsWith("OK_DeParaConta__")) importaDePara(memFile, dirName, extensao, logger, props);
				if (memFile.getFilename().toUpperCase().contains("CSV")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length < fields2.length) { separadorCsv = ","; break; }
								if(fields1.length > fields2.length) { separadorCsv = ";"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
		
		
		
		if(extensao.contains("TXT")) {
			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if (memFile.getFilename().toUpperCase().endsWith(".TXT")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							String [] fields3 = line.split("\t");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length > fields2.length && fields1.length > fields3.length) { separadorCsv = ";"; break; }
								if(fields2.length > fields1.length && fields2.length > fields3.length) { separadorCsv = ","; break; }
								if(fields3.length > fields1.length && fields3.length > fields2.length) { separadorCsv = "\t"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
	
	}
	 catch(Exception xx) {}
	
	return separadorCsv;


}

public void criaMovimento(DataBase dbIO, JSONObject recordRec, String chave, JSONObject js) {
	if (recordRec != null)  {
		try {
			updateMovimento(dbIO, js);
			/*if (js.has("idRoteiro")) {
				try {
					updateArquivo(dbIO, js);
				} catch(Exception ex){}
			}*/
		} catch (Exception eUpdateMovimento) {						 
			logger.logError("EndpointB: Erro ao Atualizar Movimento", eUpdateMovimento);
		}
	} else {
		try {
			insertMovimento(dbIO, js); 
			/*if (js.has("idRoteiro")) {
				try {
					insertArquivo(dbIO, js);
				} catch(Exception ex) {}
			}*/
				
		} catch (Exception eInsertMovimento) { 						 
			logger.logError("EndpointB: Erro ao fazer insert no Movimento", eInsertMovimento);
		}
	}
}

public int getIndiceRoteiro(String nomeCampo, JSONObject roteiroIndice) {
	int validaCampo = -1;
	try {
		if (!roteiroIndice.optString(nomeCampo).equals("")) {
			try {
				validaCampo = Integer.parseInt(roteiroIndice.optString(nomeCampo).replaceAll("@","").trim());
			}
			catch (Exception xx) { validaCampo = -1;}
		}
	}
	catch (Exception xx) {validaCampo = -1;}
	return  validaCampo;
}


public HashMap geralancamentoExtraInterno(HashMap mapaVariavel, ttMovimentoPadrao ttMov2, String chave,boolean gerarApenasValorDocumento, int complemento , String textoComplemento, String classificacao){
	ttMovimentoPadrao ttMov4      = (ttMovimentoPadrao)mapaVariavel.get(chave);
	if (ttMov4 == null) {
		ttMov4 = new ttMovimentoPadrao(ttMov2);
		ttMov4.chave                    = chave;
		if(gerarApenasValorDocumento){
			ttMov4.valorDesconto            = 0;
			ttMov4.valorMulta               = 0;
			ttMov4.valorJuros               = 0;
		}
		ttMov4.classificacao            = classificacao;
		switch(complemento){
			case 1: ttMov4.complemento01 = textoComplemento; break;
			case 2: ttMov4.complemento02 = textoComplemento; break;
			case 3: ttMov4.complemento03 = textoComplemento; break;
			case 4: ttMov4.complemento04 = textoComplemento; break;
			case 5: ttMov4.complemento05 = textoComplemento; break;
			case 6: ttMov4.complemento06 = textoComplemento; break;
		}
		mapaVariavel.put(chave, ttMov4);
	}
	return mapaVariavel;
}


public JSONObject getAlternativeDataInt (JSONObject objIn, MemoryFile memFile) throws Exception {
	JSONObject response	= new JSONObject();
	String validar		= objIn.optString("validar");
	String [] validaArr	= validar.split(";");
	String changeIt		= "";
	String changeText	= "nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador";
	String changeDate	= "dataMovimento";
	String changeValue	= "valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";

	for (String parameter : validaArr) {
		response.put(parameter,	"");

		// String indiceAux = "";
		String indiceAux = getColunaAlternativa(parameter,	objIn);
		if (!indiceAux.equals("")) {
			if (changeDate.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String dataStrAux = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						if (!dataStrAux.equals("")) {
							String dataMovAux = getCampoDate(dataStrAux);
							if (dataMovAux.contains("/")) {
								String dataAlternativa = getCampoDate(dataStrAux);
								response.put(parameter,	dataAlternativa);
								response.put("dataLote", dataAlternativa);
								changeIt = changeIt+";"+parameter;
								
								//feito pra que as proximas iteracoes ja tenham o dado atualizado
								objIn.put(parameter, dataAlternativa);
							}
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Data'! "+ee.getMessage()); }
				}
				
			} else if (changeValue.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try {
						int iAux  = Integer.parseInt(indiceAux);
						if(iAux >=0){
							double valorAlternativo = memFile.getDoubleField(iAux);
							response.put(parameter, valorAlternativo);
							changeIt = changeIt+";"+parameter;
							
							//feito pra que as proximas iteracoes ja tenham o dado atualizado
							objIn.put(parameter, valorAlternativo);
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Valor'! "+ee.getMessage()); }

				}
				if (indiceAux.contains(";")) {
					double valorAlternativo = 0;
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux = Integer.parseInt(k);
							valorAlternativo = valorAlternativo + memFile.getDoubleField(iAux);
						}
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Valor 02'! "+ee.getMessage());  }
					
					if (valorAlternativo != 0) {
						response.put(parameter, valorAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, valorAlternativo);
					}
				}
			} else if (changeText.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String textoAlternativo = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Texto'! "+ee.getMessage()); }
				}
				if (indiceAux.contains(";")) {
					String textoAlternativo = "";
					
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux	 = Integer.parseInt(k);
							textoAlternativo = textoAlternativo+" - "+memFile.getStringFieldRemoveEspCharsUpper(iAux).trim();
							textoAlternativo = textoAlternativo.trim();
						}
						if (textoAlternativo.startsWith("-")) textoAlternativo = cutString(textoAlternativo, 1).trim();
						
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Texto 02'! "+ee.getMessage());  }
					
					if (!textoAlternativo.equals("")) {
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					}
				}
			} else {
				response.put(parameter, "");
				objIn.put(parameter, "");
			}
		}
	}
	
	response.put("changeIt",	changeIt);
	return response;
}




public String getRefatoraCampo(String valorOriginal, String conteudoRoteiro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String line            = objHistorico.optString("line");
    String cabecalhoRegra  = objHistorico.optString("cabecalhoRegra");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
	
	nomeArquivo = StringUtil.removeSpecialCharsToUC(nomeArquivo);


	if (conteudoRoteiro.toUpperCase().contains("#CABECALHO"))      return cabecalhoRegra;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO01"))  return complemento01;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO02"))  return complemento02;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO03"))  return complemento03;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO04"))  return complemento04;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO05"))  return complemento05;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO06"))  return complemento06;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO07"))  return complemento07;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO08"))  return complemento08;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO09"))  return complemento09;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO10"))  return complemento10;
	if (conteudoRoteiro.toUpperCase().contains("#TIPOPLANILHA"))   return tipoPlanilha;
	if (conteudoRoteiro.toUpperCase().contains("#NOMEDOARQUIVO"))   return nomeArquivo;
	if (conteudoRoteiro.toUpperCase().contains("#LINE"))  		   return line;
	if (conteudoRoteiro.toUpperCase().contains("#NUMEROABA"))      return ("ABA:" + String.valueOf(numeroAba));


    return valorOriginal;
}

public boolean buscaProtocoloConversor(String protocolo_id, LancamentosApi apiWeb, String tipoLancamento, String nomeArquivo, InoutLogger logger) throws Exception {
	// logger.logInfo("ENTROU PROTOCOLOCONV");
	String diretorio = "C:/Conversor/Pdf";
	File file2 = new File(diretorio);
	
	File [] files = file2.listFiles();
	nomeArquivo = cutString(nomeArquivo, 0, ".pdf");
	
	if (FileUtil.dirHasFiles(diretorio)) {
		
		boolean notificouProtocolo = false;
			for (File fl: files) {
				// logger.logDebug("FL " + fl.getAbsolutePath()+ " | " + nomeArquivo + " | " + tipoLancamento);
				if (fl.getAbsolutePath().contains(tipoLancamento) && fl.getAbsolutePath().contains(nomeArquivo)) {
					// logger.logInfo("AQ FOI " + fl.getAbsolutePath() + " | FL LENGHT = " + fl.length());
					if ((fl.getAbsolutePath().contains("pagar") || fl.getAbsolutePath().contains("receber")) && fl.getAbsolutePath().contains("#") && fl.getAbsolutePath().toUpperCase().contains(".CSV") && fl.getAbsolutePath().contains("_ancora_") && fl.length() > 0){
						String diretorioArquivoCsv = "C:/inout/contabil/";
						String testeCsv = "";									
						String contabilidadeCsv = "";
						String empresaCsv = "";
						
						// logger.logInfo("ENTROU NOS PDFFFFFF");
						
						if (fl.getAbsolutePath().contains("pagar_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "pagar_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/APagar";
							} catch (Exception e) {
								logger.logInfo("ERRO AO CORTAR ARQUIVO " + e.getMessage());
							}
						}
						else if (fl.getAbsolutePath().contains("receber_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "receber_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/AReceber";
							} catch (Exception e) {
								logger.logInfo("ERRO AO CORTAR ARQUIVO2 " + e.getMessage());
							}
						}
						String arquivoDeployStr = "";
						try {
							// mantivemos o ancora no nome do arquivo para saber que foi convertido e usado nos extratos
							arquivoDeployStr = fl.getAbsolutePath().substring(fl.getAbsolutePath().indexOf("_ancora_"));
						} catch (Exception e) {
							logger.logInfo("NAOCRIOURODACONVERSOR " + e.getMessage());
						}
						// logger.logInfo("DIRETORIOS " + diretorioArquivoCsv + " | " + arquivoDeployStr);
						if (!arquivoDeployStr.equals("")) {
							File arquivoDeploy  = new File(diretorioArquivoCsv + "/" + arquivoDeployStr);
							//logger.logDebug("COPIOUARQUIVO " + arquivoDeploy.getName());
							FileUtil.copyFolder(fl, arquivoDeploy);
							
							try { 
								FileUtil.deleteFile(fl);
							} catch (Exception XX) {}
						}
						if (!notificouProtocolo) {
							notificouProtocolo = true;
							String atualizaStatus = atualizaStatusProtocoloOic(apiWeb, fl, "0", "Estamos convertendo os PDFs.",  logger);
						}
						continue;
					}
				}
			}
		if (notificouProtocolo) return true;
	}
	return false;
}

public String atualizaStatusProtocoloOic(LancamentosApi apiWeb, File fl,  String statusProtocolo, String mensagem, InoutLogger logger) throws Exception {

    try {
		 String protocolo_id = cutString(fl.getName().toUpperCase(), fl.getName().toUpperCase().lastIndexOf("_ID")+3, "_");
		 if (fl.getName().toUpperCase().contains("OUD_ID"))  protocolo_id = cutString(fl.getName().toUpperCase(), "OUD_ID", "_");
		 if (fl.getName().toUpperCase().contains("OUD__ID")) protocolo_id = cutString(fl.getName().toUpperCase(), "OUD__ID", "_");
		// roda requisicao para atualizar o satus do protocolo
		JSONObject bodyProtocolo = new JSONObject();
		bodyProtocolo.put("status", statusProtocolo).put("mensagem", mensagem);
		String atualizaStatus = apiWeb.atualizaStatusProtocolo("https://integrador-contabil.herokuapp.com", protocolo_id, bodyProtocolo);
		return atualizaStatus;
	} catch (Exception xx) {
		logger.logDebug(" Erro ao Atualizar Status " + xx);
		return "";
	}
 
}










































//## CODIGO GERADO A PARTIR DAS REGRAS NO SALESFORCE ##
//## NAO ALTERAR DAQUI ATE O FINAL DO SCRIPT!!!!     ##
public JSONObject getRoteiro() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0930691");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wWdqQAE");
    js.put("idContabilidade", "a096R00002s1uLp");
    js.put("CnpjContabilidade", "92.875.277/0001-86");
    js.put("CnpjEmpresa", "09.523.815/0001-20");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "0");
    js.put("portador", "EM BRANCO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "14");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "3");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("valorAlternativo", "");
    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("dataFake", "");

    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "TRUE");
    js.put("cruzaExtrato", "FALSE");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "DOMINIO");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "FALSE");
    js.put("ValidaFornecedorFiscal", "0");
    js.put("Integracao_contratos", "false");
    js.put("Usa_Filial_Questor", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "PRINCIPAL");
    js.put("Planilhas_Padroes", "Extratos OFX");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");

    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("especiaisBaixaFiscal", "");
    js.put("Arredonda", "false");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");
    js.put("Coluna_Valor_Duplicata_Dominio", "9");
    js.put("delimitadorDoArquivo", "");
    js.put("agrupaArquivos", "FALSE");

    js.put("X001_ROB", "");
    js.put("X002_Despesas", "");
    js.put("X003_Despesas_Detalhe", "");
    js.put("X004_Geracao_Caixa_Mes", "");
    js.put("X005_Geracao_Caixa_Acumulado", "");
    js.put("X006_Despesas_sobre_Faturamento", "");
    js.put("X007_Lucro", "");
    js.put("X008_Deducoes_Receitas", "");
    js.put("X009_CMV", "");
    js.put("X010_CPV", "");
    js.put("X011_CSP", "");
    js.put("X012_Indicador", "");
    js.put("X013_Indicador", "");
    js.put("X014_Indicador", "");
    js.put("X015_Indicador", "");
    js.put("X016_Indicador", "");
    js.put("X017_Indicador", "");
    js.put("X018_Indicador", "");
    js.put("X019_Indicador", "");
    js.put("X020_Indicador", "");
    js.put("X021_Indicador", "");

    js.put("X015_Label", "");
    js.put("X016_Label", "");
    js.put("X017_Label", "");
    js.put("X018_Label", "");
    js.put("X019_Label", "");
    js.put("X020_Label", "");
    js.put("Email_Logo", "");
    js.put("BuscaCnpjCRM", "FALSE");
    js.put("Idioma", "PORTUGUES");
    js.put("Ordem_dos_Indicadores", "7, 12, 21, 1, 8, 9, 10, 11, 13, 2, 3, 6, 4, 5, 15, 16, 18, 14, 17, 19, 20");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Gera_LOG", "false");
    js.put("Gera_LOG_PARAMETROS", "");

    return js;
}

public JSONObject getRoteiroAAACARTAO_INFINITE_PDFOTTCARTAO1() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-02121693");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000003Kh0jYAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "5");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "9");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_INFINITE PADRAO PDF");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9-12");
    js.put("Rotulos_Para_Valores_Extras", "TAXA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroACARTAO_NUTRICARDOTTCARTAO2() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411988");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQGQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO NUTRICARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroACARTAO_NUTRICARD2OTTCARTAO3() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-05138809");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQGQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO NUTRICARD PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroBCARTAO_SENFFOTTCARTAO4() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0915344");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQpQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "4");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SENFF");
    js.put("complemento02", "");
    js.put("complemento03", "2");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SENFF PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "LOJA");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ABRAPETITE1OTTCARTAO5() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2019-086046");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IIwXQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "5% DO VALOR DA COLUNA 2");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "VENDA OU TARIFA");
    js.put("complemento03", "1");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "4966");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO ABRAPETITE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA.");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "2*#5/100");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ABRAPETITE2OTTCARTAO6() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0412072");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IIwXQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "8");
    js.put("dataMovimento", "5");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "9");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO ABRAPETITE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9-13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ACQIOOTTCARTAO7() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612706");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDsqQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "6");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "ACQIO_TRANSACOES");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13-12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ACQIO2OTTCARTAO8() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0558758");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDsqQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "ACQIO_TRANSACOES2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DE PAGAMENTO.");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12-14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AIQFOME1OTTCARTAO9() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2020-079383");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XFK1QAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "1");
    js.put("portador", "AIQFOME");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "AIQFOME");
    js.put("complemento02", "VENDA OU TARIFA");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_AIQFOME_EXCEL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3*#0,0300");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ALELO1OTTCARTAO10() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2020-058689");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008FrknQAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "7");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO ALELO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "8");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "88888");
    js.put("contaFixaJuros", "99999");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "ALELO VENDAS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ALELO2OTTCARTAO11() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0311455");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008FrknQAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "9");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO ALELO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "ALELO VENDAS PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ALIMENTARE1OTTCARTAO12() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726923");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wPgTQAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO ALIMENTARE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ALIMENTARE2OTTCARTAO13() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11101963");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wPgTQAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO ALIMENTARE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AMAZONOTTCARTAO14() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411937");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007KBMpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_AMAZON");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "5");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO DA AMAZON PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".TXT - ARQUIVO TEXTO");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AME1OTTCARTAO15() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0140950");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wntCQAQ");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "16");
    js.put("portador", "CARTAO AME");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "5");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO AME PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "TIPO DA TRANSACAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AMERICANEXPRESSOTTCARTAO16() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2018-032956");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPcQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "REDE DE ESTABELECIMENTOS AMERICAN EXPRESS");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "12");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO AMERICAN EXPRESS");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO AMERICAN EXPRESS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12*#0,03");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ARVCARDSOTTCARTAO17() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612702");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDsbQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "REDE");
    js.put("dataMovimento", "1");
    js.put("portador", "FAKE");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO RV EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "COMPR.");
    js.put("complemento04", "CLIENTE");
    js.put("complemento05", "LOJA");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_RV_EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "COMPR.");
    js.put("Rotulo_Complemento_04", "CLIENTE");
    js.put("Rotulo_Complemento_05", "LOJA");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AZULOTTCARTAO18() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0350608");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008x2VZQAY");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "17");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_AZUL");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE TRANSACAO");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO AZUL CAIXA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "17-18");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AZUL2OTTCARTAO19() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093709");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008x2VZQAY");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_AZUL");
    js.put("complemento02", "");
    js.put("complemento03", "PRODUTO");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "STATUS");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO AZUL CAIXA 2 - NAO ALTERAR AS PALAVRAS CHAVES");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6-7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_AZUL2OTTCARTAO20() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-01114095");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008x2VZQAY");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_AZUL");
    js.put("complemento02", "");
    js.put("complemento03", "PRODUTO");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "STATUS");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO AZUL CAIXA 3 - MUDA A COLUNA DA TARIFA PARA COLUNA H");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRASOTTCARTAO21() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016241");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGkGQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DT. PREV. LIQUID");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TRANSACAO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "PRODUTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRAS2OTTCARTAO22() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016723");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGkGQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "PRODUTO");
    js.put("dataMovimento", "DATA PREV. CREDITO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TRANSACAO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRAS3OTTCARTAO23() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1237438");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGkGQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "DATA OPERACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRAS4OTTCARTAO24() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0981918");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGkGQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "DATA OPERACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRAS5OTTCARTAO25() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0989521");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGkGQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "DATA OPERACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PADRAO 5");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRASPDF1OTTCARTAO26() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1238124");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008xEdzQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "2");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRISUL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "PRODUTO");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BANRICOMPRASPDF2OTTCARTAO27() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0559220");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008xEdzQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRICOMPRAS PDF 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BELLUNO1OTTCARTAO28() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0829375");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wUZcQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA CREDITO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO(R$)");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "CLIENTE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BELLUNO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BENVALE1OTTCARTAO29() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-02121388");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000003IEcHYAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "10");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "13");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "BENVALE");
    js.put("complemento02", "");
    js.put("complemento03", "27");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "BENVALE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME DO CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "OBSERVACAO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BENVISA1OTTCARTAO30() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411983");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007Ix86QAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "0");
    js.put("portador", "BENVISA");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "BENVISA");
    js.put("complemento02", "");
    js.put("complemento03", "11");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "BENVISA PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME DO CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PAGO VIA");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BIN1OTTCARTAO31() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512635");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDqfQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "12");
    js.put("dataMovimento", "9");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "17");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_BIN");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VENDA BIN");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "17-18");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BIN2_SICREDIOTTCARTAO32() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0989516");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDqfQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_BIN");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VENDA BIN 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PRODUTO");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BIQBENEFICIOS1OTTCARTAO33() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0613020");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007KBMQQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_BIQ BENEFICIOS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4*#0,0500");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BLU1OTTCARTAO34() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873029");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWdiQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA_VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "-1");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "15");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PADRAO BLU 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15-16");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BONUSCREDOTTCARTAO35() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411987");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPmQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_BONUSCRED");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BONUSCRED PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BONUSCRED2OTTCARTAO36() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11102021");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPmQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "3");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_BONUSCRED2");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BONUSCRED PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BPPOTTCARTAO37() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0321076");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KhE2QAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "ESTABELECIMENTONOME");
    js.put("dataMovimento", "DATAHORATRANSACAO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "TIPOTRANSACAO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "BRASIL PRE PAGO - BPP");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "TIPOTRANSACAO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_BRASILCARDOTTCARTAO38() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512627");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDnRQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_BRASILCARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_BRASILCARD");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "2-3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CABAL1OTTCARTAO39() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612660");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007II3dQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CABAL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CABAL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CABAL2OTTCARTAO40() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612661");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007II3dQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "9");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "27");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CABAL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CABAL PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "28");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CABAL3OTTCARTAO41() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612697");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007II3dQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "15");
    js.put("dataMovimento", "10");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "20");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CABAL");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CABAL PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO DA FILIAL");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "22");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CABAL4OTTCARTAO42() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11101960");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007II3dQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "21");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CABAL");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "20");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CABAL PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO DA FILIAL");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "22");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CALCARDOTTCARTAO43() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0412003");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IJHXQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CALCARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CETELEMOTTCARTAO44() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0915343");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KG7sQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "6");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CETELEM");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO1OTTCARTAO45() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0814167");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO1");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "ESTABELECIMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "STATUS");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO10OTTCARTAO46() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0451943");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "NSU");
    js.put("complemento05", "");
    js.put("complemento06", "2");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 10");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "NSU");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO11OTTCARTAO47() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0451972");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO11");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 11");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO12OTTCARTAO48() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-05139546");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CANAL DE VENDA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "1");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO12");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 12");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "1-2");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO13OTTCARTAO49() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-03125188");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO13");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 13");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "29-35");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO2OTTCARTAO50() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914681");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO1");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 2 COM ESTABELECIMENTO E SEM RESUMO DE OPERACOES");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO3OTTCARTAO51() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914682");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 3  COM RESUMO DE OPERACOES E SEM ESTABELECIMENTO");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO4OTTCARTAO52() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914683");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO1");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 4 SEM RESUMO DE OPERACOES E ESTABELECIMENTO");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO5OTTCARTAO53() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0219621");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "PREVISAO DE PAGAMENTO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELO1");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 5");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "5-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO6OTTCARTAO54() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0220368");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE LANCAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 6");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "18-19;19");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;DEBITOCESSAO");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO7OTTCARTAO55() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0320924");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE LANCAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 7");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "14-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO8OTTCARTAO56() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0421940");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE LANCAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 8");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "17-18;18");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;DEBITOCESSAO");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELO9OTTCARTAO57() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1239716");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP3QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DE PAGAMENTO");
    js.put("portador", "BANCO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE LANCAMENTO");
    js.put("complemento04", "BANCO");
    js.put("complemento05", "");
    js.put("complemento06", "ESTABELECIMENTO");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PADRAO 9");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "PORTADOR");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "20-21;20");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;DEBITOCESSAO");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CIELOPDFOTTCARTAO58() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-06143990");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000006ugqjYAA");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_CIELOPDF");
    js.put("complemento02", "");
    js.put("complemento03", "7");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO CIELO PDF 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_COMIDABOAOTTCARTAO59() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11102022");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000000NgD4YAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "3");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "12");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_COMIDABOA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO COMIDA BOA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "17");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_COMPRAFACILOTTCARTAO60() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612691");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDsRQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "COMPREFACIL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_COOPERCARDOTTCARTAO61() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0211336");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K67eQAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTAO");
    js.put("dataMovimento", "DATA / HORA");
    js.put("portador", "CARTAO COOPERCARD");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_COOPERCARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "0;1;2;3;4;5;6;7;8;9;10;11;12");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO COOPERCARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7*8/100");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_COOPERCARDOTTCARTAO62() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0211337");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K67eQAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTAO");
    js.put("dataMovimento", "DATA");
    js.put("portador", "CARTAO COOPERCARD");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR CREDITO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_COOPERCARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO COOPERCARD PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "10-12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CSEISPAY1OTTCARTAO63() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1137146");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007Kg0OQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA DO CARTAO");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "STATUS DO RECEBIVEL");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO C6PAY PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_CSEISPAY2OTTCARTAO64() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-01115504");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007Kg0OQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA DO CARTAO");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "STATUS DO RECEBIVEL");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO C6PAY PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_DAFITIOTTCARTAO65() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411927");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007KBMVQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO DAFITI PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_03", "VENDA OU TARIFA OU FRETE");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_DETODOSOTTCARTAO66() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0311491");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K7aOQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO DETODOS");
    js.put("complemento02", "");
    js.put("complemento03", "STATUS");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO DE TODOS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_DOM1OTTCARTAO67() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-03128218");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000004IzQvYAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_DOM_EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "2");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO DOM PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "MOVIMENTACAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_EDDUZ1OTTCARTAO68() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0219403");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KbE6QAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "FORMA DE PAGAMENTO");
    js.put("dataMovimento", "DATA DE PAGAMENTO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO EDDUZ PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "21");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_ELAVONOTTCARTAO69() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512645");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQ1QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "PRODUTO");
    js.put("dataMovimento", "DATA DO PAGAMENTO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "13");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_ELAVON");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO ELAVON");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_FACECARDOTTCARTAO70() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0915354");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KEasQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "3");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO FACE CARD PDF PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "AUTORIZACAO");
    js.put("Rotulo_Complemento_04", "PARCELA");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_FORTBRASIL1OTTCARTAO71() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016440");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGsZQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO FORTBRASIL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "10-13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GERTEC1OTTCARTAO72() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0557069");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008xBALQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "14");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GERTEC");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GERTEC 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GETNET1OTTCARTAO73() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0813777");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPNQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTOES");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GETNET PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GETNET2OTTCARTAO74() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0813778");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPNQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTOES");
    js.put("dataMovimento", "DATA/HORA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GETNET");
    js.put("complemento02", "");
    js.put("complemento03", "COD. ESTABELECIMENTO");
    js.put("complemento04", "DESCRICAO DO LANCAMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "17");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GETNET PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO DA FILIAL");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "PARA FAZER REGRA DE CANCELAMEN");
    js.put("Colunas_de_Valores_Extras", "17");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GETNET3OTTCARTAO75() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016904");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPNQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTOES");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GETNET");
    js.put("complemento02", "");
    js.put("complemento03", "COD. ESTABELECIMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GETNET PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO DA FILIAL");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GETNET4OTTCARTAO76() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0764571");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPNQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "PRODUTO");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "15");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GETNET");
    js.put("complemento02", "");
    js.put("complemento03", "COD. ESTABELECIMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "2");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GETNET PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO DA FILIAL");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GETNET5OTTCARTAO77() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11102111");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCPNQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "LANCAMENTO");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GETNET");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "4");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GETNET PADRAO 5");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "CODIGO");
    js.put("Rotulo_Complemento_04", "PRODUTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GOODCARD_TICKET_LOG1OTTCARTAO78() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0613033");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQ6QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CLIENTE");
    js.put("dataMovimento", "DATA / HORA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GOODCARD1");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GOODCARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GOODCARD_TICKET_LOG2OTTCARTAO79() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016706");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQ6QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "10");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "15");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GOODCARD_TICKET_LOG2");
    js.put("complemento02", "");
    js.put("complemento03", "ESTABELECIMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GOODCARD E TICKET LOG PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "FILIAL");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "17");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GOODCARD_TICKET_LOG3OTTCARTAO80() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1096680");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQ6QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "10");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "12");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GOODCARD2");
    js.put("complemento02", "");
    js.put("complemento03", "ESTABELECIMENTO");
    js.put("complemento04", "REDE CAPTURA");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GOODCARD PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "FILIAL");
    js.put("Rotulo_Complemento_04", "BANDEIRA");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GRANITOBMGCARD1OTTCARTAO81() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0421802");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KjJ2QAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA E HORA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BMG GRANITO - SEM TARIFA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GRANITOBMGCARD2OTTCARTAO82() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0769243");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KjJ2QAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA E HORA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BMG GRANITO - COM TARIFA 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_GREENCARDOTTCARTAO83() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612675");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007ICcRQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_GREENCARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO GREENCARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3*#5/100");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_HOTMART1OTTCARTAO84() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0211301");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lKQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "19");
    js.put("dataMovimento", "16");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "VENDA OU TARIFA");
    js.put("complemento03", "9");
    js.put("complemento04", "18");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO HOTMART PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME DO CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MOEDA");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-55;13;13-49");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;VENDAINTERNACIONAL;TARIFAINTERNACIONAL");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_HOTMART2OTTCARTAO85() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016188");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lKQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "NOME DO(A) AFILIADO(A)");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "CODIGO DA TRANSACAO");
    js.put("complemento04", "PRODUTO");
    js.put("complemento05", "COMPRADOR(A)");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO HOTMART PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME DO CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16;23;20");
    js.put("Rotulos_Para_Valores_Extras", "VENDA;TARIFA;COMISSAO");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_IFOOD_EXCEL1OTTCARTAO86() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-04128439");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDLcQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "DATA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO IFOOD EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "FORMAS DE PAGAMENTO");
    js.put("complemento04", "DATA DO CANCELAMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_IFOOD_EXCEL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_IFOOD_EXCEL1OTTCARTAO87() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512225");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDLcQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "DATA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO IFOOD EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "FORMAS DE PAGAMENTO");
    js.put("complemento04", "DATA DO CANCELAMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_IFOOD_EXCEL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_INFINITE1OTTCARTAO88() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0220389");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007Kdx8QAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "ESTABELECIMENTO");
    js.put("complemento04", "FORMA DE PAGAMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_INFINITE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_INFINITE2OTTCARTAO89() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0663899");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007Kdx8QAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_INFINITE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_INFINITE3OTTCARTAO90() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0769668");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007Kdx8QAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_INFINITE PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9-12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_IPIRANGAOTTCARTAO91() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0713296");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KELEQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO IPIRANGA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4+6;4");
    js.put("Rotulos_Para_Valores_Extras", "VENDA;TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_LINXPAY1OTTCARTAO92() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612988");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KE5uQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_LINXPAY");
    js.put("complemento02", "");
    js.put("complemento03", "2");
    js.put("complemento04", "6");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO LINX PAY");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MAGALU2OTTCARTAO93() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0660970");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtHQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "7");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "16");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SHOPEE");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_MAGALU2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16-11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MASTERFARMAOTTCARTAO94() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0412000");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IIx1QAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MASTERFARMA PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE1OTTCARTAO95() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2020-089592");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "NOME DO CARTAO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "1");
    js.put("complemento03", "1");
    js.put("complemento04", "3");
    js.put("complemento05", "4");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_03", "TIPO DE OPERACAO");
    js.put("Rotulo_Complemento_04", "OPERACAO RELACIONADA");
    js.put("Rotulo_Complemento_05", "VALOR");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE2OTTCARTAO96() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0623924");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "10");
    js.put("portador", "NOME DO CARTAO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "3");
    js.put("complemento05", "4");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "PAYMENT_METHOD_TYPE");
    js.put("Rotulo_Complemento_05", "PAYMENT_METHOD");
    js.put("Colunas_de_Valores_Extras", "11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE3OTTCARTAO97() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0713663");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "8");
    js.put("dataMovimento", "9");
    js.put("portador", "NOME DO CARTAO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE4OTTCARTAO98() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0725347");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "3");
    js.put("portador", "NOME DO CARTAO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "10");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE PAGAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE5OTTCARTAO99() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873276");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "23");
    js.put("dataMovimento", "0");
    js.put("portador", "NOME DO CARTAO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "16");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "15");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 5");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DE OPERACAO");
    js.put("Rotulo_Complemento_04", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_05", "<NAO SE APLICA>");
    js.put("Colunas_de_Valores_Extras", "16-21");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOLIVRE6OTTCARTAO100() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11103238");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "MEIO DE PAGAMENTO");
    js.put("dataMovimento", "DATA DE ORIGEM");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DO COMPRA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO LIVRE PADRAO 6");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOPAGO7OTTCARTAO101() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-01112374");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "10");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "MERCADO PAGO");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO PAGOPADRAO 7");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA E TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12;14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;FRETE");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOPAGO8OTTCARTAO102() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-04134951");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "16");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "MERCADO PAGO");
    js.put("complemento02", "");
    js.put("complemento03", "13");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO PAGOPADRAO 8");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA E TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16-21");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MERCADOPAGO9OTTCARTAO103() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-05143117");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMtgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "MERCADO PAGO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MERCADO PAGOPADRAO 9");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA E TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MOIP1OTTCARTAO104() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411996");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQBQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "7");
    js.put("portador", "MOIP");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_MOIP");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MOIP PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5-4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MOIP2OTTCARTAO105() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411997");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQBQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "MOIP");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_MOIP2");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MOIP PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MOOZ1OTTCARTAO106() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0118708");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KVKkQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA/HORA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "CNPJ");
    js.put("complemento04", "CONCILIACAO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MOOZ PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "CNPJ");
    js.put("Rotulo_Complemento_04", "CONCILIACAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_MULTVALEOTTCARTAO107() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-02118521");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000002n7buYAA");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "REDE");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "COMPR.");
    js.put("complemento04", "CLIENTE");
    js.put("complemento05", "LOJA");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO MULT VALE");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "7");
    js.put("Rotulo_Complemento_04", "1");
    js.put("Rotulo_Complemento_05", "LOJA");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_NUVEMSHOP1OTTCARTAO108() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0557330");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008xBViQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "11");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO NUVEMSHOP PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS DO PAGAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8;9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;FRETE");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_OPENPIXOTTCARTAO109() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0765578");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008sqh9QAA");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CLIENTE NOME");
    js.put("dataMovimento", "RECEBIDO EM");
    js.put("portador", "CONTA BANCARIA");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_OPENPIX");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO DE ENTRADA");
    js.put("complemento04", "TIPO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1 EM XLSX VALOR MDR");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DE ENTRADA");
    js.put("Rotulo_Complemento_04", "TIPO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGARME1OTTCARTAO110() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1015760");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMsxQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "TIPO DA OPERACAO");
    js.put("dataMovimento", "DATA DA OPERACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "ENTRADA BRUTA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "DESCRICAO DA OPERACAO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "#NOMEDOARQUIVO");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGARME PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11;8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA;ESTORNO");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGARME2OTTCARTAO111() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093778");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XMsxQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA DO CARTAO");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR (R$)");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "STATUS");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGARME PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGBANK1OTTCARTAO112() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-07151495");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008aI9pQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "1");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGBANK");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "OPERACAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGHIPER1OTTCARTAO113() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0827703");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wRE2QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CONSUMIDOR");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGHIPER PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSEGURO1OTTCARTAO114() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612707");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQLQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "13");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "5");
    js.put("complemento04", "4");
    js.put("complemento05", "");
    js.put("complemento06", "DEBITO_CREDITO");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSEGURO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "TIPO_TRANSACAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSEGURO1OTTCARTAO115() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0624191");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008Qv78QAC");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA DO CARTAO");
    js.put("dataMovimento", "DATA_TRANSACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR_BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "TIPO PLANILHA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSEGURO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "20-21");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSEGURO2OTTCARTAO116() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612708");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQLQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "2");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAGSEGURO2");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSEGURO PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSEGURO3OTTCARTAO117() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0142131");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQLQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAGSEGURO3");
    js.put("complemento02", "");
    js.put("complemento03", "STATUS");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSEGURO PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSEGURO4OTTCARTAO118() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093551");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQLQA2");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAGSEGURO3");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSEGURO PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "2");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGSMILEOTTCARTAO119() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0872745");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWN1QAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "14");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGSMILE");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAGUEVELOZOTTCARTAO120() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0245198");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008ww5LQAQ");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "6");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAGUEVELOZ");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAGUEVELOZ");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11-12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYDOISOTTCARTAO121() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0872748");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWNLQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAY2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYLY1OTTCARTAO122() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0140145");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wlZeQAI");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "14");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "26");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYLY");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYLY");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "TIPO PLANILHA");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "26-32");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYLY2OTTCARTAO123() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0349448");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wlZeQAI");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "5");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYLY");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "8-10");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_PAYLY_EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "TIPO PLANILHA");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "TARIFA");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYMEEOTTCARTAO124() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873163");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWk0QAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "7");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "16");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "5");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYMEE");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "17");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYPAL1OTTCARTAO125() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0558027");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007J8XlQAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYPAL1");
    js.put("complemento02", "");
    js.put("complemento03", "FORMA DE PAGAMENTO");
    js.put("complemento04", "3");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYPAL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "NOME");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYPAL2OTTCARTAO126() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612679");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007J8XlQAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYPAL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYPAL PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYPAL3OTTCARTAO127() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612919");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007J8XlQAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYPAL");
    js.put("complemento02", "");
    js.put("complemento03", "#COLUNA A CONTEM (HISTORICO DE TRANSACOES)");
    js.put("complemento04", "1");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYPAL PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DE MOEDA");
    js.put("Rotulo_Complemento_04", "DESCRICAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PAYPAL4OTTCARTAO128() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-06143737");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007J8XlQAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PAYPAL4");
    js.put("complemento02", "");
    js.put("complemento03", "3");
    js.put("complemento04", "1");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PAYPAL PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DE MOEDA");
    js.put("Rotulo_Complemento_04", "DESCRICAO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PICPAY1OTTCARTAO129() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0211298");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lAQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "4");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "VENDA OU TARIFA");
    js.put("complemento03", "");
    js.put("complemento04", "5");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "XY");
    js.put("contaFixaJuros", "XX");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PICPAY PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "VENDA AUTORIZADA OU NAO AUTORI");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6-8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PICPAY2OTTCARTAO130() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1117377");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lAQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "4");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PICPAY PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "VENDA AUTORIZADA OU NAO AUTORI");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5*#0,0300");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PICPAY3OTTCARTAO131() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0140086");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lAQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "5");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "0");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "4");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PICPAY PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "VENDA AUTORIZADA OU NAO AUTORI");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3*#0,0300");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PICPAY4OTTCARTAO132() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-11105701");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K5lAQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "12");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PICPAY PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6-11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_POLICARDOTTCARTAO133() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612672");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007ICcHQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "10");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_POLICARD");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO POLICARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO DO LANCAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_POLICARDOTTCARTAO134() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612673");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007ICcHQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "7");
    js.put("dataMovimento", "5");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_POLICARD");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO POLICARD PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "VALOR BRUTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_POLICARDOTTCARTAO135() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612871");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007ICcHQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "7");
    js.put("dataMovimento", "5");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_POLICARD");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO POLICARD PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "VALOR BRUTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11-13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_POLICARDOTTCARTAO136() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914598");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007ICcHQAW");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "5");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "13");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_POLICARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO POLICARD PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PRATOOTTCARTAO137() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512280");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDNiQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "1");
    js.put("portador", "CARTAO PRATO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PRATO");
    js.put("complemento02", "");
    js.put("complemento03", "6");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "048 - PEDIDOS  PRATO");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PAGTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7*#2/100");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PREDATADO1OTTCARTAO138() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726924");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wPgYQAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "3");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO PREDATADO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PUNTO1OTTCARTAO139() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1033206");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wazCQAQ");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "10");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PUNTO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "8");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_PUNTO");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "TIPO TRANS.");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_PUNTO2OTTCARTAO140() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1097268");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wazCQAQ");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_PUNTO");
    js.put("complemento02", "");
    js.put("complemento03", "N ESTABELECIMENTO");
    js.put("complemento04", "FORMA DE PAGAMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "STATUS");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_PUNTO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "FORMA DE PAGAMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD0OTTCARTAO141() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612739");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ATUALIZADO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "STATUS DA VENDA");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1 EM XLSX VALOR MDR");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "FILIAL");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD1OTTCARTAO142() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0320473");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1 EM XLSX TAXA MDR");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "FILIAL");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD10OTTCARTAO143() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0624532");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 10");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "2-8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD11OTTCARTAO144() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612924");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 3 VALOR DESCONTADO (PADRAO 11)");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD2OTTCARTAO145() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612740");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "ESTABELECIMENTO");
    js.put("dataMovimento", "DATA APRESENTACAO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR APRESENTADO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD3OTTCARTAO146() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1033321");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "NUMERO DO ESTABELECIMENTO");
    js.put("complemento05", "");
    js.put("complemento06", "STATUS DA VENDA");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1 EM XLSX TAXA MDR COM STATUS DA VENDA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "FILIAL");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD4OTTCARTAO147() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0219420");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "18");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1 EM CSV");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "FILIAL - ESTABELECIMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD5OTTCARTAO148() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0321275");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "18");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 1.2 EM CSV");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "FILIAL - ESTABELECIMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD6OTTCARTAO149() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0320477");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD7OTTCARTAO150() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0320978");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DO RECEBIMENTO");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO DA PARCELA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "CONTA-CORRENTE");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 7");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "CONTA CORRENTE");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDECARD8OTTCARTAO151() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0321042");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCP8QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA VENDA ORIGINAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDECARD");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO REDECARD PADRAO 3 VALOR TOTAL DAS TAXAS DESCONTADAS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_REDEFLEX1OTTCARTAO152() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1032844");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wa91QAA");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_REDEFLEX");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "NSU");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_REDEFLEX_EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "TIPO");
    js.put("Rotulo_Complemento_04", "NSU");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "2-3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA_AGE_VENDASOTTCARTAO153() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512653");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "PARCELA");
    js.put("complemento04", "MODALIDADE");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 3 AGENDA DE VENDAS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PARCELA");
    js.put("Rotulo_Complemento_04", "MODALIDADE DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA_REC_VENDASOTTCARTAO154() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612700");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO DA VENDA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "PARCELA");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 3 RECEBIVEIS VENDAS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PARCELA");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6-7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA_REC_VENDASOTTCARTAO155() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612715");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "11");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 3 GESTAO DE VENDAS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11-12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA1OTTCARTAO156() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512649");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA1OTTCARTAO157() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914621");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 1.1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRA2OTTCARTAO158() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512650");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DEVENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALORBRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRA");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SAFRAPAY_4OTTCARTAO159() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612802");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007IDRpQAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SAFRAPAY_4");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAFRA PADRAO 4 - SAFRAPAY GESTAO_DE_VENDAS");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SEMPARAROTTCARTAO160() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612677");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQkQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SEMPARAR");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SEM PARAR PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SENFFOTTCARTAO161() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914601");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQpQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "1");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SENFF");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SENFF PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "1*#0,0350");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SENFFOTTCARTAO162() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512648");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQpQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SENFF");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SENFF PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SHOPEE1OTTCARTAO163() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0660954");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008x2atQAA");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "6");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SHOPEE");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SHOPEE1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-20");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICOOB1OTTCARTAO164() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-04133604");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000005BGg5YAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "0");
    js.put("dataMovimento", "1");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICOOB1");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICOOB");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4");
    js.put("Rotulos_Para_Valores_Extras", "TAXA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICOOBCARDOTTCARTAO165() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-03122321");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG000003T6TJYA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "1");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "10");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "9");
    js.put("complemento04", "15");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICOOBCARD EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "DESCRICAO TIPO CARTAO");
    js.put("Rotulo_Complemento_04", "STATUS PROCESSAMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI1OTTCARTAO166() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0981706");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DE CREDITO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "17");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "25");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 1.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "17-18");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI2OTTCARTAO167() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093608");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "25");
    js.put("complemento04", "13");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 2.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "ESTABELECIMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI3OTTCARTAO168() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1199401");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "11");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "14");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "12");
    js.put("complemento04", "3");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 3.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "ESTABELECIMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI4OTTCARTAO169() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-12106233");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO DA TRANSACAO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "PRODUTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 4.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PRODUTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "18");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI5OTTCARTAO170() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-12109834");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "11");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "14");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "12");
    js.put("complemento04", "6");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 5.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "CANAL");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "14-16");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI6OTTCARTAO171() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-01116290");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "10");
    js.put("complemento04", "14");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 6.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "ESTABELECIMENTO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SICREDI7OTTCARTAO172() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-03122254");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeHRQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SICREDI");
    js.put("complemento02", "");
    js.put("complemento03", "1");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SICREDI PADRAO 7");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STATUS");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-11");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG08OTTCARTAO174() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0557755");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 8");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG1OTTCARTAO175() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0311523");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "0");
    js.put("portador", "SIPAG");
    js.put("documentoNF", "");
    js.put("valorDocumento", "14");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "3");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 1.XLSX");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "DEBITO OU CREDITO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG10OTTCARTAO176() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-05135833");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 10");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG2OTTCARTAO177() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612669");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "PRODUTO");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "PARCELA");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "PARCELAS");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG4OTTCARTAO178() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726416");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "NUMERO DA CONTA CORRENTE");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR PARCELA BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 4");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG5OTTCARTAO179() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726907");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TRANSACAO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 5");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7-10");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG6OTTCARTAO180() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1238179");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 6");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG7OTTCARTAO181() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0244764");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "20");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 7");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "<NAO SE APLICA>");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "21");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SIPAG9OTTCARTAO182() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0770655");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQuQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR PARCELA BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SIPAG");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "5");
    js.put("complemento05", "");
    js.put("complemento06", "VALOR PARCELA BRUTO");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SIPAG PADRAO 9");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "NUMERO DO ESTABELECIMENTO");
    js.put("Rotulo_Complemento_04", "CREDITO OU DEBITO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "22");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SMCCARDOTTCARTAO183() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0915348");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KG82QAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "5");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "0");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "SMCCARD");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "ESTABELECIMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SODEXO1OTTCARTAO184() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411998");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XTR3QAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "3");
    js.put("portador", "SODEXO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_SODEXO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SODEXO VENDAS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8*#0,0690");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SODEXO2OTTCARTAO185() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0243615");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008XTR3QAO");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "12");
    js.put("dataMovimento", "1");
    js.put("portador", "SODEXO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SODEXO WIZEO PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8*#0,0349");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_STARKBANKOTTCARTAO186() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873676");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FXDMQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "2");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "0");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO STARK BANK");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_STELOOTTCARTAO187() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0412002");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007zJ7LQAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "20.022.225/5548-54");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "9");
    js.put("dataMovimento", "1");
    js.put("portador", "STELO");
    js.put("documentoNF", "");
    js.put("valorDocumento", "10");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_STELO");
    js.put("complemento02", "");
    js.put("complemento03", "6");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO STELO VENDAS PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MEIO DE PGTO.");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_STONE1OTTCARTAO188() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612732");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQzQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "HORA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "12");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_STONE");
    js.put("complemento02", "");
    js.put("complemento03", "DOCUMENTO");
    js.put("complemento04", "TIPO");
    js.put("complemento05", "QTD DE PARCELAS");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO STONE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "IDENTIFICACAO FILIAL");
    js.put("Rotulo_Complemento_04", "TIPO DE PAGAMENTO");
    js.put("Rotulo_Complemento_05", "QTD DE PARCELAS");
    js.put("Colunas_de_Valores_Extras", "12-13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_STONE2OTTCARTAO189() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612733");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQzQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "HORA DA VENDA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_STONE");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "ULTIMO STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "TIPO");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO STONE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "STONE ID");
    js.put("Rotulo_Complemento_04", "PARA IGNORAR AS VENDAS CANCELA");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_STONE3OTTCARTAO190() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1239611");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCQzQAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "4");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "13");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_STONE");
    js.put("complemento02", "");
    js.put("complemento03", "3");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO STONE PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "CATEGORIA");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13-14");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_SUMUP1OTTCARTAO191() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0523060");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008kcJnQAI");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "TIPO DE CARTAO");
    js.put("dataMovimento", "1");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR TOTAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "DESCRICAO");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "3");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_SUMUP_PADRAO1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "DESCRICAO");
    js.put("Rotulo_Complemento_04", "STATUS");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TICKET1OTTCARTAO192() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0623763");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCR4QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATAAUTORIZACAO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALORMOEDALOCAL");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TICKET PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TICKET2OTTCARTAO193() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1135264");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCR4QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CNPJ");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VL TRANSACAO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TICKET PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TICKET3OTTCARTAO194() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-12106210");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCR4QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "COD. ESTABELECIMENTO");
    js.put("dataMovimento", "DATA CRED/DEB");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR R$");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_TICKET3");
    js.put("complemento02", "");
    js.put("complemento03", "DESCRICAO LANCAMENTO");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TICKET PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA E TARIFA");
    js.put("Rotulo_Complemento_03", "DESCRICAO LANCAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TKSOTTCARTAO195() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0989525");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009I4VpQAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA DE VENDA");
    js.put("portador", "CARTAO_TKS");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_TKS");
    js.put("complemento02", "");
    js.put("complemento03", "MODALIDADE");
    js.put("complemento04", "QUANTIDADE");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "TKS PDF");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "CARTAO_TKS");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "QUANTIDADE");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TON1OTTCARTAO196() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-1239610");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FVNKQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "OPERACAO");
    js.put("dataMovimento", "DATA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "ENTRADA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_STONE");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TON PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "METODO DE PAGAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "4-7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TON2OTTCARTAO197() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0624695");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FVNKQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "OPERACAO");
    js.put("dataMovimento", "DATA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "ENTRADA");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_TON");
    js.put("complemento02", "");
    js.put("complemento03", "4");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TON PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "METODO DE PAGAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TON3OTTCARTAO198() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0871449");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FVNKQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "7");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "1");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "8");
    js.put("complemento04", "10");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TON PADRAO 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "METODO_PAGAMENTO");
    js.put("Rotulo_Complemento_04", "CREDITO OU DEBITO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "1-2");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TRANSFERSMILE1OTTCARTAO199() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873255");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWptQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "13");
    js.put("dataMovimento", "12");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "TRANSFERSMILE");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TRANSFERSMILE2OTTCARTAO200() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0873651");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FWptQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "1");
    js.put("dataMovimento", "5");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "TRANSFERSMILE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TRICARD_EXCEL1OTTCARTAO201() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612704");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDsgQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "FAKE");
    js.put("dataMovimento", "0");
    js.put("portador", "FAKE");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO TRICARD EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO_TRICARD_EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS PAGAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TRIOCARDOTTCARTAO202() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0411999");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007zLhvQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "1");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "NOME DO CARTAO");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TRIOCARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "NOME DO CARTAO");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_TRUDATA1OTTCARTAO203() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093746");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009I84OQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "5");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO TRUDATA PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "TIPO");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_UNICA1OTTCARTAO204() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1093536");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008woRTQAY");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_UNICA1");
    js.put("complemento02", "");
    js.put("complemento03", "2");
    js.put("complemento04", "12");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO UNICA PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "MODALIDADE");
    js.put("Rotulo_Complemento_04", "NUMERO DO TERMINAL");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_UNIPRIMEOTTCARTAO205() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1198937");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG0000001DmQYAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA TRANS.");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_UNIPRIME");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO UNIPRIME");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "12");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_UNIPRIME2OTTCARTAO206() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2024-05142800");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0qSG0000001DmQYAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "BANDEIRA");
    js.put("dataMovimento", "DATA TRANS.");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_UNIPRIME");
    js.put("complemento02", "");
    js.put("complemento03", "TIPO");
    js.put("complemento04", "STATUS");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO UNIPRIME PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VALECARD1OTTCARTAO207() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0828430");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wShtQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "DESCRICAO");
    js.put("dataMovimento", "3");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "5");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_VALECARD1");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VALECARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VALOREMPAY_EXCELOTTCARTAO208() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612734");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDteQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "FAKE");
    js.put("dataMovimento", "0");
    js.put("portador", "FAKE");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO VALOREMPAY EXCEL");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VALOREMPAY EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VERDECARD_PDF1OTTCARTAO209() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0980817");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009Fd7BQAS");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "DATA REPASSE");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "2");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VERDECARD PDF PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "2-7");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VERDECARD1OTTCARTAO210() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726921");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wPgJQAU");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CLIENTE");
    js.put("dataMovimento", "DATA");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR BRUTO");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VERDECARD PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "13-15");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VERO_SMARTPDF1OTTCARTAO211() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-0981644");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000009FeFGQA0");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "3");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "1");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO BANRISUL PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "CONTRATO");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-4");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VIASOFTPAY1OTTCARTAO212() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0726913");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008wPfzQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "4");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "15");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VIASOFT PAY PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "15*#0,035");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VRALIMENTACAO1OTTCARTAO213() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0612668");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCR9QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "");
    js.put("dataMovimento", "COLUNA (03,10)");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "COLUNA (22,28)");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "COLUNA(1,2)");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VR ALIMENTACAO PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".TXT - ARQUIVO TEXTO");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VRALIMENTACAO2OTTCARTAO214() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0914604");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000004nCR9QAM");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "PRODUTO");
    js.put("dataMovimento", "DATA");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VR ALIMENTACAO PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "5*#0,0550");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_VSCARDOTTCARTAO215() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0311735");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000007K9H0QAK");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "6");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO VS CARD");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "6*#0,05");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_YAPAY1OTTCARTAO216() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0512463");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDXJQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "3");
    js.put("dataMovimento", "6");
    js.put("portador", "");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_YAPAY");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO YAPAY");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "TIPO PLANILHA");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "8-9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_YAPAY2OTTCARTAO217() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-12109863");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDXJQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "10");
    js.put("dataMovimento", "1");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "12");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_YAPAY");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO YAPAY 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "TIPO PLANILHA");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "16");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAO_YAPAY3OTTCARTAO218() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-12109866");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KDXJQA4");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "5");
    js.put("dataMovimento", "0");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "7");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "CARTAO_YAPAY");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO YAPAY 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "TIPO PLANILHA");
    js.put("Rotulo_Complemento_02", "VENDA OU TARIFA");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "9");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAOSAUDESERVICE1OTTCARTAO219() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0422044");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008pU3nQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "CARTAO");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA TRANSACAO (R$)");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAUDE SERVICE PADRAO 1");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-6");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroCARTAOSAUDESERVICE2OTTCARTAO220() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2022-0827351");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000008pU3nQAE");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "null");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "NOME DO PACIENTE");
    js.put("dataMovimento", "DATA DA TRANSACAO");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "VALOR DA PARCELA (R$)");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "CARTAO SAUDE SERVICE PADRAO 2");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "3-5");
    js.put("Rotulos_Para_Valores_Extras", "TARIFA");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroIFOOD_PADRAO_3OTTCARTAO221() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0111099");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008YiL8QAK");
    js.put("idContabilidade", "a091500001AzthL");
    js.put("CnpjContabilidade", "24.367.904/0001-18");
    js.put("CnpjEmpresa", "27.528.417/0001-89");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "1");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "10");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "IFOOD LAYOUT 3");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "LANCAMENTO");
    js.put("Rotulo_Complemento_03", "DATA DE CANCELAMENTO");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroSODEXO_PADRAO_1OTTCARTAO222() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-0111093");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q1C000008YiL8QAK");
    js.put("idContabilidade", "a091500001AzthL");
    js.put("CnpjContabilidade", "24.367.904/0001-18");
    js.put("CnpjEmpresa", "27.528.417/0001-89");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "-1");
    js.put("dataMovimento", "3");
    js.put("portador", "-1");
    js.put("documentoNF", "");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "");
    js.put("complemento02", "");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "PADRAO 1 SODEXO EXCEL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".CSV - TEXTO EXPORTADO EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public JSONObject getRoteiroZZPADRAOOTTIMIZZAREC223() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016996");
    js.put("idRoteiro", "a0A6R000017N8Vz");
    js.put("idEmpresa", "a0q6R000007KGdjQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "1");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "6");
    js.put("documentoNF", "1");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "5");
    js.put("complemento01", "3");
    js.put("complemento02", "7");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "1");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Demarchicontabil");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Deltafire");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "PLANILHA PADRAO OTTIMIZZA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS RECEBIDAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public String getTipoPlanilha(String line, String tipoPlanilha, String nomeArquivo, JSONObject jDadosObj) {
    boolean achouTipo = true;
    String [] campos1 = "NOME;ID;AUTORIZA;DATA;VENDA;STATUS;METODO;CAPTURA;BANDEIRA;FORMA;PAGAMENTO;PARCELAS;MOEDA".split(";");
    for (int x=0;x<campos1.length;x++) {
        if (!line.contains(campos1[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "AAACARTAO_INFINITE_PDFOTTCARTAO1";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("NUTRICARD")) achouTipo = true;
    if (achouTipo) return "ACARTAO_NUTRICARDOTTCARTAO2";
    achouTipo = true;
    String [] campos3 = "DOCTO;CARTAO;EMISSAO;VLR.VDA;TX.ADM.;TMT;VLR.LIQ.;CAPTURA".split(";");
    for (int x=0;x<campos3.length;x++) {
        if (!line.contains(campos3[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "ACARTAO_NUTRICARD2OTTCARTAO3";
    achouTipo = true;
    String [] campos4 = "CLIENTE;LOJA;CNPJ;DATA DA OPERA;PARCELAS;TERMINAL;VALOR BRUTO;AUTORIZA;USU;ESTORNO".split(";");
    for (int x=0;x<campos4.length;x++) {
        if (!line.contains(campos4[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "BCARTAO_SENFFOTTCARTAO4";
    achouTipo = true;
    String [] campos5 = "DATA|QUANTIDADE|VALOR R$|TRANSACOES".split(";");
    for (int x=0;x<campos5.length;x++) {
        if (!line.contains(campos5[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ABRAPETITE1OTTCARTAO5";
    achouTipo = true;
    String [] campos6 = "CREDENCIADO|CNPJ ESTABELECIMENTO|TL;NR CARTAO".split(";");
    for (int x=0;x<campos6.length;x++) {
        if (!line.contains(campos6[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ABRAPETITE2OTTCARTAO6";
    achouTipo = true;
    String [] campos7 = "DATA;HORA;CODIGO DE AUTORIZACAO;NSU ACQIO;NSU ADQUIRENTE;TIPO;BANDEIRA".split(";");
    for (int x=0;x<campos7.length;x++) {
        if (!line.contains(campos7[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ACQIOOTTCARTAO7";
    achouTipo = true;
    String [] campos8 = "DATA;ORIGEM;LOJA;DOCUMENTO;NSU ACQIO;STATUS;TIPO DE PAGAMENTO.;PARCELAS;BANDEIRA;VALOR BRUTO".split(";");
    for (int x=0;x<campos8.length;x++) {
        if (!line.contains(campos8[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ACQIO2OTTCARTAO8";
    achouTipo = true;
    String [] campos9 = "NRO. PEDIDO;DATA;CIDADE;RESTAURANTE;USUARIO;TOTAL (R$);TIPO ENTREGA;ENTREGA (R$)".split(";");
    for (int x=0;x<campos9.length;x++) {
        if (!line.contains(campos9[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AIQFOME1OTTCARTAO9";
    achouTipo = true;
    String [] campos10 = "N DA AUTORIZACAO;DESCRICAO,VALOR BRUTO;DATA".split(";");
    for (int x=0;x<campos10.length;x++) {
        if (!line.contains(campos10[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ALELO1OTTCARTAO10";
    achouTipo = true;
    String [] campos11 = "CNPJ;AUTORIZACAO;DATA DA VENDA;HORARIO DA TRANSACAO;TIPO CARTAO;CREDENCIADORA;VALOR BRUTO;VALOR LIQUIDO;STATUS;DATA DE PAGAMENTO".split(";");
    for (int x=0;x<campos11.length;x++) {
        if (!line.contains(campos11[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ALELO2OTTCARTAO11";
    achouTipo = true;
    String [] campos12 = "EXTRATO DE VENDA;EMPRESAS SELECIONADAS: ALIMENTARE;DOCTO;CARTAO".split(";");
    for (int x=0;x<campos12.length;x++) {
        if (!line.contains(campos12[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ALIMENTARE1OTTCARTAO12";
    achouTipo = true;
    String [] campos13 = "DOCTO;CARTAO;EMISSAO;VLR.VDA;TX. ADM.;TMT;VLR.L;CAPTURA".split(";");
    for (int x=0;x<campos13.length;x++) {
        if (!line.contains(campos13[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ALIMENTARE2OTTCARTAO13";
    achouTipo = true;
    String [] campos14 = "DATA;ID DO PEDIDO;DIGO SKU;TIPO DE TRANSA;TIPO DE PAGAMENTO;DETALHE DO PAGAMENTO;VALOR;QUANTIDADE".split(";");
    for (int x=0;x<campos14.length;x++) {
        if (!line.contains(campos14[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AMAZONOTTCARTAO14";
    achouTipo = true;
    String [] campos15 = "NOME:;CNPJ:;PERFIL: AMEPLUS".split(";");
    for (int x=0;x<campos15.length;x++) {
        if (!line.contains(campos15[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AME1OTTCARTAO15";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("AMERICAN")) achouTipo = true;
    if (achouTipo) return "CARTAO_AMERICANEXPRESSOTTCARTAO16";
    achouTipo = true;
    String [] campos17 = "GRUPO: RV CARDS;REDE: RV CARDS;MOVIMENTOS EM LOJA;AUTORIZ;LOJA".split(";");
    for (int x=0;x<campos17.length;x++) {
        if (!line.contains(campos17[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ARVCARDSOTTCARTAO17";
    achouTipo = true;
    String [] campos18 = "DATA DE POSTAGEM;DATA DE CREDITO;NUMERO DO ESTABELECIMENTO;NUMERO DO PAGAMENTO;RESUMO DE VENDAS;RECUPERACAO DE COMPROVANTE".split(";");
    for (int x=0;x<campos18.length;x++) {
        if (!line.contains(campos18[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AZULOTTCARTAO18";
    achouTipo = true;
    String [] campos19 = "DATA DA VENDA;PARCELAS;BANDEIRA;CANAL;VALOR BRUTO|VALOR LIQUIDO|STATUS;MERO DO TERMINAL;COMPROVANTE DA VENDA;D. DO PEDIDO;VALOR DA TAXA|NUMERO DO ESTABELECIMENTO".split(";");
    for (int x=0;x<campos19.length;x++) {
        if (!line.contains(campos19[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AZUL2OTTCARTAO19";
    achouTipo = true;
    String [] campos20 = "DATA DA VENDA;PARCELAS;BANDEIRA;CANAL;VALOR BRUTO|VALOR DA TAXA|VALOR LIQUIDO|STATUS;MERO DO TERMINAL;COMPROVANTE DA VENDA;D. DO PEDIDO;NUMERO DO ESTABELECIMENTO".split(";");
    for (int x=0;x<campos20.length;x++) {
        if (!line.contains(campos20[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_AZUL2OTTCARTAO20";
    achouTipo = true;
    String [] campos21 = "DT. PREV. LIQUID;BANDEIRA;PRODUTO;VALOR TRANSACAO;TARIFA DE COMUNICACAO;VALOR LIQUIDO;VALOR CANCELADO".split(";");
    for (int x=0;x<campos21.length;x++) {
        if (!line.contains(campos21[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRASOTTCARTAO21";
    achouTipo = true;
    String [] campos22 = "DATA PREV. CREDITO;PRODUTO;VALOR TRANSACAO;VL TX ADM (MDR);TARIFA DE COMUNICACAO;VALOR LIQUIDO;VALOR CANCELADO".split(";");
    for (int x=0;x<campos22.length;x++) {
        if (!line.contains(campos22[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRAS2OTTCARTAO22";
    achouTipo = true;
    String [] campos23 = "DATA OPERACAO;TOTAL;VALOR ALIMENT.".split(";");
    for (int x=0;x<campos23.length;x++) {
        if (!line.contains(campos23[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRAS3OTTCARTAO23";
    achouTipo = true;
    String [] campos24 = "DATA OPERACAO;QTDE A VISTA;QTDE PRE-DATADO;QTDE PARCELADO C/ENTRADA".split(";");
    for (int x=0;x<campos24.length;x++) {
        if (!line.contains(campos24[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRAS4OTTCARTAO24";
    achouTipo = true;
    String [] campos25 = "DATA OPERACAO;QTDE CARTAO DE DEBITO;VALOR CARTAO DE DEBITO;QTDE CREDITO A VISTA;VALOR CREDITO A VISTA;QTDE PARCELADO LOJISTA".split(";");
    for (int x=0;x<campos25.length;x++) {
        if (!line.contains(campos25[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRAS5OTTCARTAO25";
    achouTipo = true;
    String [] campos26 = "BANDEIRA;DT. PREV.;VALOR;PRODUTO;ADM;MDR;CANCELADO".split(";");
    for (int x=0;x<campos26.length;x++) {
        if (!line.contains(campos26[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRASPDF1OTTCARTAO26";
    achouTipo = true;
    String [] campos27 = "PREV.;PRODUTO;VALOR;VL TX ADM;TARIFA DE;VALOR;VALOR;CREDITO;TRANSACAO;(MDR);COMUNICACAO;LIQUIDO;CANCELADO".split(";");
    for (int x=0;x<campos27.length;x++) {
        if (!line.contains(campos27[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BANRICOMPRASPDF2OTTCARTAO27";
    achouTipo = true;
    String [] campos28 = "CLIENTE;TOTAL PARCELAS;TAXA CAPTURA;BANDEIRA;DATA CREDITO;VALOR BRUTO(R$);CAPTURA (R$)".split(";");
    for (int x=0;x<campos28.length;x++) {
        if (!line.contains(campos28[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BELLUNO1OTTCARTAO28";
    achouTipo = true;
    String [] campos29 = "EMPRESA;FANTASIA EMPRESA;CLIENTE;FANTASIA CLIENTE;NOTA;TITULO;SERIE;PARCELA;D. VENCIMENTO;D. COMPETENCIA;D. LANCAMENTO;D. LIQUIDACAO;FORMA RECEBIMENTO;V. CREDITO;V. DEBITO".split(";");
    for (int x=0;x<campos29.length;x++) {
        if (!line.contains(campos29[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BENVALE1OTTCARTAO29";
    achouTipo = true;
    String [] campos30 = "DATA;HORA;NRO DOC;CNPJ;ESTABELECIMENTO;VALOR VENDA;TAXAS;MEIO DE CAPTURA;PAGO VIA".split(";");
    for (int x=0;x<campos30.length;x++) {
        if (!line.contains(campos30[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BENVISA1OTTCARTAO30";
    achouTipo = true;
    String [] campos31 = "DATA DE POSTAGEM|DATA DE CREDITO;RESUMO DE VENDAS;BANDEIRA;IP CLIENTE|PARCELADO".split(";");
    for (int x=0;x<campos31.length;x++) {
        if (!line.contains(campos31[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BIN1OTTCARTAO31";
    achouTipo = true;
    String [] campos32 = "PRODUTO;PARCELAS;BANDEIRA;CANAL;VALOR BRUTO|VALOR DA TAXA|VALOR LIQUIDO|VALOR CANCELADO;STATUS".split(";");
    for (int x=0;x<campos32.length;x++) {
        if (!line.contains(campos32[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BIN2_SICREDIOTTCARTAO32";
    achouTipo = true;
    String [] campos33 = "OPERACAO;;HORA;;DATA EFETIVACAO;;TIPO;;VALOR".split(";");
    for (int x=0;x<campos33.length;x++) {
        if (!line.contains(campos33[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BIQBENEFICIOS1OTTCARTAO33";
    achouTipo = true;
    String [] campos34 = "ID_PARCELA;CNPJ;RAZAO_SOCIAL;STATUS_VENDA;DATA_CANCELAMENTO_VENDA;DATA_VENDA;BANDEIRA;ADQUIRENTE;TIPO;CODIGO_AUTORIZACAO;CODIGO_NSU;NUMERO_CARTAO;NUMERO_TERMINAL_POS;QUANTIDADE_PARCELAS;NUMERO_PARCELA".split(";");
    for (int x=0;x<campos34.length;x++) {
        if (!line.contains(campos34[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BLU1OTTCARTAO34";
    achouTipo = true;
    String [] campos35 = "DOCTO;CARTAO;EMISSAO;VLR.VDA;TX. ADM.;TMT;VLR.LIQ.;CAPTURA".split(";");
    for (int x=0;x<campos35.length;x++) {
        if (!line.contains(campos35[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BONUSCREDOTTCARTAO35";
    achouTipo = true;
    String [] campos36 = "DOCTO;PARCELA;CLIENTE;EMISSAO;VLR.VDA;VLR.LIQ.;CAPTURA".split(";");
    for (int x=0;x<campos36.length;x++) {
        if (!line.contains(campos36[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BONUSCRED2OTTCARTAO36";
    achouTipo = true;
    String [] campos37 = "MOEDACARTAO;DATAHORATRANSACAO;IDCARTAO;CARTAO;STATUSCARTAO;IDPRODUTO;CAMINHO;MCC;MCCTITULO".split(";");
    for (int x=0;x<campos37.length;x++) {
        if (!line.contains(campos37[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BPPOTTCARTAO37";
    achouTipo = true;
    String [] campos38 = "DATA DA VENDA;QUANTIDADE DE TICKETS;VALOR DA VENDA;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos38.length;x++) {
        if (!line.contains(campos38[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_BRASILCARDOTTCARTAO38";
    achouTipo = true;
    String [] campos39 = "DATA DA VENDA;PREVISAO DE PAGAMENTO;N CV;PRODUTO/PLANO DE VENDA;VALOR DA VENDA;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos39.length;x++) {
        if (!line.contains(campos39[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CABAL1OTTCARTAO39";
    achouTipo = true;
    String [] campos40 = "CODAUTORIZACAO;CODBANDEIRA;CODPLANOVENDA;COMPROVANTE;DATAPREVISTAPAGTO".split(";");
    for (int x=0;x<campos40.length;x++) {
        if (!line.contains(campos40[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CABAL2OTTCARTAO40";
    achouTipo = true;
    String [] campos41 = "DOCUMENTO (CPF/CNPJ);N REDE COMERCIO".split(";");
    for (int x=0;x<campos41.length;x++) {
        if (!line.contains(campos41[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CABAL3OTTCARTAO41";
    achouTipo = true;
    String [] campos42 = "FORMA DE PAGAMENTO;PLANO DE VENDA;PARCELA;NUMERO DO CARTAO;TIPO CAPTURA;NUMERO DO TERMINAL;STATUS;VALOR PARCELA BRUTO;DESCONTO PARCELA".split(";");
    for (int x=0;x<campos42.length;x++) {
        if (!line.contains(campos42[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CABAL4OTTCARTAO42";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("CALCARD")) achouTipo = true;
    if (achouTipo) return "CARTAO_CALCARDOTTCARTAO43";
    achouTipo = true;
    String [] campos44 = "ERO DO LOTE;PRODUTO;QUANTIDADE DE TRANSA;VALOR BRUTO;VALOR RETEN;DATA".split(";");
    for (int x=0;x<campos44.length;x++) {
        if (!line.contains(campos44[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CETELEMOTTCARTAO44";
    achouTipo = true;
    String [] campos45 = "DATA DA VENDA;DATA DA AUTORIZA;ESTABELECIMENTO;BANDEIRA;QUANTIDADE DE PARCELAS;RESUMO;OPERA;VALOR DA VENDA;VALOR DESCONTADO;CANAL;VENDA;NSU;COMISSAO PADRAO (%)".split(";");
    for (int x=0;x<campos45.length;x++) {
        if (!line.contains(campos45[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO1OTTCARTAO45";
    achouTipo = true;
    String [] campos46 = "DATA DA VENDA;DATA DA AUTORIZACAO;ESTABELECIMENTO;BANDEIRA;FORMA DE PAGAMENTO;QUANTIDADE DE PARCELAS;RESUMO DA OPERACAO;VALOR DA VENDA;COMISSAO;VALOR DESCONTADO;PREVISAO DE PAGAMENTO;VALOR".split(";");
    for (int x=0;x<campos46.length;x++) {
        if (!line.contains(campos46[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO10OTTCARTAO46";
    achouTipo = true;
    String [] campos47 = "DATA DA VENDA;DATA DA AUTORIZACAO DA VENDA;BANDEIRA;FORMA DE PAGAMENTO;QUANTIDADE DE PARCELAS;RESUMO DA OPERACAO;VALOR DA VENDA;TAXAS (%);VALOR DESCONTADO;TARIFA;PREVISAO DE PAGAMENTO;VALOR LIQUIDO DA".split(";");
    for (int x=0;x<campos47.length;x++) {
        if (!line.contains(campos47[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO11OTTCARTAO47";
    achouTipo = true;
    String [] campos48 = "DATA DA VENDA|VALOR DA VENDA;CANAL DE VENDA;RECEBIMENTO AUTOMATICO;NUMERO DA NOTA FISCAL;TAXA DE EMBARQUE;VALOR DA ENTRADA".split(";");
    for (int x=0;x<campos48.length;x++) {
        if (!line.contains(campos48[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO12OTTCARTAO48";
    achouTipo = true;
    String [] campos49 = "DATA DA VENDA;TIPO DE CAPTURA;TOTAL DE DIAS COBRADOS;ID PIX;TID;VALOR BRUTO;CODIGO DA CHAVE UR;CODIGO DA VENDA".split(";");
    for (int x=0;x<campos49.length;x++) {
        if (!line.contains(campos49[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO13OTTCARTAO49";
    achouTipo = true;
    String [] campos50 = "DATA DA VENDA;DATA DA AUTORIZACAO DA VENDA;ESTABELECIMENTO;BANDEIRA;QUANTIDADE DE PARCELAS;VALOR DA VENDA;VALOR DESCONTADO;TAXAS (%);CANAL DA VENDA;NSU".split(";");
    for (int x=0;x<campos50.length;x++) {
        if (!line.contains(campos50[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO2OTTCARTAO50";
    achouTipo = true;
    String [] campos51 = "DATA DA VENDA;DATA DA AUTORIZACAO DA VENDA;BANDEIRA;FORMA DE PAGAMENTO;QUANTIDADE DE PARCELAS;RESUMO DA OPERACAO;VALOR DA VENDA;TAXAS (%);VALOR DESCONTADO;TARIFA;PREVISAO DE PAGAMENTO".split(";");
    for (int x=0;x<campos51.length;x++) {
        if (!line.contains(campos51[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO3OTTCARTAO51";
    achouTipo = true;
    String [] campos52 = "DATA DA VENDA;DATA DA AUTORIZACAO DA VENDA;ESTABELECIMENTO;BANDEIRA;FORMA DE PAGAMENTO;QUANTIDADE DE PARCELAS".split(";");
    for (int x=0;x<campos52.length;x++) {
        if (!line.contains(campos52[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO4OTTCARTAO52";
    achouTipo = true;
    String [] campos53 = "ESTABELECIMENTO;PREVISAO DE PAGAMENTO;BANDEIRA;PAGAMENTO;QUANTIDADE DE TRANSACOES;VALOR BRUTO;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos53.length;x++) {
        if (!line.contains(campos53[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO5OTTCARTAO53";
    achouTipo = true;
    String [] campos54 = "STATUS;TIPO DE LANCAMENTO;DESCRICAO;BANCO|AGENCIA|CONTA;ESTABELECIMENTO;DATA DE PAGAMENTO|DATA DA VENDA|BANDEIRA;FORMA DE PAGAMENTO;TID|CODIGO DE AUTORIZACAO;VALOR BRUTO|VALOR LIQUIDO".split(";");
    for (int x=0;x<campos54.length;x++) {
        if (!line.contains(campos54[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO6OTTCARTAO54";
    achouTipo = true;
    String [] campos55 = "STATUS;TIPO DE LANCAMENTO;DESCRICAO;BANCO|ESTABELECIMENTO|DATA DE PAGAMENTO|DATA DA VENDA|BANDEIRA;FORMA DE PAGAMENTO;VALOR BRUTO|VALOR LIQUIDO;VALOR COBRADO;VALOR PENDENTE".split(";");
    for (int x=0;x<campos55.length;x++) {
        if (!line.contains(campos55[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO7OTTCARTAO55";
    achouTipo = true;
    String [] campos56 = "STATUS;TIPO DE LANCAMENTO;DESCRICAO;BANCO;AGENCIA;CONTA;ESTABELECIMENTO;DATA DE PAGAMENTO;DATA DA VENDA;BANDEIRA;FORMA DE PAGAMENTO;VALOR BRUTO;VALOR LIQUIDO;VALOR COBRADO;VALOR PENDENTE".split(";");
    for (int x=0;x<campos56.length;x++) {
        if (!line.contains(campos56[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO8OTTCARTAO56";
    achouTipo = true;
    String [] campos57 = "BANDEIRA;FORMA DE PAGAMENTO;NUMERO DA PARCELA;QUANTIDADE DE PARCELAS;NUMERO DO CARTAO;CODIGO DA TRANSACAO;CODIGO DE AUTORIZACAO;NSU;VALOR BRUTO;VALOR LIQUIDO;VALOR COBRADO;VALOR PENDENTE;VALOR TOTAL".split(";");
    for (int x=0;x<campos57.length;x++) {
        if (!line.contains(campos57[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELO9OTTCARTAO57";
    achouTipo = true;
    String [] campos58 = "DATA E HORA;PREVISAO DE PAGAMENTO;ESTABELECIMENTO;BANDEIRA".split(";");
    for (int x=0;x<campos58.length;x++) {
        if (!line.contains(campos58[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CIELOPDFOTTCARTAO58";
    achouTipo = true;
    String [] campos59 = "CONTA;DATA;HORA;TIPO;NSU HOST;AUTORIZACAO;PARCELA;R$ BRUTO;STATUS PAGAMENTO".split(";");
    for (int x=0;x<campos59.length;x++) {
        if (!line.contains(campos59[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_COMIDABOAOTTCARTAO59";
    achouTipo = true;
    String [] campos60 = "FANTASIA;CARTAO;DATA VENDA;VALOR;AUTORIZ".split(";");
    for (int x=0;x<campos60.length;x++) {
        if (!line.contains(campos60[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_COMPRAFACILOTTCARTAO60";
    achouTipo = true;
    String [] campos61 = "FILTROS:;PERIODO:;ESTABELECIMENTO:;PDV|TRANS".split(";");
    for (int x=0;x<campos61.length;x++) {
        if (!line.contains(campos61[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_COOPERCARDOTTCARTAO61";
    achouTipo = true;
    String [] campos62 = "DATA;PDV|DESCRI;CDC;TAXA ADM".split(";");
    for (int x=0;x<campos62.length;x++) {
        if (!line.contains(campos62[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_COOPERCARDOTTCARTAO62";
    achouTipo = true;
    String [] campos63 = "RELATORIO DE VENDAS C6PAY".split(";");
    for (int x=0;x<campos63.length;x++) {
        if (!line.contains(campos63[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CSEISPAY1OTTCARTAO63";
    achouTipo = true;
    String [] campos64 = "RELATORIO DE RECEBIVEIS C6PAY".split(";");
    for (int x=0;x<campos64.length;x++) {
        if (!line.contains(campos64[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_CSEISPAY2OTTCARTAO64";
    achouTipo = true;
    String [] campos65 = "DAFITI ITEM NO".split(";");
    for (int x=0;x<campos65.length;x++) {
        if (!line.contains(campos65[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_DAFITIOTTCARTAO65";
    achouTipo = true;
    String [] campos66 = "TIPO DE VENDA;BANDEIRA;VALOR CAPTURADO;VALOR LIQUIDO;PLANO DE PARCELAMENTO".split(";");
    for (int x=0;x<campos66.length;x++) {
        if (!line.contains(campos66[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_DETODOSOTTCARTAO66";
    achouTipo = true;
    String [] campos67 = "DATA;DESCRICAO;MOVIMENTACAO;TOTAL BRUTO;TAXAS;SALDO".split(";");
    for (int x=0;x<campos67.length;x++) {
        if (!line.contains(campos67[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_DOM1OTTCARTAO67";
    achouTipo = true;
    String [] campos68 = "FATURA;STATUS;FORMA DE PAGAMENTO;MOEDA;CONTRATO;DATA DE PAGAMENTO;DATA DE REEMBOLSO;VALOR REEMBOLSADO;TAXA EDUZZ".split(";");
    for (int x=0;x<campos68.length;x++) {
        if (!line.contains(campos68[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_EDDUZ1OTTCARTAO68";
    achouTipo = true;
    String [] campos69 = "LOTE FINANCEIRO|PRODUTO;DADOS ADCIONAIS|MODO DE CAPTURA".split(";");
    for (int x=0;x<campos69.length;x++) {
        if (!line.contains(campos69[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_ELAVONOTTCARTAO69";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("FACECARD")) achouTipo = true;
    if (achouTipo) return "CARTAO_FACECARDOTTCARTAO70";
    achouTipo = true;
    String [] campos71 = "EMPRESA;BANDEIRA;VENDA;CANCELAMENTO;PAGTO;RO;BRUTO;OUTRAS DESPESAS;A RECEBER".split(";");
    for (int x=0;x<campos71.length;x++) {
        if (!line.contains(campos71[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_FORTBRASIL1OTTCARTAO71";
    achouTipo = true;
    String [] campos72 = "PAGAMENTOS REALIZADOS;DATA DA TRANSACAO;CODIGO DO CLIENTE;COMPROVANTE;PRODUTO;TIPO DE TRANSACAO;STATUS DA TRANSA".split(";");
    for (int x=0;x<campos72.length;x++) {
        if (!line.contains(campos72[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GERTEC1OTTCARTAO72";
    achouTipo = true;
    String [] campos73 = "COD. ESTABELECIMENTO;CARTOES;DATA DE PAGAMENTO;VALOR BRUTO;VALOR DA TAXA;VALOR".split(";");
    for (int x=0;x<campos73.length;x++) {
        if (!line.contains(campos73[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GETNET1OTTCARTAO73";
    achouTipo = true;
    String [] campos74 = "COD. ESTABELECIMENTO;CARTOES;DATA/HORA DA VENDA;NUMERO DO CARTAO;TOTAL DE PARCELAS;EMISSOR CARTAO".split(";");
    for (int x=0;x<campos74.length;x++) {
        if (!line.contains(campos74[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GETNET2OTTCARTAO74";
    achouTipo = true;
    String [] campos75 = "COD. ESTABELECIMENTO;CARTOES;DATA DA VENDA|QUANTIDADE DE VENDAS;VALOR BRUTO;VALOR DA TAXA E/OU TARIFA;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos75.length;x++) {
        if (!line.contains(campos75[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GETNET3OTTCARTAO75";
    achouTipo = true;
    String [] campos76 = "CODIGO EC CENTRALIZADOR;CODIGO EC;VENCIMENTO;VENCIMENTO ORIGINAL;PRODUTO;LANCAMENTO;PLANO DE VENDA;PARCELA;TOTAL DE PARCELAS;CARTAO;AUTORIZACAO;NUMERO DO CV;TERMINAL;DATA DA VENDA;VALOR ORIGINAL".split(";");
    for (int x=0;x<campos76.length;x++) {
        if (!line.contains(campos76[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GETNET4OTTCARTAO76";
    achouTipo = true;
    String [] campos77 = "CODIGO;PRODUTO;LANCAMENTO;DATA DA VENDA;DATA DA VENDA;LIQUIDO".split(";");
    for (int x=0;x<campos77.length;x++) {
        if (!line.contains(campos77[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GETNET5OTTCARTAO77";
    achouTipo = true;
    String [] campos78 = "COD. DE VENDA|AUTORIZACAO|DATA / HORA|QTD. PARCELAS|LOTE|PAGAMENTO|STATUS PAGAMENTO|NOTA FISCAL|CARTAO|REDE CAPTURA|VALOR BRUTO|VALOR DESCONTADO".split(";");
    for (int x=0;x<campos78.length;x++) {
        if (!line.contains(campos78[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GOODCARD_TICKET_LOG1OTTCARTAO78";
    achouTipo = true;
    String [] campos79 = "ESTABELECIMENTO;DE VENDA;AUTORIZACAO;DATA / HORA;QTD. PARCELAS;LOTE;NOTA FISCAL;CARTAO;CLIENTE;TIPO COMBUST;QTDE LITROS".split(";");
    for (int x=0;x<campos79.length;x++) {
        if (!line.contains(campos79[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GOODCARD_TICKET_LOG2OTTCARTAO79";
    achouTipo = true;
    String [] campos80 = "ESTABELECIMENTO;COD. DE VENDA;AUTORIZACAO;DATA / HORA;QTD. PARCELAS;LOTE;NOTA FISCAL;CARTAO;CLIENTE;REDE CAPTURA;VALOR BRUTO;TAXA ADMINISTRATIVA".split(";");
    for (int x=0;x<campos80.length;x++) {
        if (!line.contains(campos80[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GOODCARD_TICKET_LOG3OTTCARTAO80";
    achouTipo = true;
    String [] campos81 = "ID;DATA E HORA;PDV;BANDEIRA;CARTAO;VALOR;STATUS".split(";");
    for (int x=0;x<campos81.length;x++) {
        if (!line.contains(campos81[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GRANITOBMGCARD1OTTCARTAO81";
    achouTipo = true;
    String [] campos82 = "ID TRANSA;DATA E HORA;TIPO;STATUS;PARCELA;BANDEIRA;VALOR BRUTO;VALOR TAXA;VALOR ANTEC.;DATA PAGAMENTO".split(";");
    for (int x=0;x<campos82.length;x++) {
        if (!line.contains(campos82[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_GRANITOBMGCARD2OTTCARTAO82";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("GREEN")) achouTipo = true;
    if (achouTipo) return "CARTAO_GREENCARDOTTCARTAO83";
    achouTipo = true;
    String [] campos84 = "NOME DO PRODUTO;NOME DO PRODUTOR;DOCUMENTO DO PRODUTOR;DATA DE VENDA;NOME;DOCUMENTO;".split(";");
    for (int x=0;x<campos84.length;x++) {
        if (!line.contains(campos84[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_HOTMART1OTTCARTAO84";
    achouTipo = true;
    String [] campos85 = "DATA DA TRANSACAO;PRODUTOR(A);PRODUTO;VENDA FEITA COMO;VALOR DE COMPRA SEM IMPOSTOS;TARIFA DE PROCESSAMENTO".split(";");
    for (int x=0;x<campos85.length;x++) {
        if (!line.contains(campos85[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_HOTMART2OTTCARTAO85";
    achouTipo = true;
    String [] campos86 = "ID DO PEDIDO;INCENTIVO PROMOCIONAL DO IFOOD;DATA;RESTAURANTE;ID DO RESTAURANTE;TOTAL DO PEDIDO".split(";");
    for (int x=0;x<campos86.length;x++) {
        if (!line.contains(campos86[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_IFOOD_EXCEL1OTTCARTAO86";
    achouTipo = true;
    String [] campos87 = "ID DO PEDIDO;INCENTIVO PROMOCIONAL DO IFOOD;DATA;RESTAURANTE;ID DO RESTAURANTE;TOTAL DO PEDIDO".split(";");
    for (int x=0;x<campos87.length;x++) {
        if (!line.contains(campos87[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_IFOOD_EXCEL1OTTCARTAO87";
    achouTipo = true;
    String [] campos88 = "NOME;INFINITE ID;AUTHORIZATION ID;DATA DA VENDA;STATUS".split(";");
    for (int x=0;x<campos88.length;x++) {
        if (!line.contains(campos88[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_INFINITE1OTTCARTAO88";
    achouTipo = true;
    String [] campos89 = "NOME;AUTHORIZATION ID;DATA DA VENDA;STATUS;VALOR TOTAL;TAXAS (R$);TAXAS (%)".split(";");
    for (int x=0;x<campos89.length;x++) {
        if (!line.contains(campos89[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_INFINITE2OTTCARTAO89";
    achouTipo = true;
    String [] campos90 = "FORMA DE PAGAMENTO|PARCELAS|MOEDA".split(";");
    for (int x=0;x<campos90.length;x++) {
        if (!line.contains(campos90[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_INFINITE3OTTCARTAO90";
    achouTipo = true;
    String [] campos91 = "LOJA|DATA|TOTAL DE VENDAS|BRUTO|TAXAS;VALOR A RECEBER|DATA PAGAMENTO 1".split(";");
    for (int x=0;x<campos91.length;x++) {
        if (!line.contains(campos91[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_IPIRANGAOTTCARTAO91";
    achouTipo = true;
    String [] campos92 = "DATA/HORA|BANDEIRA|TIPO|NUM. PARCELAS|VALOR BRUTO|VALOR LIQUIDO|STATUS".split(";");
    for (int x=0;x<campos92.length;x++) {
        if (!line.contains(campos92[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_LINXPAY1OTTCARTAO92";
    achouTipo = true;
    String [] campos93 = "DATA DA TRANSACAO;DATA DO PEDIDO;ID DO PEDIDO MAGAZINE LUIZA;ID DO PEDIDO SELLER;ID DA TRANSACAO;NUMERO DA NOTA FISCAL;NOME DO CLIENTE;METODO DE PAGAMENTO;PARCELA ATUAL;TOTAL DE PARCELAS;VALOR LIQUI".split(";");
    for (int x=0;x<campos93.length;x++) {
        if (!line.contains(campos93[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MAGALU2OTTCARTAO93";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("MASTERFARMA")) achouTipo = true;
    if (achouTipo) return "CARTAO_MASTERFARMAOTTCARTAO94";
    achouTipo = true;
    String [] campos95 = "DATA DE PAGAMENTO;TIPO DE OPERACAO;NUMERO DO MOVIMENTO;OPERACAO RELACIONADA;VALOR".split(";");
    for (int x=0;x<campos95.length;x++) {
        if (!line.contains(campos95[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE1OTTCARTAO95";
    achouTipo = true;
    String [] campos96 = "SOURCE_ID;PAYMENT_METHOD_TYPE;PAYMENT_METHOD;TRANSACTION_TYPE;TRANSACTION_AMOUNT;SHIPPING_FEE_AMOUNT".split(";");
    for (int x=0;x<campos96.length;x++) {
        if (!line.contains(campos96[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE2OTTCARTAO96";
    achouTipo = true;
    String [] campos97 = "SOURCE_ID;PAYMENT_METHOD_TYPE;PAYMENT_METHOD;TRANSACTION_TYPE;TRANSACTION_AMOUNT".split(";");
    for (int x=0;x<campos97.length;x++) {
        if (!line.contains(campos97[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE3OTTCARTAO97";
    achouTipo = true;
    String [] campos98 = "NUMERO DA MOVIMENTACAO;DETALHE;DATA DO MOVIMENTO;VALOR DA TARIFA;TIPO DE OPERACAO;OPERACAO RELACIONADA".split(";");
    for (int x=0;x<campos98.length;x++) {
        if (!line.contains(campos98[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE4OTTCARTAO98";
    achouTipo = true;
    String [] campos99 = "FECHA DE COMPRA;FECHA DE ACREDIT;FECHA DE LIBERA;DEL DINERO;NOMBRE DE LA CONTRAPARTE".split(";");
    for (int x=0;x<campos99.length;x++) {
        if (!line.contains(campos99[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE5OTTCARTAO99";
    achouTipo = true;
    String [] campos100 = "CODIGO DE REFERENCIA;ID DA OPERACAO NO MERCADO PAGO;CODIGO DA CONTA DO VENDEDOR;TIPO DE MEIO DE PAGAMENTO;MEIO DE PAGAMENTO;PAIS DE ORIGEM DA CONTA DO MERCADO PAGO;TIPO DE OPERACAO;CANAL DE VENDA;PLAT".split(";");
    for (int x=0;x<campos100.length;x++) {
        if (!line.contains(campos100[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOLIVRE6OTTCARTAO100";
    achouTipo = true;
    String [] campos101 = "FECHA DE COMPRA;FECHA DE ACREDITACION;FECHA DE LIBERACION DEL DINERO".split(";");
    for (int x=0;x<campos101.length;x++) {
        if (!line.contains(campos101[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOPAGO7OTTCARTAO101";
    achouTipo = true;
    String [] campos102 = "DATA DA COMPRA;NOME DA CONTRAPARTE;APELIDO;PRODUTO;STATUS;DETALHE;VALOR DO PRODUTO".split(";");
    for (int x=0;x<campos102.length;x++) {
        if (!line.contains(campos102[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOPAGO8OTTCARTAO102";
    achouTipo = true;
    String [] campos103 = "DATA DE LIBERA;TIPO DE REGISTRO;DESCRI;VALOR RECEBIDO POR COMPRAS COM SPLIT DE PAGAMENTO".split(";");
    for (int x=0;x<campos103.length;x++) {
        if (!line.contains(campos103[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MERCADOPAGO9OTTCARTAO103";
    achouTipo = true;
    String [] campos104 = "ID|DESCRICAO|PARCELA;VALOR LANCAMENTO;VALOR BRUTO;TAXAS|DATA;TIPO DO LANCAMENTO".split(";");
    for (int x=0;x<campos104.length;x++) {
        if (!line.contains(campos104[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MOIP1OTTCARTAO104";
    achouTipo = true;
    String [] campos105 = "DATA INICIAL;ID PROPRIO|NOME DO COMPRADOR;VALOR TOTAL;TARIFA|STATUS".split(";");
    for (int x=0;x<campos105.length;x++) {
        if (!line.contains(campos105[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MOIP2OTTCARTAO105";
    achouTipo = true;
    String [] campos106 = "ID;NOME;CNPJ;DATA/HORA;CARTAO;SITEF;ADQUIRENTE".split(";");
    for (int x=0;x<campos106.length;x++) {
        if (!line.contains(campos106[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MOOZ1OTTCARTAO106";
    achouTipo = true;
    String [] campos107 = "GRUPO: MULTVALE;REDE: MULTVALE;MOVIMENTOS EM LOJA;AUTORIZ;LOJA".split(";");
    for (int x=0;x<campos107.length;x++) {
        if (!line.contains(campos107[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_MULTVALEOTTCARTAO107";
    achouTipo = true;
    String [] campos108 = "NUMERO DO PEDIDO;E-MAIL;DATA;STATUS DO PAGAMENTO;VALOR DO FRETE;NOME DO COMPRADOR;FORMA DE PAGAMENTO;".split(";");
    for (int x=0;x<campos108.length;x++) {
        if (!line.contains(campos108[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_NUVEMSHOP1OTTCARTAO108";
    achouTipo = true;
    String [] campos109 = "CLIENTE NOME;CLIENTE EMAIL;CLIENTE CPF/CNPJ;CLIENTE TELEFONE;VALOR;VALOR NUMERICO;TAXA;VALOR NUMERICO DA TARIFA;INFORMACAO DO PAGAMENTO;COMENTARIO DA COBRANCA;COBRANCA CRIADA EM;IDENTIFICADOR".split(";");
    for (int x=0;x<campos109.length;x++) {
        if (!line.contains(campos109[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_OPENPIXOTTCARTAO109";
    achouTipo = true;
    String [] campos110 = "DATA;OPERACAO;METODO DE PAGAMENTO;ENTRADA;SAIDA;TAXA TOTAL DA OPERACAO;ENTRADA BRUTA;SAIDA BRUTA".split(";");
    for (int x=0;x<campos110.length;x++) {
        if (!line.contains(campos110[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGARME1OTTCARTAO110";
    achouTipo = true;
    String [] campos111 = "STATUS;ID;DATA;NOME;FORMA DE PAGAMENTO;MERO DO CART;DOCUMENTO;TELEFONE;RESPOSTA DA OPERADORA".split(";");
    for (int x=0;x<campos111.length;x++) {
        if (!line.contains(campos111[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGARME2OTTCARTAO111";
    achouTipo = true;
    String [] campos112 = "DATA DA TRANSACAO;OPERACAO;IDENTIFICACAO DA MAQUININHA;COD. NSU;COD. VENDA;NOME CLIENTE".split(";");
    for (int x=0;x<campos112.length;x++) {
        if (!line.contains(campos112[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGBANK1OTTCARTAO112";
    achouTipo = true;
    String [] campos113 = "IDPLATAFORMA;CONSUMIDOR;DATA DA VENDA;DATA DO VENCIMENTO;DATA DO PAGAMENTO;DATA SALDO DISPONIVEL;VALOR BRUTO;STATUS".split(";");
    for (int x=0;x<campos113.length;x++) {
        if (!line.contains(campos113[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGHIPER1OTTCARTAO113";
    achouTipo = true;
    String [] campos114 = "TRANSACAO_ID;CLIENTE_NOME;CLIENTE_EMAIL;DEBITO_CREDITO;TIPO_TRANSACAO;STATUS;TIPO_PAGAMENTO".split(";");
    for (int x=0;x<campos114.length;x++) {
        if (!line.contains(campos114[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSEGURO1OTTCARTAO114";
    achouTipo = true;
    String [] campos115 = "DATA_TRANSACAO VALOR_BRUTO  VALOR_TAXA  BANDEIRA_CARTAO_CREDITO DEBITO_CREDITO".split(";");
    for (int x=0;x<campos115.length;x++) {
        if (!line.contains(campos115[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSEGURO1OTTCARTAO115";
    achouTipo = true;
    String [] campos116 = "NUMERO DO CARTAO;ID DA TRANSACAO;DATA DA TRANSACAO;IDENTIFICACAO;OPERACAO;BANDEIRA;FORMA DE PAGAMENTO;VALOR;CODIGO DA VENDA".split(";");
    for (int x=0;x<campos116.length;x++) {
        if (!line.contains(campos116[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSEGURO2OTTCARTAO116";
    achouTipo = true;
    String [] campos117 = "NUMERO DO CARTAO;ID DA TRANSACAO;DATA DA TRANSACAO;OPERACAO;BANDEIRA;FORMA DE P;IDENTIFICACAO DA MAQUININHA;VALOR BRUTO;VALOR LIQUIDO;VALOR TAXA;COD. NSU".split(";");
    for (int x=0;x<campos117.length;x++) {
        if (!line.contains(campos117[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSEGURO3OTTCARTAO117";
    achouTipo = true;
    String [] campos118 = "DATA DA VENDA|BANDEIRA|PRODUTO|VALOR BRUTO (R$)|TAXA ADMINISTRATIVA (%)|VALOR DA TAXA (R$)|VALOR LIQUIDO (R$)".split(";");
    for (int x=0;x<campos118.length;x++) {
        if (!line.contains(campos118[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSEGURO4OTTCARTAO118";
    achouTipo = true;
    String [] campos119 = "TRANSACTION ID;MERCHANT REFERENCE;AMOUNT;PROCESSING FEE;CHARGEBACK FEE;UPDATE DATE".split(";");
    for (int x=0;x<campos119.length;x++) {
        if (!line.contains(campos119[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGSMILEOTTCARTAO119";
    achouTipo = true;
    String [] campos120 = "CODPAGUEVELOZ;NSUEMISSOR;NSUCLIENTE;EQUIPAMENTO;PAGANTE;VL.RETORNO".split(";");
    for (int x=0;x<campos120.length;x++) {
        if (!line.contains(campos120[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAGUEVELOZOTTCARTAO120";
    achouTipo = true;
    String [] campos121 = "DATE;STATUS;EXTERNAL ID;TRANSACTION ID;END TO END ID;TOTAL AMOUNT;E-MAIL;CUSTOMER NAME;TAX ID".split(";");
    for (int x=0;x<campos121.length;x++) {
        if (!line.contains(campos121[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYDOISOTTCARTAO121";
    achouTipo = true;
    String [] campos122 = "NR. AUTORIZACAO;ID UNICO ERP;ID UNICO EQUALS;ADQUIRENTE;TIPO;PRODUTO;ADQ. PRODUTO;NR. TERMINAL;LOTE;ORIGEM DO CARTAO;NSU;LOTE UNICO;NR. REFERENCIA/PEDIDO;NR. FILIACAO".split(";");
    for (int x=0;x<campos122.length;x++) {
        if (!line.contains(campos122[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYLY1OTTCARTAO122";
    achouTipo = true;
    String [] campos123 = "ADQUIRENTE;TIPO;PRODUTO;BANDEIRA;MEIO DE CAPTURA;DATA;PARCELA;QTD. VENDAS;VALOR BRUTO".split(";");
    for (int x=0;x<campos123.length;x++) {
        if (!line.contains(campos123[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYLY2OTTCARTAO123";
    achouTipo = true;
    String [] campos124 = "TIPO;DISCRIMINADOR;STATUS;MOEDA;DATA DA TRANSA;DATA DO VENCIMENTO;DATA DO PROCESSAMENTO;CPF/CNPJ COMPRADOR;NOME COMPRADOR;E-MAIL DESTINAT;BANCO".split(";");
    for (int x=0;x<campos124.length;x++) {
        if (!line.contains(campos124[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYMEEOTTCARTAO124";
    achouTipo = true;
    String [] campos125 = "DATA;HORA;FUSO HORARIO;NOME;TIPO;STATUS;MOEDA".split(";");
    for (int x=0;x<campos125.length;x++) {
        if (!line.contains(campos125[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYPAL1OTTCARTAO125";
    achouTipo = true;
    String [] campos126 = "DATA|PAGAMENTOS RECEBIDOS|VALOR RECEBIDO|TARIFAS|REEMBOLSOS ENVIADOS|VALOR REEMBOLSADO".split(";");
    for (int x=0;x<campos126.length;x++) {
        if (!line.contains(campos126[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYPAL2OTTCARTAO126";
    achouTipo = true;
    String [] campos127 = "ID DO PAYPAL:".split(";");
    for (int x=0;x<campos127.length;x++) {
        if (!line.contains(campos127[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYPAL3OTTCARTAO127";
    achouTipo = true;
    String [] campos128 = "DATA;DESCRICAO;STATUS;MOEDA;BRUTO;TARIFA;LIQUIDO".split(";");
    for (int x=0;x<campos128.length;x++) {
        if (!line.contains(campos128[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PAYPAL4OTTCARTAO128";
    achouTipo = true;
    String [] campos129 = "CONSUMIDOR;ID;REFERENCE ID;TIPO;DATA;STATUS;TOTAL;TAXA;A RECEBER;OPERADOR".split(";");
    for (int x=0;x<campos129.length;x++) {
        if (!line.contains(campos129[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PICPAY1OTTCARTAO129";
    achouTipo = true;
    String [] campos130 = "COMPRADOR|DATA|ID|UNIDADE|STATUS|VALOR|REFERENCIA".split(";");
    for (int x=0;x<campos130.length;x++) {
        if (!line.contains(campos130[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PICPAY2OTTCARTAO130";
    achouTipo = true;
    String [] campos131 = "TITULO;DESCRICAO;TIPO MOVIMENTO;VALOR;TIPO TRANSACAO;STATUS;DATA".split(";");
    for (int x=0;x<campos131.length;x++) {
        if (!line.contains(campos131[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PICPAY3OTTCARTAO131";
    achouTipo = true;
    String [] campos132 = "DATE E HORA DA VENDA;SOLUCAO DE CAPTURA;CUSTO FIXO;STATUS;NSU;TID;PAGADOR PICPAY".split(";");
    for (int x=0;x<campos132.length;x++) {
        if (!line.contains(campos132[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PICPAY4OTTCARTAO132";
    achouTipo = true;
    String [] campos133 = "DATA|TIPO PRODUTO|ESTABELECIMENTO|CNPJ|TIPO LANCAMENTO".split(";");
    for (int x=0;x<campos133.length;x++) {
        if (!line.contains(campos133[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_POLICARDOTTCARTAO133";
    achouTipo = true;
    String [] campos134 = "EMPRESA|NUMERO|RAZAO SOCIAL|CNPJ|DT.REPASSE;PRODUTO|VL.BRUTO".split(";");
    for (int x=0;x<campos134.length;x++) {
        if (!line.contains(campos134[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_POLICARDOTTCARTAO134";
    achouTipo = true;
    String [] campos135 = "EMPRESA|NUMERO|RAZAO SOCIAL|CNPJ|DT.REPASSE;PRODUTO|MEIO DE CAPTURA".split(";");
    for (int x=0;x<campos135.length;x++) {
        if (!line.contains(campos135[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_POLICARDOTTCARTAO135";
    achouTipo = true;
    String [] campos136 = "DATA TRANSACAO;PRODUTO;ESTABELECIMENTO;CNPJ;NOME LANCAMENTO;DATA REPASSE;EMPRESA ORIGEM;TERMINAL".split(";");
    for (int x=0;x<campos136.length;x++) {
        if (!line.contains(campos136[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_POLICARDOTTCARTAO136";
    achouTipo = true;
    String [] campos137 = "PEDIDO|DATA;MODULO;IDENTIFICACAO;CLIENTE|ORIGEM;PAGTO;VALOR".split(";");
    for (int x=0;x<campos137.length;x++) {
        if (!line.contains(campos137[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PRATOOTTCARTAO137";
    achouTipo = true;
    String [] campos138 = "CARTAO PRE-DATADO - RELATORIO DE VENDAS".split(";");
    for (int x=0;x<campos138.length;x++) {
        if (!line.contains(campos138[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PREDATADO1OTTCARTAO138";
    achouTipo = true;
    String [] campos139 = "TERMINAL;COD.ESTAB.;NSU RESP;CARTAO;TIPO TRANS.;BANDEIRA".split(";");
    for (int x=0;x<campos139.length;x++) {
        if (!line.contains(campos139[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PUNTO1OTTCARTAO139";
    achouTipo = true;
    String [] campos140 = "N ESTABELECIMENTO;CNPJ;DATA DA VENDA;HORA DA VENDA;VALOR DA VENDA;VALOR DO PAGAMENTO;DESCONTO DA TAXA;BANDEIRA;FORMA DE PAGAMENTO;DATA DO CANCELAMENTO".split(";");
    for (int x=0;x<campos140.length;x++) {
        if (!line.contains(campos140[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_PUNTO2OTTCARTAO140";
    achouTipo = true;
    String [] campos141 = "DATA DA VENDA;HORA DA VENDA;STATUS DA VENDA;VALOR DA VENDA ORIGINAL;VALOR DA VENDA ATUALIZADO;MODALIDADE;TIPO;NUMERO DE PARCELAS;BANDEIRA;TAXA MDR;VALOR MDR;TAXA DE ANTECIPACAO FLEX".split(";");
    for (int x=0;x<campos141.length;x++) {
        if (!line.contains(campos141[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD0OTTCARTAO141";
    achouTipo = true;
    String [] campos142 = "DATA DA VENDA;HORA DA VENDA;VALOR DA VENDA ORIGINAL;VALOR DA VENDA ATUALIZADO;MODALIDADE;BANDEIRA;TAXA MDR;VALOR TAXA DE ANTENCIPACAO FLEX".split(";");
    for (int x=0;x<campos142.length;x++) {
        if (!line.contains(campos142[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD1OTTCARTAO142";
    achouTipo = true;
    String [] campos143 = "DATA DA VENDA|HORA DA VENDA|VALOR DA VENDA ORIGINAL;MERO DE PARCELAS;MODALIDADE;TIPO;BANDEIRA;TAXA MDR;TAXAS DESCONTADAS;FLEX;VALOR LIQUIDO;CUPOM FISCAL;NOTA FISCAL;MERO DO CARTAO".split(";");
    for (int x=0;x<campos143.length;x++) {
        if (!line.contains(campos143[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD10OTTCARTAO143";
    achouTipo = true;
    String [] campos144 = "DATA DA VENDA;VALOR DA VENDA;MODALIDADE;BANDEIRA;TAXA MDR;VALOR DESCONTADO".split(";");
    for (int x=0;x<campos144.length;x++) {
        if (!line.contains(campos144[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD11OTTCARTAO144";
    achouTipo = true;
    String [] campos145 = "ESTABELECIMENTO;DATA APRESENTACAO;DATA VENCIMENTO;NUMERO RESUMO;PRAZO RECEBIMENTO;BANDEIRA;QTD TRANSACOES;VALOR APRESENTADO".split(";");
    for (int x=0;x<campos145.length;x++) {
        if (!line.contains(campos145[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD2OTTCARTAO145";
    achouTipo = true;
    String [] campos146 = "DATA DA VENDA;HORA DA VENDA;STATUS DA VENDA;VALOR DA VENDA ORIGINAL;VALOR DA VENDA ATUALIZADO;MODALIDADE;BANDEIRA;TAXA MDR;VALOR TAXA DE ANTENCIPACAO FLEX".split(";");
    for (int x=0;x<campos146.length;x++) {
        if (!line.contains(campos146[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD3OTTCARTAO146";
    achouTipo = true;
    String [] campos147 = "DATA DA VENDA;HORA DA VENDA;STATUS DA VENDA;VALOR DA VENDA ORIGINAL;VALOR DA VENDA ATUALIZADO;MODALIDADE;BANDEIRA;VALOR MDR;CNPJ".split(";");
    for (int x=0;x<campos147.length;x++) {
        if (!line.contains(campos147[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD4OTTCARTAO147";
    achouTipo = true;
    String [] campos148 = "DATA DA VENDA;HORA DA VENDA;VALOR DA VENDA ORIGINAL;VALOR DA VENDA ATUALIZADO;MODALIDADE;BANDEIRA;VALOR MDR;CNPJ".split(";");
    for (int x=0;x<campos148.length;x++) {
        if (!line.contains(campos148[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD5OTTCARTAO148";
    achouTipo = true;
    String [] campos149 = "DATA DA VENDA;HORA DA VENDA;VALOR DA VENDA;NUMERO DE PARCELAS;MODALIDADE;TIPO;BANDEIRA".split(";");
    for (int x=0;x<campos149.length;x++) {
        if (!line.contains(campos149[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD6OTTCARTAO149";
    achouTipo = true;
    String [] campos150 = "DATA DO RECEBIMENTO;DATA ORIGINAL DA VENDA;VALOR BRUTO DA PARCELA ORIGINAL|VALOR BRUTO DA PARCELA ATUALIZAD|TAXA MDR;TID;TOKENIZADA;IATA".split(";");
    for (int x=0;x<campos150.length;x++) {
        if (!line.contains(campos150[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD7OTTCARTAO150";
    achouTipo = true;
    String [] campos151 = "DATA DA VENDA;VALOR DA VENDA ORIGINAL;MODALIDADE;BANDEIRA;TAXA MDR;VALOR TOTAL DAS TAXAS DESCONTADAS (MDR+FLEX)".split(";");
    for (int x=0;x<campos151.length;x++) {
        if (!line.contains(campos151[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDECARD8OTTCARTAO151";
    achouTipo = true;
    String [] campos152 = "DATA DA VENDA|TIPO|VALOR BRUTO|VALOR LIQUIDO|BANDEIRA|NSU|STATUS".split(";");
    for (int x=0;x<campos152.length;x++) {
        if (!line.contains(campos152[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_REDEFLEX1OTTCARTAO152";
    achouTipo = true;
    String [] campos153 = "NUMERO DO CARTAO;MODALIDADE;VALOR BRUTO DA VENDA|VALOR LIQUIDO DA VENDA;PARCELA;AGENDA DE VENDAS".split(";");
    for (int x=0;x<campos153.length;x++) {
        if (!line.contains(campos153[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA_AGE_VENDASOTTCARTAO153";
    achouTipo = true;
    String [] campos154 = "NUMERO DO CARTAO;MODALIDADE;VALOR BRUTO DA VENDA|VALOR LIQUIDO DA VENDA;PARCELA;RECEBIVEIS DE VENDAS".split(";");
    for (int x=0;x<campos154.length;x++) {
        if (!line.contains(campos154[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA_REC_VENDASOTTCARTAO154";
    achouTipo = true;
    String [] campos155 = "NUMERO DO CARTAO;MODALIDADE;VALOR BRUTO;TIPO DE CAPTURA;GESTAO DE VENDAS".split(";");
    for (int x=0;x<campos155.length;x++) {
        if (!line.contains(campos155[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA_REC_VENDASOTTCARTAO155";
    achouTipo = true;
    String [] campos156 = "DATA DEVENDA;VENDAS;VALORBRUTO".split(";");
    for (int x=0;x<campos156.length;x++) {
        if (!line.contains(campos156[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA1OTTCARTAO156";
    achouTipo = true;
    String [] campos157 = "DATA DE VENDA;VENDAS;VALOR BRUTO;VALOR TAXA/ADMINISTRA;QUIDO".split(";");
    for (int x=0;x<campos157.length;x++) {
        if (!line.contains(campos157[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA1OTTCARTAO157";
    achouTipo = true;
    String [] campos158 = "DATA DEVENDA|EC|BANDEIRA|PRODUTO|TIPO DECAPTURA".split(";");
    for (int x=0;x<campos158.length;x++) {
        if (!line.contains(campos158[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRA2OTTCARTAO158";
    achouTipo = true;
    String [] campos159 = "NUMERO SEQUENCIAL UNICO|DATA|CODIGO DE AUTORIZACAO;TIPO DE CAPTURA|MODALIDADE|BANDEIRA".split(";");
    for (int x=0;x<campos159.length;x++) {
        if (!line.contains(campos159[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SAFRAPAY_4OTTCARTAO159";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("SEM PARAR")) achouTipo = true;
    if (achouTipo) return "CARTAO_SEMPARAROTTCARTAO160";
    achouTipo = true;
    String [] campos161 = "DATA|HOMOLOGADO".split(";");
    for (int x=0;x<campos161.length;x++) {
        if (!line.contains(campos161[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SENFFOTTCARTAO161";
    achouTipo = true;
    String [] campos162 = "CARTAO;CLIENTE;LOJA;DATA;PARCELAS".split(";");
    for (int x=0;x<campos162.length;x++) {
        if (!line.contains(campos162[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SENFFOTTCARTAO162";
    achouTipo = true;
    String [] campos163 = "NUMERO DA SEQUENCIA;ID DO PEDIDO;ID DO REEMBOLSO;NOME DE USUARIO (COMPRADOR);DATA DE CRIACAO DO PEDIDO;METODO DE PAGAMENTO DO COMPRADOR;DATA DE CONCLUSAO DO PAGAMENTO;PRECO ORIGINAL DO PRODUTO".split(";");
    for (int x=0;x<campos163.length;x++) {
        if (!line.contains(campos163[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SHOPEE1OTTCARTAO163";
    achouTipo = true;
    String [] campos164 = "BANDEIRA;DATA VENDA;VALOR BRUTO;ULTIMO STATUS;PARCELAS PAGAS;DO CARTAO".split(";");
    for (int x=0;x<campos164.length;x++) {
        if (!line.contains(campos164[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICOOB1OTTCARTAO164";
    achouTipo = true;
    String [] campos165 = "CODIGO AUTORIZACAO;DATA TRANSACAO;HORA TRANSACAO;DESCRICAO PRODUTO TRANSACAO;DESCRICAO BANDEIRA;DESCRICAO TIPO CARTAO;VALOR BRUTO PARCELA;VALOR DESCONTO PARCELA".split(";");
    for (int x=0;x<campos165.length;x++) {
        if (!line.contains(campos165[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICOOBCARDOTTCARTAO165";
    achouTipo = true;
    String [] campos166 = "POSTAGEM;DATA DE CREDITO;ESTABELECIMENTO;PAGAMENTO;RESUMO DE VENDAS;COMPROVANTE;TERMINAL;STATUS;DATA TRANS;TIPO TRANS;BANDEIRA;VALOR;TIPO DE CARTAO;PAGAMENTO BRUTO;PARCELADO;".split(";");
    for (int x=0;x<campos166.length;x++) {
        if (!line.contains(campos166[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI1OTTCARTAO166";
    achouTipo = true;
    String [] campos167 = "DATA DA VENDA;COD. DE AUTORIZACAO;PRODUTO;PARCELAS;BANDEIRA;CANAL;VALOR BRUTO;VALOR LIQUIDO;STATUS;NUMERO DO TERMINAL;COMPROVANTE DA VENDA;COD. DO PEDIDO;VALOR DA TAXA;NUMERO DO ESTABELECIMENTO".split(";");
    for (int x=0;x<campos167.length;x++) {
        if (!line.contains(campos167[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI2OTTCARTAO167";
    achouTipo = true;
    String [] campos168 = "DATA DA VENDA;CODIGO DE ESTABELECIMENTO;TIPO DE CARTAO;CARTAO PRE PAGO;DATA PREVISTA DE PAGAMENTO DA VENDA".split(";");
    for (int x=0;x<campos168.length;x++) {
        if (!line.contains(campos168[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI3OTTCARTAO168";
    achouTipo = true;
    String [] campos169 = "DATA DE PAGAMENTO|CODIGO DE PAGAMENTO|TIPO DE PAGAMENTO".split(";");
    for (int x=0;x<campos169.length;x++) {
        if (!line.contains(campos169[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI4OTTCARTAO169";
    achouTipo = true;
    String [] campos170 = "DATA DA VENDA;HORA DA VENDA;CODIGO DE AUTORIZACAO;CODIGO DO ESTABELECIMENTO;COMPROVANTE DE VENDA;CODIGO DO PEDIDO;CANAL;NUMERO DO TERMINAL;PRODUTO;PARCELAS;TIPO DE CARTAO;VALOR LIQUIDO DA PARCELA/TRAN".split(";");
    for (int x=0;x<campos170.length;x++) {
        if (!line.contains(campos170[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI5OTTCARTAO170";
    achouTipo = true;
    String [] campos171 = "DATA DA VENDA;COD. DE AUTORIZACAO;PRODUTO;PARCELAS;BANDEIRA;CANAL;VALOR BRUTO|VALOR DA TAXA|VALOR LIQUIDO;STATUS;NUMERO DO TERMINAL;COMPROVANTE DA VENDA;COD. DO PEDIDO;NUMERO DO ESTABELECIMENTO".split(";");
    for (int x=0;x<campos171.length;x++) {
        if (!line.contains(campos171[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI6OTTCARTAO171";
    achouTipo = true;
    String [] campos172 = "DATA DA VENDA;STATUS;MERO DO CART;PRODUTO;PARCELA;TERMINAL LOGICO;DATA DO CR;VALOR TRANSA;VALOR DA PARCELA;QUIDO".split(";");
    for (int x=0;x<campos172.length;x++) {
        if (!line.contains(campos172[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SICREDI7OTTCARTAO172";
    achouTipo = true;
    achouTipo = false;
    if (achouTipo) return "CARTAO_SIPAGOTTCARTAO173";
    achouTipo = true;
    String [] campos174 = "ESTABELECIMENTO;DATA DO PAGAMENTO;BANDEIRA;;PRODUTO;;PLANO DE VENDA;;QUANTIDADE;VALOR BRUTO;DESCONTO;QUIDO".split(";");
    for (int x=0;x<campos174.length;x++) {
        if (!line.contains(campos174[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG08OTTCARTAO174";
    achouTipo = true;
    String [] campos175 = "DATA DA TRANSA;DIGO DO CLIENTE;PRODUTO;VALOR PLANO;DESC.;CODIGO ECI;TERMINAL;TIPO DE CAPTURA".split(";");
    for (int x=0;x<campos175.length;x++) {
        if (!line.contains(campos175[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG1OTTCARTAO175";
    achouTipo = true;
    String [] campos176 = "ESTABELECIMENTO;DATA DO PAGAMENTO;BANDEIRA;PRODUTO;QUANTIDADE;VALOR BRUTO;DESCONTO;QUIDO".split(";");
    for (int x=0;x<campos176.length;x++) {
        if (!line.contains(campos176[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG10OTTCARTAO176";
    achouTipo = true;
    String [] campos177 = "CLIENTE;RESUMO DE VENDAS;PRODUTO;PARCELA;PLANO;COMPROVANTES;VALOR BRUTO;CASHBACK AMOUNT;REVERSE INTERCHANGE".split(";");
    for (int x=0;x<campos177.length;x++) {
        if (!line.contains(campos177[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG2OTTCARTAO177";
    achouTipo = true;
    String [] campos178 = "DATA DA TRANSACAO;N DA TRANSACAO;ID VENDA;BANDEIRA;NUMERO DA CONTA CORRENTE;N AUTORIZACAO".split(";");
    for (int x=0;x<campos178.length;x++) {
        if (!line.contains(campos178[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG4OTTCARTAO178";
    achouTipo = true;
    String [] campos179 = "DATA DA VENDA;STATUS;BANDEIRA;PRODUTO;VENDA;TERMINAL LOGICO;PARCELA;VALOR DA PARCELA".split(";");
    for (int x=0;x<campos179.length;x++) {
        if (!line.contains(campos179[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG5OTTCARTAO179";
    achouTipo = true;
    String [] campos180 = "DATA DAS TRANSA;BANDEIRA;PRODUTO;PLANO;VALOR BRUTO;DESCONTO;QUANTIDADES".split(";");
    for (int x=0;x<campos180.length;x++) {
        if (!line.contains(campos180[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG6OTTCARTAO180";
    achouTipo = true;
    String [] campos181 = "DO ESTABELECIMENTO;DATA DA TRANSA;DA TRANSA;CV;BANDEIRA;PRODUTO;PLANO DE VENDA;PARCELA;TOTAL DE PARCELA".split(";");
    for (int x=0;x<campos181.length;x++) {
        if (!line.contains(campos181[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG7OTTCARTAO181";
    achouTipo = true;
    String [] campos182 = "ESTABELECIMENTO;DATA DA TRANSA;BANDEIRA;FORMA DE PAGAMENTO;PLANO DE VENDA;PARCELA;TOTAL DE PARCELA;TERMINAL;TIPO CAPTURA;INDICADOR DE CANCELAMENTO DA VENDA;RESUMO DA VENDA;DATA PREVISTA;ORDEM DE PA".split(";");
    for (int x=0;x<campos182.length;x++) {
        if (!line.contains(campos182[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SIPAG9OTTCARTAO182";
    achouTipo = true;
    String [] campos183 = "ESTABELECIMENTO;ASSOCIADO;FORMA DE CAPTURA;NSU;PDV;DATA DE REPASSE;VALOR DA VENDA;VALOR DA COMISS;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos183.length;x++) {
        if (!line.contains(campos183[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SMCCARDOTTCARTAO183";
    achouTipo = true;
    String [] campos184 = "CNPJ;RAZAO SOCIAL;DATA DO PROCESSAMENTO;DATA DA TRANS;REDE CAPTURA;DESCRICAO;VALOR BRUTO".split(";");
    for (int x=0;x<campos184.length;x++) {
        if (!line.contains(campos184[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SODEXO1OTTCARTAO184";
    achouTipo = true;
    String [] campos185 = "NRO TRANSA;DATA LANCAMENTO;CIDADE;UF;PLACA;COMBUST;LITROS;VALOR LITRO;NRO TERMINAL;NSU-O".split(";");
    for (int x=0;x<campos185.length;x++) {
        if (!line.contains(campos185[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SODEXO2OTTCARTAO185";
    achouTipo = true;
    String [] campos186 = "AMOUNT;BALANCE;CREATED;DESCRIPTION;EXTERNALID;FEE;ID;RECEIVERID;SENDERID;SOURCE;TAGS".split(";");
    for (int x=0;x<campos186.length;x++) {
        if (!line.contains(campos186[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_STARKBANKOTTCARTAO186";
    achouTipo = true;
    String [] campos187 = "STATUS|DATA E HORA;DOC;MAQUINA;MEIO DE PGTO;BANDEIRA|VALOR TOTAL".split(";");
    for (int x=0;x<campos187.length;x++) {
        if (!line.contains(campos187[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_STELOOTTCARTAO187";
    achouTipo = true;
    String [] campos188 = "DOCUMENTO;NOME FANTASIA;CATEGORIA;DATA DE VENCIMENTO;N DA PARCELA;QTD DE PARCELAS;DESCONTO DE MDR;STONECODE;HORA DA VENDA;TIPO;BANDEIRA;STONE ID;N CARTAO;VALOR BRUTO;VALOR LIQUIDO;DATA DO ULTIMO".split(";");
    for (int x=0;x<campos188.length;x++) {
        if (!line.contains(campos188[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_STONE1OTTCARTAO188";
    achouTipo = true;
    String [] campos189 = "HORA DA VENDA;TIPO;BANDEIRA;MEIO DE CAPTURA;STONE ID".split(";");
    for (int x=0;x<campos189.length;x++) {
        if (!line.contains(campos189[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_STONE2OTTCARTAO189";
    achouTipo = true;
    String [] campos190 = "STONECODE;DOCUMENTO;NOME FANTASIA;CATEGORIA;VENDA;VCTO;STONE ID;BANDEIRA;DESCONTO;CHAVE EXTERNA".split(";");
    for (int x=0;x<campos190.length;x++) {
        if (!line.contains(campos190[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_STONE3OTTCARTAO190";
    achouTipo = true;
    String [] campos191 = "E-MAIL;TIPO DE CARTAO;VALOR TOTAL;TAXA;DEPOSITO;MODO DE ENTRADA".split(";");
    for (int x=0;x<campos191.length;x++) {
        if (!line.contains(campos191[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_SUMUP1OTTCARTAO191";
    achouTipo = true;
    String [] campos192 = "DATAAUTORIZACAO;NUMEROCARTAO;NOME;DOCUMENTO;CNPJ;RAZAOSOCIAL;VALORMOEDALOCAL".split(";");
    for (int x=0;x<campos192.length;x++) {
        if (!line.contains(campos192[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TICKET1OTTCARTAO192";
    achouTipo = true;
    String [] campos193 = "DATA DA TRANSACAO;PRODUTO;VL TRANSACAO;CNPJ".split(";");
    for (int x=0;x<campos193.length;x++) {
        if (!line.contains(campos193[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TICKET2OTTCARTAO193";
    achouTipo = true;
    String [] campos194 = "NUMERO;DATA CORTE;DATA CRED/DEB;COD. ESTABELECIMENTO;DATA TRANSACAO".split(";");
    for (int x=0;x<campos194.length;x++) {
        if (!line.contains(campos194[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TICKET3OTTCARTAO194";
    achouTipo = true;
    String [] campos195 = "DATA DE VENDA;QUANTIDADE;MODALIDADE;BANDEIRA;VALOR BRUTO;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos195.length;x++) {
        if (!line.contains(campos195[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TKSOTTCARTAO195";
    achouTipo = true;
    String [] campos196 = "DATA;OPERA;ID DA OPERA;TODO DE PAGAMENTO;ENTRADA;TAXA TOTAL DA OPERA".split(";");
    for (int x=0;x<campos196.length;x++) {
        if (!line.contains(campos196[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TON1OTTCARTAO196";
    achouTipo = true;
    String [] campos197 = "DATA;OPERA;ID DA OPERA;TODO DE PAGAMENTO;ENTRADA;TAXA DE OPERA".split(";");
    for (int x=0;x<campos197.length;x++) {
        if (!line.contains(campos197[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TON2OTTCARTAO197";
    achouTipo = true;
    String [] campos198 = "TRANSACAO;VALOR_BRUTO;VALOR_LIQUIDO;BANDEIRA;QTDE_PARCELAS;DATA_CRIACAO;DATA_PAGAMENTO;METODO_PAGAMENTO;STATUS;TYPE;LIQUIDATION_ENGINE".split(";");
    for (int x=0;x<campos198.length;x++) {
        if (!line.contains(campos198[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TON3OTTCARTAO198";
    achouTipo = true;
    String [] campos199 = "PAYOUT ID;MERCHANT REFERENCE;DEDUCTED AMOUNT;SOURCE CURRENCY;AMOUNT RECEIVED;PAYOUT CURRENCY".split(";");
    for (int x=0;x<campos199.length;x++) {
        if (!line.contains(campos199[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TRANSFERSMILE1OTTCARTAO199";
    achouTipo = true;
    String [] campos200 = "TRANSACTION ID|TYPE|CURRENCY|AMOUNT|STATUS|CREATION DATE".split(";");
    for (int x=0;x<campos200.length;x++) {
        if (!line.contains(campos200[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TRANSFERSMILE2OTTCARTAO200";
    achouTipo = true;
    String [] campos201 = "DT TRANSACAO;DT CREDITO;CARTAO;DESCRICAO DA TRANSACAO;N AUTORIZ.;VALOR BRUTO;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos201.length;x++) {
        if (!line.contains(campos201[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TRICARD_EXCEL1OTTCARTAO201";
    achouTipo = true;
    String [] campos202 = "NOMSUBREDE|DATA;AUTORIZ;TRANSACAO;CARTAO".split(";");
    for (int x=0;x<campos202.length;x++) {
        if (!line.contains(campos202[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TRIOCARDOTTCARTAO202";
    achouTipo = true;
    String [] campos203 = "DATA|ID;HIST;RICO;DEBITO|CREDITO|TIPO".split(";");
    for (int x=0;x<campos203.length;x++) {
        if (!line.contains(campos203[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_TRUDATA1OTTCARTAO203";
    achouTipo = true;
    String [] campos204 = "DATA VENDA;EC;MODALIDADE;NSU;NUMERO PARCELAS;AUTORIZACAO;BANDEIRA;VALOR DA VENDA;VALOR A RECEBER;VALOR ANTECIPADO;NUMERO DO TERMINAL;TIPO DO TERMINAL".split(";");
    for (int x=0;x<campos204.length;x++) {
        if (!line.contains(campos204[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_UNICA1OTTCARTAO204";
    achouTipo = true;
    String [] campos205 = "DATA TRANS.;DATA PAGTO.;BANDEIRA;PLATAFORMA CAPTURA;TIPO;MODALIDADE;D. AUT.;NSU REDE;NSU AUTO;STATUS;PARCELA".split(";");
    for (int x=0;x<campos205.length;x++) {
        if (!line.contains(campos205[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_UNIPRIMEOTTCARTAO205";
    achouTipo = true;
    String [] campos206 = "DATA TRANS.;DATA PAGTO.;BANDEIRA;PLAT. CAPTURA;TIPO;MODALIDADE;D. AUT.;NSU REDE;NSU AUTO;STATUS;PARCELA".split(";");
    for (int x=0;x<campos206.length;x++) {
        if (!line.contains(campos206[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_UNIPRIME2OTTCARTAO206";
    achouTipo = true;
    String [] campos207 = "DESCRICAO;COMPRADOR;CODIGO DE AUTORIZACAO;DATA;PARCELA/TOTAL;VALOR".split(";");
    for (int x=0;x<campos207.length;x++) {
        if (!line.contains(campos207[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VALECARD1OTTCARTAO207";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("VALOREM")) achouTipo = true;
    if (achouTipo) return "CARTAO_VALOREMPAY_EXCELOTTCARTAO208";
    achouTipo = true;
    String [] campos209 = "DATA;SALDO;CREDITOS;DEBITOS /;ENCARGOS;COMPRAS;TRIBUTOS;SALDO;FATURA;JUROS; ANTECIPACAO;DESAGIO;COBERTURA;DESAGIO;COBERTURA;RECEBIVEIS".split(";");
    for (int x=0;x<campos209.length;x++) {
        if (!line.contains(campos209[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VERDECARD_PDF1OTTCARTAO209";
    achouTipo = true;
    String [] campos210 = "VERDECARD;DATA;AGENDAMENTO CIP  DATA DO REPASSE".split(";");
    for (int x=0;x<campos210.length;x++) {
        if (!line.contains(campos210[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VERDECARD1OTTCARTAO210";
    achouTipo = true;
    String [] campos211 = "BANRISUL;DATA OPERACAO;CONTRATO;BANDEIRA;VALOR OPERACAO;VALOR LIQUIDO".split(";");
    for (int x=0;x<campos211.length;x++) {
        if (!line.contains(campos211[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VERO_SMARTPDF1OTTCARTAO211";
    achouTipo = true;
    String [] campos212 = "DATA;HORA;AUTOR.;PORTADOR;PRODUTO VENDA;PARCELAS;VALOR;FECH.".split(";");
    for (int x=0;x<campos212.length;x++) {
        if (!line.contains(campos212[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VIASOFTPAY1OTTCARTAO212";
    achouTipo = true;
    achouTipo = false;
    if (nomeArquivo.toUpperCase().contains("VR ALI")) achouTipo = true;
    if (achouTipo) return "CARTAO_VRALIMENTACAO1OTTCARTAO213";
    achouTipo = true;
    String [] campos214 = "CNPJ;PRODUTO;DATA;HORA;CARTAO;VALOR;NUMERO AUTORIZACAO".split(";");
    for (int x=0;x<campos214.length;x++) {
        if (!line.contains(campos214[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VRALIMENTACAO2OTTCARTAO214";
    achouTipo = true;
    String [] campos215 = "VS CARD ALIMENTA".split(";");
    for (int x=0;x<campos215.length;x++) {
        if (!line.contains(campos215[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_VSCARDOTTCARTAO215";
    achouTipo = true;
    String [] campos216 = "TRANSLATION MISSING:".split(";");
    for (int x=0;x<campos216.length;x++) {
        if (!line.contains(campos216[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_YAPAY1OTTCARTAO216";
    achouTipo = true;
    String [] campos217 = "ID;DATA DA TRANSA;HORARIO;NUMERO PEDIDO;VENDEDOR;E-MAIL - LOJA;CLIENTE;E-MAIL DO CLIENTE;TELEFONE VENDEDOR;SUB LOJA;MEIO DE PAGAMENTO;PARCELAS;VALOR PAGO;VALOR".split(";");
    for (int x=0;x<campos217.length;x++) {
        if (!line.contains(campos217[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_YAPAY2OTTCARTAO217";
    achouTipo = true;
    String [] campos218 = "DATA;ID TRANSACAO;N. PEDIDO;DESCRICAO;ORIGEM;FORMA DE PAGAMENTO;PARCELAS;VALOR LIQ.;VALOR BRUTO;TAXA RETENCAO;TAXA ANTECIPACAO".split(";");
    for (int x=0;x<campos218.length;x++) {
        if (!line.contains(campos218[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAO_YAPAY3OTTCARTAO218";
    achouTipo = true;
    String [] campos219 = "DATA DA TRANSACAO;NUMERO DA TRANSACAO;VALOR DA TRANSACAO (R$);VALOR DA PARCELA (R$);VALOR A RECEBER (R$);CARTAO".split(";");
    for (int x=0;x<campos219.length;x++) {
        if (!line.contains(campos219[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAOSAUDESERVICE1OTTCARTAO219";
    achouTipo = true;
    String [] campos220 = "DATA DA TRANSACAO;NUMERO DA TRANSACAO;NSU;TECNOLOGIA;NOME DO PACIENTE".split(";");
    for (int x=0;x<campos220.length;x++) {
        if (!line.contains(campos220[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "CARTAOSAUDESERVICE2OTTCARTAO220";
    achouTipo = true;
    String [] campos221 = "PEDIDO;DATA|RESTAURANTE|ID DO RESTAURANTE|TAXA DE ENTREGA|VALOR DOS ITENS|INCENTIVO PROMOCIONAL DO IFOOD|INCENTIVO PROMOCIONAL DA LOJA|TOTAL DO PEDIDO|FORMAS DE PAGAMENTO|DATA DO CANCELAMENTO".split(";");
    for (int x=0;x<campos221.length;x++) {
        if (!line.contains(campos221[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "IFOOD_PADRAO_3OTTCARTAO221";
    achouTipo = true;
    String [] campos222 = "PRODUTO: ALIMENTA;DATA DO PROCESSAMENTO|DATA DA TRANSA;REDE CAPTURA|DESCRI;AUTORIZA;VALOR BRUTO R$|DATA DE PAGAMENTO||".split(";");
    for (int x=0;x<campos222.length;x++) {
        if (!line.contains(campos222[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "SODEXO_PADRAO_1OTTCARTAO222";
    achouTipo = true;
    String [] campos223 = "DATA RECEBIMENTO;DOCUMENTO;CLIENTE;DETALHES DO RECEBIMENTO".split(";");
    for (int x=0;x<campos223.length;x++) {
        if (!line.contains(campos223[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "ZZPADRAOOTTIMIZZAREC223";
    achouTipo = true;
    return tipoPlanilha;
}
public String getConta(String nomeOrigem, String documento, String nomePortador,
                       String complemento01, String complemento02, String complemento03, 
                       String nomeArquivo, String codCentroCusto) {
    String conta = "";
    String complemento04 = "";
    String complemento05 = "";
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getConta09(String contaMovimento, String nomeOrigem, String documento, 
                       String nomePortador, String complemento01, String complemento02, 
                       String complemento03, String nomeArquivo, String codCentroCusto) {
    String conta = contaMovimento;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INTERCAST")) {
        conta = "722102";
        contaMovimento = "722102";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("KLABIN")) {
        conta = "2512";
        contaMovimento = "2512";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRAMETAL")) {
        conta = "722219";
        contaMovimento = "722219";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MULTILUZ")) {
        conta = "722222";
        contaMovimento = "722222";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MILLPAR")) {
        conta = "722327";
        contaMovimento = "722327";
    }
    if (nomeOrigem.contains("FPHL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722455";
        contaMovimento = "722455";
    }
    if (nomeOrigem.contains("COMIL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("AMORES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SORANGE")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("ELETRYSERVICE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722461";
        contaMovimento = "722461";
    }
    if (nomeOrigem.contains("RUDNICK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722465";
        contaMovimento = "722465";
    }
    if (nomeOrigem.contains("EBANO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722466";
        contaMovimento = "722466";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CDB")) {
        conta = "191";
        contaMovimento = "191";
    }
    if (nomeOrigem.contains("VILLA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722488";
        contaMovimento = "722488";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GONCALO")) {
        conta = "722459";
        contaMovimento = "722459";
    }
    if (nomeOrigem.contains("PORMADE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721758";
        contaMovimento = "721758";
    }
    if (nomeOrigem.contains("THEIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2514";
        contaMovimento = "2514";
    }
    if (nomeOrigem.contains("ACEFRAN") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11";
        contaMovimento = "11";
    }
    if (nomeOrigem.contains("PIVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722637";
        contaMovimento = "722637";
    }
    if (nomeOrigem.contains("AGRARIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722641";
        contaMovimento = "722641";
    }
    if (nomeOrigem.contains("AMERICANAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722016";
        contaMovimento = "722016";
    }
    if (nomeOrigem.contains("ITAU") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722655";
        contaMovimento = "722655";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROSARIO")) {
        conta = "722656";
        contaMovimento = "722656";
    }
    if (nomeOrigem.contains("VIBRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722580";
        contaMovimento = "722580";
    }
    if (nomeOrigem.contains("ALPARGATAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722712";
        contaMovimento = "722712";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("YAZAKI")) {
        conta = "722717";
        contaMovimento = "722717";
    }
    if (nomeOrigem.contains("MISERICORDIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721916";
        contaMovimento = "721916";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JACKSON")) {
        conta = "722718";
        contaMovimento = "722718";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PRESBITERIANO")) {
        conta = "722724";
        contaMovimento = "722724";
    }
    if (nomeOrigem.contains("TABOAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722727";
        contaMovimento = "722727";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("KATOEN")) {
        conta = "722766";
        contaMovimento = "722766";
    }
    if (nomeOrigem.contains("PILON") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722767";
        contaMovimento = "722767";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TRIANA")) {
        conta = "722769";
        contaMovimento = "722769";
    }
    if (nomeOrigem.contains("NORMATEC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722772";
        contaMovimento = "722772";
    }
    if (nomeOrigem.contains("LOGIKA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722773";
        contaMovimento = "722773";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HELENGE")) {
        conta = "722730";
        contaMovimento = "722730";
    }
    if (nomeOrigem.contains("ULTRACARGO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722789";
        contaMovimento = "722789";
    }
    if (nomeOrigem.contains("BELEM") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722825";
        contaMovimento = "722825";
    }
    if (nomeOrigem.contains("SUCESSOR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "38268";
        contaMovimento = "38268";
    }
    if (nomeOrigem.contains("FUNDOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "347";
        contaMovimento = "347";
    }
    if (nomeOrigem.contains("HIDROVIAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722709";
        contaMovimento = "722709";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("WHEATON")) {
        conta = "722779";
        contaMovimento = "722779";
    }
    if (nomeOrigem.contains("MULTILAB") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722711";
        contaMovimento = "722711";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENERGY")) {
        conta = "722790";
        contaMovimento = "722790";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FERTIAL")) {
        conta = "722793";
        contaMovimento = "722793";
    }
    if (nomeOrigem.contains("KOMATSU") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722989";
        contaMovimento = "722989";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VERTENTE")) {
        conta = "722929";
        contaMovimento = "722929";
    }
    if (nomeOrigem.contains("MOR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723013";
        contaMovimento = "723013";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SBF")) {
        conta = "723041";
        contaMovimento = "723041";
    }
    if (nomeOrigem.contains("GUILHEMR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723047";
        contaMovimento = "723047";
    }
    if (nomeOrigem.contains("ORION") && nomeOrigem.contains("AUTOMACAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1367";
        contaMovimento = "1367";
    }
    if (nomeOrigem.contains("BALDO") && nomeOrigem.contains("SA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721722";
        contaMovimento = "721722";
    }
    if (nomeOrigem.contains("TRIUNFO") && nomeOrigem.contains("COMERCIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721530";
        contaMovimento = "721530";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("DG")) {
        conta = "721836";
        contaMovimento = "721836";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ARQUITETURA") && nomeOrigem.contains("CO2")) {
        conta = "721760";
        contaMovimento = "721760";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("KLIDZIO") && nomeOrigem.contains("REGIS")) {
        conta = "721887";
        contaMovimento = "721887";
    }
    if (nomeOrigem.contains("ASTRA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRIGORIFICO")) {
        conta = "721894";
        contaMovimento = "721894";
    }
    if (nomeOrigem.contains("CAPSULA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRED")) {
        conta = "721896";
        contaMovimento = "721896";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SERCOMAQ") && nomeOrigem.contains("AUTOMACAO")) {
        conta = "1265";
        contaMovimento = "1265";
    }
    if (nomeOrigem.contains("NOVACKI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EMBALAGENS")) {
        conta = "721971";
        contaMovimento = "721971";
    }
    if (nomeOrigem.contains("BARTZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOTEL")) {
        conta = "721977";
        contaMovimento = "721977";
    }
    if (nomeOrigem.contains("AGRICOLA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FRAIBURGO")) {
        conta = "721754";
        contaMovimento = "721754";
    }
    if (nomeOrigem.contains("BELLBRUCK") && nomeOrigem.contains("INDUSTRIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722010";
        contaMovimento = "722010";
    }
    if (nomeOrigem.contains("RAFAEL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("01200726022")) {
        conta = "721698";
        contaMovimento = "721698";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONSTRUITA") && nomeOrigem.contains("EMPREITEIRA")) {
        conta = "722020";
        contaMovimento = "722020";
    }
    if (nomeOrigem.contains("MINUANO") && nomeOrigem.contains("PELES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1118";
        contaMovimento = "1118";
    }
    if (nomeOrigem.contains("VINICOLA") && nomeOrigem.contains("PERINI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "31901";
        contaMovimento = "31901";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BODNAR") && nomeOrigem.contains("NASSAR")) {
        conta = "722048";
        contaMovimento = "722048";
    }
    if (nomeOrigem.contains("ALIMENTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARRER")) {
        conta = "722027";
        contaMovimento = "722027";
    }
    if (nomeOrigem.contains("ARQUIDIOCESE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MONTES")) {
        conta = "722044";
        contaMovimento = "722044";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VOLARE") && nomeOrigem.contains("VEICULOS")) {
        conta = "722043";
        contaMovimento = "722043";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JOSAPAR") && nomeOrigem.contains("JOAQUIM")) {
        conta = "721825";
        contaMovimento = "721825";
    }
    if (nomeOrigem.contains("CAPACHOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("KAPAZI")) {
        conta = "722166";
        contaMovimento = "722166";
    }
    if (nomeOrigem.contains("GLG") && nomeOrigem.contains("EMPREENDIMENTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722058";
        contaMovimento = "722058";
    }
    if (nomeOrigem.contains("MOVEIS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VIECELLI")) {
        conta = "722060";
        contaMovimento = "722060";
    }
    if (nomeOrigem.contains("VOTORANTIM") && nomeOrigem.contains("CIMENTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722092";
        contaMovimento = "722092";
    }
    if (nomeOrigem.contains("DESTILARIA") && nomeOrigem.contains("CACHOEIRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722106";
        contaMovimento = "722106";
    }
    if (nomeOrigem.contains("INGREDIENTES") && nomeOrigem.contains("ALIBRA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721912";
        contaMovimento = "721912";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("JCS")) {
        conta = "722154";
        contaMovimento = "722154";
    }
    if (nomeOrigem.contains("S3") && nomeOrigem.contains("CONSTRUCAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721709";
        contaMovimento = "721709";
    }
    if (nomeOrigem.contains("UPFIELD") && nomeOrigem.contains("SOLUTIONS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722126";
        contaMovimento = "722126";
    }
    if (nomeOrigem.contains("ELETRICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMANDO")) {
        conta = "722179";
        contaMovimento = "722179";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELETRICA") && nomeOrigem.contains("NOVA")) {
        conta = "1969";
        contaMovimento = "1969";
    }
    if (nomeOrigem.contains("NACIGUAT") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONSORCIO")) {
        conta = "722116";
        contaMovimento = "722116";
    }
    if (complemento01.contains("CREDITO") && complemento01.contains("INDEVIDO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11";
        contaMovimento = "11";
    }
    if (nomeOrigem.contains("EPPLAN") && nomeOrigem.contains("CONSTRUTORA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ARMAZENS") && nomeOrigem.contains("FRIOZEM")) {
        conta = "721948";
        contaMovimento = "721948";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLAVOR") && nomeOrigem.contains("INDUSTRIALIZACAO")) {
        conta = "722112";
        contaMovimento = "722112";
    }
    if (nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("NAFOR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721572";
        contaMovimento = "721572";
    }
    if (nomeOrigem.contains("RAMTEK") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UPS")) {
        conta = "1202";
        contaMovimento = "1202";
    }
    if (nomeOrigem.contains("CPX") && nomeOrigem.contains("DISTRIBUIDORA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722125";
        contaMovimento = "722125";
    }
    if (nomeOrigem.contains("COFCO") && nomeOrigem.contains("INTERNATIONAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722150";
        contaMovimento = "722150";
    }
    if (nomeOrigem.contains("DORI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALIMENTOS")) {
        conta = "722159";
        contaMovimento = "722159";
    }
    if (nomeOrigem.contains("SYSC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTOMACAO")) {
        conta = "722177";
        contaMovimento = "722177";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SIDERAL") && nomeOrigem.contains("FUNDICAO")) {
        conta = "722216";
        contaMovimento = "722216";
    }
    if (nomeOrigem.contains("INDUSTRIA") && nomeOrigem.contains("MULTIMOVEIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722129";
        contaMovimento = "722129";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RCR") && nomeOrigem.contains("REPRESENTAES")) {
        conta = "722217";
        contaMovimento = "722217";
    }
    if (nomeOrigem.contains("FERTILIZANTES") && nomeOrigem.contains("MOSAIC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722218";
        contaMovimento = "722218";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIAL") && nomeOrigem.contains("PERIPAN")) {
        conta = "721690";
        contaMovimento = "721690";
    }
    if (nomeOrigem.contains("HOSPITALAR") && nomeOrigem.contains("BENEFICENTE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722220";
        contaMovimento = "722220";
    }
    if (nomeOrigem.contains("ELETROCAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIA")) {
        conta = "722200";
        contaMovimento = "722200";
    }
    if (nomeOrigem.contains("DISTRIBUIDORA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNIDASUL")) {
        conta = "722017";
        contaMovimento = "722017";
    }
    if (nomeOrigem.contains("REVESTIMENTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DEXCO")) {
        conta = "722205";
        contaMovimento = "722205";
    }
    if (nomeOrigem.contains("ARTESANO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOVEIS")) {
        conta = "722206";
        contaMovimento = "722206";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FOZ") && nomeOrigem.contains("CHAPECO")) {
        conta = "722208";
        contaMovimento = "722208";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUPERMERCADOS") && nomeOrigem.contains("FEPESE")) {
        conta = "721781";
        contaMovimento = "721781";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOTEL") && nomeOrigem.contains("ALPESTRE")) {
        conta = "721919";
        contaMovimento = "721919";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CRV") && nomeOrigem.contains("INDUSTRIAL")) {
        conta = "722209";
        contaMovimento = "722209";
    }
    if (nomeOrigem.contains("PBG") && nomeOrigem.contains("SA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722151";
        contaMovimento = "722151";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADMINISTRACAO") && nomeOrigem.contains("CDNL")) {
        conta = "721513";
        contaMovimento = "721513";
    }
    if (nomeOrigem.contains("PORTO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNIMED")) {
        conta = "2592";
        contaMovimento = "2592";
    }
    if (nomeOrigem.contains("TEC") && nomeOrigem.contains("UP") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722267";
        contaMovimento = "722267";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DESPACHOS") && nomeOrigem.contains("SDA")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("GARDEN") && nomeOrigem.contains("TRADE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MINERACAO") && nomeOrigem.contains("TABOCA")) {
        conta = "722214";
        contaMovimento = "722214";
    }
    if (nomeOrigem.contains("MIORANZA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TRANSPORTES")) {
        conta = "722263";
        contaMovimento = "722263";
    }
    if (nomeOrigem.contains("COMERCIAL") && nomeOrigem.contains("SAMY") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722264";
        contaMovimento = "722264";
    }
    if (nomeOrigem.contains("INDUSCAR") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CAIO")) {
        conta = "722266";
        contaMovimento = "722266";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIA") && nomeOrigem.contains("VIDROMIR")) {
        conta = "722269";
        contaMovimento = "722269";
    }
    if (nomeOrigem.contains("DOMPEL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIA")) {
        conta = "722270";
        contaMovimento = "722270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PILARES") && nomeOrigem.contains("TECNOLOGIA")) {
        conta = "722271";
        contaMovimento = "722271";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("IMPACTO")) {
        conta = "722274";
        contaMovimento = "722274";
    }
    if (nomeOrigem.contains("EMBALAGENS") && nomeOrigem.contains("DONNOPEL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722276";
        contaMovimento = "722276";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROBERTO") && nomeOrigem.contains("FACCIN")) {
        conta = "721813";
        contaMovimento = "721813";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ZILLI") && nomeOrigem.contains("SANTOS")) {
        conta = "721906";
        contaMovimento = "721906";
    }
    if (nomeOrigem.contains("K") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HEDI")) {
        conta = "722265";
        contaMovimento = "722265";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLESCH") && nomeOrigem.contains("ELETRO")) {
        conta = "722286";
        contaMovimento = "722286";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FORTE") && nomeOrigem.contains("EXTINTORES")) {
        conta = "722359";
        contaMovimento = "722359";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RAMALHO") && nomeOrigem.contains("ELETRO")) {
        conta = "722101";
        contaMovimento = "722101";
    }
    if (nomeOrigem.contains("MANTIQUEIRA") && nomeOrigem.contains("ALIMENTOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2215";
        contaMovimento = "2215";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRADBURY") && nomeOrigem.contains("ENGENHARIA")) {
        conta = "722287";
        contaMovimento = "722287";
    }
    if (nomeOrigem.contains("THALES") && nomeOrigem.contains("NUNES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722288";
        contaMovimento = "722288";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SGS") && nomeOrigem.contains("POLIMEROS")) {
        conta = "721838";
        contaMovimento = "721838";
    }
    if (nomeOrigem.contains("MODAS") && nomeOrigem.contains("SULA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722313";
        contaMovimento = "722313";
    }
    if (nomeOrigem.contains("ZAMBIANCO") && nomeOrigem.contains("ACUCAR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722316";
        contaMovimento = "722316";
    }
    if (nomeOrigem.contains("INCORPORACAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DES")) {
        conta = "722324";
        contaMovimento = "722324";
    }
    if (nomeOrigem.contains("CHINATO") && nomeOrigem.contains("DENIZE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722325";
        contaMovimento = "722325";
    }
    if (nomeOrigem.contains("AACQUA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ECOTURISMO")) {
        conta = "722326";
        contaMovimento = "722326";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESPUMAS") && nomeOrigem.contains("ZAHONERO")) {
        conta = "722328";
        contaMovimento = "722328";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TECNOVOLT") && nomeOrigem.contains("ELETRICOS")) {
        conta = "722330";
        contaMovimento = "722330";
    }
    if (nomeOrigem.contains("COPRAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ADMINISTRACAO")) {
        conta = "722361";
        contaMovimento = "722361";
    }
    if (nomeOrigem.contains("ATT") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SOLUCOES")) {
        conta = "722403";
        contaMovimento = "722403";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("I9") && nomeOrigem.contains("ENGENHARIA")) {
        conta = "722370";
        contaMovimento = "722370";
    }
    if (nomeOrigem.contains("INSTRUMENTACAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("IEG")) {
        conta = "722404";
        contaMovimento = "722404";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RECEBIMENTO") && nomeOrigem.contains("CONSORCIO")) {
        conta = "722116";
        contaMovimento = "722116";
    }
    if (nomeOrigem.contains("XP") && nomeOrigem.contains("BANCO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "412";
        contaMovimento = "412";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DEVOLVIDA") && nomeOrigem.contains("AUGUSTO")) {
        conta = "197";
        contaMovimento = "197";
    }
    if (nomeOrigem.contains("KRICHAKI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELISIEL")) {
        conta = "722445";
        contaMovimento = "722445";
    }
    if (nomeOrigem.contains("OREGON") && nomeOrigem.contains("CENTERS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722449";
        contaMovimento = "722449";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COELHO") && nomeOrigem.contains("SERVARE")) {
        conta = "722451";
        contaMovimento = "722451";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MEGA") && nomeOrigem.contains("BRASIL")) {
        conta = "722454";
        contaMovimento = "722454";
    }
    if (nomeOrigem.contains("RIO") && nomeOrigem.contains("TECON") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722038";
        contaMovimento = "722038";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("BOULEVARD") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722467";
        contaMovimento = "722467";
    }
    if (nomeOrigem.contains("PRO") && nomeOrigem.contains("MANAGER") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722471";
        contaMovimento = "722471";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("JESUS")) {
        conta = "722477";
        contaMovimento = "722477";
    }
    if (nomeOrigem.contains("ASTI") && nomeOrigem.contains("ADMINISTRACAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722565";
        contaMovimento = "722565";
    }
    if (nomeOrigem.contains("DEVOLVIDA") && nomeOrigem.contains("ALDA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "23318";
        contaMovimento = "23318";
    }
    if (nomeOrigem.contains("ALMEIDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DENIS")) {
        conta = "11";
        contaMovimento = "11";
    }
    if (nomeOrigem.contains("BOSCO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722507";
        contaMovimento = "722507";
    }
    if (nomeOrigem.contains("FURTADO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722510";
        contaMovimento = "722510";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("BARRIGA")) {
        conta = "722519";
        contaMovimento = "722519";
    }
    if (nomeOrigem.contains("MADESP") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722520";
        contaMovimento = "722520";
    }
    if (nomeOrigem.contains("ROSINA") && nomeOrigem.contains("PORTAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721575";
        contaMovimento = "721575";
    }
    if (nomeOrigem.contains("BORTOLINI") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722524";
        contaMovimento = "722524";
    }
    if (nomeOrigem.contains("DOHT") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722553";
        contaMovimento = "722553";
    }
    if (nomeOrigem.contains("DIAMANTOPOULOS") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722482";
        contaMovimento = "722482";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("GRANOL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722888";
        contaMovimento = "722888";
    }
    if (nomeOrigem.contains("PETRIBU") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722584";
        contaMovimento = "722584";
    }
    if (nomeOrigem.contains("MOTA") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722561";
        contaMovimento = "722561";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("QUIMIS")) {
        conta = "722571";
        contaMovimento = "722571";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ELMAR") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722576";
        contaMovimento = "722576";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VOLTAGEM") && complemento01.contains("REC")) {
        conta = "722578";
        contaMovimento = "722578";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("SOLCERA")) {
        conta = "722579";
        contaMovimento = "722579";
    }
    if (nomeOrigem.contains("COAMO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2579";
        contaMovimento = "2579";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARQUENSE")) {
        conta = "722616";
        contaMovimento = "722616";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUSPENTECH") && complemento01.contains("REC")) {
        conta = "721741";
        contaMovimento = "721741";
    }
    if (nomeOrigem.contains("COCARI") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722582";
        contaMovimento = "722582";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CAPRICCHE") && complemento01.contains("REC")) {
        conta = "722617";
        contaMovimento = "722617";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CAMIL")) {
        conta = "721553";
        contaMovimento = "721553";
    }
    if (nomeOrigem.contains("MIRANTI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721972";
        contaMovimento = "721972";
    }
    if (nomeOrigem.contains("KYLY") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722627";
        contaMovimento = "722627";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SHMV") && complemento01.contains("REC")) {
        conta = "722628";
        contaMovimento = "722628";
    }
    if (nomeOrigem.contains("EXCEPCIONAIS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722422";
        contaMovimento = "722422";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("CERVOSUL")) {
        conta = "722629";
        contaMovimento = "722629";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("SORENGE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722563";
        contaMovimento = "722563";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("MOGIANA")) {
        conta = "722633";
        contaMovimento = "722633";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EKIPER") && complemento01.contains("REC")) {
        conta = "722635";
        contaMovimento = "722635";
    }
    if (nomeOrigem.contains("TODESCHINI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722431";
        contaMovimento = "722431";
    }
    if (nomeOrigem.contains("NAUTOS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722638";
        contaMovimento = "722638";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMX") && complemento01.contains("REC")) {
        conta = "722550";
        contaMovimento = "722550";
    }
    if (nomeOrigem.contains("SUPERGRUPPO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722642";
        contaMovimento = "722642";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PROTESYSTEM")) {
        conta = "722676";
        contaMovimento = "722676";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("MIGUELENSE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722426";
        contaMovimento = "722426";
    }
    if (nomeOrigem.contains("COQUEIROS") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722452";
        contaMovimento = "722452";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("SIAN")) {
        conta = "722567";
        contaMovimento = "722567";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("OBRAS") && nomeOrigem.contains("SUPORTE")) {
        conta = "722644";
        contaMovimento = "722644";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MILKA")) {
        conta = "722654";
        contaMovimento = "722654";
    }
    if (nomeOrigem.contains("ALEGRE") && nomeOrigem.contains("IGUATEMI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722657";
        contaMovimento = "722657";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("AGEPLAN")) {
        conta = "722658";
        contaMovimento = "722658";
    }
    if (nomeOrigem.contains("COPELMI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722652";
        contaMovimento = "722652";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BANDEIRANTES")) {
        conta = "722653";
        contaMovimento = "722653";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("REALTY")) {
        conta = "722661";
        contaMovimento = "722661";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FONTANA") && complemento01.contains("REC")) {
        conta = "722662";
        contaMovimento = "722662";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("S3")) {
        conta = "721709";
        contaMovimento = "721709";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("PIRISA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722663";
        contaMovimento = "722663";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EXTINSEG") && complemento01.contains("REC")) {
        conta = "722666";
        contaMovimento = "722666";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("CATAFESTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722667";
        contaMovimento = "722667";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("AMBROSI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722668";
        contaMovimento = "722668";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TECNOVIDRO")) {
        conta = "722669";
        contaMovimento = "722669";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("AQUILA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722670";
        contaMovimento = "722670";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMIGAO") && complemento01.contains("REC")) {
        conta = "722674";
        contaMovimento = "722674";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMPASSS")) {
        conta = "722526";
        contaMovimento = "722526";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FOGOCEM")) {
        conta = "722677";
        contaMovimento = "722677";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("CELO")) {
        conta = "722679";
        contaMovimento = "722679";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("SUMEPE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722684";
        contaMovimento = "722684";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ROMETAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721751";
        contaMovimento = "721751";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FIBRA") && complemento01.contains("REC")) {
        conta = "722685";
        contaMovimento = "722685";
    }
    if (nomeOrigem.contains("ZEN") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722702";
        contaMovimento = "722702";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("3P")) {
        conta = "722714";
        contaMovimento = "722714";
    }
    if (nomeOrigem.contains("DIOGO") && nomeOrigem.contains("SEVERO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "93960";
        contaMovimento = "93960";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INTERNACIONAL") && nomeOrigem.contains("SPORT")) {
        conta = "721556";
        contaMovimento = "721556";
    }
    if (nomeOrigem.contains("AERO") && nomeOrigem.contains("ESPACO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722672";
        contaMovimento = "722672";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LOA")) {
        conta = "722675";
        contaMovimento = "722675";
    }
    if (nomeOrigem.contains("INDUSCABOS") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722683";
        contaMovimento = "722683";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AGROARACA") && complemento01.contains("REC")) {
        conta = "722470";
        contaMovimento = "722470";
    }
    if (nomeOrigem.contains("INKOR") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722706";
        contaMovimento = "722706";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("SEPAC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721742";
        contaMovimento = "721742";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PASTIFICIO")) {
        conta = "722059";
        contaMovimento = "722059";
    }
    if (nomeOrigem.contains("MIRANDA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("APARECIDA")) {
        conta = "722710";
        contaMovimento = "722710";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("PANIZE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1513";
        contaMovimento = "1513";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ESMALGLASS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722460";
        contaMovimento = "722460";
    }
    if (nomeOrigem.contains("ECLEVER") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722725";
        contaMovimento = "722725";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ZIMBA")) {
        conta = "722726";
        contaMovimento = "722726";
    }
    if (nomeOrigem.contains("CINQUETTI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722728";
        contaMovimento = "722728";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("SAVI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722729";
        contaMovimento = "722729";
    }
    if (nomeOrigem.contains("RGB") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722736";
        contaMovimento = "722736";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ISIDRO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722768";
        contaMovimento = "722768";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("PARACATU")) {
        conta = "721884";
        contaMovimento = "721884";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOTZ")) {
        conta = "721539";
        contaMovimento = "721539";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("OPI") && nomeOrigem.contains("MALL")) {
        conta = "722765";
        contaMovimento = "722765";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RH") && nomeOrigem.contains("SOROCABA")) {
        conta = "722770";
        contaMovimento = "722770";
    }
    if (nomeOrigem.contains("INTERNACIONAL") && nomeOrigem.contains("ESCOLA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722771";
        contaMovimento = "722771";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMSEGUI")) {
        conta = "722774";
        contaMovimento = "722774";
    }
    if (nomeOrigem.contains("ALUMICONTE") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722775";
        contaMovimento = "722775";
    }
    if (nomeOrigem.contains("CITTA") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722801";
        contaMovimento = "722801";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("IPICUE")) {
        conta = "722781";
        contaMovimento = "722781";
    }
    if (nomeOrigem.contains("RSB") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722704";
        contaMovimento = "722704";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ROTTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722782";
        contaMovimento = "722782";
    }
    if (nomeOrigem.contains("APTI") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "721725";
        contaMovimento = "721725";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("DECK")) {
        conta = "722785";
        contaMovimento = "722785";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("DESEMPENHO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722786";
        contaMovimento = "722786";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PALAZZO")) {
        conta = "2568";
        contaMovimento = "2568";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SANTECH")) {
        conta = "722787";
        contaMovimento = "722787";
    }
    if (nomeOrigem.contains("00318771098") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721534";
        contaMovimento = "721534";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("EXPOARA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721717";
        contaMovimento = "721717";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALID")) {
        conta = "722852";
        contaMovimento = "722852";
    }
    if (nomeOrigem.contains("MACEDO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722853";
        contaMovimento = "722853";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("KAPPA") && nomeOrigem.contains("SMURFIT")) {
        conta = "722800";
        contaMovimento = "722800";
    }
    if (nomeOrigem.contains("FORQUETA") && nomeOrigem.contains("TONDO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722049";
        contaMovimento = "722049";
    }
    if (nomeOrigem.contains("PAPEIS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ASTORIA")) {
        conta = "722042";
        contaMovimento = "722042";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("BRAVIE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721715";
        contaMovimento = "721715";
    }
    if (nomeOrigem.contains("TORNQUIST") && nomeOrigem.contains("CLAUDIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722795";
        contaMovimento = "722795";
    }
    if (nomeOrigem.contains("ENERSUGAR") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722796";
        contaMovimento = "722796";
    }
    if (nomeOrigem.contains("BRAINFARMA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "721677";
        contaMovimento = "721677";
    }
    if (nomeOrigem.contains("4D") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722851";
        contaMovimento = "722851";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("BUTANTAN")) {
        conta = "722854";
        contaMovimento = "722854";
    }
    if (nomeOrigem.contains("CAHDAM") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722810";
        contaMovimento = "722810";
    }
    if (nomeOrigem.contains("BRANDS") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722511";
        contaMovimento = "722511";
    }
    if (nomeOrigem.contains("MAXIMUM") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722817";
        contaMovimento = "722817";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INSTELCOM") && complemento01.contains("REC")) {
        conta = "722818";
        contaMovimento = "722818";
    }
    if (nomeOrigem.contains("OMYA") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722819";
        contaMovimento = "722819";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("CARBUSS")) {
        conta = "721557";
        contaMovimento = "721557";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTOMATE")) {
        conta = "722824";
        contaMovimento = "722824";
    }
    if (nomeOrigem.contains("PROTECH") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722830";
        contaMovimento = "722830";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("CACU") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722833";
        contaMovimento = "722833";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("OPPITZ")) {
        conta = "722835";
        contaMovimento = "722835";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GOLDSZTEIN")) {
        conta = "722840";
        contaMovimento = "722840";
    }
    if (nomeOrigem.contains("MORATELLI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722847";
        contaMovimento = "722847";
    }
    if (nomeOrigem.contains("TEREOS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722788";
        contaMovimento = "722788";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GESTAMP") && complemento01.contains("REC")) {
        conta = "722831";
        contaMovimento = "722831";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HORTIGRANGEIROS") && complemento01.contains("REC")) {
        conta = "722846";
        contaMovimento = "722846";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("MONTVERT")) {
        conta = "722878";
        contaMovimento = "722878";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("TRIAINA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722377";
        contaMovimento = "722377";
    }
    if (nomeOrigem.contains("JAPUNGU") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "1801";
        contaMovimento = "1801";
    }
    if (nomeOrigem.contains("ITAMOVEIS") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722932";
        contaMovimento = "722932";
    }
    if (nomeOrigem.contains("SIDERURGICA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESPIRITO")) {
        conta = "722056";
        contaMovimento = "722056";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("QUEIROZ") && complemento01.contains("REC")) {
        conta = "722829";
        contaMovimento = "722829";
    }
    if (nomeOrigem.contains("SUPERBAC") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722874";
        contaMovimento = "722874";
    }
    if (nomeOrigem.contains("TERMINAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TES")) {
        conta = "722915";
        contaMovimento = "722915";
    }
    if (nomeOrigem.contains("SCALA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722908";
        contaMovimento = "722908";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FAST")) {
        conta = "722920";
        contaMovimento = "722920";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("VIRIDI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722921";
        contaMovimento = "722921";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("IMECO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722923";
        contaMovimento = "722923";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PINACOTECA")) {
        conta = "722924";
        contaMovimento = "722924";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ARES") && complemento01.contains("REC")) {
        conta = "722928";
        contaMovimento = "722928";
    }
    if (nomeOrigem.contains("ALUMINIO") && nomeOrigem.contains("COMPANHIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722898";
        contaMovimento = "722898";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BALBINO") && nomeOrigem.contains("DR")) {
        conta = "722927";
        contaMovimento = "722927";
    }
    if (nomeOrigem.contains("LINDA") && nomeOrigem.contains("COSMETICOS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722992";
        contaMovimento = "722992";
    }
    if (nomeOrigem.contains("PORVIR") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722997";
        contaMovimento = "722997";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("WABTEC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722998";
        contaMovimento = "722998";
    }
    if (nomeOrigem.contains("EXTINCHAMA") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723000";
        contaMovimento = "723000";
    }
    if (nomeOrigem.contains("DANESI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723002";
        contaMovimento = "723002";
    }
    if (nomeOrigem.contains("SOTREQ") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723005";
        contaMovimento = "723005";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VOLARE")) {
        conta = "722021";
        contaMovimento = "722021";
    }
    if (nomeOrigem.contains("ITALIANY") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723010";
        contaMovimento = "723010";
    }
    if (nomeOrigem.contains("CENTERLAR") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722988";
        contaMovimento = "722988";
    }
    if (nomeOrigem.contains("CCGL") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722919";
        contaMovimento = "722919";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HIDROLUMEN") && complemento01.contains("REC")) {
        conta = "721842";
        contaMovimento = "721842";
    }
    if (nomeOrigem.contains("ELCO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722621";
        contaMovimento = "722621";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("TECNOVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723014";
        contaMovimento = "723014";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("DEMETRIUS")) {
        conta = "723019";
        contaMovimento = "723019";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("EICK") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723036";
        contaMovimento = "723036";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("QATAR") && complemento01.contains("REC")) {
        conta = "723042";
        contaMovimento = "723042";
    }
    if (complemento01.contains("005") && nomeOrigem.contains("TED") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722881";
        contaMovimento = "722881";
    }
    if (nomeOrigem.contains("TECNOLOGIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRAZCAMP")) {
        conta = "722105";
        contaMovimento = "722105";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FLOWORK") && nomeOrigem.contains("LOCACOES")) {
        conta = "722993";
        contaMovimento = "722993";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LAPA") && nomeOrigem.contains("PENHA")) {
        conta = "721895";
        contaMovimento = "721895";
    }
    if (nomeOrigem.contains("SOLUCOES") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TREZI")) {
        conta = "721726";
        contaMovimento = "721726";
    }
    if (nomeOrigem.contains("DALVIRENE") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723030";
        contaMovimento = "723030";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ATIARA")) {
        conta = "723031";
        contaMovimento = "723031";
    }
    if (complemento01.contains("DEPOSITO") && nomeOrigem.contains("ADELIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722469";
        contaMovimento = "722469";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TONDO") && complemento01.contains("REC")) {
        conta = "722049";
        contaMovimento = "722049";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("LVC") && complemento01.contains("REC")) {
        conta = "723038";
        contaMovimento = "723038";
    }
    if (nomeOrigem.contains("IMPERMIX") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "723039";
        contaMovimento = "723039";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SAFEEDS")) {
        conta = "723049";
        contaMovimento = "723049";
    }
    if (nomeOrigem.contains("ARROQUE") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "721820";
        contaMovimento = "721820";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARIDADE") && nomeOrigem.contains("SEC")) {
        conta = "723055";
        contaMovimento = "723055";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARAMURU")) {
        conta = "721806";
        contaMovimento = "721806";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMBIENTALY") && complemento01.contains("REC")) {
        conta = "721626";
        contaMovimento = "721626";
    }
    if (nomeOrigem.contains("SOLUCOES") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MEGA") && nomeOrigem.contains("SERVICOS")) {
        conta = "721577";
        contaMovimento = "721577";
    }
    if (nomeOrigem.contains("DISTRIBUIDORA") && nomeOrigem.contains("DMH") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALARMES")) {
        conta = "1034";
        contaMovimento = "1034";
    }
    if (nomeOrigem.contains("TEK") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SYGMA") && nomeOrigem.contains("FIRE")) {
        conta = "721816";
        contaMovimento = "721816";
    }
    if (nomeOrigem.contains("JMC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("COMERCIO")) {
        conta = "721537";
        contaMovimento = "721537";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ESPECIAIS") && nomeOrigem.contains("MADEIRAS") && nomeOrigem.contains("FRAME")) {
        conta = "721835";
        contaMovimento = "721835";
    }
    if (nomeOrigem.contains("SENHORA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOSPITAL") && nomeOrigem.contains("GRACAS")) {
        conta = "722026";
        contaMovimento = "722026";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ARTIGOS") && nomeOrigem.contains("CALCADOS") && nomeOrigem.contains("VULCABRAS")) {
        conta = "721959";
        contaMovimento = "721959";
    }
    if (nomeOrigem.contains("REGINA") && nomeOrigem.contains("BAMBICINI") && nomeOrigem.contains("SONIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721947";
        contaMovimento = "721947";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOTEL") && nomeOrigem.contains("VILLA") && nomeOrigem.contains("LOBOS")) {
        conta = "722003";
        contaMovimento = "722003";
    }
    if (nomeOrigem.contains("CITTA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SHOPPING") && nomeOrigem.contains("BELLA")) {
        conta = "722005";
        contaMovimento = "722005";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BENTO") && nomeOrigem.contains("KAPPA") && nomeOrigem.contains("SMURFIT")) {
        conta = "721901";
        contaMovimento = "721901";
    }
    if (nomeOrigem.contains("CONEGLIAN") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MONTAGEM") && nomeOrigem.contains("ELETRICA")) {
        conta = "722057";
        contaMovimento = "722057";
    }
    if (nomeOrigem.contains("RIO") && nomeOrigem.contains("GRANDE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FERTILIZANTES")) {
        conta = "722067";
        contaMovimento = "722067";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIA") && nomeOrigem.contains("ALQUIMIA") && nomeOrigem.contains("CAPACHOS")) {
        conta = "722033";
        contaMovimento = "722033";
    }
    if (nomeOrigem.contains("PREVENCAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FIORA") && nomeOrigem.contains("INCENDIOS")) {
        conta = "722041";
        contaMovimento = "722041";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("POUSADA") && nomeOrigem.contains("HOTEL") && nomeOrigem.contains("BLUMENBERG")) {
        conta = "722053";
        contaMovimento = "722053";
    }
    if (nomeOrigem.contains("RSB") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("REPRESENTACAO") && nomeOrigem.contains("INFORMATICA")) {
        conta = "1886";
        contaMovimento = "1886";
    }
    if (nomeOrigem.contains("EXTINSEG") && nomeOrigem.contains("EQUIPAMNETOS") && nomeOrigem.contains("SEGURANCA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722064";
        contaMovimento = "722064";
    }
    if (nomeOrigem.contains("PIERRE") && nomeOrigem.contains("LABORATORIOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FABRE")) {
        conta = "721817";
        contaMovimento = "721817";
    }
    if (nomeOrigem.contains("BORGHETTI") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AUTOMOTIVOS") && nomeOrigem.contains("TURBOS")) {
        conta = "2375";
        contaMovimento = "2375";
    }
    if (nomeOrigem.contains("COMPANHIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("REFINADORA") && nomeOrigem.contains("AMAZONIA")) {
        conta = "722107";
        contaMovimento = "722107";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONDOMINIO") && nomeOrigem.contains("PLATZ") && nomeOrigem.contains("BAVARIAN")) {
        conta = "722111";
        contaMovimento = "722111";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GOBBA") && nomeOrigem.contains("LEATHER") && nomeOrigem.contains("COMERCIO")) {
        conta = "722108";
        contaMovimento = "722108";
    }
    if (nomeOrigem.contains("CONDOMINIO") && nomeOrigem.contains("ITALIA") && nomeOrigem.contains("RESIDENCIAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722115";
        contaMovimento = "722115";
    }
    if (nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("INCENDIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HALLON")) {
        conta = "722133";
        contaMovimento = "722133";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CORREA") && nomeOrigem.contains("ZAGO") && nomeOrigem.contains("NILVA")) {
        conta = "722145";
        contaMovimento = "722145";
    }
    if (nomeOrigem.contains("LITORAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MIX") && nomeOrigem.contains("ALIMENTOS")) {
        conta = "722146";
        contaMovimento = "722146";
    }
    if (nomeOrigem.contains("ESTOK") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("REPRESENTACOES")) {
        conta = "722147";
        contaMovimento = "722147";
    }
    if (nomeOrigem.contains("INDUSTRIA") && nomeOrigem.contains("COMERCIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDEMIL")) {
        conta = "722148";
        contaMovimento = "722148";
    }
    if (nomeOrigem.contains("INDUSTRIA") && nomeOrigem.contains("UNICASA") && nomeOrigem.contains("MOVEIS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721721";
        contaMovimento = "721721";
    }
    if (nomeOrigem.contains("ELETRICOS") && nomeOrigem.contains("MATERIAIS") && nomeOrigem.contains("MAXEL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722040";
        contaMovimento = "722040";
    }
    if (nomeOrigem.contains("VEX") && nomeOrigem.contains("LOGISTICA") && nomeOrigem.contains("TRANSPORTES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722149";
        contaMovimento = "722149";
    }
    if (nomeOrigem.contains("CANECA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MINERADORA") && nomeOrigem.contains("FREI")) {
        conta = "722152";
        contaMovimento = "722152";
    }
    if (nomeOrigem.contains("TW") && nomeOrigem.contains("TRANSPORTES") && nomeOrigem.contains("LOGISTICA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722153";
        contaMovimento = "722153";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALIMENTICIO") && nomeOrigem.contains("ACAI") && nomeOrigem.contains("COMERCIO")) {
        conta = "722155";
        contaMovimento = "722155";
    }
    if (nomeOrigem.contains("RIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("GAS") && nomeOrigem.contains("PRETO")) {
        conta = "722157";
        contaMovimento = "722157";
    }
    if (nomeOrigem.contains("CONSTRUCAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SNP") && nomeOrigem.contains("INCORPORACAO")) {
        conta = "722158";
        contaMovimento = "722158";
    }
    if (nomeOrigem.contains("CARVALHO") && nomeOrigem.contains("PASQUALI") && nomeOrigem.contains("ROGERIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722160";
        contaMovimento = "722160";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("YARA") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("FERTILIZANTES")) {
        conta = "2478";
        contaMovimento = "2478";
    }
    if (nomeOrigem.contains("UNIMED") && nomeOrigem.contains("BAURU") && nomeOrigem.contains("COOPERATIVA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722165";
        contaMovimento = "722165";
    }
    if (nomeOrigem.contains("GRANOL") && nomeOrigem.contains("EXPORTACAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("INDUSTRIA")) {
        conta = "722182";
        contaMovimento = "722182";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MASTER") && nomeOrigem.contains("INFORMATICA") && nomeOrigem.contains("TERA")) {
        conta = "722091";
        contaMovimento = "722091";
    }
    if (nomeOrigem.contains("MOUTINHO") && nomeOrigem.contains("ALVARADO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SONIA")) {
        conta = "722183";
        contaMovimento = "722183";
    }
    if (nomeOrigem.contains("SISTEMAS") && nomeOrigem.contains("INCENDIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VL")) {
        conta = "721745";
        contaMovimento = "721745";
    }
    if (nomeOrigem.contains("IMPLEMENTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CENTRAL") && nomeOrigem.contains("RODOVIARIOS")) {
        conta = "722171";
        contaMovimento = "722171";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SISTEMAS") && nomeOrigem.contains("AUTOMOTIVOS") && nomeOrigem.contains("JOST")) {
        conta = "722184";
        contaMovimento = "722184";
    }
    if (nomeOrigem.contains("PETROLEO") && nomeOrigem.contains("RIOGRANDENSE") && nomeOrigem.contains("REFINARIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722185";
        contaMovimento = "722185";
    }
    if (nomeOrigem.contains("ASG") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("TREINAMENTO")) {
        conta = "722174";
        contaMovimento = "722174";
    }
    if (nomeOrigem.contains("BRS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOVEIS") && nomeOrigem.contains("INDUSTRIA")) {
        conta = "722187";
        contaMovimento = "722187";
    }
    if (nomeOrigem.contains("INDUSTRIAS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FOCKINK") && nomeOrigem.contains("ELETRICAS")) {
        conta = "721824";
        contaMovimento = "721824";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CIA") && nomeOrigem.contains("WEBER") && nomeOrigem.contains("LAURO")) {
        conta = "722223";
        contaMovimento = "722223";
    }
    if (nomeOrigem.contains("LUIZ") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FUNDACAO") && nomeOrigem.contains("ENGLERT")) {
        conta = "722202";
        contaMovimento = "722202";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALBUQUERQUE") && nomeOrigem.contains("DUARTE") && nomeOrigem.contains("DUAL")) {
        conta = "722192";
        contaMovimento = "722192";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("HOLAMBRA") && nomeOrigem.contains("AGRO") && nomeOrigem.contains("COOPERATIVA")) {
        conta = "722211";
        contaMovimento = "722211";
    }
    if (nomeOrigem.contains("ALIMENTOS") && nomeOrigem.contains("RIO") && nomeOrigem.contains("BRANCO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1244";
        contaMovimento = "1244";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MIXTA") && nomeOrigem.contains("SAO") && nomeOrigem.contains("ROQUE")) {
        conta = "722268";
        contaMovimento = "722268";
    }
    if (nomeOrigem.contains("SAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARLOS") && nomeOrigem.contains("BENEFICENTE")) {
        conta = "722279";
        contaMovimento = "722279";
    }
    if (nomeOrigem.contains("SANTO") && nomeOrigem.contains("USINA") && nomeOrigem.contains("ANGELO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722314";
        contaMovimento = "722314";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELETRICA") && nomeOrigem.contains("J") && nomeOrigem.contains("P")) {
        conta = "721818";
        contaMovimento = "721818";
    }
    if (nomeOrigem.contains("INCENDIO") && nomeOrigem.contains("PROTECAO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNIAO")) {
        conta = "722321";
        contaMovimento = "722321";
    }
    return conta;
}
public String getContaMovimento2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (nomeOrigem.contains("FAZENDA") && nomeOrigem.contains("MINERAL") && nomeOrigem.contains("DESENVOLVIMENTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721782";
        contaMovimento = "721782";
    }
    if (nomeOrigem.contains("INDEVIDO") && nomeOrigem.contains("DEBITO") && nomeOrigem.contains("DEVOLUCAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "19";
        contaMovimento = "19";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("MINUSCOLI") && nomeOrigem.contains("WILSON")) {
        conta = "19";
        contaMovimento = "19";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ALCA") && nomeOrigem.contains("FUNDICAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722525";
        contaMovimento = "722525";
    }
    if (nomeOrigem.contains("FIBRAFORM") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EMBALAGENS")) {
        conta = "721943";
        contaMovimento = "721943";
    }
    if (nomeOrigem.contains("NOROESTE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FIDENE") && complemento01.contains("REC")) {
        conta = "722489";
        contaMovimento = "722489";
    }
    if (nomeOrigem.contains("JAN") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("IMPL") && nomeOrigem.contains("AGRICOLAS")) {
        conta = "722558";
        contaMovimento = "722558";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ROTTA") && nomeOrigem.contains("SOL")) {
        conta = "722566";
        contaMovimento = "722566";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ATGB") && nomeOrigem.contains("MANUTENCAO")) {
        conta = "721810";
        contaMovimento = "721810";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("URBANO") && nomeOrigem.contains("AGROINDUSTRIAL") && complemento01.contains("REC")) {
        conta = "722008";
        contaMovimento = "722008";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUPERMERCADO") && nomeOrigem.contains("LUCAS") && complemento01.contains("REC")) {
        conta = "722575";
        contaMovimento = "722575";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("PARK") && nomeOrigem.contains("BUSINESS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722614";
        contaMovimento = "722614";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("ALIMENTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RASIP")) {
        conta = "1397";
        contaMovimento = "1397";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("THEREZINHA") && nomeOrigem.contains("RANDON") && complemento01.contains("REC")) {
        conta = "722485";
        contaMovimento = "722485";
    }
    if (nomeOrigem.contains("ESPUMAS") && nomeOrigem.contains("HERVAL") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722432";
        contaMovimento = "722432";
    }
    if (nomeOrigem.contains("FIRE") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRZ")) {
        conta = "722619";
        contaMovimento = "722619";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("XHARA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("DEPOSITO")) {
        conta = "722623";
        contaMovimento = "722623";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("TRI") && nomeOrigem.contains("HOTEL")) {
        conta = "722626";
        contaMovimento = "722626";
    }
    if (nomeOrigem.contains("FAST") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SUPRIMENTOS") && complemento01.contains("REC")) {
        conta = "722630";
        contaMovimento = "722630";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MINEIRO") && complemento01.contains("REC") && nomeOrigem.contains("CLUBE")) {
        conta = "722634";
        contaMovimento = "722634";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("SISTEMAS") && nomeOrigem.contains("COUTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722640";
        contaMovimento = "722640";
    }
    if (nomeOrigem.contains("REAL") && nomeOrigem.contains("SEGURANCA") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722643";
        contaMovimento = "722643";
    }
    if (nomeOrigem.contains("FRIGORIFICO") && complemento01.contains("REC") && nomeOrigem.contains("CONFIANCA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722624";
        contaMovimento = "722624";
    }
    if (nomeOrigem.contains("SAN") && nomeOrigem.contains("REMO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722428";
        contaMovimento = "722428";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("PPCI") && nomeOrigem.contains("CONFIANCA") && complemento01.contains("REC")) {
        conta = "722660";
        contaMovimento = "722660";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("TOP") && nomeOrigem.contains("SERVICE")) {
        conta = "722015";
        contaMovimento = "722015";
    }
    if (nomeOrigem.contains("ALUMICONTE") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("RENNER") && nomeOrigem.contains("HERRMANN") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722700";
        contaMovimento = "722700";
    }
    if (nomeOrigem.contains("ESTIRENO") && complemento01.contains("REC") && complemento01.contains("DEPOSITO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "7986";
        contaMovimento = "7986";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("MINAS") && nomeOrigem.contains("DAS")) {
        conta = "722722";
        contaMovimento = "722722";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("VFDL")) {
        conta = "722723";
        contaMovimento = "722723";
    }
    if (nomeOrigem.contains("DORES") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("RECREATIVO") && complemento01.contains("REC")) {
        conta = "722036";
        contaMovimento = "722036";
    }
    if (nomeOrigem.contains("DEVOLUCAO") && complemento01.contains("DEBITO") && nomeOrigem.contains("CHARLES") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "67";
        contaMovimento = "67";
    }
    if (nomeOrigem.contains("PINHEIROS") && nomeOrigem.contains("GRANJA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "721567";
        contaMovimento = "721567";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ANTONIO") && nomeOrigem.contains("ASSOCIACAO")) {
        conta = "722783";
        contaMovimento = "722783";
    }
    if (nomeOrigem.contains("320") && nomeOrigem.contains("OFFICE") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722815";
        contaMovimento = "722815";
    }
    if (nomeOrigem.contains("MILAGRE") && nomeOrigem.contains("ITM") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722822";
        contaMovimento = "722822";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BATISTA") && nomeOrigem.contains("HOSPITAL") && complemento01.contains("REC")) {
        conta = "722832";
        contaMovimento = "722832";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MAGIC") && nomeOrigem.contains("TOY")) {
        conta = "722834";
        contaMovimento = "722834";
    }
    if (nomeOrigem.contains("AGROBIOS") && complemento01.contains("REC") && nomeOrigem.contains("BOCCHI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722841";
        contaMovimento = "722841";
    }
    if (nomeOrigem.contains("CHAGAS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("PADRE")) {
        conta = "722865";
        contaMovimento = "722865";
    }
    if (nomeOrigem.contains("ESPACO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("GAIA")) {
        conta = "722826";
        contaMovimento = "722826";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("UNIMED") && nomeOrigem.contains("ALTO") && complemento01.contains("REC")) {
        conta = "722814";
        contaMovimento = "722814";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BARRAS") && nomeOrigem.contains("IBQ")) {
        conta = "722827";
        contaMovimento = "722827";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("FACE") && nomeOrigem.contains("RESIDENCIAL")) {
        conta = "722838";
        contaMovimento = "722838";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("USUARIOS") && nomeOrigem.contains("CEASA")) {
        conta = "722845";
        contaMovimento = "722845";
    }
    if (nomeOrigem.contains("IMACULADA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("CONGREGACAO")) {
        conta = "722873";
        contaMovimento = "722873";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MONT") && nomeOrigem.contains("BLANC")) {
        conta = "722875";
        contaMovimento = "722875";
    }
    if (nomeOrigem.contains("CULTURAL") && nomeOrigem.contains("FELIZ") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722877";
        contaMovimento = "722877";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("1858") && nomeOrigem.contains("BENEFICENTE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722878";
        contaMovimento = "722878";
    }
    if (nomeOrigem.contains("SCHENEIDER") && nomeOrigem.contains("PIERRY") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722880";
        contaMovimento = "722880";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("FERNANDES") && complemento01.contains("REC")) {
        conta = "722881";
        contaMovimento = "722881";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BRASILEIRA") && nomeOrigem.contains("JAPONESA") && complemento01.contains("REC")) {
        conta = "722891";
        contaMovimento = "722891";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("QUEIROZ") && nomeOrigem.contains("PEDROSA")) {
        conta = "722892";
        contaMovimento = "722892";
    }
    if (nomeOrigem.contains("JOAO") && nomeOrigem.contains("ARI") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722887";
        contaMovimento = "722887";
    }
    if (nomeOrigem.contains("RECANTO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("MAESTRO")) {
        conta = "722894";
        contaMovimento = "722894";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONTINENTAL") && complemento01.contains("REC") && nomeOrigem.contains("FERRAMENTAS")) {
        conta = "722850";
        contaMovimento = "722850";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MOVEIS") && nomeOrigem.contains("CARRARO")) {
        conta = "722844";
        contaMovimento = "722844";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ARCANJO") && nomeOrigem.contains("POUSADA") && complemento01.contains("REC")) {
        conta = "721544";
        contaMovimento = "721544";
    }
    if (nomeOrigem.contains("QUIMICA") && nomeOrigem.contains("GPC") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722893";
        contaMovimento = "722893";
    }
    if (complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("AMIGA") && nomeOrigem.contains("MAO")) {
        conta = "722916";
        contaMovimento = "722916";
    }
    if (nomeOrigem.contains("ICHIP") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722746";
        contaMovimento = "722746";
    }
    if (nomeOrigem.contains("LONDRINA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("PLAZA")) {
        conta = "722931";
        contaMovimento = "722931";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("MOVEIS") && nomeOrigem.contains("FLORENSE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722090";
        contaMovimento = "722090";
    }
    if (complemento01.contains("REC") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("BIOLAB") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "138";
        contaMovimento = "138";
    }
    if (complemento01.contains("REC") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("ZANLORENZI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("FATIMA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DEVOLUCAO") && nomeOrigem.contains("MARIA")) {
        conta = "64";
        contaMovimento = "64";
    }
    if (nomeOrigem.contains("BELAS") && nomeOrigem.contains("EMPREENDIMENTOS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722990";
        contaMovimento = "722990";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("CONJUNTO") && nomeOrigem.contains("MIGUEL")) {
        conta = "722995";
        contaMovimento = "722995";
    }
    if (nomeOrigem.contains("PATOS") && nomeOrigem.contains("FUNDACAO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723006";
        contaMovimento = "723006";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA") && complemento01.contains("REC") && nomeOrigem.contains("SEC")) {
        conta = "722569";
        contaMovimento = "722569";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("FERNANDES") && nomeOrigem.contains("INDEVIDO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722881";
        contaMovimento = "722881";
    }
    if (nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("EQUIPAMENTOS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SEPP")) {
        conta = "1464";
        contaMovimento = "1464";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EMTEC") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("INDUSTRIAL")) {
        conta = "2034";
        contaMovimento = "2034";
    }
    if (nomeOrigem.contains("TECHNICAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SERVICOS") && nomeOrigem.contains("FIRE")) {
        conta = "722018";
        contaMovimento = "722018";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CROSSFIRE") && nomeOrigem.contains("PROTECTION") && nomeOrigem.contains("SISTEMA")) {
        conta = "722018";
        contaMovimento = "722018";
    }
    if (nomeOrigem.contains("FIORENTIN") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SANDRO") && nomeOrigem.contains("CARLOS")) {
        conta = "228";
        contaMovimento = "228";
    }
    if (nomeOrigem.contains("BRASIL") && nomeOrigem.contains("GELITA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DO")) {
        conta = "722132";
        contaMovimento = "722132";
    }
    if (nomeOrigem.contains("COMERCIO") && nomeOrigem.contains("ARQ") && nomeOrigem.contains("SDAI") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2214";
        contaMovimento = "2214";
    }
    if (nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("TECHFIRE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722018";
        contaMovimento = "722018";
    }
    if (nomeOrigem.contains("EXTINTORES") && nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("SEGURANCA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722089";
        contaMovimento = "722089";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("BX") && nomeOrigem.contains("ENGENHARIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723033";
        contaMovimento = "723033";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FABRICA") && complemento01.contains("REC") && nomeOrigem.contains("ELASTICOS")) {
        conta = "723034";
        contaMovimento = "723034";
    }
    if (nomeOrigem.contains("ENGENHARIA") && complemento01.contains("REC") && nomeOrigem.contains("ACRO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722664";
        contaMovimento = "722664";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("MODULO") && nomeOrigem.contains("CONSULTORIA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "723035";
        contaMovimento = "723035";
    }
    if (nomeOrigem.contains("SUAPE") && nomeOrigem.contains("CEL") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "722058";
        contaMovimento = "722058";
    }
    if (complemento01.contains("DEPOSITO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MAFLOW") && complemento01.contains("REC")) {
        conta = "721805";
        contaMovimento = "721805";
    }
    if (nomeOrigem.contains("IMIGRANTES") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("HOTEL")) {
        conta = "723051";
        contaMovimento = "723051";
    }
    if (nomeOrigem.contains("KEEPCLEAR") && nomeOrigem.contains("INDEVIDO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC")) {
        conta = "11";
        contaMovimento = "11";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONSORCIOS") && nomeOrigem.contains("BRADESCO") && complemento01.contains("REC")) {
        conta = "157";
        contaMovimento = "157";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CEPON") && nomeOrigem.contains("APOIO") && nomeOrigem.contains("HEMOSC") && nomeOrigem.contains("FUNDACAO")) {
        conta = "89708";
        contaMovimento = "89708";
    }
    if (nomeOrigem.contains("APAG") && nomeOrigem.contains("COMERCIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("EXTINTORES")) {
        conta = "2394";
        contaMovimento = "2394";
    }
    if (nomeOrigem.contains("GSA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("DE") && nomeOrigem.contains("ENGENHARIA") && nomeOrigem.contains("SERVICOS")) {
        conta = "721886";
        contaMovimento = "721886";
    }
    if (nomeOrigem.contains("BWS") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EIRELI") && nomeOrigem.contains("INDUSTRIAL") && nomeOrigem.contains("MONTAGEM")) {
        conta = "721898";
        contaMovimento = "721898";
    }
    if (nomeOrigem.contains("CONDOMINIO") && nomeOrigem.contains("PRAIA") && nomeOrigem.contains("BELAS") && nomeOrigem.contains("POA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "721960";
        contaMovimento = "721960";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("REGIONAL") && nomeOrigem.contains("S") && nomeOrigem.contains("MEDICINA") && nomeOrigem.contains("J")) {
        conta = "721845";
        contaMovimento = "721845";
    }
    if (nomeOrigem.contains("CATARINA") && nomeOrigem.contains("ADVOGADOS") && nomeOrigem.contains("ORDEM") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SANTA")) {
        conta = "721889";
        contaMovimento = "721889";
    }
    if (nomeOrigem.contains("FIRE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("JL") && nomeOrigem.contains("EQUIPAMENTOS") && nomeOrigem.contains("SEGURANCA")) {
        conta = "1143";
        contaMovimento = "1143";
    }
    if (nomeOrigem.contains("EDIFICIO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CONDOMINIO") && nomeOrigem.contains("REGIA") && nomeOrigem.contains("VITORIA")) {
        conta = "722124";
        contaMovimento = "722124";
    }
    if (nomeOrigem.contains("ELETRONICA") && nomeOrigem.contains("SOLUCOES") && nomeOrigem.contains("SOFISTER") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TECNOLOGIA")) {
        conta = "722113";
        contaMovimento = "722113";
    }
    if (nomeOrigem.contains("ACO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VERDE") && nomeOrigem.contains("BRASIL") && nomeOrigem.contains("DO")) {
        conta = "2515";
        contaMovimento = "2515";
    }
    if (nomeOrigem.contains("ACUCAR") && nomeOrigem.contains("BATATAIS") && nomeOrigem.contains("USINA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ALCOOL")) {
        conta = "722167";
        contaMovimento = "722167";
    }
    if (nomeOrigem.contains("MANAGER CREDITO NAO IDENTIFICADO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11";
        contaMovimento = "11";
    }
    if (nomeOrigem.contains("PREVIDENCIARIA") && complemento01.contains("DEVOLUCAO") && nomeOrigem.contains("DARF") && complemento01.contains("BAIXA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "28";
        contaMovimento = "28";
    }
    if (nomeOrigem.contains("NAO") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && nomeOrigem.contains("IDENTIFICADO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (nomeOrigem.contains("USINA") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && nomeOrigem.contains("LUIZ") && nomeOrigem.contains("SAO")) {
        conta = "721976";
        contaMovimento = "721976";
    }
    if (nomeOrigem.contains("AROMAS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && nomeOrigem.contains("BANHO")) {
        conta = "722560";
        contaMovimento = "722560";
    }
    if (nomeOrigem.contains("MSE") && complemento01.contains("REC") && complemento01.contains("DEPOSITO") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ENGENHARIA")) {
        conta = "722620";
        contaMovimento = "722620";
    }
    if (nomeOrigem.contains("PONTAL") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ACUCAR")) {
        conta = "722716";
        contaMovimento = "722716";
    }
    if (complemento01.contains("DEBITO") && nomeOrigem.contains("COUTT") && nomeOrigem.contains("DEVOLUCAO") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("INDEVIDO")) {
        conta = "722035";
        contaMovimento = "722035";
    }
    if (nomeOrigem.contains("FERRAMENTAS") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("REC") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("CONTINENTAL")) {
        conta = "722850";
        contaMovimento = "722850";
    }
    if (nomeOrigem.contains("TAINHAS") && complemento01.contains("DEPOSITO") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("CARACOL")) {
        conta = "722914";
        contaMovimento = "722914";
    }
    if (complemento01.contains("REC") && complemento01.contains("DEPOSITO") && nomeOrigem.contains("ALFREDO") && nomeOrigem.contains("CABERLON") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722933";
        contaMovimento = "722933";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("ELETRICOS") && nomeOrigem.contains("MATERIAIS") && nomeOrigem.contains("DISTRIBUIDORA") && nomeOrigem.contains("MA")) {
        conta = "1471";
        contaMovimento = "1471";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("MARTINS") && nomeOrigem.contains("PAULO") && complemento01.contains("DEPOSITO") && complemento01.contains("REC")) {
        conta = "1606";
        contaMovimento = "1606";
    }
    if (nomeOrigem.contains("MARPA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("R2EJARAGUA")) {
        conta = "722839";
        contaMovimento = "722839";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BIOENERGIA") && nomeOrigem.contains("VITERRA")) {
        conta = "722180";
        contaMovimento = "722180";
    }
    if (nomeOrigem.contains("INOVA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("EPIS")) {
        conta = "722277";
        contaMovimento = "722277";
    }
    if (nomeOrigem.contains("ESTORNO") && nomeOrigem.contains("LANCAMENTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "19";
        contaMovimento = "19";
    }
    if (nomeOrigem.contains("JAGUARIBE") && nomeOrigem.contains("EDIFICIO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722453";
        contaMovimento = "722453";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALERIO") && complemento01.contains("REC")) {
        conta = "722705";
        contaMovimento = "722705";
    }
    if (nomeOrigem.contains("MADISSON") && complemento01.contains("REC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722816";
        contaMovimento = "722816";
    }
    if (nomeOrigem.contains("REEMBOLSO") && nomeOrigem.contains("SIND") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "61";
        contaMovimento = "61";
    }
    if (nomeOrigem.contains("CDB") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("APLICACAO") && nomeOrigem.contains("BRADESCO")) {
        conta = "191";
        contaMovimento = "191";
    }
    if (nomeOrigem.contains("PARANA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("NORPASI") && nomeOrigem.contains("NORTE")) {
        conta = "2599";
        contaMovimento = "2599";
    }
    if (nomeOrigem.contains("AGROINDUSTRIAL") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALE") && nomeOrigem.contains("COOPERATIVA")) {
        conta = "721519";
        contaMovimento = "721519";
    }
    if (nomeOrigem.contains("CONDOMINIO") && nomeOrigem.contains("VERISSIMO") && nomeOrigem.contains("ERICO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722275";
        contaMovimento = "722275";
    }
    if (nomeOrigem.contains("ACUCAR") && nomeOrigem.contains("VALE") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("TIJUCO")) {
        conta = "722322";
        contaMovimento = "722322";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("SPECIAL") && nomeOrigem.contains("DI") && nomeOrigem.contains("APLICACAO")) {
        conta = "383";
        contaMovimento = "383";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("POSTO") && nomeOrigem.contains("ITAGUARA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "722632";
        contaMovimento = "722632";
    }
    if (complemento01.contains("REC") && nomeOrigem.contains("CABERLON") && nomeOrigem.contains("ADIANTAMENTO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "270";
        contaMovimento = "270";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("BIOENERGIA") && complemento01.contains("REC") && nomeOrigem.contains("PLATINA")) {
        conta = "722896";
        contaMovimento = "722896";
    }
    if (nomeOrigem.contains("ADIANTAMENTO") && complemento01.contains("REC") && nomeOrigem.contains("SALARIAL") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "47";
        contaMovimento = "47";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("FAC") && nomeOrigem.contains("INVEST") && nomeOrigem.contains("BRADESCO") && nomeOrigem.contains("APLICACAO")) {
        conta = "158";
        contaMovimento = "158";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("APLICACAO") && nomeOrigem.contains("ESTORNO")) {
        conta = "191";
        contaMovimento = "191";
    }
    if (nomeOrigem.contains("AGROENERGIA") && nomeOrigem.contains("DESTILARIA") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("VALE") && nomeOrigem.contains("PARACATU")) {
        conta = "721884";
        contaMovimento = "721884";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (valorDocumento <= 0) { //ROT-2022-0930691
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) { //ROT-2021-0311491
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    return conta;
}
public String getContaMovimento3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getRegraContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'PIX ENVIADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGARME2', Complemento (06) nao contem 'PAGA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PUNTO2', Complemento (06) nao contem 'PAGO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'VALOR', Fornecedor/Cliente contem 'LIQUIDADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AME1', Complemento (04) contem 'EM BRANCO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (04) nao contem 'PAGAMENTO', Complemento (04) nao contem 'ASSINATURA', Complemento (04) nao contem 'SAQUE', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (03) nao contem 'APROVAD', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO1', Complemento (04) nao contem 'CONFIRMED', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO2', Complemento (04) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DETODOS', Complemento (03) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (04) nao contem 'COMPLETO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) {
        conta = "Quando Complemento (01) contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'REEMBOLSO', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'DINHEIRO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'VIA LOJA', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (04) nao contem 'EM BRANCO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (05) contem 'NAO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) {
        conta = "Quando Tipo Planilha contem 'PRATO', Complemento (01) contem 'PRATO', Complemento (03) nao contem 'CART', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_POLICARD', Complemento (03) contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '2', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '3', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '4', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '5', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '6', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '7', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '8', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '9', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AIQFOME1', Fornecedor/Cliente contem 'CANCELADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_STONE2', Complemento (04) contem 'CANCELAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '10', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '11', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '12', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '13', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '14', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '15', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '16', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '17', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '18', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_BMGCARD', Complemento (04) contem 'NAO', Complemento (04) contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (valorDocumento <= 0) {
        conta = "Quando Valor Documento menor ou igual a '0', CONTA MOVIMENTO SERA = 'IGNORAR'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_REDECARD3', Complemento (06) nao contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DOM1', Complemento (04) nao contem 'ENTRADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERCAST")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INTERCAST', CONTA MOVIMENTO SERA = '722102'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KLABIN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'KLABIN', CONTA MOVIMENTO SERA = '2512'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRAMETAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BRAMETAL', CONTA MOVIMENTO SERA = '722219'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MULTILUZ")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MULTILUZ', CONTA MOVIMENTO SERA = '722222'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILLPAR")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MILLPAR', CONTA MOVIMENTO SERA = '722327'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FPHL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FPHL', CONTA MOVIMENTO SERA = '722455'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMIL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COMIL', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMORES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AMORES', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORANGE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SORANGE', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRYSERVICE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELETRYSERVICE', CONTA MOVIMENTO SERA = '722461'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNICK")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RUDNICK', CONTA MOVIMENTO SERA = '722465'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EBANO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EBANO', CONTA MOVIMENTO SERA = '722466'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CDB")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CDB', CONTA MOVIMENTO SERA = '191'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VILLA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VILLA', CONTA MOVIMENTO SERA = '722488'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GONCALO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GONCALO', CONTA MOVIMENTO SERA = '722459'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORMADE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PORMADE', CONTA MOVIMENTO SERA = '721758'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'THEIA', CONTA MOVIMENTO SERA = '2514'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACEFRAN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ACEFRAN', CONTA MOVIMENTO SERA = '11'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIVA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PIVA', CONTA MOVIMENTO SERA = '722637'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AGRARIA', CONTA MOVIMENTO SERA = '722641'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMERICANAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AMERICANAS', CONTA MOVIMENTO SERA = '722016'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ITAU', CONTA MOVIMENTO SERA = '722655'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSARIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROSARIO', CONTA MOVIMENTO SERA = '722656'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANAGER CREDITO NAO IDENTIFICADO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MANAGER CREDITO NAO IDENTIFICADO', CONTA MOVIMENTO SERA = '11'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANAGER CREDITO NAO IDENTIFICADO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MANAGER CREDITO NAO IDENTIFICADO', CONTA MOVIMENTO SERA = '11'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARPA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MARPA', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORION") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ORION', Fornecedor/Cliente contem 'AUTOMACAO', CONTA MOVIMENTO SERA = '1367'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALDO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BALDO', Fornecedor/Cliente contem 'SA', CONTA MOVIMENTO SERA = '721722'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRIUNFO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TRIUNFO', Fornecedor/Cliente contem 'COMERCIO', CONTA MOVIMENTO SERA = '721530'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DG', Fornecedor/Cliente contem 'ENGENHARIA', CONTA MOVIMENTO SERA = '721836'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CO2") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARQUITETURA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CO2', Fornecedor/Cliente contem 'ARQUITETURA', CONTA MOVIMENTO SERA = '721760'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REGIS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KLIDZIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REGIS', Fornecedor/Cliente contem 'KLIDZIO', CONTA MOVIMENTO SERA = '721887'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRIGORIFICO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTRA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRIGORIFICO', Fornecedor/Cliente contem 'ASTRA', CONTA MOVIMENTO SERA = '721894'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRED") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPSULA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRED', Fornecedor/Cliente contem 'CAPSULA', CONTA MOVIMENTO SERA = '721896'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERCOMAQ") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SERCOMAQ', Fornecedor/Cliente contem 'AUTOMACAO', CONTA MOVIMENTO SERA = '1265'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NOVACKI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NOVACKI', Fornecedor/Cliente contem 'EMBALAGENS', CONTA MOVIMENTO SERA = '721971'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARTZ")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HOTEL', Fornecedor/Cliente contem 'BARTZ', CONTA MOVIMENTO SERA = '721977'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRAIBURGO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRICOLA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRAIBURGO', Fornecedor/Cliente contem 'AGRICOLA', CONTA MOVIMENTO SERA = '721754'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELLBRUCK") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BELLBRUCK', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722010'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAFAEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01200726022")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RAFAEL', Fornecedor/Cliente contem '01200726022', CONTA MOVIMENTO SERA = '721698'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPREITEIRA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUITA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EMPREITEIRA', Fornecedor/Cliente contem 'CONSTRUITA', CONTA MOVIMENTO SERA = '722020'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PELES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINUANO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PELES', Fornecedor/Cliente contem 'MINUANO', CONTA MOVIMENTO SERA = '1118'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VINICOLA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PERINI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VINICOLA', Fornecedor/Cliente contem 'PERINI', CONTA MOVIMENTO SERA = '31901'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NASSAR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BODNAR")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NASSAR', Fornecedor/Cliente contem 'BODNAR', CONTA MOVIMENTO SERA = '722048'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARRER") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CARRER', Fornecedor/Cliente contem 'ALIMENTOS', CONTA MOVIMENTO SERA = '722027'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARQUIDIOCESE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ARQUIDIOCESE', Fornecedor/Cliente contem 'MONTES', CONTA MOVIMENTO SERA = '722044'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLARE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEICULOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VOLARE', Fornecedor/Cliente contem 'VEICULOS', CONTA MOVIMENTO SERA = '722043'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOSAPAR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAQUIM")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'JOSAPAR', Fornecedor/Cliente contem 'JOAQUIM', CONTA MOVIMENTO SERA = '721825'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPACHOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KAPAZI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CAPACHOS', Fornecedor/Cliente contem 'KAPAZI', CONTA MOVIMENTO SERA = '722166'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GLG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPREENDIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GLG', Fornecedor/Cliente contem 'EMPREENDIMENTOS', CONTA MOVIMENTO SERA = '722058'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIECELLI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VIECELLI', Fornecedor/Cliente contem 'MOVEIS', CONTA MOVIMENTO SERA = '722060'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOTORANTIM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VOTORANTIM', Fornecedor/Cliente contem 'CIMENTOS', CONTA MOVIMENTO SERA = '722092'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESTILARIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CACHOEIRA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DESTILARIA', Fornecedor/Cliente contem 'CACHOEIRA', CONTA MOVIMENTO SERA = '722106'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIBRA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INGREDIENTES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ALIBRA', Fornecedor/Cliente contem 'INGREDIENTES', CONTA MOVIMENTO SERA = '721912'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JCS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EQUIPAMENTOS', Fornecedor/Cliente contem 'JCS', CONTA MOVIMENTO SERA = '722154'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S3") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUCAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'S3', Fornecedor/Cliente contem 'CONSTRUCAO', CONTA MOVIMENTO SERA = '721709'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UPFIELD") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUTIONS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UPFIELD', Fornecedor/Cliente contem 'SOLUTIONS', CONTA MOVIMENTO SERA = '722126'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMANDO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELETRICA', Fornecedor/Cliente contem 'COMANDO', CONTA MOVIMENTO SERA = '722179'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NOVA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NOVA', Fornecedor/Cliente contem 'ELETRICA', CONTA MOVIMENTO SERA = '1969'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NACIGUAT")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CONSORCIO', Fornecedor/Cliente contem 'NACIGUAT', CONTA MOVIMENTO SERA = '722116'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("INDEVIDO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'CREDITO', Complemento (01) contem 'INDEVIDO', CONTA MOVIMENTO SERA = '11'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EPPLAN") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUTORA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EPPLAN', Fornecedor/Cliente contem 'CONSTRUTORA', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRIOZEM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARMAZENS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRIOZEM', Fornecedor/Cliente contem 'ARMAZENS', CONTA MOVIMENTO SERA = '721948'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLAVOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIALIZACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FLAVOR', Fornecedor/Cliente contem 'INDUSTRIALIZACAO', CONTA MOVIMENTO SERA = '722112'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAFOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NAFOR', Fornecedor/Cliente contem 'COMERCIO', CONTA MOVIMENTO SERA = '721572'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAMTEK") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UPS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RAMTEK', Fornecedor/Cliente contem 'UPS', CONTA MOVIMENTO SERA = '1202'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CPX") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRIBUIDORA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CPX', Fornecedor/Cliente contem 'DISTRIBUIDORA', CONTA MOVIMENTO SERA = '722125'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COFCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNATIONAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COFCO', Fornecedor/Cliente contem 'INTERNATIONAL', CONTA MOVIMENTO SERA = '722150'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DORI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DORI', Fornecedor/Cliente contem 'ALIMENTOS', CONTA MOVIMENTO SERA = '722159'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SYSC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SYSC', Fornecedor/Cliente contem 'AUTOMACAO', CONTA MOVIMENTO SERA = '722177'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDICAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIDERAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FUNDICAO', Fornecedor/Cliente contem 'SIDERAL', CONTA MOVIMENTO SERA = '722216'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MULTIMOVEIS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MULTIMOVEIS', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722129'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RCR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REPRESENTAES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RCR', Fornecedor/Cliente contem 'REPRESENTAES', CONTA MOVIMENTO SERA = '722217'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOSAIC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERTILIZANTES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MOSAIC', Fornecedor/Cliente contem 'FERTILIZANTES', CONTA MOVIMENTO SERA = '722218'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PERIPAN") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PERIPAN', Fornecedor/Cliente contem 'INDUSTRIAL', CONTA MOVIMENTO SERA = '721690'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOSPITALAR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENEFICENTE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HOSPITALAR', Fornecedor/Cliente contem 'BENEFICENTE', CONTA MOVIMENTO SERA = '722220'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETROCAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELETROCAL', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722200'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIDASUL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRIBUIDORA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UNIDASUL', Fornecedor/Cliente contem 'DISTRIBUIDORA', CONTA MOVIMENTO SERA = '722017'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEXCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REVESTIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DEXCO', Fornecedor/Cliente contem 'REVESTIMENTOS', CONTA MOVIMENTO SERA = '722205'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARTESANO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ARTESANO', Fornecedor/Cliente contem 'MOVEIS', CONTA MOVIMENTO SERA = '722206'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOZ") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAPECO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FOZ', Fornecedor/Cliente contem 'CHAPECO', CONTA MOVIMENTO SERA = '722208'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FEPESE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FEPESE', Fornecedor/Cliente contem 'SUPERMERCADOS', CONTA MOVIMENTO SERA = '721781'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALPESTRE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HOTEL', Fornecedor/Cliente contem 'ALPESTRE', CONTA MOVIMENTO SERA = '721919'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CRV") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CRV', Fornecedor/Cliente contem 'INDUSTRIAL', CONTA MOVIMENTO SERA = '722209'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PBG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PBG', Fornecedor/Cliente contem 'SA', CONTA MOVIMENTO SERA = '722151'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CDNL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CDNL', Fornecedor/Cliente contem 'ADMINISTRACAO', CONTA MOVIMENTO SERA = '721513'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UNIMED', Fornecedor/Cliente contem 'PORTO', CONTA MOVIMENTO SERA = '2592'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UP") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UP', Fornecedor/Cliente contem 'TEC', CONTA MOVIMENTO SERA = '722267'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SDA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESPACHOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SDA', Fornecedor/Cliente contem 'DESPACHOS', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRADE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GARDEN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TRADE', Fornecedor/Cliente contem 'GARDEN', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINERACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TABOCA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MINERACAO', Fornecedor/Cliente contem 'TABOCA', CONTA MOVIMENTO SERA = '722214'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIORANZA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TRANSPORTES', Fornecedor/Cliente contem 'MIORANZA', CONTA MOVIMENTO SERA = '722263'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAMY") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SAMY', Fornecedor/Cliente contem 'COMERCIAL', CONTA MOVIMENTO SERA = '722264'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSCAR")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CAIO', Fornecedor/Cliente contem 'INDUSCAR', CONTA MOVIMENTO SERA = '722266'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIDROMIR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VIDROMIR', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722269'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOMPEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DOMPEL', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PILARES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOLOGIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PILARES', Fornecedor/Cliente contem 'TECNOLOGIA', CONTA MOVIMENTO SERA = '722271'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPACTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'IMPACTO', Fornecedor/Cliente contem 'ENGENHARIA', CONTA MOVIMENTO SERA = '722274'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DONNOPEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DONNOPEL', Fornecedor/Cliente contem 'EMBALAGENS', CONTA MOVIMENTO SERA = '722276'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROBERTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACCIN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROBERTO', Fornecedor/Cliente contem 'FACCIN', CONTA MOVIMENTO SERA = '721813'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZILLI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ZILLI', Fornecedor/Cliente contem 'SANTOS', CONTA MOVIMENTO SERA = '721906'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HEDI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("K")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HEDI', Fornecedor/Cliente contem 'K', CONTA MOVIMENTO SERA = '722265'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLESCH") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FLESCH', Fornecedor/Cliente contem 'ELETRO', CONTA MOVIMENTO SERA = '722286'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FORTE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINTORES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FORTE', Fornecedor/Cliente contem 'EXTINTORES', CONTA MOVIMENTO SERA = '722359'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RAMALHO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELETRO', Fornecedor/Cliente contem 'RAMALHO', CONTA MOVIMENTO SERA = '722101'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANTIQUEIRA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MANTIQUEIRA', Fornecedor/Cliente contem 'ALIMENTOS', CONTA MOVIMENTO SERA = '2215'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADBURY") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BRADBURY', Fornecedor/Cliente contem 'ENGENHARIA', CONTA MOVIMENTO SERA = '722287'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THALES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NUNES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'THALES', Fornecedor/Cliente contem 'NUNES', CONTA MOVIMENTO SERA = '722288'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SGS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POLIMEROS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SGS', Fornecedor/Cliente contem 'POLIMEROS', CONTA MOVIMENTO SERA = '721838'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SULA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MODAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SULA', Fornecedor/Cliente contem 'MODAS', CONTA MOVIMENTO SERA = '722313'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZAMBIANCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUCAR")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ZAMBIANCO', Fornecedor/Cliente contem 'ACUCAR', CONTA MOVIMENTO SERA = '722316'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCORPORACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DES', Fornecedor/Cliente contem 'INCORPORACAO', CONTA MOVIMENTO SERA = '722324'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENIZE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHINATO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DENIZE', Fornecedor/Cliente contem 'CHINATO', CONTA MOVIMENTO SERA = '722325'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AACQUA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECOTURISMO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AACQUA', Fornecedor/Cliente contem 'ECOTURISMO', CONTA MOVIMENTO SERA = '722326'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZAHONERO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPUMAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ZAHONERO', Fornecedor/Cliente contem 'ESPUMAS', CONTA MOVIMENTO SERA = '722328'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOVOLT") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TECNOVOLT', Fornecedor/Cliente contem 'ELETRICOS', CONTA MOVIMENTO SERA = '722330'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COPRAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COPRAL', Fornecedor/Cliente contem 'ADMINISTRACAO', CONTA MOVIMENTO SERA = '722361'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATT") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ATT', Fornecedor/Cliente contem 'SOLUCOES', CONTA MOVIMENTO SERA = '722403'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("I9") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'I9', Fornecedor/Cliente contem 'ENGENHARIA', CONTA MOVIMENTO SERA = '722370'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INSTRUMENTACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IEG")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INSTRUMENTACAO', Fornecedor/Cliente contem 'IEG', CONTA MOVIMENTO SERA = '722404'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEBIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RECEBIMENTO', Fornecedor/Cliente contem 'CONSORCIO', CONTA MOVIMENTO SERA = '722116'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XP")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BANCO', Fornecedor/Cliente contem 'XP', CONTA MOVIMENTO SERA = '412'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DEVOLVIDA', Fornecedor/Cliente contem 'AUGUSTO', CONTA MOVIMENTO SERA = '197'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISIEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KRICHAKI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELISIEL', Fornecedor/Cliente contem 'KRICHAKI', CONTA MOVIMENTO SERA = '722445'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OREGON") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTERS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'OREGON', Fornecedor/Cliente contem 'CENTERS', CONTA MOVIMENTO SERA = '722449'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVARE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COELHO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SERVARE', Fornecedor/Cliente contem 'COELHO', CONTA MOVIMENTO SERA = '722451'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEGA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MEGA', Fornecedor/Cliente contem 'BRASIL', CONTA MOVIMENTO SERA = '722454'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECON") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TECON', Fornecedor/Cliente contem 'RIO', CONTA MOVIMENTO SERA = '722038'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOULEVARD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BOULEVARD', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722467'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANAGER")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PRO', Fornecedor/Cliente contem 'MANAGER', CONTA MOVIMENTO SERA = '722471'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JESUS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'JESUS', Fornecedor/Cliente contem 'ENGENHARIA', CONTA MOVIMENTO SERA = '722477'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ASTI', Fornecedor/Cliente contem 'ADMINISTRACAO', CONTA MOVIMENTO SERA = '722565'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALDA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DEVOLVIDA', Fornecedor/Cliente contem 'ALDA', CONTA MOVIMENTO SERA = '23318'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENIS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALMEIDA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DENIS', Fornecedor/Cliente contem 'ALMEIDA', CONTA MOVIMENTO SERA = '11'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOSCO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BOSCO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722507'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURTADO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FURTADO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722510'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRIGA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'BARRIGA', CONTA MOVIMENTO SERA = '722519'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADESP")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'MADESP', CONTA MOVIMENTO SERA = '722520'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSINA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROSINA', Fornecedor/Cliente contem 'PORTAS', CONTA MOVIMENTO SERA = '721575'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORTOLINI") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BORTOLINI', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722524'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOHT")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'DOHT', CONTA MOVIMENTO SERA = '722553'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIAMANTOPOULOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'DIAMANTOPOULOS', CONTA MOVIMENTO SERA = '722482'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANOL") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GRANOL', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722182'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PETRIBU")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'PETRIBU', CONTA MOVIMENTO SERA = '722584'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'MOTA', CONTA MOVIMENTO SERA = '722561'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUIMIS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'QUIMIS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722571'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELMAR") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ELMAR', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722576'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLTAGEM") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VOLTAGEM', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722578'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLCERA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'SOLCERA', CONTA MOVIMENTO SERA = '722579'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COAMO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COAMO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '2579'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARQUENSE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'MARQUENSE', CONTA MOVIMENTO SERA = '722616'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUSPENTECH") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SUSPENTECH', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721741'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COCARI") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COCARI', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722582'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPRICCHE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'CAPRICCHE', CONTA MOVIMENTO SERA = '722617'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMIL") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CAMIL', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721553'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIRANTI") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MIRANTI', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721972'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KYLY") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'KYLY', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722627'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SHMV") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SHMV', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722628'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXCEPCIONAIS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EXCEPCIONAIS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722422'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CERVOSUL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'CERVOSUL', CONTA MOVIMENTO SERA = '722629'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORENGE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SORENGE', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722563'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOGIANA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MOGIANA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722633'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EKIPER") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EKIPER', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722635'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TODESCHINI") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TODESCHINI', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722431'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAUTOS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NAUTOS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722638'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMX") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AMX', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722550'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERGRUPPO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SUPERGRUPPO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722642'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTESYSTEM") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'PROTESYSTEM', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722676'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUELENSE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MIGUELENSE', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722426'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COQUEIROS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COQUEIROS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722452'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIAN") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SIAN', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722567'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPORTE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OBRAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SUPORTE', Fornecedor/Cliente contem 'OBRAS', CONTA MOVIMENTO SERA = '722644'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILKA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MILKA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722654'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IGUATEMI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEGRE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'IGUATEMI', Fornecedor/Cliente contem 'ALEGRE', CONTA MOVIMENTO SERA = '722657'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGEPLAN") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AGEPLAN', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722658'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COPELMI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'COPELMI', CONTA MOVIMENTO SERA = '722652'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANDEIRANTES") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BANDEIRANTES', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722653'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REALTY") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REALTY', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722661'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FONTANA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'FONTANA', CONTA MOVIMENTO SERA = '722662'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S3")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'S3', CONTA MOVIMENTO SERA = '721709'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIRISA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'PIRISA', CONTA MOVIMENTO SERA = '722663'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINSEG")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'EXTINSEG', CONTA MOVIMENTO SERA = '722666'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CATAFESTA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CATAFESTA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722667'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMBROSI") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AMBROSI', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722668'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOVIDRO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'TECNOVIDRO', CONTA MOVIMENTO SERA = '722669'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AQUILA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AQUILA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722670'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMIGAO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'AMIGAO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722674'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPASSS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COMPASSS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722526'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOGOCEM")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'FOGOCEM', CONTA MOVIMENTO SERA = '722677'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'CELO', CONTA MOVIMENTO SERA = '722679'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUMEPE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'SUMEPE', CONTA MOVIMENTO SERA = '722684'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROMETAL") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROMETAL', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721751'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FIBRA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722685'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZEN") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ZEN', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722702'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("3P") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem '3P', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722714'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIOGO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEVERO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DIOGO', Fornecedor/Cliente contem 'SEVERO', CONTA MOVIMENTO SERA = '93960'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VITERRA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BIOENERGIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VITERRA', Fornecedor/Cliente contem 'BIOENERGIA', CONTA MOVIMENTO SERA = '722180'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INOVA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EPIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INOVA', Fornecedor/Cliente contem 'EPIS', CONTA MOVIMENTO SERA = '722277'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LANCAMENTO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ESTORNO', Fornecedor/Cliente contem 'LANCAMENTO', CONTA MOVIMENTO SERA = '19'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDIFICIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAGUARIBE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EDIFICIO', Fornecedor/Cliente contem 'JAGUARIBE', CONTA MOVIMENTO SERA = '722453'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ESTORNO', Fornecedor/Cliente contem 'APLICACAO', CONTA MOVIMENTO SERA = '191'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEGA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MEGA', Fornecedor/Cliente contem 'SERVICOS', Fornecedor/Cliente contem 'SOLUCOES', CONTA MOVIMENTO SERA = '721577'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DMH") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DISTRIBUIDORA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALARMES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DMH', Fornecedor/Cliente contem 'DISTRIBUIDORA', Fornecedor/Cliente contem 'ALARMES', CONTA MOVIMENTO SERA = '1034'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SYGMA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEK") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIRE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SYGMA', Fornecedor/Cliente contem 'TEK', Fornecedor/Cliente contem 'FIRE', CONTA MOVIMENTO SERA = '721816'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JMC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'JMC', Fornecedor/Cliente contem 'COMERCIO', Fornecedor/Cliente contem 'EQUIPAMENTOS', CONTA MOVIMENTO SERA = '721537'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRAME") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADEIRAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPECIAIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRAME', Fornecedor/Cliente contem 'MADEIRAS', Fornecedor/Cliente contem 'ESPECIAIS', CONTA MOVIMENTO SERA = '721835'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SENHORA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRACAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOSPITAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SENHORA', Fornecedor/Cliente contem 'GRACAS', Fornecedor/Cliente contem 'HOSPITAL', CONTA MOVIMENTO SERA = '722026'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VULCABRAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARTIGOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CALCADOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VULCABRAS', Fornecedor/Cliente contem 'ARTIGOS', Fornecedor/Cliente contem 'CALCADOS', CONTA MOVIMENTO SERA = '721959'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SONIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BAMBICINI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REGINA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SONIA', Fornecedor/Cliente contem 'BAMBICINI', Fornecedor/Cliente contem 'REGINA', CONTA MOVIMENTO SERA = '721947'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VILLA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOBOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HOTEL', Fornecedor/Cliente contem 'VILLA', Fornecedor/Cliente contem 'LOBOS', CONTA MOVIMENTO SERA = '722003'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SHOPPING") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELLA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CITTA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SHOPPING', Fornecedor/Cliente contem 'BELLA', Fornecedor/Cliente contem 'CITTA', CONTA MOVIMENTO SERA = '722005'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SMURFIT") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KAPPA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENTO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SMURFIT', Fornecedor/Cliente contem 'KAPPA', Fornecedor/Cliente contem 'BENTO', CONTA MOVIMENTO SERA = '721901'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTAGEM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONEGLIAN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MONTAGEM', Fornecedor/Cliente contem 'ELETRICA', Fornecedor/Cliente contem 'CONEGLIAN', CONTA MOVIMENTO SERA = '722057'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERTILIZANTES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANDE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FERTILIZANTES', Fornecedor/Cliente contem 'RIO', Fornecedor/Cliente contem 'GRANDE', CONTA MOVIMENTO SERA = '722067'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALQUIMIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPACHOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ALQUIMIA', Fornecedor/Cliente contem 'CAPACHOS', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722033'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIORA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREVENCAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCENDIOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FIORA', Fornecedor/Cliente contem 'PREVENCAO', Fornecedor/Cliente contem 'INCENDIOS', CONTA MOVIMENTO SERA = '722041'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POUSADA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BLUMENBERG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'POUSADA', Fornecedor/Cliente contem 'BLUMENBERG', Fornecedor/Cliente contem 'HOTEL', CONTA MOVIMENTO SERA = '722053'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RSB") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INFORMATICA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REPRESENTACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RSB', Fornecedor/Cliente contem 'INFORMATICA', Fornecedor/Cliente contem 'REPRESENTACAO', CONTA MOVIMENTO SERA = '1886'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINSEG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMNETOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURANCA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EXTINSEG', Fornecedor/Cliente contem 'EQUIPAMNETOS', Fornecedor/Cliente contem 'SEGURANCA', CONTA MOVIMENTO SERA = '722064'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LABORATORIOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIERRE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABRE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'LABORATORIOS', Fornecedor/Cliente contem 'PIERRE', Fornecedor/Cliente contem 'FABRE', CONTA MOVIMENTO SERA = '721817'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORGHETTI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TURBOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOTIVOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BORGHETTI', Fornecedor/Cliente contem 'TURBOS', Fornecedor/Cliente contem 'AUTOMOTIVOS', CONTA MOVIMENTO SERA = '2375'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REFINADORA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMAZONIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPANHIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REFINADORA', Fornecedor/Cliente contem 'AMAZONIA', Fornecedor/Cliente contem 'COMPANHIA', CONTA MOVIMENTO SERA = '722107'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BAVARIAN") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PLATZ") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDOMINIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BAVARIAN', Fornecedor/Cliente contem 'PLATZ', Fornecedor/Cliente contem 'CONDOMINIO', CONTA MOVIMENTO SERA = '722111'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GOBBA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LEATHER") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GOBBA', Fornecedor/Cliente contem 'LEATHER', Fornecedor/Cliente contem 'COMERCIO', CONTA MOVIMENTO SERA = '722108'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDOMINIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITALIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESIDENCIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CONDOMINIO', Fornecedor/Cliente contem 'ITALIA', Fornecedor/Cliente contem 'RESIDENCIAL', CONTA MOVIMENTO SERA = '722115'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HALLON") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCENDIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HALLON', Fornecedor/Cliente contem 'EQUIPAMENTOS', Fornecedor/Cliente contem 'INCENDIO', CONTA MOVIMENTO SERA = '722133'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NILVA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZAGO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CORREA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NILVA', Fornecedor/Cliente contem 'ZAGO', Fornecedor/Cliente contem 'CORREA', CONTA MOVIMENTO SERA = '722145'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIX") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LITORAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MIX', Fornecedor/Cliente contem 'ALIMENTOS', Fornecedor/Cliente contem 'LITORAL', CONTA MOVIMENTO SERA = '722146'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTOK") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REPRESENTACOES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ESTOK', Fornecedor/Cliente contem 'REPRESENTACOES', Fornecedor/Cliente contem 'COMERCIO', CONTA MOVIMENTO SERA = '722147'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEMIL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INDEMIL', Fornecedor/Cliente contem 'COMERCIO', Fornecedor/Cliente contem 'INDUSTRIA', CONTA MOVIMENTO SERA = '722148'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNICASA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UNICASA', Fornecedor/Cliente contem 'INDUSTRIA', Fornecedor/Cliente contem 'MOVEIS', CONTA MOVIMENTO SERA = '721721'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAXEL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MATERIAIS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MAXEL', Fornecedor/Cliente contem 'MATERIAIS', Fornecedor/Cliente contem 'ELETRICOS', CONTA MOVIMENTO SERA = '722040'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VEX") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VEX', Fornecedor/Cliente contem 'LOGISTICA', Fornecedor/Cliente contem 'TRANSPORTES', CONTA MOVIMENTO SERA = '722149'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINERADORA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FREI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANECA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MINERADORA', Fornecedor/Cliente contem 'FREI', Fornecedor/Cliente contem 'CANECA', CONTA MOVIMENTO SERA = '722152'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TW") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSPORTES") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGISTICA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TW', Fornecedor/Cliente contem 'TRANSPORTES', Fornecedor/Cliente contem 'LOGISTICA', CONTA MOVIMENTO SERA = '722153'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACAI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTICIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ACAI', Fornecedor/Cliente contem 'COMERCIO', Fornecedor/Cliente contem 'ALIMENTICIO', CONTA MOVIMENTO SERA = '722155'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRETO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GAS', Fornecedor/Cliente contem 'RIO', Fornecedor/Cliente contem 'PRETO', CONTA MOVIMENTO SERA = '722157'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SNP") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCORPORACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSTRUCAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SNP', Fornecedor/Cliente contem 'INCORPORACAO', Fornecedor/Cliente contem 'CONSTRUCAO', CONTA MOVIMENTO SERA = '722158'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROGERIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PASQUALI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARVALHO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROGERIO', Fornecedor/Cliente contem 'PASQUALI', Fornecedor/Cliente contem 'CARVALHO', CONTA MOVIMENTO SERA = '722160'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("YARA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERTILIZANTES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'YARA', Fornecedor/Cliente contem 'BRASIL', Fornecedor/Cliente contem 'FERTILIZANTES', CONTA MOVIMENTO SERA = '2478'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BAURU") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COOPERATIVA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'UNIMED', Fornecedor/Cliente contem 'BAURU', Fornecedor/Cliente contem 'COOPERATIVA', CONTA MOVIMENTO SERA = '722165'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANOL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXPORTACAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GRANOL', Fornecedor/Cliente contem 'INDUSTRIA', Fornecedor/Cliente contem 'EXPORTACAO', CONTA MOVIMENTO SERA = '722182'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TERA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MASTER") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INFORMATICA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TERA', Fornecedor/Cliente contem 'MASTER', Fornecedor/Cliente contem 'INFORMATICA', CONTA MOVIMENTO SERA = '722091'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SONIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOUTINHO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALVARADO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SONIA', Fornecedor/Cliente contem 'MOUTINHO', Fornecedor/Cliente contem 'ALVARADO', CONTA MOVIMENTO SERA = '722183'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCENDIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VL', Fornecedor/Cliente contem 'SISTEMAS', Fornecedor/Cliente contem 'INCENDIO', CONTA MOVIMENTO SERA = '721745'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTRAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RODOVIARIOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPLEMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CENTRAL', Fornecedor/Cliente contem 'RODOVIARIOS', Fornecedor/Cliente contem 'IMPLEMENTOS', CONTA MOVIMENTO SERA = '722171'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOST") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMOTIVOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'JOST', Fornecedor/Cliente contem 'AUTOMOTIVOS', Fornecedor/Cliente contem 'SISTEMAS', CONTA MOVIMENTO SERA = '722184'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REFINARIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIOGRANDENSE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PETROLEO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REFINARIA', Fornecedor/Cliente contem 'RIOGRANDENSE', Fornecedor/Cliente contem 'PETROLEO', CONTA MOVIMENTO SERA = '722185'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TREINAMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ASG', Fornecedor/Cliente contem 'TREINAMENTO', Fornecedor/Cliente contem 'SERVICOS', CONTA MOVIMENTO SERA = '722174'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BRS', Fornecedor/Cliente contem 'INDUSTRIA', Fornecedor/Cliente contem 'MOVEIS', CONTA MOVIMENTO SERA = '722187'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOCKINK") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICAS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FOCKINK', Fornecedor/Cliente contem 'INDUSTRIAS', Fornecedor/Cliente contem 'ELETRICAS', CONTA MOVIMENTO SERA = '721824'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LAURO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WEBER") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'LAURO', Fornecedor/Cliente contem 'WEBER', Fornecedor/Cliente contem 'CIA', CONTA MOVIMENTO SERA = '722223'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGLERT")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FUNDACAO', Fornecedor/Cliente contem 'LUIZ', Fornecedor/Cliente contem 'ENGLERT', CONTA MOVIMENTO SERA = '722202'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DUAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DUARTE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALBUQUERQUE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DUAL', Fornecedor/Cliente contem 'DUARTE', Fornecedor/Cliente contem 'ALBUQUERQUE', CONTA MOVIMENTO SERA = '722192'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COOPERATIVA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOLAMBRA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COOPERATIVA', Fornecedor/Cliente contem 'AGRO', Fornecedor/Cliente contem 'HOLAMBRA', CONTA MOVIMENTO SERA = '722211'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRANCO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RIO', Fornecedor/Cliente contem 'ALIMENTOS', Fornecedor/Cliente contem 'BRANCO', CONTA MOVIMENTO SERA = '1244'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIXTA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROQUE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MIXTA', Fornecedor/Cliente contem 'SAO', Fornecedor/Cliente contem 'ROQUE', CONTA MOVIMENTO SERA = '722268'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENEFICENTE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BENEFICENTE', Fornecedor/Cliente contem 'SAO', Fornecedor/Cliente contem 'CARLOS', CONTA MOVIMENTO SERA = '722279'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCENDIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTECAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INCENDIO', Fornecedor/Cliente contem 'PROTECAO', Fornecedor/Cliente contem 'UNIAO', CONTA MOVIMENTO SERA = '722321'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INCENDIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTECAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIAO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'INCENDIO', Fornecedor/Cliente contem 'PROTECAO', Fornecedor/Cliente contem 'UNIAO', CONTA MOVIMENTO SERA = '722321'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESENVOLVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINERAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DESENVOLVIMENTO', Fornecedor/Cliente contem 'MINERAL', Fornecedor/Cliente contem 'FAZENDA', CONTA MOVIMENTO SERA = '721782'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESENVOLVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINERAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAZENDA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DESENVOLVIMENTO', Fornecedor/Cliente contem 'MINERAL', Fornecedor/Cliente contem 'FAZENDA', CONTA MOVIMENTO SERA = '721782'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USINA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANGELO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SANTO', Fornecedor/Cliente contem 'USINA', Fornecedor/Cliente contem 'ANGELO', CONTA MOVIMENTO SERA = '722314'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("P") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRICA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'P', Fornecedor/Cliente contem 'J', Fornecedor/Cliente contem 'ELETRICA', CONTA MOVIMENTO SERA = '721818'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEVIDO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DEVOLUCAO', Fornecedor/Cliente contem 'DEBITO', Fornecedor/Cliente contem 'INDEVIDO', CONTA MOVIMENTO SERA = '19'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINUSCOLI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'DEPOSITO', Fornecedor/Cliente contem 'WILSON', Fornecedor/Cliente contem 'MINUSCOLI', CONTA MOVIMENTO SERA = '19'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CDB")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'APLICACAO', Fornecedor/Cliente contem 'BRADESCO', Fornecedor/Cliente contem 'CDB', CONTA MOVIMENTO SERA = '191'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORPASI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORTE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARANA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NORPASI', Fornecedor/Cliente contem 'NORTE', Fornecedor/Cliente contem 'PARANA', CONTA MOVIMENTO SERA = '2599'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COOPERATIVA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROINDUSTRIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'VALE', Fornecedor/Cliente contem 'COOPERATIVA', Fornecedor/Cliente contem 'AGROINDUSTRIAL', CONTA MOVIMENTO SERA = '721519'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ERICO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VERISSIMO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDOMINIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ERICO', Fornecedor/Cliente contem 'VERISSIMO', Fornecedor/Cliente contem 'CONDOMINIO', CONTA MOVIMENTO SERA = '722275'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TIJUCO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUCAR")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'TIJUCO', Fornecedor/Cliente contem 'VALE', Fornecedor/Cliente contem 'ACUCAR', CONTA MOVIMENTO SERA = '722322'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SPECIAL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'APLICACAO', Fornecedor/Cliente contem 'DI', Fornecedor/Cliente contem 'SPECIAL', CONTA MOVIMENTO SERA = '383'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDICAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FUNDICAO', Fornecedor/Cliente contem 'ALCA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722525'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRAFORM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FIBRAFORM', Fornecedor/Cliente contem 'EMBALAGENS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721943'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIDENE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NOROESTE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FIDENE', Fornecedor/Cliente contem 'NOROESTE', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722489'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRICOLAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAN")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'IMPL', Fornecedor/Cliente contem 'AGRICOLAS', Fornecedor/Cliente contem 'JAN', CONTA MOVIMENTO SERA = '722558'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROTTA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ROTTA', Fornecedor/Cliente contem 'SOL', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722566'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATGB") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ATGB', Fornecedor/Cliente contem 'MANUTENCAO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721810'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("URBANO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROINDUSTRIAL") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'URBANO', Fornecedor/Cliente contem 'AGROINDUSTRIAL', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722008'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SUPERMERCADO', Fornecedor/Cliente contem 'LUCAS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722575'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUSINESS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARK")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'BUSINESS', Fornecedor/Cliente contem 'PARK', CONTA MOVIMENTO SERA = '722614'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RASIP") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'RASIP', Fornecedor/Cliente contem 'ALIMENTOS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '1397'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEREZINHA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RANDON") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'THEREZINHA', Fornecedor/Cliente contem 'RANDON', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722485'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HERVAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPUMAS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'HERVAL', Fornecedor/Cliente contem 'ESPUMAS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722432'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRZ") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIRE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'BRZ', Fornecedor/Cliente contem 'FIRE', CONTA MOVIMENTO SERA = '722619'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XHARA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'XHARA', Complemento (01) contem 'REC', Complemento (01) contem 'DEPOSITO', CONTA MOVIMENTO SERA = '722623'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRI") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'TRI', Fornecedor/Cliente contem 'HOTEL', CONTA MOVIMENTO SERA = '722626'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAST") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPRIMENTOS")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'FAST', Fornecedor/Cliente contem 'SUPRIMENTOS', CONTA MOVIMENTO SERA = '722630'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLUBE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINEIRO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'CLUBE', Fornecedor/Cliente contem 'MINEIRO', CONTA MOVIMENTO SERA = '722634'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMAS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'COUTO', Fornecedor/Cliente contem 'SISTEMAS', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722640'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURANCA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REAL', Fornecedor/Cliente contem 'SEGURANCA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722643'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRIGORIFICO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FRIGORIFICO', Fornecedor/Cliente contem 'CONFIANCA', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722624'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAN") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REMO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SAN', Fornecedor/Cliente contem 'REMO', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '722428'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PPCI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'CONFIANCA', Fornecedor/Cliente contem 'PPCI', CONTA MOVIMENTO SERA = '722660'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOP") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'TOP', Fornecedor/Cliente contem 'SERVICE', CONTA MOVIMENTO SERA = '722015'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMICONTE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Complemento (01) contem 'DEPOSITO', Fornecedor/Cliente contem 'ALUMICONTE', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAGUARA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'REC', Fornecedor/Cliente contem 'POSTO', Fornecedor/Cliente contem 'ITAGUARA', CONTA MOVIMENTO SERA = '722632'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDACAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HEMOSC") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APOIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CEPON")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'FUNDACAO', Fornecedor/Cliente contem 'HEMOSC', Fornecedor/Cliente contem 'APOIO', Fornecedor/Cliente contem 'CEPON', CONTA MOVIMENTO SERA = '89708'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APAG") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMERCIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINTORES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'APAG', Fornecedor/Cliente contem 'COMERCIO', Fornecedor/Cliente contem 'DE', Fornecedor/Cliente contem 'EXTINTORES', CONTA MOVIMENTO SERA = '2394'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GSA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DE")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'GSA', Fornecedor/Cliente contem 'SERVICOS', Fornecedor/Cliente contem 'ENGENHARIA', Fornecedor/Cliente contem 'DE', CONTA MOVIMENTO SERA = '721886'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BWS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTAGEM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSTRIAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EIRELI")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BWS', Fornecedor/Cliente contem 'MONTAGEM', Fornecedor/Cliente contem 'INDUSTRIAL', Fornecedor/Cliente contem 'EIRELI', CONTA MOVIMENTO SERA = '721898'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDOMINIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRAIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELAS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'CONDOMINIO', Fornecedor/Cliente contem 'PRAIA', Fornecedor/Cliente contem 'BELAS', Fornecedor/Cliente contem 'POA', CONTA MOVIMENTO SERA = '721960'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REGIONAL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEDICINA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("J")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'REGIONAL', Fornecedor/Cliente contem 'MEDICINA', Fornecedor/Cliente contem 'S', Fornecedor/Cliente contem 'J', CONTA MOVIMENTO SERA = '721845'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ORDEM") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADVOGADOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CATARINA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ORDEM', Fornecedor/Cliente contem 'ADVOGADOS', Fornecedor/Cliente contem 'SANTA', Fornecedor/Cliente contem 'CATARINA', CONTA MOVIMENTO SERA = '721889'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIRE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURANCA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'JL', Fornecedor/Cliente contem 'FIRE', Fornecedor/Cliente contem 'EQUIPAMENTOS', Fornecedor/Cliente contem 'SEGURANCA', CONTA MOVIMENTO SERA = '1143'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDIFICIO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VITORIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REGIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONDOMINIO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'EDIFICIO', Fornecedor/Cliente contem 'VITORIA', Fornecedor/Cliente contem 'REGIA', Fornecedor/Cliente contem 'CONDOMINIO', CONTA MOVIMENTO SERA = '722124'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOFISTER") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOLOGIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRONICA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLUCOES")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'SOFISTER', Fornecedor/Cliente contem 'TECNOLOGIA', Fornecedor/Cliente contem 'ELETRONICA', Fornecedor/Cliente contem 'SOLUCOES', CONTA MOVIMENTO SERA = '722113'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VERDE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'ACO', Fornecedor/Cliente contem 'VERDE', Fornecedor/Cliente contem 'BRASIL', Fornecedor/Cliente contem 'DO', CONTA MOVIMENTO SERA = '2515'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USINA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BATATAIS") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUCAR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCOOL")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'USINA', Fornecedor/Cliente contem 'BATATAIS', Fornecedor/Cliente contem 'ACUCAR', Fornecedor/Cliente contem 'ALCOOL', CONTA MOVIMENTO SERA = '722167'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESTILARIA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARACATU") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROENERGIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'DESTILARIA', Fornecedor/Cliente contem 'VALE', Fornecedor/Cliente contem 'PARACATU', Fornecedor/Cliente contem 'AGROENERGIA', CONTA MOVIMENTO SERA = '721884'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("BAIXA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEVOLUCAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREVIDENCIARIA")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Complemento (01) contem 'BAIXA', Complemento (01) contem 'DEVOLUCAO', Fornecedor/Cliente contem 'DARF', Fornecedor/Cliente contem 'PREVIDENCIARIA', CONTA MOVIMENTO SERA = '28'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IDENTIFICADO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'NAO', Fornecedor/Cliente contem 'IDENTIFICADO', Complemento (01) contem 'REC', Complemento (01) contem 'DEPOSITO', CONTA MOVIMENTO SERA = '270'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USINA") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'USINA', Fornecedor/Cliente contem 'SAO', Fornecedor/Cliente contem 'LUIZ', Complemento (01) contem 'REC', CONTA MOVIMENTO SERA = '721976'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANHO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AROMAS") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'BANHO', Fornecedor/Cliente contem 'AROMAS', Complemento (01) contem 'REC', Complemento (01) contem 'DEPOSITO', CONTA MOVIMENTO SERA = '722560'";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MSE") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Fornecedor/Cliente contem 'MSE', Fornecedor/Cliente contem 'ENGENHARIA', Complemento (01) contem 'REC', Complemento (01) contem 'DEPOSITO', CONTA MOVIMENTO SERA = '722620'";
    }
    return conta;
}
public String getContaPortador(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (nomePortador.contains("EM BRANCO")) {
        conta = "7";
        contaMovimento = "7";
    }
    if (nomePortador.contains("EM BRANCO")) {
        conta = "7";
        contaMovimento = "7";
    }
    return conta;
}
public String getContaPortador2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros2(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros3(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros4(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros5(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros6(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaDesconto(String contaDesconto, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaDesconto;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMulta(String contaMulta, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("cntaJuros");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMulta;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public boolean getTratarComoExtrato(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoExtrato = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoExtrato;
}
public boolean getTratarComoDesconto(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoDesconto = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoDesconto;
}
public boolean getTratarComoJuros(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoJuros = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoJuros;
}
public boolean getTratarLinhaIgnorar(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarIgnoraLinha = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarIgnoraLinha;
}
public String getTratarValorAlternativo(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoAlternativo  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoAlternativo;
}
public String getTratarComoDiv(String documento, String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoDiv  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoDiv;
}
public String getCodigoClassificacao(String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String documento   = objHistorico.optString("documento");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoClassificacao  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoClassificacao;
}
public String getModificaData(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoData  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoData;
}
public String getCampoFiscal(String parametro, JSONObject objHistorico) {
    String especie         = objHistorico.optString("especie");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String returnaCodigo  = "";

    return returnaCodigo.trim();
}
public int getContadorCabecalho(int contador, String line) {
    return contador;
}
public double getValorPrincipal(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorPrincipal = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return valorPrincipal;
}
public String getHistorico(String conta, String histParam, String tipoLancamento, String nomeOrigem, String documento, 
                           String nomePortador, String complemento01, String complemento02, String complemento03, 
                           String nomeArquivo, String codCentroCusto) {
    String historico = "";
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getRegraHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722673-INATIVO"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722673-INATIVO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARPA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MARPA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMORES"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AMORES, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FPHL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FPHL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMIL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMIL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORANGE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SORANGE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORMATEC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem NORMATEC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNICK"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RUDNICK, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRYSERVICE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELETRYSERVICE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EBANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EBANO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CDB"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CDB, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GONCALO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GONCALO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VILLA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VILLA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORMADE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PORMADE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem THEIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACEFRAN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ACEFRAN, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMERICANAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AMERICANAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIVA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PIVA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSARIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROSARIO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AGRARIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ITAU, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALPARGATAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ALPARGATAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MISERICORDIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MISERICORDIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRESBITERIANO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PRESBITERIANO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRIANA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRIANA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KATOEN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem KATOEN, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PILON"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PILON, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELENGE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HELENGE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELEM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BELEM, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUCESSOR"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUCESSOR, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JACKSON"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JACKSON, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("YAZAKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem YAZAKI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TABOAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TABOAO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGIKA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem LOGIKA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ULTRACARGO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ULTRACARGO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FUNDOS, HISTORICO = aplic. bradesco";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WHEATON"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem WHEATON, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERTIAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FERTIAL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROVIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HIDROVIAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MULTILAB"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MULTILAB, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENERGY"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ENERGY, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LANCAMENTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESTORNO, Fornecedor/Cliente contem LANCAMENTO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DEVOLVIDA, Fornecedor/Cliente contem AUGUSTO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEBIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RECEBIMENTO, Fornecedor/Cliente contem CONSORCIO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XP"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANCO, Fornecedor/Cliente contem XP, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TODESCHINI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TODESCHINI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISIEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KRICHAKI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELISIEL, Fornecedor/Cliente contem KRICHAKI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OREGON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTERS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OREGON, Fornecedor/Cliente contem CENTERS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDIFICIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAGUARIBE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EDIFICIO, Fornecedor/Cliente contem JAGUARIBE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MEGA, Fornecedor/Cliente contem BRASIL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVARE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COELHO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SERVARE, Fornecedor/Cliente contem COELHO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TECON, Fornecedor/Cliente contem RIO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APTI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem APTI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOULEVARD") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BOULEVARD, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANAGER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PRO, Fornecedor/Cliente contem MANAGER, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JESUS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JESUS, Fornecedor/Cliente contem ENGENHARIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRACAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ASTI, Fornecedor/Cliente contem ADMINISTRACAO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DEVOLVIDA, Fornecedor/Cliente contem ALDA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALMEIDA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DENIS, Fornecedor/Cliente contem ALMEIDA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESTORNO, Fornecedor/Cliente contem APLICACAO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EKIPER") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EKIPER, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUSPENTECH") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUSPENTECH, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRIGA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BARRIGA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURTADO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FURTADO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADESP"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MADESP, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROSINA, Fornecedor/Cliente contem PORTAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORTOLINI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BORTOLINI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANOL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GRANOL, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOHT"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem DOHT, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MOTA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIAMANTOPOULOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem DIAMANTOPOULOS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PETRIBU"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PETRIBU, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLTAGEM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem VOLTAGEM, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUIMIS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem QUIMIS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLCERA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem SOLCERA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COCARI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COCARI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COAMO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COAMO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARQUENSE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MARQUENSE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMIL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CAMIL, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPRICCHE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CAPRICCHE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIRANTI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MIRANTI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SHMV") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SHMV, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KYLY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem KYLY, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXCEPCIONAIS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem EXCEPCIONAIS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CERVOSUL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CERVOSUL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORENGE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SORENGE, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMX") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AMX, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOGIANA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MOGIANA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COQUEIROS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COQUEIROS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERGRUPPO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUPERGRUPPO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAUTOS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem NAUTOS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUELENSE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MIGUELENSE, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOSCO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BOSCO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTESYSTEM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem PROTESYSTEM, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELMAR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ELMAR, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGEPLAN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AGEPLAN, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILKA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MILKA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIAN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIAN, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPORTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OBRAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUPORTE, Fornecedor/Cliente contem OBRAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IGUATEMI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEGRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem IGUATEMI, Fornecedor/Cliente contem ALEGRE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANDEIRANTES") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BANDEIRANTES, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMBROSI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AMBROSI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COPELMI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem COPELMI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S3"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem S3, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FONTANA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem FONTANA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINSEG"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem EXTINSEG, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REALTY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem REALTY, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CATAFESTA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CATAFESTA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIRISA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PIRISA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOVIDRO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem TECNOVIDRO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SYSTEM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem SYSTEM, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AQUILA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AQUILA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CELO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMIGAO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem AMIGAO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPASSS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMPASSS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOGOCEM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem FOGOCEM, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUMEPE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem SUMEPE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FIBRA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROMETAL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROMETAL, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZEN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ZEN, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("3P") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 3P, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIOGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEVERO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DIOGO, Fornecedor/Cliente contem SEVERO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCOLA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNACIONAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ESCOLA, Fornecedor/Cliente contem INTERNACIONAL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MALL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OPI, Fornecedor/Cliente contem MALL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RH") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOROCABA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RH, Fornecedor/Cliente contem SOROCABA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMICONTE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ALUMICONTE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTECH"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem SANTECH, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PALAZZO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PALAZZO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALID"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem VALID, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMSEGUI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COMSEGUI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CITTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CITTA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IPICUE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem IPICUE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RSB"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem RSB, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROTTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ROTTA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DECK"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem DECK, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESEMPENHO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem DESEMPENHO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("00318771098"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem 00318771098, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXPOARA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem EXPOARA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MACEDO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MACEDO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRAINFARMA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BRAINFARMA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TONDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FORQUETA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TONDO, Fornecedor/Cliente contem FORQUETA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TORNQUIST"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem CLAUDIA, Fornecedor/Cliente contem TORNQUIST, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRAVIE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BRAVIE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUTANTAN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BUTANTAN, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAHDAM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CAHDAM, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADISSON"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MADISSON, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OMYA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem OMYA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARBUSS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CARBUSS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MORATELLI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MORATELLI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SMURFIT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KAPPA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SMURFIT, Fornecedor/Cliente contem KAPPA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTORIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ASTORIA, Fornecedor/Cliente contem PAPEIS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENERSUGAR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ENERSUGAR, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("4D"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem 4D, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRANDS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BRANDS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAXIMUM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MAXIMUM, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INSTELCOM"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem INSTELCOM, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMATE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem AUTOMATE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTECH"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PROTECH, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CACU"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CACU, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPPITZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem OPPITZ, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GOLDSZTEIN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem GOLDSZTEIN, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIND") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SIND, Fornecedor/Cliente contem REEMBOLSO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAPUNGU"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem JAPUNGU, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRIAINA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRIAINA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTVERT"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MONTVERT, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEREOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem TEREOS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTAMP"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem GESTAMP, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HORTIGRANGEIROS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem HORTIGRANGEIROS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAMOVEIS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ITAMOVEIS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEVIDO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem DEVOLUCAO, Fornecedor/Cliente contem DEBITO, Fornecedor/Cliente contem INDEVIDO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINUSCOLI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem DEPOSITO, Fornecedor/Cliente contem WILSON, Fornecedor/Cliente contem MINUSCOLI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HERVAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPUMAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem HERVAL, Fornecedor/Cliente contem ESPUMAS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BRZ, Fornecedor/Cliente contem FIRE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRAFORM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FIBRAFORM, Fornecedor/Cliente contem EMBALAGENS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDICAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FUNDICAO, Fornecedor/Cliente contem ALCA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIDENE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NOROESTE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FIDENE, Fornecedor/Cliente contem NOROESTE, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRICOLAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAN"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem IMPL, Fornecedor/Cliente contem AGRICOLAS, Fornecedor/Cliente contem JAN, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("URBANO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROINDUSTRIAL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem URBANO, Fornecedor/Cliente contem AGROINDUSTRIAL, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SUPERMERCADO, Fornecedor/Cliente contem LUCAS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROTTA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ROTTA, Fornecedor/Cliente contem SOL, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATGB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ATGB, Fornecedor/Cliente contem MANUTENCAO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEREZINHA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RANDON") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem THEREZINHA, Fornecedor/Cliente contem RANDON, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem TRI, Fornecedor/Cliente contem HOTEL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAST") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPRIMENTOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem FAST, Fornecedor/Cliente contem SUPRIMENTOS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAGUARA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem POSTO, Fornecedor/Cliente contem ITAGUARA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLUBE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINEIRO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CLUBE, Fornecedor/Cliente contem MINEIRO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRIGORIFICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem FRIGORIFICO, Fornecedor/Cliente contem CONFIANCA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem COUTO, Fornecedor/Cliente contem SISTEMAS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURANCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem REAL, Fornecedor/Cliente contem SEGURANCA, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XHARA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem XHARA, Complemento (01) contem REC, Complemento (01) contem DEPOSITO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REMO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem SAN, Fornecedor/Cliente contem REMO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUSINESS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARK"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BUSINESS, Fornecedor/Cliente contem PARK, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RASIP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem RASIP, Fornecedor/Cliente contem ALIMENTOS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PPCI"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CONFIANCA, Fornecedor/Cliente contem PPCI, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem TOP, Fornecedor/Cliente contem SERVICE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMICONTE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Complemento (01) contem DEPOSITO, Fornecedor/Cliente contem ALUMICONTE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OFFICE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem OFFICE, Fornecedor/Cliente contem 320, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("237") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem TRANSFERENCIA, Fornecedor/Cliente contem 237, Fornecedor/Cliente contem BRADESCO, HISTORICO = resgate aplic. Bradesco Fornecedor/Cliente Complemento (01)";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASSOCIACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ASSOCIACAO, Fornecedor/Cliente contem ANTONIO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANJA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHEIROS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem GRANJA, Fornecedor/Cliente contem PINHEIROS, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CABERLON") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem ADIANTAMENTO, Fornecedor/Cliente contem CABERLON, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOCCHI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROBIOS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BOCCHI, Fornecedor/Cliente contem AGROBIOS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PADRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAGAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PADRE, Fornecedor/Cliente contem CHAGAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILAGRE"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ITM, Fornecedor/Cliente contem MILAGRE, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOSPITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BATISTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem HOSPITAL, Fornecedor/Cliente contem BATISTA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAGIC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MAGIC, Fornecedor/Cliente contem TOY, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CULTURAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FELIZ"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CULTURAL, Fornecedor/Cliente contem FELIZ, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENEFICENTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("1858") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem BENEFICENTE, Fornecedor/Cliente contem 1858, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESIDENCIAL"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem FACE, Fornecedor/Cliente contem RESIDENCIAL, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem JOAO, Fornecedor/Cliente contem ARI, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POUSADA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARCANJO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem POUSADA, Fornecedor/Cliente contem ARCANJO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECANTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAESTRO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem RECANTO, Fornecedor/Cliente contem MAESTRO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONGREGACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMACULADA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CONGREGACAO, Fornecedor/Cliente contem IMACULADA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BLANC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem MONT, Fornecedor/Cliente contem BLANC, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPACO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem ESPACO, Fornecedor/Cliente contem GAIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USUARIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CEASA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem USUARIOS, Fornecedor/Cliente contem CEASA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIERRY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCHENEIDER"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem PIERRY, Fornecedor/Cliente contem SCHENEIDER, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTINENTAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERRAMENTAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem CONTINENTAL, Fornecedor/Cliente contem FERRAMENTAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem FERNANDES, Fornecedor/Cliente contem ENGENHARIA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IBQ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem IBQ, Fornecedor/Cliente contem BARRAS, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem UNIMED, Fornecedor/Cliente contem ALTO, Complemento (01) contem REC, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASILEIRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAPONESA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem BRASILEIRA, Fornecedor/Cliente contem JAPONESA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUEIROZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDROSA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem QUEIROZ, Fornecedor/Cliente contem PEDROSA, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARRARO"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem REC, Fornecedor/Cliente contem MOVEIS, Fornecedor/Cliente contem CARRARO, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1409"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1409, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1736"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1736, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721884"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721884, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721885"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721885, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("89708"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 89708, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1079"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1079, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1428"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1428, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1367"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1367, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1033"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1033, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1842"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1842, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1464"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1464, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1179"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1179, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721749"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721749, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1471"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1471, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2469"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2469, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721537"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721537, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721835"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721835, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1035"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1035, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1034"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1034, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721898"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721898, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2394"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2394, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721816"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721816, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721736"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721736, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721722"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721722, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1606"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1606, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721960"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721960, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2266"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2266, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1914"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1914, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721577"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721577, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721886"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721886, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1032"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1032, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("158"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 158, HISTORICO = RESGATE APLIC. BRADESCO INVEST. FACIL Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("191"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 191, HISTORICO = RESGATE APLIC. BRADESCO CDB Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721836"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721836, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2034"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2034, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721530"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721530, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721845"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721845, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721889"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721889, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721900"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721900, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722026"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722026, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721760"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721760, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722003"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722003, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721896"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721896, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1265"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1265, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1708"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1708, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721977"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721977, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721698"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721698, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1514"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1514, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721947"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721947, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721971"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721971, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1772"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1772, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("31901"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 31901, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722048"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722048, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721959"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721959, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721901"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721901, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722020"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722020, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1118"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1118, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("228"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 228, HISTORICO = REEMBOLSO PLANO Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721887"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721887, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721894"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721894, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721895"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721895, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722005"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722005, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721754"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721754, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722010"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722010, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722051"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722051, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1488"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1488, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1295"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1295, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722043"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722043, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722057"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722057, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1730"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1730, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1203"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1203, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722027"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722027, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722018"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722018, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722044"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722044, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2214"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2214, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722103"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722103, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2331"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2331, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721825"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721825, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722067"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722067, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2424"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2424, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722167"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722167, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722182"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722182, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722184"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722184, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722174"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722174, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722033"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722033, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722053"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722053, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722092"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722092, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722102"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722102, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2100"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2100, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722105"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722105, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721817"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721817, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722106"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722106, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2375"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2375, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722108"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722108, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721721"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721721, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722149"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722149, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2515"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2515, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721824"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721824, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722126"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722126, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722178"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722178, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722179"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722179, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722187"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722187, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721709"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721709, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1969"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1969, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722166"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722166, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722041"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722041, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722058"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722058, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722060"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722060, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722064"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722064, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1143"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1143, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722089"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722089, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722107"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722107, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722146"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722146, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722111"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722111, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722114"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722114, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722115"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722115, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722132"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722132, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722133"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722133, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722124"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722124, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721811"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721811, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722145"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722145, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722147"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722147, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721912"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721912, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722148"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722148, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722113"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722113, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722040"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722040, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2599"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2599, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722091"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722091, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722183"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722183, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721745"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721745, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722171"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722171, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722185"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722185, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722116"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722116, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722223"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722223, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722202"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722202, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("270"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 270, HISTORICO = ADTO. Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722152"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722152, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722153"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722153, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722154"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722154, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722155"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722155, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722157"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722157, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722158"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722158, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722160"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722160, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2478"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2478, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722165"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722165, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722112"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722112, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722210"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722210, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721513"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721513, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722267"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722267, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722150"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722150, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722200"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722200, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2512"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2512, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1202"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1202, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721710"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721710, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722180"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722180, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722216"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722216, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722125"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722125, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722109"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722109, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("1415"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 1415, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722177"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722177, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722220"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722220, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721519"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721519, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722204"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722204, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722205"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722205, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722218"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722218, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722217"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722217, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722211"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722211, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722151"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722151, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722219"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722219, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721919"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721919, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("2592"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 2592, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722206"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722206, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722208"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722208, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("722017"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 722017, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721948"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721948, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(contaMovimento).equals("721572"))  historico = "HISTORICO POR REGRA = Quando Conta Normal - Movimento - igual a 721572, HISTORICO = Fornecedor/Cliente";
    

    return historico.replaceAll("  "," ").trim();
}
public int getParcelaBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public int getTotalParcelas(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public String getMesAnoBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String mesAnoBase = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return mesAnoBase;
}
public double getTaxaTarifa(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorTaxaTarifa = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("VISTA")) {
        valorTaxaTarifa = 0.0319;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("PARC")) {
        valorTaxaTarifa = 0.0379;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_VRALIMENTACAO1")) {
        valorTaxaTarifa = 0.063;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SENFF")) {
        valorTaxaTarifa = 0.04;
    }
    return valorTaxaTarifa;
}
public String getHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (!StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("Historico Padrao"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2424161.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ISIDRO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483759.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHARLES") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEBITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1483769.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DOHT"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126985.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUIMIS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127059.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOSCO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126730.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUSINESS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARK"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127133.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RASIP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALIMENTOS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127143.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELISIEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KRICHAKI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589139.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RIO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589171.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JESUS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 854127.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALDA"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 854718.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314776.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILKA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314794.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIAN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPORTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OBRAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314787.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMBROSI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314966.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COPELMI"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314844.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PPCI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314862.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("S3"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314939.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FONTANA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314935.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REALTY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314927.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315030.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIRISA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314944.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AQUILA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314985.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CELO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315047.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMIGAO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315005.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUMEPE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315052.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315063.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROMETAL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315059.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOGIKA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744168.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIND") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1872925.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EKIPER") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127630.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128375.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADMINISTRACAO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 854568.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WHEATON"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872752.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRAINFARMA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1872788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TONDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FORQUETA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLAUDIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TORNQUIST"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872776.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERTIAL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872770.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRAVIE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872773.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BUTANTAN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872795.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAHDAM"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872797.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADISSON"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872809.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127289.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORMADE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127633.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEGURANCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128358.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACEFRAN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128394.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTESYSTEM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128370.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PANIZE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483729.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZEN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315071.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("3P") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315082.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SMURFIT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KAPPA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872749.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENERGY"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872763.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENERSUGAR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872782.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("4D"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872791.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAXIMUM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872838.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAGIC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TOY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872883.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RGB") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomePortador + "    CodigoHistorico:44";  //id -> 1483752.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INKOR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1483711.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483733.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTT") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("INDEVIDO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1483773.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIAMANTOPOULOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126995.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DENIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALMEIDA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 854805.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("BAIXA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DARF") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PREVIDENCIARIA"))    historico = "" + nomeOrigem + " gp services    CodigoHistorico:68";  //id -> 854739.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FPHL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589169.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("YAZAKI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744105.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANJA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINHEIROS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744179.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CITTA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744194.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 934186.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALPARGATAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744100.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MISERICORDIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744111.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRESBITERIANO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744125.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESCOLA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNACIONAL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744157.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MALL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744134.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRIANA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744147.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KATOEN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744137.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMICONTE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744186.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APTI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744225.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUTOMATE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872852.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PROTECH"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872856.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAPUNGU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933845.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OFFICE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872802.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRANDS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872832.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INSTELCOM"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872840.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONTVERT"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933749.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TEREOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933656.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AERO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPACO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483690.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ECLEVER") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483738.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LOA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483695.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESMALGLASS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483730.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PONTAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACUCAR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483725.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VFDL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483735.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINSEG"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314949.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOGIANA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127623.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APARECIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIRANDA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483719.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGEPLAN") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314834.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMERICANAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314799.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIVA"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314766.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSARIO"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314818.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EDIFICIO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAGUARIBE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589158.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XP"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481865.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COUTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SISTEMAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128348.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PASTIFICIO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1483717.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FOGOCEM"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315037.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OMYA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872843.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MORATELLI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOCCHI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROBIOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872899.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PADRE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CHAGAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872913.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("URBANO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROINDUSTRIAL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127073.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOLCERA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127114.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RUDNICK"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 854013.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELETRYSERVICE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 854006.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IDENTIFICADO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 934280.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PILON"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744143.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RH") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOROCABA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744153.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASSOCIACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ANTONIO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744231.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANTECH"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744252.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PALAZZO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744246.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELEM"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744289.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALID"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744280.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUCESSOR"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1744304.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BORTOLINI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126894.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLTAGEM") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127105.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORENGE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127600.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POSTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAGUARA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127617.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERGRUPPO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128362.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALERIO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483709.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIBRA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483676.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZIMBA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483742.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTIRENO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483721.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAVI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483749.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MADESP"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126763.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOTA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127029.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SHMV") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127311.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTZ") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1483762.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDUSCABOS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483702.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314810.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIBRAFORM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMBALAGENS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126956.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PETRIBU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127009.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OREGON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTERS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589146.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EBANO"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 854079.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CATAFESTA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314959.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOVIDRO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314975.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TABOAO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744128.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NORMATEC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744163.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DECK"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744238.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DESEMPENHO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744242.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("00318771098"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744263.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXPOARA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744273.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MACEDO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744287.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROVIAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1872743.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECEBIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481414.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MONT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BLANC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933737.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIERRY") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCHENEIDER"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933771.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTINENTAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERRAMENTAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933833.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GESTAMP"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933689.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IBQ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933682.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("UNIMED") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933675.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HORTIGRANGEIROS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933718.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASILEIRA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAPONESA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933808.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUEIROZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PEDROSA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933815.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARRARO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933839.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOSPITAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BATISTA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872867.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CACU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872875.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ZANLORENZI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117762.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALFREDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CABERLON"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117737.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BIOLAB"))    historico = "" + nomeOrigem + "    CodigoHistorico:42";  //id -> 2117753.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECANTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAESTRO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933828.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITAMOVEIS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933853.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ICHIP"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117704.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PLAZA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LONDRINA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117715.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TED") && StringUtil.removeSpecialCharsToUC(complemento01).contains("005"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 2420467.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPANHIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMINIO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420128.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DR") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BALBINO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420153.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("R2EJARAGUA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420141.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HIDROLUMEN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420273.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BELAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EMPREENDIMENTOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420170.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LINDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COSMETICOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420177.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORVIR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420218.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONJUNTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUEL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420196.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WABTEC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420225.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXTINCHAMA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420227.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DANESI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420234.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOTREQ"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420243.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VOLARE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420250.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CENTERLAR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420264.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELCO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420278.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CCGL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420269.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TECNOVA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420281.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FURTADO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126741.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EICK"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420436.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEVIDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDES"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 2420462.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEPP") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVICOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EQUIPAMENTOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2421200.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLVIDA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AUGUSTO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481884.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KOMATSU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420161.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SANDRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARLOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIORENTIN"))    historico = "REEMBOLSO PLANO " + nomeOrigem + "    CodigoHistorico:68";  //id -> 2424253.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SERVARE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COELHO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589153.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BOULEVARD") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 854090.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SORANGE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589243.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ASTORIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAPEIS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872766.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROTTA"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1744216.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CABERLON") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1744299.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COQUEIROS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128384.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DIOGO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEVERO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1315176.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MSE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127259.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USUARIOS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CEASA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933705.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERNANDES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933777.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("APLICACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INVEST") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAC"))    historico = "RESGATE APLIC. BRADESCO INVEST. FACIL     CodigoHistorico:68";  //id -> 2424290.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CULTURAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FELIZ"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933742.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BENEFICENTE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("1858") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933759.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FACE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RESIDENCIAL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933697.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRIAINA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JOAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933822.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SIDERURGICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPIRITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117345.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GPC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUIMICA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117458.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARACOL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TAINHAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117530.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PLATINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BIOENERGIA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117524.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TERMINAL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117556.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMIGA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117574.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SCALA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117585.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VIRIDI"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117629.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAST"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117605.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOVEIS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FLORENSE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117725.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PINACOTECA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117668.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARES"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117691.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGROARACA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483708.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARPA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589217.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IGUATEMI") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALEGRE"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1314827.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANDEIRANTES") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1314851.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ULTRACARGO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744257.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONTINENTAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FERRAMENTAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744276.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GOLDSZTEIN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872896.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARBUSS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872846.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("WILSON") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINUSCOLI"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481429.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CINQUETTI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483745.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMSEGUI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744176.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IPICUE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744205.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RSB"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744210.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDOS"))    historico = "aplic. bradesco     CodigoHistorico:68";  //id -> 1744319.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PATOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420239.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITALIANY"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420259.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QATAR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420445.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEMETRIUS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420423.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2420430.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADIANTAMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALARIAL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 2420453.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FRIGORIFICO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONFIANCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128372.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAN") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REMO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128382.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARIA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FATIMA"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 2122639.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPACO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GAIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933666.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VERTENTE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665921.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TONDO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665969.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MOR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665931.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BX") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665955.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DALVIRENE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665940.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATIARA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665945.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ACRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ENGENHARIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665985.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAFEEDS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666064.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ADELIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665963.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FABRICA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELASTICOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665976.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MODULO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSULTORIA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2665991.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CEL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUAPE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666003.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LVC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666010.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPERMIX"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666025.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SBF"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666035.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARROQUE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GUILHEMR"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666053.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARIDADE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666109.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MAFLOW"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666093.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEVIDO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KEEPCLEAR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666138.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMIGRANTES") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HOTEL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666102.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CARAMURU"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666120.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMBIENTALY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666131.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PAULO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARTINS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2666237.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRADESCO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONSORCIOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 2666218.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GONCALO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126720.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VILLA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126710.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUSPENTECH") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127196.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BARRIGA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126757.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROSINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PORTAS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126883.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("GRANOL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127004.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FUNDICAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALCA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("USINA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUIZ") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127001.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BANHO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AROMAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127018.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERMERCADO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LUCAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127082.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ROTTA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SOL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127035.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ATGB") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANUTENCAO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127047.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COCARI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127214.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COAMO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127123.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MARQUENSE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127185.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("THEREZINHA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RANDON") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127170.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAMIL") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127236.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CAPRICCHE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127225.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIRANTI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127277.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("KYLY") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127302.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("EXCEPCIONAIS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127315.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CERVOSUL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127461.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMX") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128353.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CLUBE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MINEIRO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127627.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AMORES"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589227.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEVOLUCAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DEBITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INDEVIDO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481420.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PRO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MANAGER"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 854099.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CDB"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 854711.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FAST") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPRIMENTOS"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127513.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIDENE") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NOROESTE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1126971.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TODESCHINI") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128342.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SPORT") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("INTERNACIONAL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483682.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RENNER") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HERRMANN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483700.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRZ") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("FIRE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127250.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ALUMICONTE"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 1315167.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XHARA") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("DEPOSITO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127268.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MEGA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("BRASIL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589166.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MULTILAB"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872757.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MIGUELENSE") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128379.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ELMAR") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127094.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESTORNO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LANCAMENTO"))    historico = "" + nomeOrigem + "    CodigoHistorico:68";  //id -> 481869.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMIL"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 589212.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("RECREATIVO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("DORES") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483756.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HERVAL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ESPUMAS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127246.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("NAUTOS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1128346.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HELENGE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1744198.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PARACATU") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ITM") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("MILAGRE"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872859.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMPL") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("AGRICOLAS") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JAN"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1127015.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SEPAC") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1483714.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("COMPASSS") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1315017.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CONGREGACAO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMACULADA"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933729.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("OPPITZ"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1872893.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("JACKSON"))    historico = "" + nomeOrigem + "    CodigoHistorico:18";  //id -> 1744119.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("POUSADA") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("ARCANJO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 1933850.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SUPERBAC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117404.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("QUEIROZ") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117358.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("REC") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("IMECO"))    historico = "" + nomeOrigem + "    CodigoHistorico:44";  //id -> 2117633.00

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra4(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra5(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra6(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getCentroCusto(String CentroCusto, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto) {
          String retornaCentroCusto = CentroCusto;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaCentroCusto;
}
public String getTabelaContabil(String TabelaContabil, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaTabelaContabil = TabelaContabil;
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaTabelaContabil;
}
public String getParticipante(String participante, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaParticipantePai = participante;
    complemento04 = "";
    complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaParticipantePai;
}
public String getFilial(String codFilial, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto, String filial) {
          String retornaFilial = codFilial;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaFilial;
}
public String getRegrasParaAcumular(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String getRegrasParaAcumularPortador(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String  getReplaceTermos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = "";
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return parametro2.trim();
}
public String  getReplaceTermosAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double numeroAba  		= objHistorico.optDouble("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String  getLimpaCampos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");

    return lote.trim();
}
public String  getLimpaCamposAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String getTipoGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String graph = "";

    //feito para manter o legado sem problemas, sera sobreposto por regras! ;-)
    //tipos esperados: Column, Multiple_Column_Stacked, Multiple_Columns, Line, Multiple_Lines, Pie, Donut
    //Card refere-se ao Lucro/Prejuizo
    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    if (complemento01.startsWith("07") || complemento01.startsWith("12")) graph = "CardChart";

    if (complemento01.startsWith("01") || complemento01.startsWith("02") || complemento01.startsWith("04") || 
    	complemento01.startsWith("08") || complemento01.startsWith("09") || complemento01.startsWith("10") || 
    	complemento01.startsWith("11") || complemento01.startsWith("21"))  graph = "ColumnChart";

    if (complemento01.startsWith("15") || complemento01.startsWith("16") || complemento01.startsWith("17")) 
    	graph = "ColumnChartStacked";

    if (complemento01.startsWith("05") || complemento01.startsWith("06")) graph = "LineChart";

    if (complemento01.startsWith("18") || complemento01.startsWith("19") || complemento01.startsWith("20")) 
    	graph = "LineChartMultiple";

    if (complemento01.startsWith("03") || complemento01.startsWith("13") || complemento01.startsWith("14")) 
    	graph = "DonutChart";

    return graph;
}
public String getSimboloValor(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String simboloValor = "R$";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return simboloValor.replaceAll("Nenhum","");
}
public String getSeriesGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String series = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return series;
}
public String getTituloGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String Titulo_Grafico = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return Titulo_Grafico;
}
public String getColunaAlternativa(String parametro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String retornaColunas  = "";

    return retornaColunas.replace(",",";").trim();
}
//FINALPARAMETRIZACAOREGRAS
