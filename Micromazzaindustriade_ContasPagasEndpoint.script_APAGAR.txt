{import: io_contabil.Database};
{import: io_contabil.RegrasSemCartoes};
{import: io_contabil.Duplicatas};
{import: io_contabil.Util};
{import: io_contabil.RunExtratosECartoes};
{import: io_contabil.Ottimizza_MeuCaixa};
{import: io_contabil.Lancamentos};
{import: io_contabil.TemplateUtils};
{import: io_contabil.OICUtils};


{import: io_contabil.Classes.Extrato};
// TEMPLATE 15.03.2023
// Colocado tipoPlanilha no Lote Encerrado
// colocado para trocar XLSX por CSV se marcado no roteiro 
 
public JSONArray run(InoutLogger logger) throws Exception {

	JSONArray  records  = new JSONArray();
	JSONObject ultimoJS = new JSONObject();

	// gera seguranca nas conexoes com Heroku
	// Create a trust manager that does not validate certificate chains
	javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[] {
		new javax.net.ssl.X509TrustManager(){
			public java.security.cert.X509Certificate[] getAcceptedIssuers(){ return null; }

			public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType) { }

			public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType) { }
		}
	};

	// Install the all-trusting trust manager
	try {
		javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance("TLS");
		sc.init(null, trustAllCerts, new java.security.SecureRandom());
		javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
	} catch (Exception e) {
		// 
	}
	
	
	// Carrega as propriedades
	SysProperties props = SysProperties.getInstance();
	SysProperties propsEmp = SysProperties.getInstance();
	JSONObject roteiroCRMPrincipal = getRoteiro();
	JSONObject roteiroCRM = getRoteiro();
	JSONObject jStatus = new JSONObject();
	
 
	props.load("contabil/" + roteiroCRM.optString("contabilidade") + "/contabil.properties");
	propsEmp.load("contabil/" + roteiroCRM.optString("contabilidade") + "/empresa.properties");

	//Conectar na Base de Dados IO_CONTABIL.
	DataBase dbIOCont = null;
	//Contectar na Base de Dados depara do heroku(nuvem)
	DBPostgreSQL dbIODepara = null;

 	String empresa = getNomeEmpresa();
	
	
	String codEmpresa = props.get(empresa + "_COD_EMPRESA");
	 
	if (codEmpresa == null) {
		empresa = propsEmp.get("NOME_EMPRESA").toUpperCase();
		codEmpresa = props.get(empresa + "_COD_EMPRESA");		
	}
	
	//#2303-002125
	//codEmpresa que sera utilizado para consultar o plano de contas
	String codEmpresaPlanoContas = codEmpresa;
	if (roteiroCRM.optString("contabilidade").toUpperCase().contains("CONTIBEMASSESSORIA")) {
		codEmpresaPlanoContas = "000";
	}
	
 
	String tipoProduto = "";
	try {
		tipoProduto = props.get(empresa + "_TIPO_PRODUTO");
	} catch (Exception xx) {tipoProduto = "OIC_PACOTE";}
	
	
	if (tipoProduto.equals("")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("IMPLANTA")) tipoProduto = "OIC_PACOTE";
	if (tipoProduto.contains("AVULSO")) tipoProduto = "OIC_PACOTE";
	
 	
	String processaOud = "";
	try {
		processaOud = props.get("PROCESSA_OUD");
	} catch (Exception e) {processaOud = "FALSE";}
	if (processaOud.equals("")) processaOud = "FALSE";

	String ERPContabil = props.get("ERP_CONTABILIDADE");
	String nomeEmpresa = props.get(empresa + "_NOME_EMPRESA");
	String cnpjEmpresa = props.get(empresa + "_CNPJ_EMPRESA");
	String emailResponsavel = props.get(empresa + "_EMAIL_RESPONSAVEL");
	String emailCanal = props.get("EMAIL_CANAL");
	String statusCRM = props.get(empresa + "_STATUS_CRM");
	String fornecedorUnico = props.get("FORNECEDOR_UNICO");
	
 	
	String mantemArquivo = propsEmp.get("MANTEM_ARQUIVO");
	if (mantemArquivo == null) mantemArquivo = "";
	
	String tipoLancamento = getNomeRota();
	if (tipoLancamento.toUpperCase().contains("PAGAS"))    tipoLancamento = "PAGAR";
	if (tipoLancamento.toUpperCase().contains("RECEBIDA")) tipoLancamento = "RECEBER";


	String compDirName = nomeEmpresa + "_#" + codEmpresa;
	String dirName = "";
	if (tipoLancamento.contains("PAGAR"))   dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/APagar";
	if (tipoLancamento.contains("RECEBER")) dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/AReceber";

	String backupDirName = dirName + "/Processado";

	boolean erroShrink = false;
	boolean geraCabecalhoCordilheira = true;
	boolean cabecalhoNaoEncontrada        = true;
	boolean apagaExtrato        = false;
	boolean apagaContaT         = false;
	boolean geraRegraPortador   = false;
	boolean comparaRazao        = false;
	boolean encontrouComplemento = true;
	String tipoEmail            = "";
	String arquivoAgora         = tipoLancamento + "-" + DateUtil.dateToString(new Date(),"yyyyMMddhhmm");
	int    contadorArquivo      = 0;

	HashMap mapaVariavel		= new HashMap();
	HashMap mapaLote			= new HashMap();
	HashMap mapaDePara			= new HashMap();
	HashMap mapaOficial			= new HashMap();
	HashMap mapaDesconto		= new HashMap();
	HashMap mapaJuros   		= new HashMap();
	HashMap mapaPlano   		= new HashMap();
	HashMap mapaParcelaDominio	= new HashMap();
	HashMap mapaFornecedor 		= new HashMap();
	HashMap mapaPartPlano 		= new HashMap();
	HashMap mapaArquivo 		= new HashMap();
	HashMap mapaDocumento 		= new HashMap();

	JSONObject recordF = new JSONObject();


	String cruzaExtrato			= "";
	String Cruza_Extrato_com_Extrato = "";
	String mesAnoAnterior		= "";
	String mesAno2Anterior		= "";
	String mesAnoAtual			= "";
	int mesRef					= 0;
	int anoRef					= 0;
	String contaJuros			= "";
	String contaDesconto		= "";
	String contaMulta			= "";
	String contaTransitoria		= "";
	String contaEmpresaBranco	= "";
	String movimentoPortador	= "";
	String contaFixaDebito		= "";
	String contaFixaCredito		= "";
	String contaPortador		= "";		//pg - cred | rec - deb
	String contaMovimento		= "";		//pg - deb | rec - cred
	String tabelaContabil       = "";
	String dataMovimento        = "";
	String classificaPlano      = "";
	String classificaFornec     = "";

	boolean geraFiscal			= false;
	String [] loteFiscal		= new String[20];
	boolean apagaStatus         = false;

	String Conta_Fixa_Cruzamento_Extrato = "";
	String contaInvertida	= "";
	String contaBuscaPlano	= "";
	String nomeArquivo      = "";
	String chave			= "";
	String classificacao	= "";
	String dataLote			= DateUtil.dateToString(new Date(),"yyyy-MM");
	String lote						= "";
 	String regraContaMovimento 		= "";
	String regraHistorico 			= "";
	String separadorCsv				= ";";
	String separadorTxt				= "";
	String tipoPlanilha				= "";
	String contaTemp				= "";
	String mesesdoAno			    = "JAN;FEV;MAR;ABR;MAI;JUN;JUL;AGO;SET;OUT;NOV;DEZ";
	boolean primeiroArquivo 		= true;
	boolean primeiraVezDuplicata	= true;
	boolean acumulouAntes			= false;
	boolean leuFinanceiro			= false;
	boolean dupliNaoEncontContabil	= false;
	boolean forcarPartidaDobrada	= false;
	boolean temOFX					= false;
	boolean temFiltro				= false;
	boolean temFiscal  				= false;
	boolean temLinhas               = false;
	boolean temIgnorar              = false;
	boolean logs = false;
	StringBuilder logsTxt = new StringBuilder();
	
	int abaConvertida = 0;
	
	String retornaPadroes = "";
	
	String zerarColAlternativo		= "";
	JSONObject deParaObj 			= new JSONObject();
	logger.logDebug("Template Empresa -> " + nomeEmpresa);
	//logger.logDebug("Padrao empresa " + mantemArquivo);
	try {

		// #DOCUMENTACAO
		// FOR leitura dos arquivos das extensoes abaixo
		// altera-se aqui para NAO LER xlsx por exemplo
		
		// liberado em 25/11/2020 @DiMaz
		// se precisar alterar somente as quantidades qX e qY 
		// cada unidade processa cerca de 3 arquivos ou seja 3 no qY processa uns 9 arquivos excel e uns 9 pdf por vez.
		// aumentar muito o XLSX pode causar TRAVAMENTOS
		int qX	= 9;	//ofx,csv,txt
		int qY	= 3;	//xlsx,pdf
		int qTotal = (qX*3)+(qY*2);
		String extensao = "";
		for(int extArquivo = 0; extArquivo < qTotal; extArquivo++) {
			if (extArquivo < qX)									extensao = ".ofx,.OFX,.omc,.OMC,.html,.HTML,.ret,.RET";
			if (extArquivo >= qX && extArquivo < (2*qX))			extensao = ".pdf,.PDF";
			if (extArquivo >= (2*qX) && extArquivo < (2*qX+qY))		extensao = ".xlsx,.XLSX";
			if (extArquivo >= (2*qX+qY) && extArquivo < (3*qX+qY))	extensao = ".txt,.TXT,.ret,.RET";
			if (extArquivo >= (3*qX+qY))							extensao = ".csv,.CSV"; 
			
			if (roteiroCRMPrincipal.has("ignoraExel") && roteiroCRMPrincipal.optString("ignoraExel").toUpperCase().equals("TRUE")) {
				extensao = extensao.replace(".XLSX",".CSV").replace(".xlsx",".csv");
			}			
			boolean ignoraAbas = false;
			
			// ------------------------------------------------------------------------------------------
			// colocado para nao ler pelo template mais de 3 planilhas xlsx por rodada
			// Motivo: quando tem planilha grande em excel para ler na personalizada
			// o sistema roda varias vezes a leitura da planilha no template e depois tudo de novo na personalizada.
			if (mantemArquivo.equals("SIM") && extensao.contains(".XLSX") && extArquivo > 20) continue;
			// ------------------------------------------------------------------------------------------
 
			for (int porAba = 0; porAba < 60; porAba++) {

				// #DOCUMENTACAO
				// tratamento de abas vindas do CRM
				
				String apagaArquivo		= backupDirName;
				String abasEspecificas	= roteiroCRMPrincipal.optString("Abas_Especificas");
				abasEspecificas 		= abasEspecificas.replace(",",";"); 

				if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1;2;3;4;5;6;7;8;9;10";
				// if (mantemArquivo.equals("SIM")) abasEspecificas = "0;1";
				if (!extensao.contains("XLSX") || ignoraAbas)  abasEspecificas = "";

				// liberado em 25/11/2020 @DiMaz
				// tratar js.put("Abas_Especificas", "0-60");
				// grande numero de abas pode travar o nosso sistema
				String abasFor = "";
				if (!abasEspecificas.contains(";") && abasEspecificas.contains("-") && abasEspecificas.length() <= 7) {
					try {
						int a = Integer.parseInt(abasEspecificas.substring(0,abasEspecificas.indexOf("-")));
						int b = Integer.parseInt(abasEspecificas.substring(abasEspecificas.indexOf("-")+1));
						for (int k = a; k <= b; k++){
							if (k < b) abasFor += k+";";
							else abasFor += k;
						}
					} catch (Exception fr) {}
					if(!abasFor.equals("")) abasEspecificas = abasFor;
				}

				
				if (abasEspecificas.equals("")) {
					if (porAba > 0) break;
				}
				if (!abasEspecificas.equals("")) {
					if (!abasEspecificas.contains(String.valueOf(porAba))) {
						continue;
					}

					String ultimaAba = abasEspecificas;
					if (ultimaAba.contains(";")) ultimaAba = ultimaAba.substring(ultimaAba.lastIndexOf(";")+1).trim();
					if (!ultimaAba.equals(String.valueOf(porAba)) && extensao.contains(".XLSX")) apagaArquivo = null;
				}

				// #DOCUMENTACAO
				// auto ajuste do separador de CSV e TXt
				
 
 				if(extensao.contains("CSV"))  separadorCsv = verificaSeparador(separadorCsv, dirName, extensao, props, logger);
  				if(extensao.contains("TXT"))  separadorTxt = verificaSeparador(separadorTxt, dirName, extensao, props, logger);
				
 
 				
				// #DOCUMENTACAO
				// carregamento do arquivo
				
				if (mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) apagaArquivo = null;
				// salva arquivo no hasmap para posterior eliminacao 

				
				FilesLoader fileLoader = new FilesLoader(dirName, extensao, apagaArquivo, true, logger);
				int[] abas = {porAba};
				fileLoader.setSheetsToRead(abas);
				try {
					fileLoader.loadFiles();
				} catch (Exception e) {
					logger.logDebug("NAO CONVERTEU PDF " + e.getMessage());
					File file2 = new File(dirName);
					
					File []  arquivoParaConverter = file2.listFiles();
					if (FileUtil.dirHasFiles(dirName)) {
						for (File fl: arquivoParaConverter) {
							if (fl.getName().toUpperCase().contains(".PDF")) {
								LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
								// String idConversor  = TemplateUtils.getIdLote(fl.getName());
								logger.logDebug("FOI PRO CONVERSORANTES " + fl.getName());
								boolean deubom = false;
								deubom = buscaProtocoloConversor("", apiWeb, tipoLancamento.toLowerCase(), fl.getName(), logger);
								try { 
									FileUtil.deleteFile(fl);
								} catch (Exception XX) {}

								if (deubom) break;
							}
						}
					}
				}
				try { forcarPartidaDobrada	= Boolean.parseBoolean(roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toLowerCase().trim()); } 
				catch (Exception bl) {forcarPartidaDobrada = false;}
				
				//2304-003551. Quando utiliza esse ERP ? obrigado a sem em partida dobrada.
				if (roteiroCRMPrincipal.optString("erpContabilidade").equals("DOMINIO2") || roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("CORDILHEIRA") || roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE")) {
                    forcarPartidaDobrada = true;
                }
				
				for (MemoryFile memFile: fileLoader.getMemFiles()) {
				
					// caso arquivo tenha mais de 250.000 linhas sera ignorado  . Xavier e Mello em 07.06.2023
					if (memFile.getTotalLines() > 250000 ){
						temLinhas = true;
						break;
					}			

					nomeArquivo = memFile.getFilename().replace("%","");
					
					if (nomeArquivo.toUpperCase().startsWith("ABA_")) {
						
						abaConvertida = TemplateUtils.verificaAba(nomeArquivo);
						abasEspecificas = roteiroCRMPrincipal.optString("Abas_Especificas");
						
						// logger.logDebug("ACE " + nomeArquivo + " | " + abaConvertida + " | " + abasEspecificas);
						
						if (!abasEspecificas.equals("")) {
							if (!abasEspecificas.contains(String.valueOf(abaConvertida))) continue;
						}
					} else abaConvertida = porAba;
				
					contadorArquivo++;

					
					// =======================  =================   =======================
					// =======================  VARIAVEIS PADROES   =======================
					// =======================  =================   =======================
					String historico      = "";

					String codCcOrigem    = "";
					String cpfCnpj        = "";
					String nomeOrigem     = "";
					String nomePortador   = "";
					String nomePortador2  = "";
					String documento      = "";
					int    parcelaDoc     = 1;
					double valorDocumento = 0.00;
					double valorPagamento = 0.00;
					double valorDesconto  = 0.00;
					double valorJuros     = 0.00;
					double valorMulta     = 0.00;
					double valorAlternativo = 0;
					
					int icodCcOrigem    = -1;
					int icpfCnpj        = -1;
					int inomeOrigem     = -1;
					int inomePortador   = -1;
					int idocumento      = -1;
					int idataMovimento  = -1;
					int ivalorDocumento = -1;
					int ivalorAlternativo = -1;
					int ivalorPagamento = -1;
					int ivalorDesconto  = -1;
					int ivalorJuros     = -1;
					int ivalorMulta     = -1;
					int icomplemento01  = -1;
					int icomplemento02  = -1;
					int icomplemento03	= -1;
					int icomplemento04  = -1;
					int icomplemento05	= -1;
					int icomplemento06	= -1;
					int icomplemento07	= -1;
					int icomplemento08	= -1;
					int icomplemento09	= -1;
					int icomplemento10	= -1;
					int idataFake		= -1;

					String contaGetConta	= "";
					contaPortador	= "";		//pg - cred | rec - deb
					contaMovimento	= "";		//pg - deb | rec - cred 

					String complemento01	= "";
					String complemento02	= "";
					String complemento03	= "";
					String complemento04	= "";
					String complemento05	= "";
					String complemento06	= "";
					String complemento07	= "";
					String complemento08	= "";
					String complemento09	= "";
					String complemento10	= "";
					String codCentroCusto	= "";
					String codFilial        = "";

					double valorTotalDoc	= 0.0;
					double valorTotalJuros	= 0.0;
					double valorTotalDesc	= 0.0;
					
					double [] valorDocumentoArray = {0,0,0,0,0,0,0,0,0,0};  

					String classJur			= "";
					String classDes			= "";
					String classMul			= "";

					String codErroString	= "";
					int cont				= 0;
					String linhasProblema	= "";
					String idEmpresa        = "";
					String idRoteiro  	    = "";

					String histAux			= "";
					String anoData			= "";
					boolean zerar			= true;
					boolean filtro			= true;
					

					String lerAposPrincipal   = "";
					boolean isLinhaPrincipal  = false;
					boolean ignorarAntes	  = false;
					boolean tratarComoExtrato = false;
					boolean tratarComoDesconto = false;
					boolean tratarComoJuros = false;

					dataMovimento        = "";

					double partidaDobradaJuros		= 0;
					double partidaDobradaDesconto	= 0;
					double partidaDobradaMulta		= 0;
					double valorSomaArray			= 0;

					String numSeparadorDuplicata = ""; //convertido em int depois
					
					StringBuilder cabecalhoPlanilha = new StringBuilder();
					StringBuilder cabecalhoRegra    = new StringBuilder(); // quarda pemanente as 9 primeiras linhas de cada planilha / aba
					
					int  	      contadorCabecalho = 0; 
					
					// #DOCUMENTACAO
					// definicao de separador do arquivo
					// se ouver separador em TXT deve ser tratado caso a caso
					// evitar usar tabulacao como separador 
					
					if(extensao.contains(".xlsx,.XLSX")) memFile.setFieldSeparator("\\|");
					if(extensao.contains(".pdf,.PDF"))   memFile.setFieldSeparator("\\|");
					if(extensao.contains(".csv,.CSV"))	 memFile.setFieldSeparator(separadorCsv);
					if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(separadorTxt);
					
					if (nomeArquivo.toUpperCase().contains(".PDF") /*&& roteiroCRM.optString("contabilidade").toUpperCase().contains("MICALI")*/) {
						
						logger.logDebug("ARREPENDES " + nomeArquivo /*memFile.getLines().toString().contains("##$%#&") +*/  + " | " +  memFile.getLines().toString().toUpperCase());
						boolean rodaConversorNovo = TemplateUtils.verificaConversorNovo(StringUtil.removeSpecialCharsToUC(memFile.getLines().toString()).toUpperCase());
						
						if (rodaConversorNovo) {
							LancamentosApi apiWeb = new LancamentosApi(USER_OAUTH, PWD_OAUTH, SERVER_OAUTH, logger);
							String idConversor  = TemplateUtils.getIdLote(nomeArquivo);
							logger.logDebug("FOI PRO CONVERSOR " + nomeArquivo);
							boolean deubom = false;
							deubom = buscaProtocoloConversor(idConversor, apiWeb, tipoLancamento.toLowerCase(), nomeArquivo, logger);
							
							if (deubom) {
								File file2 = new File(dirName);
						
								File []  arquivoParaConverter = file2.listFiles();
								if (FileUtil.dirHasFiles(dirName)) {
									for (File fl: arquivoParaConverter) {
										if (fl.getName().toUpperCase().contains(".PDF")) {
											try { 
												FileUtil.deleteFile(fl);
											} catch (Exception XX) {}

											break;
										}
									}
								}
							}
							continue;
						}
					}
					
 					
					if(roteiroCRMPrincipal.has("delimitadorDoArquivo") && !roteiroCRMPrincipal.optString("delimitadorDoArquivo").equals("")) {
						if(extensao.contains(".txt,.TXT")) memFile.setFieldSeparator(roteiroCRMPrincipal.optString("delimitadorDoArquivo"));
					}
					
					//nao pode usar o line contem  ';' pois nao existe line neste ponto ainda.
					if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
						if(extensao.contains(".txt,.TXT"))	 memFile.setFieldSeparator(";");
					}
 					
					String abaArquivo = String.valueOf(abaConvertida);
					if (abaConvertida == 0) abaArquivo = "0";

					// colocado para nao importar 2x o mesmo arquivo e mesma aba
					ttArquivo ttArq    = (ttArquivo)mapaArquivo.get(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo);
					if (ttArq          == null) {
						ttArq          = new ttArquivo();
						ttArq.arquivo  = abaArquivo+"-"+nomeArquivo+"-"+abaArquivo;
					
					} else continue;
					mapaArquivo.put(abaArquivo+"-"+nomeArquivo+"-"+abaArquivo,ttArq);
					
					// putStatus(dirName, "01--Etapa 1 de 4--" + tipoLancamento + ".status", jStatus, logger);
					// logger.logDebug("NAAQ " + nomeArquivo.toUpperCase() + " | " + extensao + " | " + separadorCsv);
	
					// #DOCUMENTACAO
					// conecta ao BANCO DE DADOS
					if (dbIOCont == null) {
						dbIOCont = connectIOContabil(props, logger);
					}

					if (dbIODepara == null) {
						dbIODepara = connectDeParaDb(logger);
					}
					
					if(primeiroArquivo) {
						limparIORoteiro(codEmpresa, tipoLancamento, dbIOCont, logger);
						primeiroArquivo = false;
					}

					//########################################################################

					contaJuros		    = roteiroCRM.optString("contaFixaJuros");
					contaFixaCredito    = roteiroCRM.optString("contaFixaCredito");
					contaFixaDebito     = roteiroCRM.optString("contaFixaDebito");
					contaDesconto 	    = roteiroCRM.optString("contaFixaDesconto");
					contaMulta		    = roteiroCRM.optString("contaFixaMulta");
					idEmpresa      	    = roteiroCRM.optString("idEmpresa");
					idRoteiro   	    = roteiroCRM.optString("idRoteiro");
					movimentoPortador   = roteiroCRM.optString("movimentoPortador");
					classificaPlano     = roteiroCRM.optString("classificaPlano");
					classificaFornec    = roteiroCRM.optString("classificaFornec");
					cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
					Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
					numSeparadorDuplicata   = roteiroCRM.optString("Coluna_Valor_Duplicata_Dominio");

					tipoPlanilha = "MOVIMENTO";
					boolean enviaEmailExtrato = false;
					boolean naoLeMais = false;

					tipoEmail = "CLIENTE";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZA"))  tipoEmail = "CANAL";
					if (nomeArquivo.toUpperCase().contains("OTTIMIZZAF")) tipoEmail = "SUPORTE";

					String debitoCredito   		 = "";
					String chaveExtrato    		 = ""; 

					//if(roteiroCRM.has("contaBuscaPlano"))contaBuscaPlano = roteiroCRM.optString("contaBuscaPlano"); 

					// =======================  ========================   =======================
					// =======================  VARIAVEIS PERSONALIZADAS   =======================
					// =======================  ========================   =======================


					JSONObject objetoParametro = new JSONObject();

					// #DOCUMENTACAO
					// busca de indices da planilha principal
					if (tipoPlanilha.equals("MOVIMENTO")) {
						roteiroCRM = getRoteiro();

						inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
						idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
						inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
						idocumento      = getIndice("documento", idocumento, roteiroCRM);
						ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
						ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
						ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
						ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
						icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
						ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
						ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
						icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
						icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
						icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
						icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
						icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
						icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
						icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
						icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
						icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
						icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
						idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
						icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
						
						zerar 			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
					}
					jStatus = new JSONObject();
					// logger.logDebug("PUTSTATUS 524 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
					if (memFile.getTotalValidLines() > 0) {
						// logger.logDebug("PUTSTATUS 527 " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba + " | " + memFile.getTotalValidLines());
						putStatus(dirName, "", jStatus, logger);
					}
					try{
						// #DOCUMENTACAO
						// leitura linha a linha
						while (memFile.hasNextLine()) {
							// logger.logDebug("PUTSTATUS WHILE " + nomeArquivo + " | " + cont + " | " + apagaArquivo + " | " + porAba);
							try {
								String line = memFile.nextLine();
								line = StringUtil.removeSpecialCharsToUC(line);
								
								// logger.logDebug("Line -> "+tipoPlanilha + "<<>>" + porAba + "<<>>" + cutString(line,0,30));
								// logger.logDebug("TP = "+tipoPlanilha+" | LN = "+line);
								
								contadorCabecalho++;
								if (contadorCabecalho<15) {
									cabecalhoPlanilha.append(line).append(" "); 
									cabecalhoRegra.append(stringNormalizer(line.replaceAll("\\|","").replaceAll("\"","").replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replaceAll("  ", " "), true)).append(" "); 
								}
								else {
									cabecalhoPlanilha = new StringBuilder();
									
									// ganha performance nao tendo que ler a planilha vezes pelo template se nao for roteiro secundario 
									if (mantemArquivo.equals("SIM") && tipoPlanilha.equals("MOVIMENTO") && abaConvertida > 2) ignoraAbas = true;
								}
								// logger.logDebug("PUTSTATUS 550");
								if (cont < 10)   putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + "-" + cont + ".status", jStatus, logger);  
								   

								////////////////////////////////////////////////////////////////////////////////
								///////////////////////////////////////////////////////////// INICIO DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								JSONObject jDadosPadrao = new JSONObject();
								jDadosPadrao.put("TIPOLANCAMENTO", tipoLancamento);
								jDadosPadrao.put("NOMEEMPRESA",    nomeEmpresa);
								jDadosPadrao.put("CODEMPRESA",     codEmpresa);
								jDadosPadrao.put("CONTABILIDADE",  roteiroCRM.optString("contabilidade"));
								jDadosPadrao.put("NOMEARQUIVO",    nomeArquivo);
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OMC
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--								
								if (nomeArquivo.toUpperCase().contains(".OMC")) {
 
									tipoPlanilha = "OTT-MEUCAIXA";
									jDadosPadrao.put("TIPOPLANILHA",   tipoPlanilha);
 
									mapaVariavel = readOttimizzaMeuCaixa(memFile, dbIOCont, jDadosPadrao, mapaVariavel, logger);
									jStatus = new JSONObject();
									putStatus(dirName, "",  new JSONObject(), logger);
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
									double tempoInicio1 = System.currentTimeMillis();
									logger.logDebug("Tempo Rota2; " + String.format("%.2f", (System.currentTimeMillis() - tempoInicio1) / 1000));
									break;
								}

								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								//LEITURA PADRAO ARQUIVOS .OFX
								//--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
								// logger.logDebug("NAOFX NO TEMPLATES " + nomeArquivo.toUpperCase() + " | " + mantemArquivo + " | " +tipoProduto);
								if (nomeArquivo.toUpperCase().contains(".OFX") && 
									(!mantemArquivo.equals("SIM") || !tipoProduto.equals("OIC_PACOTE"))) {
									tipoPlanilha = "EXTRATO-OFX";

									// quando o OFX vem em apenas 1 linha todas as informacoes
									// quebramos linha e geramos um novo arquivo para gerar como um ofx normal
									if (line.contains("ACCTID")) {
										String fileOfx = dirName + "/" + nomeArquivo.toLowerCase().replaceAll(".ofx","_2.ofx");
										FileWriter writer = new FileWriter(fileOfx);
										writer.writeNewFile(line.replaceAll("><",">\r\n<"));	
									}
									putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", new JSONObject(), logger);     putStatus(dirName, "02--Etapa 2 de 4--" + tipoLancamento + ".status", jStatus, logger);
 									jDadosPadrao.put("CODEMPRESA", codEmpresa);
									jDadosPadrao.put("TIPOLANCAMENTO", tipoLancamento);
									jDadosPadrao.put("NOMEEMPRESA",    nomeEmpresa);
									jDadosPadrao.put("NOMEARQUIVO",    nomeArquivo);
									if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) jDadosPadrao.put("CHECKNUM", "CHECKNUM");	//usar para retornar o documento do OFX no complemento02
									readOFXDefault(memFile, jDadosPadrao, dbIOCont, logger);
									jStatus = new JSONObject();
									// logger.logDebug("PUTSTATUS 615");
									putStatus(dirName, "",  new JSONObject(), logger);
									temOFX = true;
									break;
								}
								
								// quando se mantem o arquivo, somente devem ser processados arquivos padroes
								// planilhas do roteiro movimento (principal), OFX e demais devem ficar para a rota normal
								// if(codEmpresa.equals("3673")){
									// logger.logDebug("mAATEMPLATE " + mantemArquivo + " | " + tipoProduto + " | " + apagaArquivo + " | " + roteiroCRM.optString("Planilhas_Padroes") + " | " + tipoPlanilha + " | " + tipoProduto);									
								// }
 								/*if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE"))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

 
									JSONObject variaveis = new JSONObject();
									variaveis.put("line", 			line);
									variaveis.put("anoData", 		anoData); 
									variaveis.put("dirName", 		dirName);
									variaveis.put("jStatus", 		jStatus);
									variaveis.put("extensao", 		extensao);
									variaveis.put("codEmpresa", 	codEmpresa);
									variaveis.put("nomeArquivo", 	nomeArquivo);
									variaveis.put("nomeEmpresa", 	nomeEmpresa);
									variaveis.put("nomePortador", 	nomePortador);
									variaveis.put("tipoPlanilha", 	tipoPlanilha);
									variaveis.put("complemento01", 	complemento01);
									variaveis.put("complemento02", 	complemento02);
									variaveis.put("nomePortador2", 	nomePortador2);
									variaveis.put("tipoLancamento", tipoLancamento);
									variaveis.put("cabecalhoPlanilha", cabecalhoPlanilha.toString());																		
																		
									String retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									//logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									// logger.logDebug("NP2 == "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										logger.logDebug("PUTSTATUS 657");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}*/
								
								if (!cabecalhoPlanilha.toString().equals("") && (!roteiroCRM.optString("Planilhas_Padroes").equals("") && apagaArquivo != null  || (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")))) {
								// if (!roteiroCRM.optString("Planilhas_Padroes").equals("") && abaConvertida == 0)  // PROBLEMAS COM PLANILHAS PADROES EM MAIS DE UMA ABA!

									JSONObject variaveis = new JSONObject();
									variaveis.put("line", 			line);
									variaveis.put("anoData", 		anoData); 
									variaveis.put("dirName", 		dirName);
									variaveis.put("jStatus", 		jStatus);
									variaveis.put("extensao", 		extensao);
									variaveis.put("codEmpresa", 	codEmpresa);
									variaveis.put("nomeArquivo", 	nomeArquivo);
									variaveis.put("nomeEmpresa", 	nomeEmpresa);
									variaveis.put("nomePortador", 	nomePortador);
									variaveis.put("tipoPlanilha", 	tipoPlanilha);
									variaveis.put("complemento01", 	complemento01);
									variaveis.put("complemento02", 	complemento02);
									variaveis.put("nomePortador2", 	nomePortador2);
									variaveis.put("tipoLancamento", tipoLancamento);
									variaveis.put("cabecalhoPlanilha", cabecalhoPlanilha.toString());									
									
									// if (codEmpresa.contains("104")) {
										// roteiroCRM.put("Planilhas_Padroes", "Extrato_C6Bank_PDF");
									// }
									
									logger.logDebug("nome do arquivo " + nomeArquivo);
									
									retornaPadroes = verificaExtratos(variaveis, mapaVariavel, memFile, roteiroCRM, dbIOCont, logger);
									
									
									// logger.logDebug("retorna padroes -> " + retornaPadroes);
									
									
									// logger.logDebug("CHAMOU O TEMPLATE " + retornaPadroes);
 
									JSONObject objRetorno = new JSONObject(retornaPadroes);
									if (objRetorno.has("tipoRetorno")) {
										anoData        = objRetorno.optString("anoData");
										retornaPadroes = objRetorno.optString("tipoRetorno");
										nomePortador   = objRetorno.optString("nomePortador").trim();
										complemento01  = objRetorno.optString("complemento01").trim();
										nomePortador2  = objRetorno.optString("nomePortador2").trim();
									}
									
									// logger.logDebug("NP23 " + nomePortador + " | " + nomePortador2);
									
									// logger.logDebug("NP2 ==== "+nomePortador2);
									if (retornaPadroes.equals("continue")) continue;
									if (retornaPadroes.equals("break"))   {
										jStatus = new JSONObject();
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								}

								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								//                      LEITURA PADRAO DE DUPLICATAS
								//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~-
								if(roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE")){

 
									jDadosPadrao.put("erpContabilidade",  roteiroCRMPrincipal.optString("erpContabilidade"));
 									jDadosPadrao.put("LINE",              line);
									jDadosPadrao.put("PRIMEIRAVEZ",       primeiraVezDuplicata);   
									jDadosPadrao.put("DIRNAME",      		dirName);   
 									jDadosPadrao.put("TIPOPLANILHA",      tipoPlanilha);
									jDadosPadrao.put("TIPOLANCAMENTO",    tipoLancamento);
									
									if (!numSeparadorDuplicata.equals("")) jDadosPadrao.put("NUMSEPARADOR", numSeparadorDuplicata);
									
									if (!roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
										jDadosPadrao.put("CONTROLAPARCELA",  true);  

									} 
 
									primeiraVezDuplicata = leituraDuplicataPadrao(jDadosPadrao, memFile, mapaVariavel, dbIOCont, logger);

									if(!primeiraVezDuplicata){
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 687");
										putStatus(dirName, "", jStatus, logger);
										break;
									}
								} 


								
								/// BUSCA COTNRATOS EM ABERTO (RECEBIMENTOS) PARA BAIXA DE CONTRATOS IMOBILIARIOS
								if(roteiroCRM.optString("Integracao_contratos").toUpperCase().contains("TRUE") && 
								   roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {

 									
									if (line.contains("DOCUMENTO") && 
										line.contains("EMISSAO") && 
										line.contains("V. PARCELA") && 
										line.contains("DEVOLUCAO") && 
										line.contains("SALDO") && 
										line.contains("SITUACAO")) {
										
 
										tipoPlanilha = "DUPLICATA-DOMINIO"; 

										if(primeiraVezDuplicata) limparIODuplicataTipoPlanilha(codEmpresa, dbIOCont, tipoPlanilha, logger);

										JSONObject jIndices = new JSONObject();
										 
										jIndices.put("IVENCIMENTO", 9);
										jIndices.put("INOMEORIGEM", 4);
										jIndices.put("IDUPLICATA", 4);
										jIndices.put("IVALORPARCELA", 12);									 
										
										
										jIndices.put("CODEMPRESA", codEmpresa);
										jIndices.put("TIPOPLANILHA", tipoPlanilha);

										primeiraVezDuplicata = inserirIODuplicata_DominioPlanilha02(jIndices, memFile, dbIOCont, logger);
										primeiraVezDuplicata = false;
										jStatus = new JSONObject();
										// logger.logDebug("PUTSTATUS 730");
										putStatus(dirName, "", jStatus, logger);

										break;
									}
								}
																
								
									
								////////////////////////////////////////////////////////////////////////////////
								//////////////////////////////////////////////////////////////// FIM DOS PADROES
								////////////////////////////////////////////////////////////////////////////////
								
								// #DOCUMENTACAO
								// lipeza de variaveis e de indices ao mudar de TIPOPLANILHA
								// logger.logDebug("CPTS " + cabecalhoPlanilha.toString());
								JSONObject jDadosObj = new JSONObject();
								if(!tipoPlanilha.equals(getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj))){
									inomeOrigem			= -1;		nomeOrigem		= "";
									idataMovimento		= -1;		dataMovimento	= "";
									inomePortador		= -1;		nomePortador	= "";
									idocumento			= -1;		documento		= "";
									icpfCnpj			= -1;		cpfCnpj			= "";
									icodCcOrigem		= -1;       codCcOrigem		= "";
									icomplemento01		= -1;      	complemento01	= "";
									icomplemento02		= -1;      	complemento02	= "";
									icomplemento03		= -1;      	complemento03	= "";
									icomplemento04		= -1;      	complemento04	= "";
									icomplemento05		= -1;      	complemento05	= "";
									icomplemento06		= -1;      	complemento06	= "";
									ivalorDocumento		= -1;		complemento07	= "";
									ivalorAlternativo	= -1;		complemento08	= "";
									ivalorJuros			= -1;		complemento09	= "";
									ivalorDesconto		= -1;		complemento10	= "";
									ivalorMulta			= -1;
									ivalorPagamento		= -1;
									idataFake			= -1;
								}
								// #DOCUMENTACAO
								// busca tipoplanilha e indices da planilhas secundarias
								
								tipoPlanilha = getTipoPlanilha(cabecalhoPlanilha.toString() + " " + line, tipoPlanilha, StringUtil.removeSpecialChars(nomeArquivo), jDadosObj);
								// if(codEmpresa.equals("339")){
									//logger.logDebug("TP -> "+tipoPlanilha+" | CPTOSTRI = "+cabecalhoPlanilha.toString());
								// }
								
								//#2306-007459
								if(tipoPlanilha.contains("CARTAO_SIPAG7") && extensao.contains("CSV")){
									memFile.setFieldSeparator(";");
								}
 
								if(!tipoPlanilha.equals("MOVIMENTO")){
									roteiroCRM = buscaRoteiro("getRoteiro"+tipoPlanilha, logger);
									inomeOrigem     = getIndice("nomeOrigem", inomeOrigem, roteiroCRM);
									idataMovimento  = getIndice("dataMovimento", idataMovimento, roteiroCRM);
									inomePortador   = getIndice("nomePortador", inomePortador, roteiroCRM);
									idocumento      = getIndice("documento", idocumento, roteiroCRM);
									ivalorDocumento = getIndice("valorDocumento", ivalorDocumento, roteiroCRM);
									ivalorJuros     = getIndice("valorJuros", ivalorJuros, roteiroCRM);
									ivalorDesconto  = getIndice("valorDesconto", ivalorDesconto, roteiroCRM);
									ivalorMulta     = getIndice("valorMulta", ivalorMulta, roteiroCRM);
									icodCcOrigem    = getIndice("codCcOrigem", icodCcOrigem, roteiroCRM);
									ivalorPagamento = getIndice("valorPagamento", ivalorPagamento, roteiroCRM);
									ivalorAlternativo = getIndice("valorAlternativo", ivalorAlternativo, roteiroCRM);
									icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
									icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
									icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
									icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
									icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
									icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
									icomplemento07  = getIndice("complemento07", icomplemento07, roteiroCRM);
									icomplemento08  = getIndice("complemento08", icomplemento08, roteiroCRM);
									icomplemento09  = getIndice("complemento09", icomplemento09, roteiroCRM);
									icomplemento10  = getIndice("complemento10", icomplemento10, roteiroCRM);
									idataFake		= getIndice("dataFake", idataFake, roteiroCRM);
									icpfCnpj		= getIndice("cpfCnpj", icpfCnpj, roteiroCRM);
									
									zerar			= !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
									
									
									// Em casos onde a planilha secund?ria precisa de uma aba espec?fica descomentar essa linha
									if(!roteiroCRM.optString("Abas_Especificas").equals("") && !roteiroCRM.optString("Abas_Especificas").contains(String.valueOf(abaConvertida))) continue;

								}
								
								if(nomeArquivo.toUpperCase().contains("OTTIMIZZA")){
									if(!logsTxt.toString().contains("MANTEMARQUIVO"))logsTxt.append("STATUS;").append("DATA;").append("VALOR;").append("DOCUMENTO;").append("CLIENTE/FORNECEDOR;").append("PORTADOR;").append("COMPLEMENTO01;").append("COMPLEMENTO02;").append("COMPLEMENTO03;").append("COMPLEMENTO04;").append("COMPLEMENTO05;").append("COMPLEMENTO06;").append("TIPOPLANILHA;").append("MANTEMARQUIVO;").append("PROCESSAOUD;").append("LINHA;");
									logs = true;
								}

								// #DOCUMENTACAO
								// tratamento de "Agrupar Colunas Excel" e "Agrupar a partir da coluna"
								try {
									fazerShrinkDelimitandoPosicoes(roteiroCRM, memFile);
								} catch (IllegalArgumentException e) {
									//TODO: handle exception
									erroShrink = true;
									logger.logError("Deu ruim no shrink \n"+e);
									break;
								}
								/////////////////////////////
								// VALIDACAO POR CABECALHO //
								/////////////////////////////
 

 								inomeOrigem		= getIndiceCabecalho("nomeOrigem", inomeOrigem, memFile, roteiroCRM);
								idataMovimento	= getIndiceCabecalho("dataMovimento", idataMovimento, memFile, roteiroCRM);
								inomePortador	= getIndiceCabecalho("nomePortador", inomePortador, memFile, roteiroCRM);
								idocumento		= getIndiceCabecalho("documento", idocumento, memFile, roteiroCRM);
								ivalorDocumento	= getIndiceCabecalho("valorDocumento", ivalorDocumento, memFile, roteiroCRM);
								ivalorJuros		= getIndiceCabecalho("valorJuros", ivalorJuros, memFile, roteiroCRM);
								ivalorDesconto	= getIndiceCabecalho("valorDesconto", ivalorDesconto, memFile, roteiroCRM);
								ivalorMulta		= getIndiceCabecalho("valorMulta", ivalorMulta, memFile, roteiroCRM);
								ivalorAlternativo = getIndiceCabecalho("valorAlternativo", ivalorAlternativo, memFile, roteiroCRM);
								ivalorPagamento	= getIndiceCabecalho("valorPagamento", ivalorPagamento, memFile, roteiroCRM);
								icodCcOrigem	= getIndiceCabecalho("codCcOrigem", icodCcOrigem, memFile, roteiroCRM);
								
								icomplemento01	= getIndiceCabecalho("complemento01", icomplemento01, memFile, roteiroCRM);
								icomplemento02	= getIndiceCabecalho("complemento02", icomplemento02, memFile, roteiroCRM);
								icomplemento03	= getIndiceCabecalho("complemento03", icomplemento03, memFile, roteiroCRM);
								icomplemento04	= getIndiceCabecalho("complemento04", icomplemento04, memFile, roteiroCRM);
								icomplemento05	= getIndiceCabecalho("complemento05", icomplemento05, memFile, roteiroCRM);
								icomplemento06	= getIndiceCabecalho("complemento06", icomplemento06, memFile, roteiroCRM);
								icomplemento07	= getIndiceCabecalho("complemento07", icomplemento07, memFile, roteiroCRM);
								icomplemento08	= getIndiceCabecalho("complemento08", icomplemento08, memFile, roteiroCRM);
								icomplemento09	= getIndiceCabecalho("complemento09", icomplemento09, memFile, roteiroCRM);
								icomplemento10	= getIndiceCabecalho("complemento10", icomplemento10, memFile, roteiroCRM);
								idataFake		= getIndiceCabecalho("dataFake", idataFake, memFile, roteiroCRM);
								icpfCnpj		= getIndiceCabecalho("cpfCnpj", icpfCnpj, memFile, roteiroCRM);
								
								isLinhaPrincipal = false;
								ignorarAntes = false;

								JSONObject histobj = new JSONObject();
								lerAposPrincipal = roteiroCRM.optString("lerAposPrincipal").toUpperCase();

								// #DOCUMENTACAO
								// ignorar antes
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO")) {

									histobj.put("nomeOrigem", getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger));
									histobj.put("documento", getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger));
									histobj.put("complemento01", getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger));
									histobj.put("complemento02", getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger));
									histobj.put("complemento03", getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger));
									histobj.put("complemento04", getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger));
									histobj.put("complemento05", getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger));
									histobj.put("complemento06", getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger));
									histobj.put("nomePortador", getCampoString(nomePortador,	inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger));
									histobj.put("dataMovimento", "");
									histobj.put("mesAnoAnterior", "");
									histobj.put("mesAno2Anterior", "");
									histobj.put("mesAnoAtual", "");
									histobj.put("contaMovimento", "");
									histobj.put("contaPortador", "");
									histobj.put("contaDebito", "");
									histobj.put("contaCredito", "");
									histobj.put("contaJuros", contaJuros);
									histobj.put("contaDesconto", contaDesconto);
									histobj.put("contaMulta", contaMulta);
									histobj.put("valorDocumento", "");
									histobj.put("valorJuros", "");
									histobj.put("valorDesconto", "");
									histobj.put("valorMulta","");
									histobj.put("codFilial", "");
									histobj.put("numeroAba", String.valueOf(abaConvertida));
									histobj.put("tipoPlanilha", tipoPlanilha);
									histobj.put("nomeArquivo", nomeArquivo.toUpperCase());

									ignorarAntes = getTratarLinhaIgnorar(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento,
																		 getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger),
																		 getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger), histobj);

									if (ignorarAntes) continue;

									double valorValido = 0;
									try{valorValido = Math.abs(memFile.getDoubleField(ivalorDocumento));}
									catch (Exception vlrd) { valorValido = 0; }

									if(ivalorDocumento < 0 && ivalorPagamento >= 0){
										try{valorValido = Math.abs(memFile.getDoubleField(ivalorPagamento));}
										catch (Exception vlrd) { valorValido = 0; }
									}


									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&  valorValido > 0) isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !histobj.optString("nomeOrigem").equals("")) isLinhaPrincipal = true;

								}

								if (naoLeMais) continue;
								if (tipoPlanilha.equals("")) continue;
								

								// #DOCUMENTACAO
								// leitura de xlsx e csv
								if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") || (!roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA(") && !roteiroCRM.optString("dataMovimento").toUpperCase().startsWith("COLUNA ("))) {
									zerar 			  = !Boolean.parseBoolean(roteiroCRM.optString("naoZerarValores").toLowerCase().trim());
									// logger.logDebug("LIN -> " + line);
									
									// #Fabrica(2019-05-20)
									if (tipoPlanilha.contains("OTTCARTAO")) {
										try{
											String auxMes 	  = getMonth(cutString(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), " ", " "));
											if(auxMes.length() == 2 && !auxMes.equals(cutString(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), " ", " "))){
												dataMovimento = memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).replaceAll(cutString(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), " ", " "), auxMes).replaceAll(" ", "/");
											}else if (memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).length() > 11 
											 && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).contains("/") 
											 && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).contains(",")
											 && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).contains(":")){
												dataMovimento     = cutString(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento), 0, memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).lastIndexOf("/")+5);
											}else{
												dataMovimento     = getDate(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);
											} 											
											 
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
										}catch(Exception e){
											// dataMovimento   = "";
											// dataLote        = "";
										}
									}
									
									if (!tipoPlanilha.contains("OTTCARTAO")) {
										// #Fabrica(2019-05-20)
										try{
											if(tipoPlanilha.equals("MOVIMENTO")){//yuri
												dataMovimento = getCampoDate(StringUtil.leftPad(memFile.getStringFieldRemoveEspCharsUpper(idataMovimento),8,"0"), "ddMMyyyy");
												logger.logInfo("DATA -> " + dataMovimento);
											}else{
												dataMovimento     = getDate(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger);												
											}
											
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");

										}catch(Exception e){
											// dataMovimento   = "";
											// dataLote        = "";
										}
									}
									if (tipoLancamento.contains("PAGAR")&& memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA RECEBIMENTO") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOCUMENTO")
										&& memFile.getStringFieldRemoveEspCharsUpper(2).contains("CLIENTE /  DESCRICAO RECEITA") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("DETALHES DO RECEBIMENTO")
										&& memFile.getStringFieldRemoveEspCharsUpper(4).contains("VALOR ORIGINAL") && memFile.getStringFieldRemoveEspCharsUpper(5).contains("VALOR RECEBIDO")
										&& memFile.getStringFieldRemoveEspCharsUpper(6).contains("BANCO (PORTADOR)") && memFile.getStringFieldRemoveEspCharsUpper(7).contains("CATEGORIA (RECEITA)")){
										break;
									}
									
									// logger.logDebug("TP -> "+tipoPlanilha+" - Empresa -> "+nomeEmpresa+" - DM -> "+dataMovimento);
									// logger.logDebug("TP -> "+tipoPlanilha+" - Empresa -> "+nomeEmpresa+" - DM -> "+line);
									
									
 								   
									// leitura de data mantida por seguranca
									// String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, logger).trim();
									// if (!dataString.equals("")) {
									// 	String dataMovimentoAux	  = getCampoDate(dataString);
									// 	if (dataMovimentoAux.contains("/")) {
									// 		dataMovimento     = getCampoDate(dataString);
									// 		dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
									// 	}
									// }

									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals("")) isLinhaPrincipal = true;
								
									
									if (!zerarColAlternativo.equals("")) {
										if (zerarColAlternativo.contains("documento"))		documento		= "";
										if (zerarColAlternativo.contains("nomeOrigem"))		nomeOrigem		= "";
										if (zerarColAlternativo.contains("nomePortador"))   nomePortador	= "";
										if (zerarColAlternativo.contains("complemento01"))  complemento01	= "";
										if (zerarColAlternativo.contains("complemento02"))  complemento02	= "";
										if (zerarColAlternativo.contains("complemento03"))  complemento03   = "";
										if (zerarColAlternativo.contains("complemento04"))  complemento04   = "";
										if (zerarColAlternativo.contains("complemento05"))  complemento05   = "";
										if (zerarColAlternativo.contains("complemento06"))  complemento06   = "";
										if (zerarColAlternativo.contains("complemento07"))  complemento07   = "";
										if (zerarColAlternativo.contains("complemento08"))  complemento08   = "";
										if (zerarColAlternativo.contains("complemento09"))  complemento09   = "";
										if (zerarColAlternativo.contains("complemento10"))  complemento10   = "";
									}
									
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, logger);
									
									if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) {
											try{complemento01     = getDate(complemento01, icomplemento01, line, false, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										}
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) {
											try{complemento02     = getDate(complemento02, icomplemento02, line, false, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										}
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) {
											try{complemento03     = getDate(complemento03, icomplemento03, line, false, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										}
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) {
											try{complemento04     = getDate(complemento04, icomplemento04, line, false, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										}
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) {
											try{complemento05     = getDate(complemento05, icomplemento05, line, false, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										} 
										if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) {
											try{complemento06     = getDate(complemento06, icomplemento06, line, false, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger);}
											catch(Exception e){}
										} 
									}
									
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, logger);

									historico		= "";
									parcelaDoc      = 1;

									valorDocumento	= 0;
									valorDocumentoArray[0] = 0;
									valorDocumentoArray[1] = 0;
									valorDocumentoArray[2] = 0;
									valorDocumentoArray[3] = 0;
									valorDocumentoArray[4] = 0;
									valorDocumentoArray[5] = 0;
									valorDocumentoArray[6] = 0;
									valorDocumentoArray[7] = 0;
									valorDocumentoArray[8] = 0;
									valorDocumentoArray[9] = 0;
									
									valorJuros		= 0;
									valorDesconto	= 0;
									valorMulta		= 0;
									valorPagamento	= 0;
									
									debitoCredito 	= "";
									valorAlternativo = 0;
									
									if(ivalorJuros >=0){
										try{valorJuros = Math.abs(memFile.getDoubleField(ivalorJuros));}
										catch (Exception vlrj) { valorJuros = 0;}
									}
									
									if(ivalorDesconto >=0){
										try{valorDesconto = Math.abs(memFile.getDoubleField(ivalorDesconto));}
										catch(Exception vlrd) {valorDesconto = 0;}
									}
									
									// quando no CRM colocarmos que a coluna de juros eh a mesma de valor desconto 
									// no caso do valor ser negativo, jogaremos zero para juros, ficando o valor absoluto da coluna como desconto
									// no caso do valor ser positivo, jogamos zero em valor desconto, ficando apenas com o valor dos juros
									if((ivalorDesconto == ivalorJuros) && valorJuros > 0 && ivalorJuros > 0){
										try{
											if(memFile.getDoubleField(ivalorDesconto) < 0) valorJuros = 0;
											else valorDesconto = 0;
										} catch(Exception vlrd) {}
									}
									
									if(ivalorMulta >=0){
										try{valorMulta = Math.abs(memFile.getDoubleField(ivalorMulta));}
										catch(Exception vlrm) {valorMulta = 0;}
									}
									
									//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if(ivalorDocumento >=0){
										try{valorDocumento = memFile.getDoubleField(ivalorDocumento);}
										catch (Exception vlrd) { valorDocumento = 0; }
									}
									
								    logger.logDebug("TP  1110 -> "+tipoPlanilha+" - DM "+idataMovimento+" -> "+dataMovimento+" - VD "+ivalorDocumento+" -> "+valorDocumento);
									if(logs && cont <= 200){
										
										logsTxt.append("\r\n");
										logsTxt.append("ANALISTA AUX");												logsTxt.append(";");
										logsTxt.append(dataMovimento); 												logsTxt.append(";");
										logsTxt.append(valorDocumento);												logsTxt.append(";");
										logsTxt.append(documento);													logsTxt.append(";");
										logsTxt.append(nomeOrigem);													logsTxt.append(";");
										logsTxt.append(nomePortador);												logsTxt.append(";");
										logsTxt.append(complemento01);												logsTxt.append(";");
										logsTxt.append(complemento02);												logsTxt.append(";");
										logsTxt.append(complemento03);												logsTxt.append(";");
										logsTxt.append(complemento04);												logsTxt.append(";");
										logsTxt.append(complemento05);												logsTxt.append(";");
										logsTxt.append(complemento06);												logsTxt.append(";");
										logsTxt.append(tipoPlanilha);												logsTxt.append(";");
										if(mantemArquivo.equals("SIM"))logsTxt.append("LENDO PELO TEMPLATE (SIM)");	logsTxt.append(";");
										if(mantemArquivo.equals("NAO"))logsTxt.append("LENDO ESPECIFICO (NAO)");	logsTxt.append(";");
										logsTxt.append(line);														logsTxt.append(";");
																	
									}

									// logger.logDebug("ROTEIRO coluna Extra => " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " |TP => " + tipoPlanilha);
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
										String [] indiceValores = roteiroCRM.optString("Colunas_de_Valores_Extras").split(";");
										valorSomaArray = 0;
										for(int iv = 0; iv < indiceValores.length; iv++) {
											// try{
												// logger.logDebug("IDValores -> " + indiceValores[iv].toString());
												// if(!indiceValores[iv].contains("*") && !indiceValores[iv].contains("/") && !indiceValores[iv].contains("+") && !indiceValores[iv].contains("-") && !indiceValores[iv].contains("#")){
													// logger.logDebug("ENTROU IF");
													// String rotuloColuna = "";
													// String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";");
													// logger.logDebug("ROTULO ARRAY => " +rotuloArray[iv].toString());
													// indiceValores[iv]	= getIndiceCabecalhoExtra(rotuloArray[iv], memFile);
													// logger.logDebug("INDICE dps => " +indiceValores[iv].toString());
												// }
											// }catch(Exception xx){
												// logger.logDebug("CAIU CATCH");
											// }
												
											//ssss
											double denomidador = 0; 
											int indiceDenominador = -1;
											String sinal = "";
											boolean multiplica100 = false;
											boolean divide100 = false;
											
											if (indiceValores[iv].contains("*100")) multiplica100 = true;
											if (indiceValores[iv].contains("/100")) divide100 = true;
											indiceValores[iv] = indiceValores[iv].replace("*100","").replace("/100","");
											
											if (indiceValores[iv].contains("*")) sinal = "*";
											if (indiceValores[iv].contains("/")) sinal = "/";
											if (indiceValores[iv].contains("+")) sinal = "+";
											if (indiceValores[iv].contains("-")) sinal = "-";										

																					
											if (!sinal.equals("") && indiceValores[iv].contains(sinal)) {
 												try {
													if (!indiceValores[iv].contains("#")) {
														denomidador = Math.abs(memFile.getDoubleField(Integer.parseInt(cutString(indiceValores[iv], sinal))));
													}
													else {
														denomidador = DecimalUtil.toDecimal(cutString(indiceValores[iv], "#"));
													}
												} catch (Exception xx) {denomidador = 0;}
												indiceValores[iv] = cutString(indiceValores[iv], 0, sinal);
											} 
											 	
											
											try{
											
												valorDocumentoArray[iv] = Math.abs(memFile.getDoubleField(Integer.parseInt(indiceValores[iv])));
												if (sinal.equals("*") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] * denomidador;
												if (sinal.equals("/") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] / denomidador;
												if (sinal.equals("+") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] + denomidador;
												if (sinal.equals("-") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] - denomidador;
												if (multiplica100) valorDocumentoArray[iv] = valorDocumentoArray[iv] * 100;
												if (divide100)     valorDocumentoArray[iv] = valorDocumentoArray[iv] / 100;
												
 
												
 											}
											catch (Exception vlrd) { 

 
 
												valorDocumentoArray[iv] = 0; 
											}
											
											if(valorDocumentoArray[iv] < 0){
												valorDocumentoArray[iv] = 0;
											} 
											
											valorSomaArray += valorDocumentoArray[iv];
										}
									}
									
									
									if(ivalorPagamento >=0){
										try{valorPagamento	= memFile.getDoubleField(ivalorPagamento);}
										catch(Exception vlrp) {valorPagamento = 0;}
									}
									
									if(ivalorAlternativo >= 0){
										try{valorAlternativo = memFile.getDoubleField(ivalorAlternativo);}
										catch (Exception vlrd) { valorAlternativo = 0; }
									}
									
									if (tipoLancamento.equals("PAGAR"))
										debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER"))
										debitoCredito = "EXTRATO-CREDITO";
								
									
									////////////////////////////////////////////////
									////	busca Coluna Alternativa 
									JSONObject obj1 = new JSONObject();
									String validar	= "dataMovimento;nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador;valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";
									obj1.put("validar",			validar);
									obj1.put("documento",		documento);
									obj1.put("nomeOrigem",		nomeOrigem);
									obj1.put("nomePortador",	nomePortador);
									obj1.put("dataMovimento",	dataMovimento);
									obj1.put("complemento01",	complemento01);
									obj1.put("complemento02",	complemento02);
									obj1.put("complemento03",	complemento03);
									obj1.put("complemento04",	complemento04);
									obj1.put("complemento05",	complemento05);
									obj1.put("complemento06",	complemento06);
									obj1.put("complemento07",	complemento07);
									obj1.put("complemento08",	complemento08);
									obj1.put("complemento09",	complemento09);
									obj1.put("complemento10",	complemento10);
									obj1.put("codCentroCusto",	codCcOrigem);
									obj1.put("tipoPlanilha",	tipoPlanilha);
									obj1.put("numeroAba",		String.valueOf(abaConvertida));
									obj1.put("nomeArquivo",		nomeArquivo.toUpperCase());
									JSONObject alternativeObj = getAlternativeDataInt (obj1, memFile);
									String changed = alternativeObj.optString("changeIt");
									
									if(!changed.equals("")) {
										zerarColAlternativo = changed;
										if (changed.contains("dataMovimento")) {
											dataMovimento	= alternativeObj.optString("dataMovimento");
											dataLote		= alternativeObj.optString("dataLote");
										}
										if (changed.contains("documento"))		documento		= alternativeObj.optString("documento");
										if (changed.contains("nomeOrigem"))		nomeOrigem		= alternativeObj.optString("nomeOrigem");
										if (changed.contains("nomePortador"))   nomePortador	= alternativeObj.optString("nomePortador");
										
										if (changed.contains("complemento01"))  complemento01	= alternativeObj.optString("complemento01");
										if (changed.contains("complemento02"))  complemento02	= alternativeObj.optString("complemento02");
										if (changed.contains("complemento03"))  complemento03   = alternativeObj.optString("complemento03");
										if (changed.contains("complemento04"))  complemento04   = alternativeObj.optString("complemento04");
										if (changed.contains("complemento05"))  complemento05   = alternativeObj.optString("complemento05");
										if (changed.contains("complemento06"))  complemento06   = alternativeObj.optString("complemento06");
										if (changed.contains("complemento07"))  complemento07   = alternativeObj.optString("complemento07");
										if (changed.contains("complemento08"))  complemento08   = alternativeObj.optString("complemento08");
										if (changed.contains("complemento09"))  complemento09   = alternativeObj.optString("complemento09");
										if (changed.contains("complemento10"))  complemento10   = alternativeObj.optString("complemento10");
										
										if (changed.contains("valorDocumento"))	valorDocumento	= alternativeObj.optDouble("valorDocumento");
										
										if (changed.contains("valorPagamento"))	valorPagamento  = alternativeObj.optDouble("valorPagamento");
										if (changed.contains("valorDesconto"))	valorDesconto	= alternativeObj.optDouble("valorDesconto");
										if (changed.contains("valorJuros"))		valorJuros		= alternativeObj.optDouble("valorJuros");
										if (changed.contains("valorMulta"))		valorMulta		= alternativeObj.optDouble("valorMulta");
									}
									

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(ivalorAlternativo >= 0) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && ivalorAlternativo >= 0){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if((ivalorDocumento < 0 || tipoPlanilha.contains("PADRAOOTTIMIZZA")) && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento>0 && ivalorJuros < 0 && ivalorDesconto < 0 && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}

									valorDocumento = Math.abs(valorDocumento);
									

									
									// ---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0)) isLinhaPrincipal = true;
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") &&
										lerAposPrincipal.equals("") && (valorDocumento == 0 && valorSomaArray == 0)) {
											
										continue;
									}
								}
								
 

								// #DOCUMENTACAO
								// leitura de TXT
								if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && roteiroCRM.optString("dataMovimento").replaceAll(" ", "").toUpperCase().startsWith("COLUNA(") && roteiroCRM.optString("dataMovimento").endsWith(")")) {
  
									String dataString = getCampoString(dataMovimento, idataMovimento, line, false, roteiroCRM.optString("dataMovimento").toUpperCase(), memFile, roteiroCRM, logger).trim();
  
   
									if (!dataString.equals("") && dataString.contains("/")) {
										String dataMovimentoAux	  = getCampoDate(dataString);
										if (dataMovimentoAux.contains("/")) {
											dataMovimento     = getCampoDate(dataString);
											dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");
 										}
									}
  									
  
									// ajusta data quando vem no formato 01012021  
									if (!dataString.equals("") && !dataString.contains("/") && dataString.contains("20")) {
										try {
											Date dts = DateUtil.stringToDate(dataString, "ddMMyyyy");
											dataMovimento = DateUtil.dateToString(dts, "dd/MM/yyyy");
											dataLote = DateUtil.dateToString(dts, "yyyy-MM");
											if (!dataMovimento.contains("/20")) {   // data bichada sera ignorada
												dataMovimento = "";
												continue;
											}
										} catch (Exception dt1) {
											continue;
										}
									}
  
 
									nomePortador	= getCampoString(nomePortador, inomePortador, line, zerar, roteiroCRM.optString("portador").toUpperCase(), memFile, roteiroCRM, logger);
									nomeOrigem		= getCampoString(nomeOrigem, inomeOrigem, line, zerar, roteiroCRM.optString("fornecedor").toUpperCase(), memFile, roteiroCRM, logger);
									documento		= getCampoString(documento, idocumento, line, zerar, roteiroCRM.optString("documentoNF").toUpperCase(), memFile, roteiroCRM, logger);

									complemento01	= getCampoString(complemento01,	icomplemento01, line, zerar, roteiroCRM.optString("complemento01").toUpperCase(), memFile, roteiroCRM, logger);
									complemento02	= getCampoString(complemento02,	icomplemento02, line, zerar, roteiroCRM.optString("complemento02").toUpperCase(), memFile, roteiroCRM, logger);
									complemento03	= getCampoString(complemento03,	icomplemento03, line, zerar, roteiroCRM.optString("complemento03").toUpperCase(), memFile, roteiroCRM, logger);
									complemento04	= getCampoString(complemento04,	icomplemento04, line, zerar, roteiroCRM.optString("complemento04").toUpperCase(), memFile, roteiroCRM, logger);
									complemento05	= getCampoString(complemento05,	icomplemento05, line, zerar, roteiroCRM.optString("complemento05").toUpperCase(), memFile, roteiroCRM, logger);

									complemento06	= getCampoString(complemento06,	icomplemento06, line, zerar, roteiroCRM.optString("complemento06").toUpperCase(), memFile, roteiroCRM, logger);
									complemento07	= getCampoString(complemento07,	icomplemento07, line, zerar, roteiroCRM.optString("complemento07").toUpperCase(), memFile, roteiroCRM, logger);
									complemento08	= getCampoString(complemento08,	icomplemento08, line, zerar, roteiroCRM.optString("complemento08").toUpperCase(), memFile, roteiroCRM, logger);
									complemento09	= getCampoString(complemento09,	icomplemento09, line, zerar, roteiroCRM.optString("complemento09").toUpperCase(), memFile, roteiroCRM, logger);
									complemento10	= getCampoString(complemento10,	icomplemento10, line, zerar, roteiroCRM.optString("complemento10").toUpperCase(), memFile, roteiroCRM, logger);
									cpfCnpj			= getCampoString(cpfCnpj,		icpfCnpj, 		line, zerar, roteiroCRM.optString("cpfCnpj").toUpperCase(), memFile, roteiroCRM, logger);
									codCcOrigem		= getCampoString(codCcOrigem,	icodCcOrigem, 	line, false, roteiroCRM.optString("centroCusto").toUpperCase(), memFile, roteiroCRM, logger);


									valorDocumento = getDoubleTXT2020(roteiroCRM.optString("valorDocumento").toUpperCase(), line, objetoParametro);
									
									if (tipoPlanilha.contains("OTTCARTAO")) {
									    String valorStr = getCampoString("", -1, 	line, false, roteiroCRM.optString("valorDocumento").toUpperCase(), memFile, roteiroCRM, logger);
										if (!valorStr.contains(".") && !valorStr.contains(",")) valorDocumento = valorDocumento / 100;
									}

									valorJuros	   = getDoubleTXT2020(roteiroCRM.optString("valorJuros").toUpperCase(), line, objetoParametro);
									valorDesconto  = getDoubleTXT2020(roteiroCRM.optString("valorDesconto").toUpperCase(), line, objetoParametro);
									valorMulta 	   = getDoubleTXT2020(roteiroCRM.optString("valorMulta").toUpperCase(), line, objetoParametro);
									valorPagamento = getDoubleTXT2020(roteiroCRM.optString("valorPagamento").toUpperCase(), line, objetoParametro);

									if (tipoLancamento.equals("PAGAR")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-DEBITO";
									
									if (tipoLancamento.equals("RECEBER")) 
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA"))
											debitoCredito = "EXTRATO-CREDITO";

									// fazer regra quando tiver valor documento e alternativo na mesma coluna
									String tratarComoValorAlternativo = getTratarValorAlternativo(histobj);
									if (!tratarComoValorAlternativo.equals("")) {											
										if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
										if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
										if(roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")) valorDocumento = valorAlternativo;
									}else{// n?o fazer regra quando for valor documento e alternativo em colunas diferentes	
										if(valorDocumento == 0 && roteiroCRM.optString("valorAlternativo").toUpperCase().contains("COLUNA")){		
											if (tipoLancamento.equals("PAGAR")) 	debitoCredito = "EXTRATO-CREDITO";
											if (tipoLancamento.equals("RECEBER")) 	debitoCredito = "EXTRATO-DEBITO";
											valorDocumento = valorAlternativo;
										}
									}

									if(!roteiroCRM.optString("valorDocumento").toUpperCase().contains("COLUNA") && valorDocumento == 0){
										if		(valorPagamento > 0) valorDocumento = valorPagamento + valorDesconto - valorJuros - valorMulta;
										else if	(valorPagamento < 0) valorDocumento = valorPagamento - valorDesconto + valorJuros + valorMulta;
									}
									if(valorDocumento > 0 && !roteiroCRM.optString("valorJuros").toUpperCase().contains("COLUNA") && !roteiroCRM.optString("valorDesconto").toUpperCase().contains("COLUNA") && valorPagamento > 0){
										if(valorPagamento > valorDocumento) valorJuros = DecimalUtil.toDecimal(String.format("%.2f", valorPagamento - valorDocumento));
										if(valorPagamento < valorDocumento) valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", valorDocumento - valorPagamento));
									}
									
									//#2305-0004328. Coluna de valor extra para o formato txt
									if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {
                                        valorSomaArray = TemplateUtils.lerValoresExtrasArquivoTxt(valorDocumentoArray, line, roteiroCRM, null);
                                    }
									valorDocumento = Math.abs(valorDocumento);
									
									// if(logs && cont <= 200){
										// logsTxt.append("\r\n");
										
										// logsTxt.append("ANALISTA AUX");												logsTxt.append(";");
										// logsTxt.append(dataMovimento); 												logsTxt.append(";");
										// logsTxt.append(valorDocumento);												logsTxt.append(";");
										// logsTxt.append(documento);													logsTxt.append(";");
										// logsTxt.append(nomeOrigem);													logsTxt.append(";");
										// logsTxt.append(nomePortador);												logsTxt.append(";");
										// logsTxt.append(complemento01);												logsTxt.append(";");
										// logsTxt.append(complemento02);												logsTxt.append(";");
										// logsTxt.append(complemento03);												logsTxt.append(";");
										// logsTxt.append(complemento04);												logsTxt.append(";");
										// logsTxt.append(complemento05);												logsTxt.append(";");
										// logsTxt.append(complemento06);												logsTxt.append(";");
										// logsTxt.append(tipoPlanilha);												
										// if(mantemArquivo.equals("SIM"))logsTxt.append("LENDO PELO TEMPLATE");		logsTxt.append(";");
										// if(mantemArquivo.equals("NAO"))logsTxt.append("LENDO ESPECIFICO");			logsTxt.append(";");
										// logsTxt.append(line);														logsTxt.append(";");
																		
									// }
									
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("DATA MOVIMENTO") && !dataMovimento.equals(""))  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("VALOR DOCUMENTO") && (valorDocumento > 0 || valorSomaArray > 0))		  isLinhaPrincipal = true;
									if (roteiroCRM.optString("campoLinhaPrincipal").toUpperCase().equals("FORNECEDOR-CLIENTE") && !nomeOrigem.equals("")) isLinhaPrincipal = true;
								}


								// #DOCUMENTACAO
								// mes ano anterior 
								if(dataMovimento.length() > 9){
									mesRef	= Integer.parseInt(dataMovimento.substring(3,5));
									anoRef	= Integer.parseInt(dataMovimento.substring(6,10));
									mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
									mesRef	= mesRef - 1;
									if (mesRef	== 0) {
										mesRef	= 12;
										anoRef	= anoRef - 1;
									}
									mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
								}
								
								// #DOCUMENTACAO
								// filtro de datas (parametro definido por integracao no CRM, e informado a cada processamento de arquivos)
								//if (nomeArquivo.toUpperCase().contains("FILTRO_")) filtro = validaFiltro(nomeArquivo, dataMovimento);
								if (nomeArquivo.toUpperCase().contains("FILTRO_")) {
									temFiltro = true;
									filtro = validaFiltro(nomeArquivo, dataMovimento);
								}
								if (!filtro) continue;

								valorTotalDoc   += valorDocumento;
								valorTotalJuros += valorJuros;
								valorTotalDesc  += valorDesconto;

								if (documento.contains(".") && documento.contains("E")) {
									documento = removerNotacaoCientificaExcel(documento);
								}
								
								// #DOCUMENTACAO
								// cpfCnpj
								boolean aceitaCpf			= true;
								boolean cnpjSomenteNumeros	= Boolean.parseBoolean(roteiroCRM.optString("cnpjSomenteNumeros").toLowerCase().trim());

								if(!cpfCnpj.equals("")) cpfCnpj = trataCpfCnpj(cpfCnpj, cnpjSomenteNumeros, aceitaCpf);
								
								// #DOCUMENTACAO
								// ajustes fornecedor/cliente e portador
								if (nomeOrigem.equals("") && !roteiroCRM.optString("lerAposPrincipal").toUpperCase().contains("FORNECEDOR")) nomeOrigem = complemento01 + " " + dataMovimento + " R$" + String.valueOf(valorDocumento);
								nomeOrigem = nomeOrigem.trim();
								
								//Removemos o replace de AMP por conta de um efeito colateral #202212-0022861
								//nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("AMP","").trim();
								nomeOrigem = nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								// nomeOrigem = stringNormalizer(nomeOrigem, true);
								nomeOrigem = StringUtil.removeSpecialCharsToUC(nomeOrigem);
								
								// 202301-0023496 JWR Coloquei esse balde com o X para remontar o nomeOrigem
								// Descomentar caso d? problema com caracteres especiais
								/*String letrasPermitidas = "ABCDEFGHIJKLMNOPRSTUVWXYZ 0123456789.-/&";
								String nomeOrigemNovo = "";
								for (int xx = 0; xx < nomeOrigem.length(); xx++) {
									if (nomeOrigem.length() > xx) {
										if (letrasPermitidas.contains(nomeOrigem.substring(xx, xx+1))) {
											nomeOrigemNovo = nomeOrigemNovo + nomeOrigem.substring(xx, xx+1);
										}
									}
								}
								nomeOrigem = nomeOrigemNovo;*/

								
								if (roteiroCRM.optString("portador").toUpperCase().contains("NOME") && roteiroCRM.optString("portador").toUpperCase().contains("ARQUIVO")) nomePortador = StringUtil.removeSpecialCharsToUC(nomeArquivo).toUpperCase();
								nomePortador = nomePortador.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").replaceAll("\\?", "").trim();
								nomePortador = stringNormalizer(nomePortador, true);

								complemento01 = complemento01.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento02 = complemento02.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento03 = complemento03.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento04 = complemento04.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento05 = complemento05.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
								complemento06 = complemento06.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();

								// logger.logDebug("DAMA " + dataMovimento + " | " + valorDocumento + " | " + isLinhaPrincipal);
								if(dataMovimento.equals("")) continue;
								// quando for ler linha principal zerar as variaveis que vem depois da principal para nao sobrepor campos.
								if(isLinhaPrincipal) {
									// #DOCUMENTACAO
									// cont define que eh um novo lancamento (normalmente uma nova linha)
									cont++;

									if (lerAposPrincipal.contains("FORNECEDOR"))	nomeOrigem = "";
									if (lerAposPrincipal.contains("DOCUMENTO"))		documento = "";
									if (lerAposPrincipal.contains("PORTADOR")) 		nomePortador = "";
									if (lerAposPrincipal.contains("COMPLEMENTO01")) complemento01 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO02")) complemento02 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO03")) complemento03 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO04")) complemento04 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO05")) complemento05 = "";
									if (lerAposPrincipal.contains("COMPLEMENTO06")) complemento06 = "";

								}
								
								if(cont == 0) continue;
								
								histobj.put("nomeOrigem", nomeOrigem);					histobj.put("documento", documento);
								histobj.put("complemento01", complemento01);			histobj.put("complemento02", complemento02);
								histobj.put("complemento03", complemento03);			histobj.put("complemento04", complemento04);
								histobj.put("complemento05", complemento05);			histobj.put("complemento06", complemento06);
								histobj.put("complemento07", complemento07);			histobj.put("complemento08", complemento08);
								histobj.put("complemento09", complemento09);			histobj.put("complemento10", complemento10);
								histobj.put("dataMovimento", dataMovimento);			histobj.put("mesAnoAnterior", mesAnoAnterior);
								histobj.put("mesAno2Anterior", mesAno2Anterior);		histobj.put("mesAnoAtual", mesAnoAtual);
								histobj.put("nomePortador", nomePortador);				histobj.put("contaMovimento", contaMovimento);
								histobj.put("contaPortador", contaPortador);	   		histobj.put("contaDebito", "");
								histobj.put("contaCredito", "");						histobj.put("contaJuros", contaJuros);
								histobj.put("contaDesconto", contaDesconto);			histobj.put("contaMulta", contaMulta);
								histobj.put("valorDocumento", valorDocumento);			histobj.put("tipoPlanilha", tipoPlanilha); 
								histobj.put("valorJuros", valorJuros);   				histobj.put("valorDesconto", valorDesconto);
								histobj.put("valorMulta", valorMulta); 				    histobj.put("codFilial", codFilial);
								histobj.put("nomeArquivo", nomeArquivo.toUpperCase()); // foi ajustado 

								//feita limpeza de campo para poder pegar melhor os juros e descontos.
								documento     = getLimpaCamposAvancado("documento", documento, histobj);


								// #DOCUMENTACAO
								// TRATA PLANILHA OU LANCAMENTO EXPECIFICO COMO EXTRATO
								tratarComoExtrato = getTratarComoExtrato(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								nomeOrigem = nomeOrigem.replaceAll("  ", " ").trim();
								if (tratarComoExtrato) {
									if (nomeOrigem.length() > 199) nomeOrigem = cutString(nomeOrigem, 0, 180); // #Fabrica(2019-10-03) @Becker
									JSONObject jDados = new JSONObject();
									jDados.put("PORTADOR",    		nomePortador);
									jDados.put("EMPRESA",     		codEmpresa);
									jDados.put("DATAMOVIMENTO",	 	dataMovimento);
									jDados.put("NOMEARQUIVO",       debitoCredito+nomeArquivo.toUpperCase()); // #DOCUMENTACAO EVITA PROBLEMA DE TRANSFERENCIAS NO MESMO ARQUIVO
									jDados.put("NOMEORIGEM",    	nomeOrigem);
									jDados.put("VALORDOCUMENTO",    valorDocumento);
									jDados.put("COMPLEMENTO01",     complemento02);
									jDados.put("DEBITO-CREDITO",    debitoCredito);
									jDados.put("CONT",  			String.valueOf(cont));
									// logger.logDebug("nomePortador -> " + nomePortador);
									boolean primExtrato = insertIOExtrato(jDados, dbIOCont, logger );
									jStatus = new JSONObject();
									putStatus(dirName, "", jStatus, logger);
									continue;									
								}
								
								debitoCredito = ""; // zera aqui para n?o confundir com extratos bancarios.


								// #DOCUMENTACAO
								// trata lancamento como juros (de outro lancamento)
								complemento10 = "";
								tratarComoJuros = getTratarComoJuros(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoJuros) {
									complemento10 = dataMovimento + "-" + documento + "-JUROS";
									ttJuros ttJ    = (ttJuros)mapaJuros.get(complemento10);
									if (ttJ == null) {
										ttJ  = new ttJuros();
										ttJ.documento  = documento;
										ttJ.valorJur   = valorDocumento;
										ttJ.valorLido  = 0;
									}
									mapaJuros.put(complemento10,ttJ);
									continue;
								}

								// #DOCUMENTACAO
								// trata lancamento como desconto (de outro lancamento)
								tratarComoDesconto = getTratarComoDesconto(line.replaceAll("\\|","").replaceAll(";","").replaceAll(",","").trim(), tipoLancamento, documento, nomeOrigem, histobj);
								if (tratarComoDesconto) {
									complemento10  = dataMovimento + "-" + documento + "-DESCONTO";
									ttDesconto ttD    = (ttDesconto)mapaDesconto.get(complemento10);

									if(valorDocumento == 0) continue;

									if (ttD == null) {
										ttD  = new ttDesconto();
										ttD.documento  = documento;
										ttD.valorDesc  = valorDocumento;
										ttD.valorLido  = 0;
									}
									mapaDesconto.put(complemento10,ttD);
									continue;
								}

								int restoLinha = 0;
								restoLinha = (cont % 100);
								
								// logger.logDebug("PUTSTATUS 1591");
								if (restoLinha == 0) putStatus(dirName, "02--Etapa 2 de 4 - " + String.valueOf(cont) + "--" + tipoLancamento + ".status", jStatus, logger);


								String contLinhaTexto = String.valueOf(cont);
								contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
								String consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

								classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;
								
								
								// quando usa o getColunaAlternativa tem que refatorar o datalote
								dataLote		  = getCampoDate(dataMovimento, "", "yyyy-MM");								
								
								//alterado para evitar problemas de lote (maiusculo)
								lote = (nomeEmpresa + "_" + codEmpresa + "__" + nomeArquivo  + "__" + dataLote + "_" + tipoLancamento).replaceAll("\\." , "");
								chave = lote + "-" + String.valueOf(abaConvertida) + String.valueOf(contadorArquivo) + "-" + contLinhaTexto;

								// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+dataMovimento+" | LOTEEE == "+lote.replace("_rodaconversor", "")+" | TP === "+tipoPlanilha+" | COD ROT == "+roteiroCRMPrincipal.optString("codigo"));
								
								if(chave.length() > 200)  chave = chave.substring(0, 199);
								
								// #DOCUMENTACAO
								////////////////////////////////////////////////////////////// ACUMULA ANTES
								histobj.put("nomeOrigem", nomeOrigem);
								histobj.put("documento", documento);
								histobj.put("complemento01", complemento01);
								histobj.put("complemento02", complemento02);
								histobj.put("complemento03", complemento03);
								histobj.put("complemento04", complemento04);
								histobj.put("complemento05", complemento05);
								histobj.put("complemento06", complemento06);
								histobj.put("nomePortador", nomePortador);
								histobj.put("dataMovimento", dataMovimento);
								histobj.put("mesAnoAnterior", mesAnoAnterior);
								histobj.put("mesAno2Anterior", mesAno2Anterior);
								histobj.put("mesAnoAtual", mesAnoAtual);
								histobj.put("valorDocumento", valorDocumento);
								histobj.put("valorJuros", valorJuros);
								histobj.put("valorDesconto", valorDesconto);
								histobj.put("valorMulta",valorMulta);
								histobj.put("tipoPlanilha", tipoPlanilha);
								histobj.put("nomeArquivo", nomeArquivo.toUpperCase());
								histobj.put("line", line.toUpperCase());
								histobj.put("cabecalhoRegra", cabecalhoRegra.toString());
  								
								String modificaData = getModificaData(histobj);
								
								if (modificaData.startsWith("01"))  dataMovimento = getNextDay(dataMovimento, 1, true);
								if (modificaData.startsWith("02"))  dataMovimento = getNextDay(dataMovimento, 2, true);
								if (modificaData.startsWith("03"))  dataMovimento = getNextDay(dataMovimento, 1, false);
								if (modificaData.startsWith("04"))  dataMovimento = getNextDay(dataMovimento, 2, false);
								if (modificaData.startsWith("05"))  dataMovimento = "01/" + cutString(dataMovimento, "/");
								if (modificaData.startsWith("06"))  dataMovimento = getLastDayOfMonth(dataMovimento, true);
								
								
								// METODO QUE REFATORA OS CAMPOS COM BASE NO CABECALHO DO CRM
								// EXEMPLO QUANDO ENCONTRAR #LINE NO CAMPO COMPLEMENTO03, VAMOS JOGAR O LINE NESTE COMPLEMENTO
								// UM COMPLEMENTO02 POR EXEMPLO PODE RECEBER DADOS DE TIPOPLANILHA
								nomeOrigem       = getRefatoraCampo(nomeOrigem, roteiroCRM.optString("fornecedor"), histobj);
								nomePortador     = getRefatoraCampo(nomePortador, roteiroCRM.optString("portador"), histobj);
								documento        = getRefatoraCampo(documento, roteiroCRM.optString("documentoNF"), histobj);
								complemento01    = getRefatoraCampo(complemento01, roteiroCRM.optString("complemento01"), histobj);
								complemento02    = getRefatoraCampo(complemento02, roteiroCRM.optString("complemento02"), histobj);
								complemento03    = getRefatoraCampo(complemento03, roteiroCRM.optString("complemento03"), histobj);
								complemento04    = getRefatoraCampo(complemento04, roteiroCRM.optString("complemento04"), histobj);
								complemento05    = getRefatoraCampo(complemento05, roteiroCRM.optString("complemento05"), histobj);
								complemento06    = getRefatoraCampo(complemento06, roteiroCRM.optString("complemento06"), histobj);
								complemento07    = getRefatoraCampo(complemento07, roteiroCRM.optString("complemento07"), histobj);
								complemento08    = getRefatoraCampo(complemento08, roteiroCRM.optString("complemento08"), histobj);
								complemento09    = getRefatoraCampo(complemento09, roteiroCRM.optString("complemento09"), histobj);
								complemento10    = getRefatoraCampo(complemento10, roteiroCRM.optString("complemento10"), histobj);
								 

								
								String testeChave = getRegrasParaAcumular(lote, chave, tipoLancamento, documento, nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
								if(testeChave.toUpperCase().contains("ACUMULAANTES") || testeChave.toUpperCase().contains("ACUMULARANTES")) {
									chave = testeChave;
									if(chave.length() > 180) chave = cutString(chave, 0, 179);
									acumulouAntes = true;
								}
								////////////////////////////////////////////////////////////////////////////////////
								String key = chave  + "-CTB";
								nomeOrigem = nomeOrigem.replaceAll("  "," ").trim();

								partidaDobradaJuros		= 0;
								partidaDobradaDesconto	= 0;
								partidaDobradaMulta		= 0;

								if (forcarPartidaDobrada) {
									partidaDobradaJuros		= valorJuros;
									partidaDobradaDesconto	= valorDesconto;
									partidaDobradaMulta		= valorMulta;
									valorJuros				= 0;
									valorDesconto			= 0;
									valorMulta				= 0;
								}
								
								if (tipoPlanilha.contains("OTTCARTAO")) {
									
									if (!roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && memFile.getStringFieldRemoveEspCharsUpper(idataMovimento).equals("")) continue;
									if (roteiroCRM.optString("tipoArquivo").toUpperCase().contains("ARQUIVO TEXTO") && dataMovimento.equals("")) continue;
									complemento01 = tipoPlanilha;
									complemento02 = "VENDA";
									
									nomePortador = tipoPlanilha;
									
									// salva arquivo no hasmap para posterior eliminacao 
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
 									
								} else {
								
									// quando se mantem o arquivo, somente devem ser processados arquivos padroes
									// planilhas do rotiero movimento (principal), OFX e demais devem ficar para a rota normal
									// Trocado para validar se a planilha comeca como movimento - importante por causa da iguacu, Onnegestao, confialtiva que tinham movimento no roteiro secundario e estavam sendo bloqueados
									if (mantemArquivo.equals("SIM") && !tipoPlanilha.contains("PADRAOOTTIMIZZA") && 
									   !roteiroCRM.optString("nomeRelatorioRef").equals("PLANILHA_SIMPLES") && 
									   (tipoPlanilha.contains("SECUNDARIO") || tipoPlanilha.startsWith("MOVIMENTO"))) { //#Soares esteve aqui -> chamado referente a mudan?a: 202210-0019668
									   
									   // Colocado este IF para dar mais performance, ou seja, se ja tiver lido mais de 15 linhas
									   // e planilha for para ser rodada na personalizada
									   // break agiliza a saida da leitura da planilha. Xavier em 19.08
									   if (contadorCabecalho < 15) continue;
									   logs = false;
									   break;
									  }
									
								}
								//#FABRICA 31/08/2022 - @sergio - 202208-0017778
								//Estavamos processando as planilhas padroes sem apaga-las no processo
								//O if abaixo faz com que paguemos a planilha, ap?s processar pelo padrao
								
								// logger.logDebug("TPAQ " + tipoPlanilha);
								
								if(tipoPlanilha.contains("PADRAOOTTIMIZZA")){
									ttArq    = (ttArquivo)mapaArquivo.get(nomeArquivo);
									if (ttArq          == null) {
										ttArq          = new ttArquivo();
										ttArq.arquivo  = nomeArquivo;
										
									}
									mapaArquivo.put(nomeArquivo,ttArq);
									
								}
					
								// logger.logDebug("ANTES ttMov2");
								// #DOCUMENTACAO
								// insere numa tabela temporaria
								ttMovimentoPadrao ttMov2      = (ttMovimentoPadrao)mapaVariavel.get(key);
								if (ttMov2 == null) {
									ttMov2 = new ttMovimentoPadrao();
									ttMov2.lote              = lote;
									ttMov2.codEmpresa        = codEmpresa;
									ttMov2.nomeEmpresa       = nomeEmpresa;
									ttMov2.dataMovimento     = dataMovimento;
									ttMov2.tipoMovimento     = "CTB";
									ttMov2.tipoLancamento    = tipoLancamento;
									ttMov2.historico         = historico;
									ttMov2.contaJuros        = contaJuros;
									ttMov2.contaMulta        = contaMulta;
									ttMov2.contaDesconto     = contaDesconto;
									ttMov2.centroCusto       = codCcOrigem;
									ttMov2.cpfCnpj           = cpfCnpj;
									ttMov2.chave             = chave + "-CTB";
									ttMov2.classificacao     = classificacao;
									ttMov2.codFilial         = codFilial;
									ttMov2.complemento07     = complemento07;
									ttMov2.complemento08     = complemento08;
									ttMov2.complemento09     = complemento09;
									ttMov2.complemento10     = complemento10;
									ttMov2.nomeArquivo       = nomeArquivo.toUpperCase();
									ttMov2.tipoPlanilha      = tipoPlanilha;
									ttMov2.chaveExtrato      = chaveExtrato;
									ttMov2.debitoCredito     = debitoCredito;
									ttMov2.contLinha         = contLinhaTexto;
									ttMov2.historicoMulta    = "";
									ttMov2.historicoJuros    = "";
									ttMov2.historicoDesconto = "";
									ttMov2.contaDebito       = "";
									ttMov2.contaCredito      = "";
									ttMov2.naturezaContabil  = "";
									ttMov2.contador 		 = 0;
									ttMov2.parcelaDoc        = parcelaDoc;
									ttMov2.abaPlanilha       = String.valueOf(abaConvertida);

									if(!lerAposPrincipal.contains("FORNECEDOR"))	ttMov2.nomeOrigem    = nomeOrigem;
									if(!lerAposPrincipal.contains("DOCUMENTO")) 	ttMov2.documento 	 = documento;
									if(!lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = nomePortador;
									if(!lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = complemento01;
									if(!lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = complemento02;
									if(!lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = complemento03;
									if(!lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = complemento04;
									if(!lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = complemento05;
									if(!lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = complemento06;
									
									// logger.logDebug("TTMOVTP -> "+tipoPlanilha);


								}

								///  -------------------------------------------------------------------------------------------------------
								///	 QUANDO FOR PLANILHA COM MAIS DE UMA LINHA, JOGAR OS VALORES PARA CIMA (dentro da parte de inclusao)
								///  E PASSAR PARA BAIXO OS CAMPOS QUE PODEM SER SOBREPOSTOS. Exemplo para a linha de baixo:
								///  if (!complemento02.equals("")) ttMov2.complemento02 = complemento02;
								///  -------------------------------------------------------------------------------------------------------

								// #DOCUMENTACAO
								// acumula linhas secundarias ou apenas l? as secundarias
								boolean acumulaSegundaLinha = true;
								
								if(acumulaSegundaLinha){
									if (!nomeOrigem.equals("")    && lerAposPrincipal.contains("FORNECEDOR"))	 ttMov2.nomeOrigem    = (ttMov2.nomeOrigem    + " " + nomeOrigem).trim();
									if (!documento.equals("") 	  && lerAposPrincipal.contains("DOCUMENTO")) 	 ttMov2.documento	  = (ttMov2.documento + " " + documento).trim();
									if (!nomePortador.equals("")  && lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = (ttMov2.nomePortador  + " " + nomePortador).trim();
									if (!complemento01.equals("") && lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = (ttMov2.complemento01 + " " + complemento01).trim();
									if (!complemento02.equals("") && lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = (ttMov2.complemento02 + " " + complemento02).trim();
									if (!complemento03.equals("") && lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = (ttMov2.complemento03 + " " + complemento03).trim();
									if (!complemento04.equals("") && lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = (ttMov2.complemento04 + " " + complemento04).trim();
									if (!complemento05.equals("") && lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = (ttMov2.complemento05 + " " + complemento05).trim();
									if (!complemento06.equals("") && lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = (ttMov2.complemento06 + " " + complemento06).trim();
								}
								if(!acumulaSegundaLinha){
									if (!nomeOrigem.equals("")    && lerAposPrincipal.contains("FORNECEDOR"))	 ttMov2.nomeOrigem    = nomeOrigem.trim();
									if (!documento.equals("") 	  && lerAposPrincipal.contains("DOCUMENTO")) 	 ttMov2.documento	  = documento.trim();
									if (!nomePortador.equals("")  && lerAposPrincipal.contains("PORTADOR"))      ttMov2.nomePortador  = nomePortador.trim();
									if (!complemento01.equals("") && lerAposPrincipal.contains("COMPLEMENTO01")) ttMov2.complemento01 = complemento01.trim();
									if (!complemento02.equals("") && lerAposPrincipal.contains("COMPLEMENTO02")) ttMov2.complemento02 = complemento02.trim();
									if (!complemento03.equals("") && lerAposPrincipal.contains("COMPLEMENTO03")) ttMov2.complemento03 = complemento03.trim();
									if (!complemento04.equals("") && lerAposPrincipal.contains("COMPLEMENTO04")) ttMov2.complemento04 = complemento04.trim();
									if (!complemento05.equals("") && lerAposPrincipal.contains("COMPLEMENTO05")) ttMov2.complemento05 = complemento05.trim();
									if (!complemento06.equals("") && lerAposPrincipal.contains("COMPLEMENTO06")) ttMov2.complemento06 = complemento06.trim();
								}
								
								ttMov2.valorDocumento   = ttMov2.valorDocumento  + valorDocumento;
								ttMov2.valorDesconto    = ttMov2.valorDesconto   + valorDesconto;
								ttMov2.valorMulta       = ttMov2.valorMulta      + valorMulta;
								ttMov2.valorJuros       = ttMov2.valorJuros      + valorJuros;

								leuFinanceiro = true;
								mapaVariavel.put(key,ttMov2);
								
								// logger.logDebug("TEPE " + tipoPlanilha + " | " + roteiroCRM.optString("Colunas_de_Valores_Extras") + " | " + ttMov2.valorDocumento + " | " + ttMov2.dataMovimento);
								
								if (!roteiroCRM.optString("Colunas_de_Valores_Extras").equals("")) {

									for (int iv =0; iv < 10; iv++) { 
										
										if (valorDocumentoArray[iv] == 0) continue;
										
										String rotuloColuna = "";
										String [] rotuloArray  = roteiroCRM.optString("Rotulos_Para_Valores_Extras").split(";"); 
										
										try {
											rotuloColuna = rotuloArray[iv];
										} 
										catch (Exception xx) {
											continue;
										}
										
										if (rotuloColuna.equals("")) continue;
										
									
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + rotuloColuna + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										histobj.put("dataMovimento", dataMovimento);
										
										ttTemp.complemento05 = rotuloColuna;
										histobj.put("complemento05", rotuloColuna);
										
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										
										ttTemp.valorDocumento   = valorDocumentoArray[iv] ;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;

										if (tipoPlanilha.contains("OTTCARTAO")) {
											ttTemp.complemento01 = tipoPlanilha;
											ttTemp.complemento02 = rotuloColuna;
										}
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, rotuloColuna, classificacao);
									}
								}
								
								// Para cartoes, criamos o modelo de gerar tafifa por regra
								if (tipoPlanilha.contains("OTTCARTAO")) {

									histobj.put("complemento02", "TARIFA");
									histobj.put("complemento03", complemento03);
									histobj.put("dataMovimento", dataMovimento);
									histobj.put("complemento05", "TARIFA");									
 									
									double taxaTarifa = getTaxaTarifa("", tipoLancamento, documento, nomeOrigem, histobj);
  									 
									
									if (taxaTarifa > 0) {
										cont++; 
										contLinhaTexto = String.valueOf(cont);
										contLinhaTexto = StringUtil.leftPad(contLinhaTexto, 05, "0");
										consolidaClass = StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;

										classificacao         = dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "TARIFA" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.dataMovimento = dataMovimento;
										
										
										ttTemp.complemento05 = "TARIFA";
										String modificaData2 = getModificaData(histobj);											
										
										if (modificaData2.startsWith("01"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, true);
										if (modificaData2.startsWith("02"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, true);
										if (modificaData2.startsWith("03"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 1, false);
										if (modificaData2.startsWith("04"))  ttTemp.dataMovimento = getNextDay(dataMovimento, 2, false);
										if (modificaData2.startsWith("05"))  ttTemp.dataMovimento = "01/" + cutString(dataMovimento, "/");
										if (modificaData2.startsWith("06"))  ttTemp.dataMovimento = getLastDayOfMonth(dataMovimento, true);
										ttTemp.valorDocumento   = ttTemp.valorDocumento * taxaTarifa;
										ttTemp.valorDesconto    = 0;
										ttTemp.valorMulta       = 0;
										ttTemp.valorJuros       = 0;

 										ttTemp.complemento01 = tipoPlanilha;
										ttTemp.complemento02 = "TARIFA";
										
 										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "TARIFA", classificacao);
									}
								}
								
								

									
								if (forcarPartidaDobrada) {
									if (partidaDobradaJuros		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave = lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_JUR-" + contLinhaTexto;
										key = chave  + "-CTB";
										ttMovimentoPadrao ttTemp = new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento = partidaDobradaJuros;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "JUROS", classificacao);
									}
									
									if (partidaDobradaDesconto	> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_DES-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaDesconto;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "DESCONTO", classificacao);
									}
									
									if (partidaDobradaMulta		> 0) {
										cont++;
										contLinhaTexto	= StringUtil.leftPad(String.valueOf(cont), 05, "0");
										consolidaClass	= StringUtil.leftPad(String.valueOf(abaConvertida), 02, "0") + contLinhaTexto;
										classificacao	= dataMovimento.replace("/","").trim() + consolidaClass;

										chave	= lote + "-" + String.valueOf(abaConvertida) + "-DOBRADA_MUL-" + contLinhaTexto;
										key		= chave  + "-CTB";
										ttMovimentoPadrao ttTemp	= new ttMovimentoPadrao(ttMov2);
										ttTemp.valorDocumento		= partidaDobradaMulta;
										ttTemp.cpfCnpj = "";
										
										mapaVariavel = geralancamentoExtraInterno(mapaVariavel, ttTemp, key, true, 5, "MULTA", classificacao);
									}
								}								
							} catch (Exception e) {
							}
						} // while
					}finally {
						
						/*if (memFile != null) { //closeFile
							try {memFile.closeFile(); } 
							catch (Exception ex) { }
						}*/ //closeFile
						
					}
				}

			}
			try {
				Iterator itArquivo = mapaArquivo.keySet().iterator();
				while (itArquivo.hasNext()) { 
					String key = (String)itArquivo.next();
					ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
					
					try {
		 
						FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
					} catch (Exception xx) {}
				}
			} catch (Exception xx) {} 
					
			

		}
	} catch (Exception ee) {
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		logger.logError("EndpointA: ", ee);
	}
	
	
	
	try {
		Iterator itArquivo = mapaArquivo.keySet().iterator();
		while (itArquivo.hasNext()) { 
			String key = (String)itArquivo.next();
			ttArquivo ttArq = (ttArquivo)mapaArquivo.get(key);
			
			try {
 
				FileUtil.moveToDir(dirName+"/"+ttArq.arquivo, backupDirName);
			} catch (Exception xx) {}
 		}
	} catch (Exception xx) {} 
			

	if(erroShrink){
		putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
		throw new Exception();
	}
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// BUSCA INFORMACAO DE EXTRATOS SALVOS
	if (leuFinanceiro && cruzaExtrato.contains("TRUE") || (tipoPlanilha.contains("EXTRATO") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("TRUE") && cruzaExtrato.contains("FALSE")) ||
		(Cruza_Extrato_com_Extrato.contains("FALSE") && cruzaExtrato.contains("FALSE"))) {
			
		   
		try {
			JSONArray extratoEmpresa = getExtratosEmpresa(codEmpresa, dbIOCont, logger);
			

			if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
				for (int t=0; t<extratoEmpresa.length(); t++) {

					JSONObject recMov = extratoEmpresa.optJSONObject(t);

					recMov.put("CODEMPRESA", codEmpresa);
					recMov.put("NOMEEMPRESA", nomeEmpresa);

					//QUANDO FOR CRUZAMENTO DE EXTRATO, MANTER NOME UNICO NO ARQUIVO FINAL.
					if (leuFinanceiro && cruzaExtrato.contains("TRUE")) {
						recMov.put("NOMEARQUIVO", nomeArquivo);
					}
					else {
						recMov.put("NOMEARQUIVO", "");
					}

					recMov.put("TIPOLANCAMENTO", tipoLancamento);
					recMov.put("CONTAMOVIMENTO", "");
					recMov.put("CONTAPORTADOR", "");
					recMov.put("CONTLINHATEXTO", String.valueOf(t));

					ttMovimentoPadrao ttMovExtrato = getMovimentoExtrato(recMov, logger);					
					if (nomeArquivo.toUpperCase().contains("FILTRO_")){
						boolean filtro = validaFiltro(nomeArquivo, ttMovExtrato.dataMovimento);
						//#2304-002843
						// if(!filtro){
							// temFiltro = true;
							// continue;
						// }
						temFiltro = true;
						if(!filtro) continue;
					}
					
					String consolidaClass = StringUtil.leftPad(String.valueOf(t), 06, "0");
					ttMovExtrato.classificacao = ttMovExtrato.dataMovimento.replace("/","").trim() + "5" + consolidaClass;
					
					String leuCnpj = "";
					if (ttMovExtrato.nomeOrigem.contains(".") && ttMovExtrato.nomeOrigem.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.nomeOrigem);
						
						if (!leuCnpj.equals("")) {
							ttMovExtrato.nomeOrigem = ttMovExtrato.nomeOrigem.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll("/","").replaceAll(" ","").replaceAll("-",""));
						}	
					}	
					if (ttMovExtrato.complemento01.contains(".") && ttMovExtrato.complemento01.contains("-")) {
						leuCnpj = getCpfCnpj(ttMovExtrato.complemento01);
						if (!leuCnpj.equals("")) {
							ttMovExtrato.complemento01 = ttMovExtrato.complemento01.replaceAll(leuCnpj, leuCnpj.replaceAll("\\.","").replaceAll(" ","").replaceAll("/","").replaceAll("-",""));
						}
					}
					
					mapaVariavel.put(ttMovExtrato.chave, ttMovExtrato);
					apagaExtrato    = true;

				}
			}
		}
		catch (Exception xx) {
			logger.logDebug("ATENCAO - PROBLEMA NA LEITURA DE EXTRATO - BANCO");
		}

	} // if tipo planilha nao igual extrato
	
	// logger.logDebug("ETAPA 03 TEMPLATE ");
	
	// --------------------------------------------------------------------------------------------------------------------
	// #DOCUMENTACAO
	// INICIO DAS ITERACOES
	StringBuilder[] txtFiscal = new StringBuilder[20];
  	for (int i= 0; i < 20; i++) {
		txtFiscal[i] = new StringBuilder("");
		loteFiscal[i] = "";		
	}

	StringBuilder txtFornecedor = new StringBuilder();
	StringBuilder txtPortador   = new StringBuilder();
	String nomePortadorAnterior = "";
	
	// if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // #Fabrica(2019-08-13) @Vini
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("PAGAR")) txtFiscal[0].append("PGTOFOR").append(cnpjEmpresa).append("\r\n");  // JWR 01022021
	if(roteiroCRMPrincipal.optString("erpContabilidade").equals("MAKROWEB") && tipoLancamento.contains("RECEBER")) txtFiscal[0].append("PGTOCLI").append(cnpjEmpresa).append("\r\n"); // JWR 01022021

	StringBuilder ResumoTxt = new StringBuilder();
	String rn = "\r\n";
	ResumoTxt = new StringBuilder();
	ResumoTxt.append("");
	ResumoTxt.append(rn);
	ResumoTxt.append(rn);

	ResumoTxt.append("STATUS;").append("DATA;TIPO DATA;").append("VALOR;").append("DOCUMENTO;").append("CLIENTE/FORNECEDOR;").append("PORTADOR;").append("COMPLEMENTO01;").append("COMPLEMENTO02;").append("COMPLEMENTO03;").append("COMPLEMENTO04;").append("COMPLEMENTO05;").append("COMPLEMENTO06;;CTA DEBITO ENCONTRADA;CTA CREDITO ENCONTRADA;REGRA CONTA CRM;HISTORICO;REGRA HISTORICO;;").append("DATA;").append("DEBITO;").append("CLASS DEB;").append("NOME CONTA;").append("CREDITO;").append("CLASS CRED;").append("NOME CONTA;").append("VALOR;").append("HISTORICO;");
	ResumoTxt.append("ORIGEM");

	StringBuilder txtDePara = new StringBuilder();

	txtDePara.append("DATA;VALOR;FORNECEDOR/CLIENTE;PORTADOR;CONTA DEBITO;CONTACREDITO;DOCUMENTO;COMPLEMENTO01;COMPLEMENTO02;COMPLEMENTO03;COMPLEMENTO04;COMPLEMENTO05;C.CUSTO;ARQUIVO");
	txtDePara.append("\r\n");
	
	
	// logger.logDebug("DIRNAME " + dirName);
	if (mantemArquivo.equals("SIM")) {
		File fileDepoisLista = new File(dirName);
		File [] filesDepois = fileDepoisLista.listFiles(); 
		
		if (filesDepois.length > 1) putStatus(dirName, "", jStatus, logger);
	}
	// logger.logDebug("TEMPLATE ETAPA 03 ");


	int contRegra = -1;
	
	String loteEtapaTres = "";
	
	// logger.logInfo("Antes etapa 3");
	
	
	try {
		Iterator itExtrato = mapaVariavel.keySet().iterator();
		while (itExtrato.hasNext()) {
			String chaveExtrato     = "";

			String key = (String)itExtrato.next();
			ttMovimentoPadrao ttMov = (ttMovimentoPadrao)mapaVariavel.get(key);

			if(!ttMov.tipoPlanilha.equals("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			
 			loteEtapaTres = ttMov.lote;
 
			
			// #DOCUMENTACAO
			// TRATA LOTES (MAIUSCULO e MINUSCULO)
			
			if(ttMov.lote.lastIndexOf("__") > ttMov.lote.indexOf("__")){
				ttMov.lote = nomeEmpresa +"_"+ codEmpresa +"_"+ 
				             cutString(ttMov.lote, ttMov.lote.indexOf("__"), ttMov.lote.lastIndexOf("__")).toLowerCase() +"_"+ ttMov.lote.substring(ttMov.lote.lastIndexOf("__"));
			}
			

			// #DOCUMENTACAO
			// EVITA GERAR 2 ARQUIVOS QUANDO TEM TRATAR COMO EXTRATO
			// ajusta o ott_oud__ para poder reprocessar o arquivo automaticamnete pelo portal
			ttMov.lote = ttMov.lote.replace(ttMov.debitoCredito,"").replace("extrato-debito","").replace("extrato-credito","").replace("___","_").replace("__","_");
			if (!ttMov.lote.toLowerCase().contains("ott_oud__") && ttMov.lote.toLowerCase().contains("ott_oud_")) {
				ttMov.lote = ttMov.lote.replace("ott_oud_","ott_oud__");
			}
			
			// #DOCUMENTACAO
			// JUNCAO DOS LANCAMENTOS COM OS JUROS E DESCONTOS (TRATAR COMO JUROS OU DESCONTO)
			String chaveJuros = ttMov.dataMovimento + "-" + ttMov.documento + "-JUROS";
			ttJuros ttJ  = (ttJuros)mapaJuros.get(chaveJuros);
			if (ttJ != null && ttJ.valorLido == 0) {
				ttMov.valorJuros  = ttJ.valorJur;
				ttJ.valorLido     = 1;
				mapaJuros.put(chaveJuros,ttJ);

			}

			String chaveDesconto = ttMov.dataMovimento + "-" + ttMov.documento + "-DESCONTO";
			ttDesconto ttD  = (ttDesconto)mapaDesconto.get(chaveDesconto);
			if (ttD != null && ttD.valorLido == 0) {
				ttMov.valorDesconto  = ttD.valorDesc;
				ttD.valorLido     = 1;
				mapaDesconto.put(chaveDesconto,ttD);

			}
			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			//logger.logDebug("ANTES 3 DE 4");
			
			// if (codEmpresa.contains("10754")) logger.logDebug("TRESDEQUATRO " + ttMov.debitoCredito + " | " +  ttMov.dataMovimento + " | " + ttMov.valorDocumento);
			
 			if (restoLinha == 0) putStatus(dirName, "03--Etapa 3 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			
			// if (codEmpresa.contains("77")) logger.logDebug("VALAQ " + ttMov.valorDocumento + " | " + ttMov.dataMovimento);
			
			// logger.logDebug("NOME ORIG == "+ttMov.nomeOrigem);
			
			logger.logDebug("TPPORTTEMPLATE " + ttMov.tipoPlanilha + " | " + ttMov.lote + " | " + ttMov.dataMovimento + " | " + ttMov.tipoLancamento + " | " + ttMov.debitoCredito);
			
			
			// if(codEmpresa.equals("987789")) logger.logDebug("DATA == "+ttMov.dataMovimento+" | LOTEEE == "+ttMov.lote.replace("rodaconversor", "")+" | TP === "+ttMov.tipoPlanilha);
								
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("\'","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\'","");
			ttMov.complemento02 = ttMov.complemento02.replaceAll("\'","");
			ttMov.complemento03 = ttMov.complemento03.replaceAll("\'","");
			ttMov.complemento04 = ttMov.complemento04.replaceAll("\'","");
			ttMov.complemento05 = ttMov.complemento05.replaceAll("\'","");
			
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll("\t"," ").replaceAll(";","").replace("'","").replace("!","").replace("\\","").trim();
   			ttMov.nomePortador = ttMov.nomePortador.replaceAll("\\|","");
			ttMov.complemento01 = ttMov.complemento01.replaceAll("\\|","");
			
			classificaPlano     = roteiroCRM.optString("classificaPlano");
			classificaFornec    = roteiroCRM.optString("classificaFornec");
			cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
			Cruza_Extrato_com_Extrato = roteiroCRMPrincipal.optString("Cruza_Extrato_com_Extrato").toUpperCase(); // principal mesmo
			String integraFiscal = roteiroCRM.optString("Integracao_fiscal").toUpperCase();
			String integraContrato = roteiroCRM.optString("Integracao_contratos").toUpperCase();

			if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) continue;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-DEBITO")) continue;
 
  
			// ------------------------------------------------------------------------------------------------------------------
			// 	 		INICIA PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------
			String DATAMOVIMENTO   = "";
			String PORTADOR        = "";
			String CHAVE           = "";
			boolean jaCruzou       = false;
			
			ttMov.valorJuros = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
			ttMov.valorDesconto = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
			ttMov.valorMulta = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorMulta));
			ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
			// ajuste 11/2020 @DiMaz
			if (ttMov.valorDocumento == 0) continue;
 

			// #DOCUMENTACAO
			// EXTRATO COM EXTRATO
			if (Cruza_Extrato_com_Extrato.contains("TRUE") && ttMov.tipoPlanilha.contains("EXTRATO")) {

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);
				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();
				String transferencia = "NAO";

				if(ttMov.tipoLancamento.contains("PAGAR")   && ttMov.debitoCredito.contains("EXTRATO-DEBITO"))  transferencia = "SIM";
				if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.contains("EXTRATO-CREDITO")) transferencia = "SIM";

				if (transferencia.equals("SIM")) {
					for (int xx = 0;xx<1;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;

							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));

							extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");

					ttMov.complemento04 = ttMov.nomeOrigem;
					ttMov.nomeOrigem    = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;
					ttMov.tipoPlanilha  = "EXTRATO-TRANSFERENCIA";

					dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();
					jaCruzou = true;

				}
			}

			// #DOCUMENTACAO
			// EXTRATO COM PLANILHA
			if (cruzaExtrato.contains("TRUE")  && !jaCruzou) {

				Conta_Fixa_Cruzamento_Extrato  = roteiroCRMPrincipal.optString("Conta_Fixa_Cruzamento_Extrato");

				String tipoData = "MOVIMENTO";
				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm   = new Date();
				Date dataMovimentoDateMenosDois = new Date();
				Date dataMovimentoDateMenosTres = new Date();
				Date dataMovimentoDateMaisUm    = new Date();
				Date dataMovimentoDateMaisDois  = new Date();
				Date dataMovimentoDateMaisTres  = new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm   = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm    = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois  = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate);          cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres  = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;
  

				JSONArray extratoEmpresa = new JSONArray();

				String transferencia = "NAO";

				if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
					for (int xx = 0;xx<7;xx++) {
						try {
							String dataLeitura = ttMov.dataMovimento;
							if (xx ==1) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisUm, "dd/MM/yyyy");
							if (xx ==2) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosUm, "dd/MM/yyyy");
							if (xx ==3) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisDois, "dd/MM/yyyy");
							if (xx ==4) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosDois, "dd/MM/yyyy");
							if (xx ==5) dataLeitura = DateUtil.dateToString(dataMovimentoDateMaisTres, "dd/MM/yyyy");
							if (xx ==6) dataLeitura = DateUtil.dateToString(dataMovimentoDateMenosTres, "dd/MM/yyyy");


							if(ttMov.tipoLancamento.contains("PAGAR"))   chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-DEBITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));
							if(ttMov.tipoLancamento.contains("RECEBER")) chaveExtrato = codEmpresa + "-" +  dataLeitura + "-" + "EXTRATO-CREDITO" + "-" + String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros + ttMov.valorMulta - ttMov.valorDesconto));

							extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? AND EXTRATOLIDO = ? AND LOTE <> ? ")
							.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
							.param(chaveExtrato + "%")
							.param(0)
							.param(ttMov.nomeArquivo.toUpperCase())
							.query();

							if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
								break;
							}
						}
						catch (Exception xx) {
							break;
						}
					}
				}

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					JSONObject recMov = extratoEmpresa.optJSONObject(0);

					DATAMOVIMENTO   = recMov.optString("DATAMOVIMENTO");
					PORTADOR        = recMov.optString("PORTADOR");
					CHAVE           = recMov.optString("CHAVE");
					if (roteiroCRM.optString("Aloca_Checknum").toUpperCase().equals("TRUE")) ttMov.complemento02 = recMov.optString("COMPLEMENTO"); //checknum

					ttMov.nomePortador  = PORTADOR;
					ttMov.dataMovimento = DATAMOVIMENTO;

					dbIOCont.update("IO_EXTRATO")
					.fields("EXTRATOLIDO")
					.where("CHAVE = ? ")
					.param(1)
					.param(CHAVE)
					.execute();

				}

			}
			
			if (ttMov.lote.contains("_ancora_")) {
				ttMov.lote = ttMov.lote.replace("_ancora_", "");
			}
			
			if (ttMov.lote.contains("_ANCORA_")) {
				ttMov.lote = ttMov.lote.replace("_ANCORA_", "");
			}


			// ------------------------------------------------------------------------------------------------------------------
			// 	 		FINALO DO PROCESSO DE CRUZAMENTO COM EXTRATO
			// ------------------------------------------------------------------------------------------------------------------




			classificacao = "";

			String key2 = ttMov.chave;

			if(ttMov.dataMovimento.length() > 9){
				mesRef  = Integer.parseInt(ttMov.dataMovimento.substring(3,5));
				anoRef  = Integer.parseInt(ttMov.dataMovimento.substring(6,10));
				mesAnoAtual = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);

				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAnoAnterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
				mesRef  = mesRef - 1;
				if (mesRef  == 0) {
					mesRef  = 12;
					anoRef  = anoRef - 1;
				}
				mesAno2Anterior = StringUtil.leftPad(String.valueOf(mesRef),2,"0") + "/" + String.valueOf(anoRef);
			}

			String trimestreMesAnoAnterior	    = "";
			String trimestreMesAnoAtual   	    = "";
			String descricaoPlanoContaPortador  = "";
			String descricaoPlanoContaMovimento = "";

			// #DOCUMENTACAO
			// TRIMESTRE
			if (mesAnoAnterior.startsWith("01") || mesAnoAnterior.startsWith("02") || mesAnoAnterior.startsWith("03")) trimestreMesAnoAnterior = "1. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("04") || mesAnoAnterior.startsWith("05") || mesAnoAnterior.startsWith("06")) trimestreMesAnoAnterior = "2. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("07") || mesAnoAnterior.startsWith("08") || mesAnoAnterior.startsWith("09")) trimestreMesAnoAnterior = "3. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAnterior.startsWith("10") || mesAnoAnterior.startsWith("11") || mesAnoAnterior.startsWith("12")) trimestreMesAnoAnterior = "4. Trimestre/" + mesAnoAnterior.substring(3);
			if (mesAnoAtual.startsWith("01") || mesAnoAtual.startsWith("02") || mesAnoAtual.startsWith("03")) trimestreMesAnoAtual = "1. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("04") || mesAnoAtual.startsWith("05") || mesAnoAtual.startsWith("06")) trimestreMesAnoAtual = "2. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("07") || mesAnoAtual.startsWith("08") || mesAnoAtual.startsWith("09")) trimestreMesAnoAtual = "3. Trimestre/" + mesAnoAtual.substring(3);
			if (mesAnoAtual.startsWith("10") || mesAnoAtual.startsWith("11") || mesAnoAtual.startsWith("12")) trimestreMesAnoAtual = "4. Trimestre/" + mesAnoAtual.substring(3);


			if (ttMov.nomeOrigem.equals("")) ttMov.nomeOrigem = ttMov.complemento01 + " " + ttMov.dataMovimento + " R$" + String.valueOf(ttMov.documento);
			ttMov.nomeOrigem = ttMov.nomeOrigem.trim();
			if (ttMov.nomePortador.equals("")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("_")) ttMov.nomePortador = "EM BRANCO";
			if (ttMov.nomePortador.equals("-")) ttMov.nomePortador = "EM BRANCO";

			contaJuros        = roteiroCRM.optString("contaFixaJuros");
			contaFixaCredito  = roteiroCRM.optString("contaFixaCredito");
			contaFixaDebito   = roteiroCRM.optString("contaFixaDebito");
			contaDesconto     = roteiroCRM.optString("contaFixaDesconto");
			contaMulta        = roteiroCRM.optString("contaFixaMulta");



			contaMovimento = "";
			contaPortador  = "";


			if(ttMov.tipoLancamento.contains("PAGAR")) {
				contaMovimento = contaFixaDebito;
				contaPortador  = contaFixaCredito;
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				contaPortador  = contaFixaDebito;
				contaMovimento = contaFixaCredito;
			}
			
			
			
			// exemplo de como vem um registro do complemento_lancaments 
			// 54999667000179-PAG-ANTONIO FLAVIO DE ARAUJO JUNIOR-2021-05-21-180.0
 			
			if (contaMovimento.equals("") && encontrouComplemento){
				try {
				
					String chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 3) + "-" + ttMov.nomeOrigem + "-" + 
					                          cutString(ttMov.dataMovimento, 6) + "-" + cutString(ttMov.dataMovimento, "/", "/") + "-" + cutString(ttMov.dataMovimento, 0, "/") + "-" + 
											  ttMov.valorDocumento;
											  
 																				
											  
 					ttPlano ttP  = (ttPlano)mapaDePara.get(chaveComplemento); 
					if (ttP == null) {							
						ttP  = new ttPlano(); 
						ttP.descricaoPlano = chaveComplemento;
						ttP.contaAnalitica = "";
						ttP.contaContabil     = "";
						mapaDePara.put(chaveComplemento,ttP);
							
						try{
							deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
							}
						catch (Exception e) { 
						}
						if (deParaObj != null && !deParaObj.toString().equals("{}")) {
							if (ttMov.tipoPlanilha.contains("EXTRATO")) {
									ttMov.complemento02 = deParaObj.optString("complemento");
							} else {
								ttMov.complemento01 = deParaObj.optString("complemento");
							}
 							

						} else {
						
							//	 verifica se banco de dados possui ao menos algum lancamento de complemento
							//   se nao encontrar, joga false na encontrouComplemento para ter mais performance e nao buscar no 
							//   banco  de dados a toa
							chaveComplemento = cnpjEmpresa.replaceAll("[^0-9]","").trim() + "-" + cutString(ttMov.tipoLancamento, 0, 2);
							try{
								deParaObj = findComplementoLancamento(dbIODepara, chaveComplemento);
								}
							catch (Exception e) { 
							}
							if (deParaObj == null || deParaObj.toString().equals("{}"))  encontrouComplemento = false;
 						
						}
						

					}  
				} catch  (Exception Ee) {}
			}
			
 
			// Quando pede para cruzar extrato e nao encontra relacionamento com o extrato
			// joga conta fixa de extrato em DEBITO quando for extato e CREDITO quando for planilha
			if ((cruzaExtrato.contains("TRUE") || cruzaExtrato.contains("VERDADEIRO")) && PORTADOR.equals("")) {
				if (ttMov.tipoPlanilha.contains("EXTRATO"))  contaMovimento  = Conta_Fixa_Cruzamento_Extrato;
				if (!ttMov.tipoPlanilha.contains("EXTRATO")) contaPortador   = Conta_Fixa_Cruzamento_Extrato;
			}


			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			contaMovimento    = getConta09(contaMovimento, ttMov.nomeOrigem,  ttMov.documento, "", ttMov.complemento01,  ttMov.complemento02,  ttMov.complemento03, "",  ttMov.centroCusto);
			contaPortador     = getConta09(contaPortador, "", "", ttMov.nomePortador, "", "", "", ttMov.nomeArquivo, "");
			ttMov.centroCusto = getCentroCusto("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, "", ttMov.centroCusto);
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
			if (!ttMov.codFilial.equals("") && roteiroCRMPrincipal.optString("erpContabilidade").equals("CUCA-FRESCA")) ttMov.cpfCnpj = ttMov.codFilial;

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			JSONObject histobj = new JSONObject();

			histobj.put("nomeOrigem", ttMov.nomeOrigem);					histobj.put("documento", ttMov.documento);
			histobj.put("complemento01", ttMov.complemento01);				histobj.put("complemento02", ttMov.complemento02);
			histobj.put("complemento03", ttMov.complemento03);				histobj.put("complemento04", ttMov.complemento04);
			histobj.put("complemento05", ttMov.complemento05);				histobj.put("complemento06", ttMov.complemento06);
			histobj.put("complemento07", ttMov.complemento07);				histobj.put("complemento08", ttMov.complemento08);
			histobj.put("complemento09", ttMov.complemento09);				histobj.put("complemento10", ttMov.complemento10);
			histobj.put("dataMovimento", ttMov.dataMovimento);				histobj.put("mesAnoAnterior", mesAnoAnterior);
			histobj.put("mesAno2Anterior", mesAno2Anterior);				histobj.put("mesAnoAtual", mesAnoAtual);
			histobj.put("nomePortador", ttMov.nomePortador);				histobj.put("contaMovimento", contaMovimento);
			histobj.put("contaPortador", contaPortador);	   			    histobj.put("contaDebito", "");
			histobj.put("contaCredito", "");								histobj.put("contaJuros", ttMov.contaJuros);
			histobj.put("contaDesconto", ttMov.contaDesconto);				histobj.put("contaMulta", ttMov.contaMulta);
			histobj.put("centroCusto", ttMov.centroCusto);    				histobj.put("valorDocumento", ttMov.valorDocumento);
			histobj.put("valorJuros", ttMov.valorJuros);   				    histobj.put("valorDesconto", ttMov.valorDesconto);
			histobj.put("valorMulta", ttMov.valorMulta); 				    histobj.put("codFilial", ttMov.codFilial);
			histobj.put("tipoPlanilha", ttMov.tipoPlanilha);                histobj.put("numeroAba", ttMov.abaPlanilha);
			histobj.put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermos("complemento08", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermos("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getLimpaCampos("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCampos("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCampos("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCampos("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCampos("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCampos("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCampos("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCampos("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCampos("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCampos("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCampos("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCampos("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCampos("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem);					histobj.put("documento", ttMov.documento);
			histobj.put("complemento01", ttMov.complemento01);				histobj.put("complemento02", ttMov.complemento02);
			histobj.put("complemento03", ttMov.complemento03);				histobj.put("complemento04", ttMov.complemento04);
			histobj.put("complemento05", ttMov.complemento05);				histobj.put("complemento06", ttMov.complemento06);
			histobj.put("complemento07", ttMov.complemento07);				histobj.put("complemento08", ttMov.complemento08);
			histobj.put("complemento09", ttMov.complemento09);				histobj.put("complemento10", ttMov.complemento10);
			histobj.put("nomePortador", ttMov.nomePortador);

			ttMov.complemento01 = getLimpaCamposAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getLimpaCamposAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getLimpaCamposAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getLimpaCamposAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getLimpaCamposAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getLimpaCamposAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getLimpaCamposAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getLimpaCamposAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getLimpaCamposAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getLimpaCamposAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getLimpaCamposAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getLimpaCamposAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getLimpaCamposAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			ttMov.complemento01 = getReplaceTermosAvancado("complemento01", ttMov.complemento01,  histobj);
			ttMov.complemento02 = getReplaceTermosAvancado("complemento02", ttMov.complemento02,  histobj);
			ttMov.complemento03 = getReplaceTermosAvancado("complemento03", ttMov.complemento03,  histobj);
			ttMov.complemento04 = getReplaceTermosAvancado("complemento04", ttMov.complemento04,  histobj);
			ttMov.complemento05 = getReplaceTermosAvancado("complemento05", ttMov.complemento05,  histobj);
			ttMov.complemento06 = getReplaceTermosAvancado("complemento06", ttMov.complemento06,  histobj);
			ttMov.complemento07 = getReplaceTermosAvancado("complemento07", ttMov.complemento07,  histobj);
			ttMov.complemento08 = getReplaceTermosAvancado("complemento09", ttMov.complemento08,  histobj);
			ttMov.complemento09 = getReplaceTermosAvancado("complemento09", ttMov.complemento09,  histobj);
			ttMov.complemento10 = getReplaceTermosAvancado("complemento10", ttMov.complemento10,  histobj);
			ttMov.nomeOrigem    = getReplaceTermosAvancado("nomeOrigem",    ttMov.nomeOrigem,     histobj);
			ttMov.documento     = getReplaceTermosAvancado("documento",     ttMov.documento,      histobj);
			ttMov.nomePortador  = getReplaceTermosAvancado("nomePortador",  ttMov.nomePortador,   histobj);

			histobj.put("nomeOrigem", ttMov.nomeOrigem);					histobj.put("documento", ttMov.documento);
			histobj.put("complemento01", ttMov.complemento01);				histobj.put("complemento02", ttMov.complemento02);
			histobj.put("complemento03", ttMov.complemento03);				histobj.put("complemento04", ttMov.complemento04);
			histobj.put("complemento05", ttMov.complemento05);				histobj.put("complemento06", ttMov.complemento06);
			histobj.put("complemento07", ttMov.complemento07);				histobj.put("complemento08", ttMov.complemento08);
			histobj.put("complemento09", ttMov.complemento09);				histobj.put("complemento10", ttMov.complemento10);
			histobj.put("dataMovimento", ttMov.dataMovimento);				histobj.put("mesAnoAnterior", mesAnoAnterior);
			histobj.put("mesAno2Anterior", mesAno2Anterior);				histobj.put("mesAnoAtual", mesAnoAtual);
			histobj.put("nomePortador", ttMov.nomePortador);				histobj.put("contaMovimento", contaMovimento);
			histobj.put("contaPortador", contaPortador);	   			    histobj.put("contaDebito", "");
			histobj.put("contaCredito", "");								histobj.put("contaJuros", ttMov.contaJuros);
			histobj.put("contaDesconto", ttMov.contaDesconto);				histobj.put("contaMulta", ttMov.contaMulta);
			histobj.put("centroCusto", ttMov.centroCusto);    				histobj.put("valorDocumento", ttMov.valorDocumento);
			histobj.put("valorJuros", ttMov.valorJuros);   				    histobj.put("valorDesconto", ttMov.valorDesconto);
			histobj.put("valorMulta", ttMov.valorMulta); 				    histobj.put("codFilial", ttMov.codFilial);
			histobj.put("tipoPlanilha", ttMov.tipoPlanilha);                histobj.put("numeroAba", ttMov.abaPlanilha);
			histobj.put("nomeArquivo", ttMov.nomeArquivo.toUpperCase());

			
			// Quando selecionado para controlar parcela, buscar complemento apos a limpeza para poder jogar em parcela
			String parcelaString = "1";
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO01")) parcelaString = ttMov.complemento01;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO02")) parcelaString = ttMov.complemento02;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO03")) parcelaString = ttMov.complemento03;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO04")) parcelaString = ttMov.complemento04;
			if (roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("COMPLEMENTO05")) parcelaString = ttMov.complemento05;

			try {
				ttMov.parcelaDoc = Integer.parseInt(parcelaString);
			}
			catch (Exception xx) { ttMov.parcelaDoc = 1;}
			
			// logger.logDebug("TTMS " + ttMov.tipoPlanilha + " | " + ttMov.complemento01 + " | " + ttMov.nomeOrigem + " | " + ttMov.complemento02);
			
		
			contaMovimento = getContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento2(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaMovimento = getContaMovimento3(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			// contaMovimento = getContaMovimento4(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			// contaMovimento = getContaMovimento5(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			contaPortador  = getContaPortador(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			// contaPortador  = getContaPortador2(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			// contaPortador  = getContaPortador3(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			// contaPortador  = getContaPortador4(contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//#2305-004914. Carrega a chamadas das rotinas getContaMovimento e getContaPortador caso n?o tenha ainda.
			// Classe Principal SC
			Class<?> sc = this.getClass();
			// Instancia da Classe Principal
			Object scInstance = sc.newInstance();
			// Get all Methods from superclass 'SC'.
			java.lang.reflect.Method[] methods = sc.getDeclaredMethods();
			boolean methodFoundPortador = false;
			boolean methodFoundMovimento = false;			
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundPortador = false;
				methodFoundMovimento = false;
				if(methodName.toUpperCase().equals("GETCONTAMOVIMENTO4")) {
					methodFoundMovimento = true;
				}
				if(methodName.toUpperCase().equals("GETCONTAMOVIMENTO5")) {
					methodFoundMovimento = true;
				}
				
				if(methodName.toUpperCase().equals("GETCONTAPORTADOR2")) {
					methodFoundPortador = true;
				}
				if(methodName.toUpperCase().equals("GETCONTAPORTADOR3")) {
					methodFoundPortador = true;
				}
				if(methodName.toUpperCase().equals("GETCONTAPORTADOR4")) {
					methodFoundPortador = true;
				}
				
				if(methodFoundMovimento) {					
					// Invoca metodo de getContaMovimento.
					contaMovimento = (String) method.invoke(scInstance, contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				}
				if(methodFoundPortador) {
					// Invoca metodo de getContaPortador.					
					contaPortador = (String) method.invoke(scInstance, contaPortador, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				}
			}			
			
			// Soares - Mudanca no template referente a uma parte do chamado =>> 202208-0017982
			
			if(roteiroCRM.optString("gravaCnpjMovimento").toUpperCase().contains("TRUE")){
				if(contaMovimento.equals("")) {
					if(!ttMov.cpfCnpj.equals("")){
						contaMovimento = ttMov.cpfCnpj;
						if((roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().startsWith("SCI") || roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("PROSOFT")) && !ttMov.cpfCnpj.equals(""))
							contaMovimento = ttMov.cpfCnpj + "P";
					}
				}
				else {ttMov.cpfCnpj = "";}
			}
 			
			regraContaMovimento  = getRegraContaMovimento(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			// logger.logDebug("CONTINHA "  + contaMovimento + " | " + regraContaMovimento);

			double valorPrincipal 	 = getValorPrincipal("", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			if (valorPrincipal> 0 && ttMov.valorDocumento > valorPrincipal) {
				ttMov.valorJuros     = ttMov.valorDocumento - valorPrincipal;
				ttMov.valorDocumento = valorPrincipal;
			}
			
			ttMov.complemento03 	= ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";
			ttMov.contaJuros        = getContaJuros(contaJuros,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			ttMov.contaDesconto     = getContaDesconto(contaDesconto,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			ttMov.contaMulta        = getContaMulta(contaMulta,  ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			tabelaContabil   		= getTabelaContabil("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);
			ttMov.complemento03  	= ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();
			// if(roteiroCRM.optString("empresa").toUpperCase().contains("FARMAGIL")){
				// logger.logDebug("TIPO PLANILHINHA == "+ttMov.tipoPlanilha+" | ttMov.contaDesconto - "+ttMov.contaDesconto+" - contaDesconto - "+contaDesconto+" | "+roteiroCRM.optString("contaFixaDesconto"));
			// }
			// logger.logDebug("Contabilidade - "+roteiroCRM.optString("contabilidade")+" - empresa => "+roteiroCRM.optString("empresa"));
			// logger.logDebug("TP - "+tipoPlanilha+" - conta fixa => "+roteiroCRM.optString("contaFixaJuros")+""+roteiroCRM.optString("contaFixaMulta")+""+roteiroCRM.optString("contaFixaDesconto")+"");
			// logger.logDebug("ttMov.contaJuros - "+ttMov.contaJuros+" - ttMov.contaDesconto - "+ttMov.contaDesconto+" - ttMov.contaMulta - "+ttMov.contaMulta);

			// quando for forcada partida dobrada , vamos jogar a conta de juros automaticamente na conta movimento
			if (!contaMovimento.contains("IGNORA")) { // colocado para ignorar os lancamentos de partida dobrada quando o lancamento principal eh ignorado 20122022 JWR
				if (ttMov.chave.contains("DOBRADA_JUR") && !ttMov.contaJuros.equals("")) contaMovimento = ttMov.contaJuros;//#2304-002846
				if (ttMov.chave.contains("DOBRADA_DES")) {
					// invers?o de contas em desconto.
					contaMovimento = contaPortador;
					if (!ttMov.contaDesconto.equals("")) contaPortador = ttMov.contaDesconto;
				}
				if (ttMov.chave.contains("DOBRADA_MUL") && !ttMov.contaMulta.equals("")) contaMovimento = ttMov.contaMulta;
			}
			

			boolean regraCRM = false;
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;

		   //---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";


					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}		
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);
				}
			}
			
			

			regraCRM = false;
			if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("FISCAL")) regraCRM = true;
			
 			
			if (contaMovimento.equals("")){
				try {
					String classificacaoPlanoContas = getCodigoClassificacao(ttMov.nomeOrigem, histobj); // exemplo: 2.1.1.01.
					JSONObject futureObject = new JSONObject();
					//JSONObject ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
					futureObject.put("codEmpresaPlano", codEmpresaPlanoContas);
					JSONObject ret = buscaContaNovo(codEmpresa, ttMov.nomeOrigem, ttMov.cpfCnpj, classificacaoPlanoContas, ttMov.tipoLancamento, logger, dbIOCont, mapaPartPlano, mapaFornecedor, futureObject);
					
					if(ttMov.tipoLancamento.contains("PAGAR")) contaMovimento = ret.optString("contaDebito");
					if(ttMov.tipoLancamento.contains("RECEBER")) contaMovimento = ret.optString("contaCredito");
					if (contaMovimento == null || contaMovimento.trim().length() == 0) {
						contaMovimento = "";
						
						// CASO NAO ACHOU CONTA EM REGRAS NEM NO DEPARA ATUAL
						// VERIFICA SE E A PRIMEIRA VEZ QUE BUSCA A DESCRICAO NA NUVEM
						// INSERIDO PARA TRATGAR O BUSSOLA 3.0 
						
						ttPlano ttP  = (ttPlano)mapaDePara.get(ttMov.nomeOrigem);
						if (ttP == null) {							
							ttP  = new ttPlano(); 
							ttP.descricaoPlano = ttMov.nomeOrigem;
							ttP.contaAnalitica = "";
	
							ttP.contaContabil     = "";
							mapaDePara.put(ttMov.nomeOrigem,ttP);
							
							// BUSCA DEPARA PREENCHIDO PELO CONTADOR NO BUSSOLA 3.0 
							String cnpjEmpresaRequest = cnpjEmpresa.replaceAll("[^0-9]","").trim();
							String cnpjContabilidadeRequest = roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/","");
							//logger.logDebug("SUJANDO "  + cnpjEmpresaRequest + " | " + cnpjContabilidadeRequest + " | " + ttMov.nomeOrigem);
							try{
								deParaObj = findDeParaDescricao(dbIODepara, cnpjEmpresaRequest, cnpjContabilidadeRequest, ttMov.nomeOrigem);
 								
								}
							catch (Exception e) { 
								logger.logInfo("Erro findDeParaDescricao " + e.getMessage());
							}
							if (deParaObj != null ) {
								if(ttMov.tipoLancamento.contains("PAGAR")) contaMovimento = deParaObj.optString("conta_debito");
								if(ttMov.tipoLancamento.contains("RECEBER")) contaMovimento = deParaObj.optString("conta_credito");
								if (contaMovimento == null) contaMovimento = "";
								// logger.logDebug("CONTS " + contaMovimento);
								// Quando cliente inserir a contaT no DEpara Nuvem, vamos apagar no final da rota 
								if (contaMovimento.contains("T")) {
									apagaContaT    = true;
								}
								
								// logger.logDebug("CMM " + contaMovimento + " | " + apagaContaT);
								
								
							}else contaMovimento = "";
							
							
							// SE ENCONTROU DAPARA NA NUVEM GRAVA NO H2 PARA NA PROXIMA VEZ// ACHAR LOCALMENTE O DEPARA
							/*if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("PAGAR")) {
									if (!hasPessoaPag(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("PAGAR")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "",
															contaMovimento, "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", "", contaMovimento, "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}
							if (!contaMovimento.equals("") && !contaMovimento.toUpperCase().contains("T")){
								String chaveIoPessoa = codEmpresa + ttMov.nomeOrigem;
								if(ttMov.tipoLancamento.contains("RECEBER")) {
									if (!hasPessoaRec(dbIOCont, chaveIoPessoa)) {
										try {
											if(ttMov.tipoLancamento.contains("RECEBER")) {
												if (!hasPessoa(dbIOCont, chaveIoPessoa)) insertPessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento,
													"", "", chaveIoPessoa, props.get("FORNECEDOR_UNICO"));
												else updatePessoa(dbIOCont, codEmpresa, ttMov.nomeOrigem, "", "", contaMovimento, "", "", chaveIoPessoa);
											}
										} catch (Exception eInsertIOPessoa) {
											logger.logError("EndpointB: ERROR INSERT IO_PESSOA", eInsertIOPessoa);
										}
									}
								}
							}*/
							
							// RETIRA  T DA CONTA MOVIMENTO
							contaMovimento = contaMovimento.replaceAll("T", "").replaceAll("t","");
							ttP.contaContabil     = contaMovimento;
							mapaDePara.put(ttMov.nomeOrigem,ttP);
						
						} 
						else {
							contaMovimento = ttP.contaContabil;
						}
						
						
					}  
				} catch  (Exception Ee) {
					logger.logInfo("Problema buscando conta " + Ee.getMessage());
				}
			}
			

			
 			
			if(roteiroCRMPrincipal.optString("erpContabilidade").contains("DEXION")){
				if (contaMovimento.equals("")) {
						JSONObject descricaoPlano = dbIOCont.sql("SELECT CONTACONTABIL FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOPLANO LIKE ?")
						.fields("CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(ttMov.cpfCnpj + "%")
						.queryUnique();
						contaMovimento = descricaoPlano.optString("CONTACONTABIL").trim();
				}
			}

			if (contaPortador.equals("")) {
				try {
					ttFornecedor ttF  = (ttFornecedor)mapaFornecedor.get(ttMov.nomePortador+"PORT");
					if (ttF == null) {					
						ttF  = new ttFornecedor(); 

						JSONArray portadorDePara =  findPortador(dbIOCont, codEmpresa, ttMov.nomePortador);
						if (portadorDePara != null && portadorDePara.length() > 0) {
							JSONObject ret = portadorDePara.optJSONObject(0);
							contaPortador = ret.optString("CONTACONTABIL").trim();
						}

						ttF.contaMovimento = contaPortador;
						ttF.nomeOrigem     = ttMov.nomePortador + "PORT";
						mapaFornecedor.put(ttMov.nomePortador + "PORT",ttF);
					} else {
						contaPortador = ttF.contaMovimento;
					}
				}
				catch  (Exception Ee) {}
			}

			String contaTipoFornecedor = "999333";

			boolean eFornecedor = false;
			String  razaoSocial = ttMov.nomeOrigem;
			String  razaoSocialDuplicata = ttMov.nomeOrigem;
			if (contaMovimento.toUpperCase().contains("FISCAL"))  eFornecedor = true;

			if (!contaMovimento.equals("")){			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";

					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
								.fields("DESCRICAOPLANO,CONTAANALITICA")
								.param(codEmpresaPlanoContas)
								.param(contaMovimento)
								.queryUnique();

					if (descricaoPlano != null && descricaoPlano.has("DESCRICAOPLANO") && descricaoPlano.has("CONTAANALITICA") ) {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");						
					}
					ttP.contaContabil     = contaMovimento;
					mapaPlano.put(contaMovimento,ttP);
				}

				descricaoPlanoContaMovimento = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					razaoSocial = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}

				// Joga no nome do fornecedor o que esta no plano de contas
				if (!classificaPlano.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaPlano))) {
					ttMov.nomeOrigem = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
				}
				if (ttP.descricaoPlano.length() < 2 || ttP.descricaoPlano.equals("") || ttP.descricaoPlano == null) {
					eFornecedor = true;
				}		

				if (razaoSocial.length() < 4) razaoSocial = ttMov.nomeOrigem;

				if (!classificaFornec.equals("") && (ttP.contaAnalitica.replaceAll("[^0-9]*", "").trim().startsWith(classificaFornec))) {
					eFornecedor = true;
				}  
			}

			if (!contaPortador.equals("")){
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaPortador);
				if (ttP == null) {
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO, CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaPortador,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaPortador,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}
					ttP.contaContabil     = cutString(contaPortador,0, 20);
					mapaPlano.put(contaPortador,ttP);
				}
				descricaoPlanoContaPortador = ttP.descricaoPlano.replaceAll("EAMP;","&").replaceAll(";","").trim();
			}
			
			if(ttMov.tipoLancamento.contains("PAGAR")) {
				ttMov.contaDebito  = cutString(contaMovimento,0, 20);
				ttMov.contaCredito = cutString(contaPortador,0, 20);
			}
			if(ttMov.tipoLancamento.contains("RECEBER")) {
				ttMov.contaCredito  = cutString(contaMovimento,0, 20);
				ttMov.contaDebito   = cutString(contaPortador,0, 20);
			}
			
			// logger.logDebug("CONTASTEMP " + ttMov.contaDebito + " | " + ttMov.contaCredito);
			
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
  				temIgnorar = true;
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;");
				ResumoTxt.append(ttMov.dataMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.dataMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.valorDocumento);    ResumoTxt.append(";");
				ResumoTxt.append(ttMov.documento);         ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomeOrigem);        ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomePortador);      ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento01);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento02);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento03);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento04);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento05);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento06);     ResumoTxt.append(";;");

				ResumoTxt.append(ttMov.contaDebito);       ResumoTxt.append(";");
				ResumoTxt.append(ttMov.contaCredito);      ResumoTxt.append(";");
				ResumoTxt.append(regraContaMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.historico);         ResumoTxt.append(";");
				
				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
 				
				ResumoTxt.append("\r\n");
				comparaRazao = true;


				ResumoTxt.append("REGRA DE IGNORAR CONTA MOVIMENTO;");
				ResumoTxt.append(ttMov.dataMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.dataMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.valorDocumento);    ResumoTxt.append(";");
				ResumoTxt.append(ttMov.documento);         ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomeOrigem);        ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomePortador);      ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento01);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento02);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento03);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento04);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento05);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento06);     ResumoTxt.append(";;");

				ResumoTxt.append(ttMov.contaDebito);       ResumoTxt.append(";");
				ResumoTxt.append(ttMov.contaCredito);      ResumoTxt.append(";");
				ResumoTxt.append(regraContaMovimento);     ResumoTxt.append(";");
				ResumoTxt.append(ttMov.historico);         ResumoTxt.append(";");
 				
 				mapaVariavel.put(key,ttMov);
  
				continue;
			}
			String parcelaAtualeFinal = "";
			String parcelaAtual       = "";

			int parcelaBase = getParcelaBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			int totalParcelas = getTotalParcelas(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String mesAnoBase = getMesAnoBase(contaMovimento, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!mesAnoBase.equals("") && parcelaBase > 0) parcelaAtual       = String.valueOf(getParcelaFinanciamento(mesAnoAtual, mesAnoBase,parcelaBase, totalParcelas));
			if (!mesAnoBase.equals("")) parcelaAtualeFinal = parcelaAtual.trim() + "/" + String.valueOf(totalParcelas).trim();

			ttMov.historico = getHistorico(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.nomeOrigem,
										   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
										   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			
			histobj.put("contaMovimento", contaMovimento);
			histobj.put("contaPortador", contaPortador);
			histobj.put("contaDebito", ttMov.contaDebito);
			histobj.put("contaCredito", ttMov.contaCredito);
			histobj.put("contaJuros", ttMov.contaJuros);
			histobj.put("contaMulta", ttMov.contaMulta);
			histobj.put("contaDesconto", ttMov.contaDesconto);
			histobj.put("parcelaAtual", parcelaAtual);
			histobj.put("parcelaAtualeFinal", parcelaAtualeFinal);
			histobj.put("trimestreMesAnoAnterior", trimestreMesAnoAnterior);
			histobj.put("trimestreMesAnoAtual", trimestreMesAnoAtual);
			histobj.put("descricaoPlanoMovimento", descricaoPlanoContaMovimento.toUpperCase());
			histobj.put("descricaoPlanoPortador", descricaoPlanoContaPortador.toUpperCase());

			if(roteiroCRM.optString("Realizar_Busca_Plano").equals("TRUE")){

				// #Fabrica(2019-08-27) @Vini
				JSONObject fornecFilial = new JSONObject();
				String cAnalitica = "";
				String auxNomeOrig = "";
				auxNomeOrig = ttMov.nomeOrigem.replaceAll("-","").replaceAll("/","").replaceAll("\\.","").replaceAll("[0-9]*", "").replaceAll("\\s+","").replaceAll("ME","").replaceAll("EPP","").replaceAll("LTDA","").replaceAll("EIRELI","").replaceAll("SA","").trim();
				if (auxNomeOrig.length()> 11) auxNomeOrig = cutString(auxNomeOrig,0,10);
				//pesquisa no banco de dados pela descricao continua para pegar a classifica??o usada na nova regra
				fornecFilial = dbIOCont.sql("SELECT CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND DESCRICAOCONTINUA LIKE ?")
				.fields("CONTAANALITICA")
				.param(codEmpresaPlanoContas)
				.param(auxNomeOrig+"%")
				.queryUnique();
				cAnalitica = fornecFilial.optString("CONTAANALITICA").replaceAll("[^0-9]*", "").trim();                
				histobj.put("classificacao", cAnalitica); // classificacao para criacao de regra
			}

			ttMov.complemento03 = ttMov.complemento03 + " C4#"+ ttMov.complemento04 + " C5#" + ttMov.complemento05 + " " + " C6#" + ttMov.complemento06 + " ";

			ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			
			//yuri - 2309-016305
			boolean methodFoundHistorico = false;
			for(java.lang.reflect.Method method : methods) {
				String methodName = method.getName();				
				methodFoundHistorico = false;
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA2")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA3")) {
					methodFoundHistorico = true;
				}
				
				if(methodName.toUpperCase().equals("GETHISTORICOREGRA4")) {
					methodFoundHistorico = true;
				}
				
				if(methodFoundHistorico) {					
					// Invoca metodo de getHistoricoRegra
					ttMov.historico = (String) method.invoke(scInstance, contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				}
			}
			
			regraHistorico = getRegraHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
						
			if (!ttMov.historicoJuros.contains("JUROS")) ttMov.historicoJuros = "JUROS REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoJuros = getHistorico(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoJuros = getHistoricoJuros(ttMov.contaJuros, ttMov.historicoJuros, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (!ttMov.historicoDesconto.contains("DESCONTO")) ttMov.historicoDesconto = "DESCONTO REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoDesconto = getHistorico(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.nomeOrigem,
												   ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												   ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoDesconto = getHistoricoDesconto(ttMov.contaDesconto, ttMov.historicoDesconto, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			if (ttMov.historicoMulta.equals("")) ttMov.historicoMulta = "MULTA REF. " + ttMov.documento + " " + ttMov.nomeOrigem;
			ttMov.historicoMulta = getHistorico(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.nomeOrigem,
												ttMov.documento, ttMov.nomePortador, ttMov.complemento01, ttMov.complemento02,
												ttMov.complemento03, ttMov.nomeArquivo, ttMov.centroCusto);
			ttMov.historicoMulta = getHistoricoMulta(ttMov.contaMulta, ttMov.historicoMulta, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

			// quando for forcada partida dobrada , vamos jogar o historico  de juros automaticamente no historico  movimento
			if (ttMov.chave.contains("DOBRADA_JUR")) ttMov.historico = ttMov.historicoJuros;
			if (ttMov.chave.contains("DOBRADA_DES")) ttMov.historico = ttMov.historicoDesconto;
			if (ttMov.chave.contains("DOBRADA_MUL")) ttMov.historico = ttMov.historicoMulta; 
			
			ttMov.codFilial   = getFilial("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador,
										  ttMov.complemento01, ttMov.complemento02, ttMov.complemento03,
										  ttMov.nomeArquivo, ttMov.centroCusto, ttMov.codFilial);
										  
			if(!ttMov.codFilial.equals("") && roteiroCRMPrincipal.optString("erpContabilidade").contains("SCI")){
				ttMov.lote = ttMov.codFilial+"_"+ttMov.lote;
			}

			String codParticipante   = getParticipante("", ttMov.nomeOrigem, ttMov.documento, ttMov.nomePortador, 
														ttMov.complemento01, ttMov.complemento02, ttMov.complemento03, 
														ttMov.complemento04, ttMov.complemento05, ttMov.nomeArquivo);

			ttMov.complemento03  = ttMov.complemento03.substring(0,ttMov.complemento03.indexOf("C4#")).trim();

			if (!ttMov.codFilial.equals("")) {
				ttMov.historico 		= ttMov.historico 			 + " Filial:" + ttMov.codFilial;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Filial:" + ttMov.codFilial;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Filial:" + ttMov.codFilial;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Filial:" + ttMov.codFilial;
			}
						
			if (!codParticipante.equals("")) {
				ttMov.historico 		= ttMov.historico			 + " Participante:" + codParticipante;
				ttMov.historicoJuros 	= ttMov.historicoJuros		 + " Participante:" + codParticipante;
				ttMov.historicoDesconto = ttMov.historicoDesconto 	 + " Participante:" + codParticipante;
				ttMov.historicoMulta 	= ttMov.historicoMulta		 + " Participante:" + codParticipante;
			}

			ttMov.historico 		= ttMov.historico.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoJuros 	= ttMov.historicoJuros.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoDesconto = ttMov.historicoDesconto.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
			ttMov.historicoMulta 	= ttMov.historicoMulta.replaceAll(",","\\.").replaceAll(";","").replaceAll("_ ","").replaceAll(" _","").replaceAll("_","").replaceAll("  "," ").trim();
									
			if(roteiroCRMPrincipal.optString("erpContabilidade").equals("JBSOFTWARE")){
				ttMov.historico += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoJuros += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoDesconto += "GPLCTO:" + ttMov.contLinha;
				ttMov.historicoMulta += "GPLCTO:" + ttMov.contLinha;
			}

			// ------------------------------------------------
			//           GERA ARQUIVO PARA O FISCAL
			// ------------------------------------------------
			ttMov.documento = ttMov.documento.trim();
			if (ttMov.documento.startsWith("0")) {
				for (int xx=0;xx<10;xx++) {
					if (ttMov.documento.length() > 1 && ttMov.documento.startsWith("0")) ttMov.documento = ttMov.documento.substring(1);
				}
			}

			JSONObject jDescricaoDupl = new JSONObject();
			if (eFornecedor)   jDescricaoDupl.put("TIPO","FORNECEDOR");

			if(integraFiscal.contains("TRUE") && ttMov.tipoPlanilha.contains("MOVIMENTO") && !razaoSocial.equals("") && !ttMov.documento.equals("") && !regraCRM && !contaMovimento.equals("")){
				//Atendimento: 2308-013102 -> Problema ao gerar os relatorios de PELO_FISCAL e Duplicatas nao encontradas
				// eFornecedor = true;
				temFiscal = true;
				apagaStatus = true;
				
				//JWR 02022021 - estava adicionando a parcela no documento para a busca de duplicata em roteiros secundarios.
				//Adicionada a validacao "roteiroCRM.has("usarComplementoParcela")"
				if (roteiroCRM.has("usarComplementoParcela") && !roteiroCRM.optString("usarComplementoParcela").toUpperCase().contains("NAO USAR")) {
					ttMov.documento = ttMov.documento + "-" + ttMov.parcelaDoc;
				}
				
				String dataVencimentoTTMov = "";
				
				if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) dataVencimentoTTMov = ttMov.complemento01;
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) dataVencimentoTTMov = ttMov.complemento02; 
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) dataVencimentoTTMov = ttMov.complemento03; 
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) dataVencimentoTTMov = ttMov.complemento04; 
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) dataVencimentoTTMov = ttMov.complemento05; 
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) dataVencimentoTTMov = ttMov.complemento06; 
				}	
					
				 
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("QUESTOR")) {

					JSONObject jDadosAux = new JSONObject();
					jDadosAux.put("CODEMPRESA",                 codEmpresa);
					jDadosAux.put("DATAVENCTTMOV",              dataVencimentoTTMov);
					jDadosAux.put("RAZAOSOCIAL",                razaoSocial);
					jDadosAux.put("TABELACONTABIL",             tabelaContabil);
					TemplateUtils templateUtil = new TemplateUtils();
					jDescricaoDupl = templateUtil.geraFiscalQuestor(roteiroCRMPrincipal, jDadosAux, jDescricaoDupl, dbIOCont, ttMov, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							jDescricaoDupl.put("USAFILIAL", roteiroCRMPrincipal.optString("Usa_Filial_Questor").toUpperCase());
														
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalQuestor(jDescricaoDupl).toString());

							geraFiscal = true;
							
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
				
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil questor
							dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
							contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");
							
							if(dupliNaoEncontContabil){
								contaMovimento = contaTemp;
								if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
								if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

								histobj.put("contaMovimento", contaMovimento);
								ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
							}else {
								if(cabecalhoNaoEncontrada){
									txtFornecedor.append("Codigo");
									txtFornecedor.append(";");
									txtFornecedor.append("Fornecedor/Cliente");
									txtFornecedor.append(";");
									txtFornecedor.append("Duplicata");
									txtFornecedor.append(";");
									txtFornecedor.append("Data");
									txtFornecedor.append(";");
									txtFornecedor.append("Valor bruto");
									txtFornecedor.append(";");
									txtFornecedor.append("Valor liquido");
									txtFornecedor.append(";");
									txtFornecedor.append("Banco");
									txtFornecedor.append(";");
									txtFornecedor.append("Obs:");
									txtFornecedor.append("\r\n");
									cabecalhoNaoEncontrada = false;
								}
								String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
								jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
								txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
								txtFornecedor.append(";");
								txtFornecedor.append(razaoSocialDuplicata);
								txtFornecedor.append(";");
								txtFornecedor.append(ttMov.documento);
								txtFornecedor.append(";");
								txtFornecedor.append(ttMov.dataMovimento);
								txtFornecedor.append(";");
								txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
								txtFornecedor.append(";");
								txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
								txtFornecedor.append(";");
								txtFornecedor.append(ttMov.nomePortador);
								txtFornecedor.append(";");
								txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
								txtFornecedor.append("\r\n");

								jDescricaoDupl.put("TIPO","FORNECEDOR");

								geraFiscal = true;
								loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
								
								if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
								
								ttMov.tipoPlanilha = "NAO LER";
								mapaVariavel.put(key,ttMov);
								continue;
							}
						}
					}
				}

				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("MAKROWEB")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("VALORMULTA",  ttMov.valorMulta);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
						ttMov.parcelaDoc     = jDescricaoDupl.optInt("PARCELADOC");
						ttMov.valorDesconto  = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDesconto));
						ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento));
						ttMov.valorJuros 	 = DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorJuros));
						
						String valorDescontoAux  = preparaDoublePrecisao(String.valueOf(ttMov.valorDesconto));
						String valorDocumentoAux = preparaDoublePrecisao(String.valueOf(ttMov.valorDocumento));
						String valorAcrecimoAux 	 = preparaDoublePrecisao(String.valueOf(ttMov.valorJuros+ttMov.valorMulta));
						
						//#2309-015394
						//double valorAux = ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta;
						//String valorCalcAux = "";
						// #Fabrica(2019-08-06) @Vini
						//valorCalcAux = preparaDoublePrecisao(String.valueOf(DecimalUtil.toDecimal(String.format("%.2f", valorAux))));
						
						// if (!String.format("%.2f", ttMov.valorDocumento).equals(jDescricaoDupl.optString("VALORPARCELA"))) { //<--- antigo
						if (ttMov.valorDocumento > jDescricaoDupl.optDouble("VALORPARCELA")) {
							jDescricaoDupl.put("TIPO", "FORNECEDOR");
						} else {													

							txtFiscal[0].append(StringUtil.leftPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 14,  "0"));
							txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 8, "0"));
							txtFiscal[0].append(StringUtil.leftPad(String.valueOf(ttMov.parcelaDoc), 2, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(ttMov.dataMovimento.replaceAll("/",""));
							txtFiscal[0].append(StringUtil.leftPad(valorDescontoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorAcrecimoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							//#2309-015394
							//txtFiscal[0].append(StringUtil.leftPad(valorCalcAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(valorDocumentoAux.replaceAll("\\.","").replaceAll(",",""), 13, "0"));
							txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9,  "0"));
							txtFiscal[0].append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;

							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				/*if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA",     codEmpresa);
					  
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					
					 jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					double valorSaldoDuplicata2 = 0;
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							
							txtFiscal[0].append(TemplateUtils.geraLinhaFiscalCordilheira(jDescricaoDupl, ttMov, geraCabecalhoCordilheira).toString());
							
							geraCabecalhoCordilheira = false;

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						} else {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							txtFornecedor.append("\r\n");

							jDescricaoDupl.put("TIPO","FORNECEDOR");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
						}
					}
				}*/

				// if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CUCA-FRESCA")) {

					// JSONObject jDados = new JSONObject();
					// jDados.put("CODEMPRESA",     codEmpresa);
					
					// //usando a filial do questor em duplicatas em aberto
				   
					// jDados.put("RAZAOSOCIAL",    razaoSocial);
					// jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					// jDados.put("DOCUMENTO",      ttMov.documento);
					// jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					// jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					// jDados.put("PARCELADOC",     ttMov.parcelaDoc);
					// jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					// jDados.put("VALORJUROS",     ttMov.valorJuros);
					// jDados.put("VALORMULTA",     ttMov.valorMulta);
					// jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					// jDados.put("TABELACONTABIL", tabelaContabil);
					// jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);

					// Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					// dataLote = DateUtil.dateToString(dtL, "yyyy-MM");

					// double valorSaldoDuplicata2 = 0;
					// if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata2 = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));

					// valorSaldoDuplicata2 = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata2));
					// ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					// if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
					
						// if ((ttMov.valorDocumento - ttMov.valorDesconto) <= valorSaldoDuplicata2){
							// String separadorFiscal = "";
							// String dataVencimento  = "";
							// //String parcela		   = "1";
							// String duplicataParcela = jDescricaoDupl.optString("DUPLICATA")+"/"+String.valueOf(ttMov.parcelaDoc);
							
							// txtFiscal[0].append(cnpjEmpresa);
							// txtFiscal[0].append("    ");

							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append("E");
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append("S");

							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("DATAVENCIMENTO"), 10, " ")); //lendo do duplicatasem aberto
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("SITUACAO"), 5, " ")); //especie
							// txtFiscal[0].append(StringUtil.rightPad("", 3, " ")); //serie
							
							// txtFiscal[0].append(StringUtil.rightPad("", 2, " ")); //sub-serie
							// txtFiscal[0].append(StringUtil.leftPad(cutString(ttMov.documento, 0, "-"), 9, "0"));
							// txtFiscal[0].append(StringUtil.leftPad("", 9, "0"));
							
							// txtFiscal[0].append(StringUtil.rightPad(jDescricaoDupl.optString("CODIGOFORNECEDOR"), 18, " ")); // preciso criar a leitura do CNPJ do cliente, est? sendo usado o objeto "CODIGOFORNECEDOR" para guardar essa informa??o
							// txtFiscal[0].append(StringUtil.leftPad(duplicataParcela, 21, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(dataVencimento, 10, " ")); //data do vencimento
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0")); //? preciso criar a leitura do valor ? baixar, est? sendo usado o objeto "VALORPARCELA" para guardar no banco
							
							// if(contaPortador.length() > 1){
								// contaPortador = contaPortador.substring(0, contaPortador.length()-1) + "-" + contaPortador.substring(contaPortador.length()-1);
								// if(contaPortador.length() > 5) contaPortador = contaPortador.substring(0, contaPortador.length()-5) + "." + contaPortador.substring(contaPortador.length()-5);
							// }
							
							// txtFiscal[0].append(StringUtil.leftPad(contaPortador, 9, "0")); //a conta do banco
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.centroCusto, 4, " "));
							
							// //txtFiscal[0].append(StringUtil.rightPad(ttMov.historico, 3, ""));	
							// if(tipoLancamento.contains("PAGAR"))	txtFiscal[0].append(StringUtil.rightPad("10", 3, " ")); //10 pagamento fornecedor 
							// if(tipoLancamento.contains("RECEBER"))	txtFiscal[0].append(StringUtil.rightPad("11", 3, " ")); // 11 recebimento duplicata
							
							// txtFiscal[0].append(StringUtil.leftPad("", 15, " "));	//numero do cheque na planilha
							// txtFiscal[0].append(StringUtil.rightPad(ttMov.dataMovimento, 10, " "));
							
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDocumento), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorJuros), 13, "0"));
							// txtFiscal[0].append(StringUtil.leftPad(String.format("%.2f", ttMov.valorDesconto), 13, "0"));
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // correcao monetaria
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // despesas/receitas
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // Base de Calculo Retencao
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // IRRF Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // PIS Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // CSLL Retido 
							// txtFiscal[0].append(StringUtil.leftPad(separadorFiscal, 13, "0")); // COFINS Retido 
							// txtFiscal[0].append("    "); //n?o encontrado o c?digo da receita
							
							// txtFiscal[0].append("\r\n");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;

							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// } else {
							// if(cabecalhoNaoEncontrada){
								// txtFornecedor.append("Codigo");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Fornecedor/Cliente");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Duplicata");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Data");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor bruto");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Valor liquido");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Banco");
								// txtFornecedor.append(";");
								// txtFornecedor.append("Obs:");
								// txtFornecedor.append("\r\n");
								// cabecalhoNaoEncontrada = false;
							// }
							// String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							// jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							// txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							// txtFornecedor.append(";");
							// txtFornecedor.append(razaoSocialDuplicata);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.documento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.dataMovimento);
							// txtFornecedor.append(";");
							// txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							// txtFornecedor.append(";");
							// txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							// txtFornecedor.append(";");
							// txtFornecedor.append(ttMov.nomePortador);
							// txtFornecedor.append(";");
							// txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata2));
							// txtFornecedor.append("\r\n");

							// jDescricaoDupl.put("TIPO","FORNECEDOR");

							// geraFiscal = true;
							// loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							// ttMov.tipoPlanilha = "NAO LER";
							// mapaVariavel.put(key,ttMov);
							// continue;
						// }
					// }
				// }
				
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO")) {
					JSONObject jDados = new JSONObject();
					
					if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("LER DA DUPLICATA MAIS ANTIGA"))  {
						
						
						if (dataVencimentoTTMov.equals("")) {
						
							JSONObject recordsDupVenc = new JSONObject();  
							try {
								String sql = "SELECT VENCIMENTO FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.DUPLICATA = ? ORDER BY VENCIMENTO LIMIT 1"; 
								recordsDupVenc = dbIOCont.sql(sql)
								.setFields("VENCIMENTO")
								.param(codEmpresa)
								.param(ttMov.documento)
								.debug(logger)
								.queryUnique();	

							} catch (Exception e1) {
								logger.logDebug("ERROR: " + e1.getMessage());
							}
						
							if(recordsDupVenc != null && recordsDupVenc.has("VENCIMENTO")){
								dataVencimentoTTMov = cutString(recordsDupVenc.optString("VENCIMENTO"), 8, 10) + "/" +cutString(recordsDupVenc.optString("VENCIMENTO"), "-", "-") + "/" + cutString(recordsDupVenc.optString("VENCIMENTO"), 0, "-") ;
							}
						}   
						
						
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}else if(!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO")){
						jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					}else if(roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO")){
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					 
					
					
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("OBSERVACAO", 	 ttMov.dataMovimento);
					jDados.put("PARCELADOC",     99);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
					jDescricaoDupl = buscarIODuplicataDominio(jDados, dbIOCont, logger);

					// Descomentar a proxima linha para testar data de vencimento  a jDescricaoDupl.optString("DATAVENCIMENTO") que vem das duplicatas em aberto! OBS: Complemento06, deve estar lendo a data de vencimento da planilha financeira
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  { 
					   if(jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaBaixaPorDataVencimento(jDescricaoDupl, dataVencimentoTTMov);
					}

					String chaveParcela = ttMov.documento + "-PARCELA";
					ttParcelaDominio ttP    = (ttParcelaDominio)mapaParcelaDominio.get(chaveParcela);
					if (ttP == null) {
						ttP  			= new ttParcelaDominio();
						ttP.documento   = ttMov.documento;
						ttP.ultimaParcela = 0;
					}
					ttP.ultimaParcela++;
					
					mapaParcelaDominio.put(chaveParcela,ttP);
					
					jDados.put("PARCELADOC", ttP.ultimaParcela);                 
					jDescricaoDupl = buscarIODuplicataDominio(jDados, dbIOCont, logger);	

					Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
					dataLote = DateUtil.dateToString(dtL, "yyyy-MM");
 
					String chaveDuplicata = "";
					if (jDescricaoDupl.has("CODIGOFORNECEDOR")) chaveDuplicata = ttMov.codEmpresa + "-ESPECIAL-" + jDescricaoDupl.optString("CODIGOFORNECEDOR") + "-" + ttMov.documento + "-SEG-";
					
					String serie = "";
					String subSerie = "";
					String especie = "";
					double valorSegmento = 0;

					JSONArray recordsDup = new JSONArray();

					/*
					DESCOMENTAR ESSA LINHA QUANDO TIVER DATA DE VENCIMENTO
					VAI SEPARAR QUANDO ENCONTRAR A DATA DE VENCIMENTO NO BANCO
					COLOCAR O COMPLEMENTO QUE TIVER A DATA DE VENCIMENTO : ttMov.complemento06
					*/
					// if (ttMov.tipoPlanilha.equals("MOVIMENTO")) {
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  { 

						 boolean isData = false;
						 Date dtV = new Date();
						 try{ 
							 dtV = DateUtil.stringToDate(jDescricaoDupl.optString("DATAVENCIMENTO"), "dd/MM/yyyy");
							isData = true; 
							 if(!getCampoDate(DateUtil.dateToString(dtV, "dd/MM/yyyy")).equals(getCampoDate(dataVencimentoTTMov))) isData = false; 
						 } catch(Exception ii){ 
							isData = false; 
						 }
						 if(!chaveDuplicata.equals("")){
							if(isData){
								try {
									String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.CHAVE LIKE ? AND VENCIMENTO = ? "; 
									recordsDup = dbIOCont.sql(sql)
									  .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
									  .param(codEmpresa)
									  .param(chaveDuplicata + "%")
									  .param(dtV)
									  .debug(logger)
									  .query();								
								} catch (Exception e1) {
									logger.logDebug("ERROR: " + e1.getMessage());
								}
							}
							// if(!isData){
								// try {
									// String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE IO_DUPLICATA.CHAVE LIKE ? "; 
									// recordsDup = dbIOCont.sql(sql)
									  // .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
									  // .param(chaveDuplicata + "%")
									  // .debug(logger)
									  // .query();								
								// } catch (Exception e1) {
									// logger.logDebug("ERROR: " + e1.getMessage());
								// }
							// }
						 }
					}

					 else  { 
						if(!chaveDuplicata.equals("")){
							try {
								// INSERIDO O WHERE CODEMPRESA = ? PARA CORRE????O DO CHAMADO 202301-0023064.
								String sql = "SELECT SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND IO_DUPLICATA.CHAVE LIKE ? "; 
								recordsDup = dbIOCont.sql(sql)
								  .setFields("SERIE, SITUACAO, CHAVEDUPLICATA, VALORPARCELA, CHAVE, CPFCNPJ")
								  .param(codEmpresa)
								  .param(chaveDuplicata + "%")
								  .debug(logger)
								  .query();	

							} catch (Exception e1) {
								logger.logDebug("ERROR: " + e1.getMessage());
							}
						}
					}
					/* EXEMPLO DE COMO TEM QUE SAIR
					
					|0000|07701892000105|
					|5100|39||0|21338|15/08/2017|14/08/2017|0|||180,00|||||||||||||
					|5110|15/08/2017|3612|434|180,00|5|21338 ATLANTA ALARMES -  MONITOL MONIT. TOLEDO LTDA.||418|
					*/

					JSONObject recordsDupSeg = new JSONObject(); 
					if (recordsDup.length() > 0) recordsDupSeg = recordsDup.optJSONObject(0);
					
					if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
						serie   = recordsDupSeg.optString("SERIE");
						especie = recordsDupSeg.optString("CHAVEDUPLICATA");
					}

					double valorSaldoDuplicata = 0;
					double valorSomaSegmentos  = 0;
					
					// soma os segmentos pois eles nao sao baixados. Ou seja, se pago um valor parcial no dominio soma dos segmentos 
					// continua sendo o valor origial (total) da nota fiscal
					// utilizado para achar a proporcao do valor para cada segmento
					for (int seg =0; seg<recordsDup.length(); seg ++) {
						recordsDupSeg =  recordsDup.optJSONObject(seg);
						if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
							valorSomaSegmentos = valorSomaSegmentos + DecimalUtil.toDecimal(String.format("%.2f", recordsDupSeg.optDouble("VALORPARCELA")));
						}		
					}

					boolean leuDuplicata = false;
					
					// valor saldo duplicata = valor que esta em aberto no Dominio. Baixa nao pode ser maior que valor de saldo no Dominio
					if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));
					
					if (jDescricaoDupl.optString("TIPO").equals("FISCAL") && !roteiroCRMPrincipal.optString("validaFornecedorFiscal").equals("")) {
						jDescricaoDupl.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optInt("validaFornecedorFiscal"));
						jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, ttMov.nomeOrigem);
					}
					
					if (valorSomaSegmentos > 0) valorSaldoDuplicata = valorSomaSegmentos;

					valorSaldoDuplicata  = DecimalUtil.toDecimal(String.format("%.2f",valorSaldoDuplicata));
					ttMov.valorDocumento = DecimalUtil.toDecimal(String.format("%.2f",ttMov.valorDocumento));

					double diferencaParcela = DecimalUtil.toDecimal(String.format("%.2f", DecimalUtil.toDecimal(String.format("%.2f", ttMov.valorDocumento )) - valorSomaSegmentos));
					
					if (!especie.equals("") || !serie.equals("")) {
						if ((ttMov.valorDocumento) <= valorSaldoDuplicata ) {
							double valorTotalBaixado = 0;
							for (int seg =0; seg<recordsDup.length(); seg ++) {
							
								recordsDupSeg =  recordsDup.optJSONObject(seg);
                                String segmento = "";
								
								if	(recordsDupSeg != null && recordsDupSeg.has("SERIE")) {
									serie   	  = recordsDupSeg.optString("SERIE");
									subSerie   	  = recordsDupSeg.optString("SITUACAO");      // GUARDA SUB SERIE 
									especie 	  = recordsDupSeg.optString("CHAVEDUPLICATA");
									valorSegmento = recordsDupSeg.optDouble("VALORPARCELA");
                                    segmento      = recordsDupSeg.optString("CHAVE");
									if (segmento.contains("-SEG-")) {
                                        segmento = cutString(segmento, "-SEG-");
                                        segmento = cutString(segmento, 0, "-");
                                    }	
								}	

                                if(segmento.equals("0")){
                                    if(seg>0) continue;
                                    valorSomaSegmentos = DecimalUtil.toDecimal(String.format("%.2f",valorSegmento));
                                    diferencaParcela = 0;
                                }

								// (zerado para validacao)
								diferencaParcela = 0;

                                //if (subSerie.equals("")) subSerie = "0";

                                String codContabil = "";
                                if(ttMov.tipoLancamento.contains("PAGAR")) {
                                    ttMov.contaDebito  = contaMovimento;
                                    ttMov.contaCredito = contaPortador;
                                    codContabil = "5100";
                                }
                                if(ttMov.tipoLancamento.contains("RECEBER")) {
									ttMov.contaDebito   = contaPortador;
									ttMov.contaCredito  = contaMovimento;
									codContabil = "5200";
									if(especie.equals("39")) codContabil = "5300";
									
									histobj.put("especie", especie);
									String codigoFiscalNovo = getCampoFiscal("", histobj);
									if (!codigoFiscalNovo.equals("")) codContabil = codigoFiscalNovo;
								}

                                String delimitador = "|";
                                String tipoSerie = delimitador + codContabil + delimitador + especie + delimitador + serie + delimitador + subSerie + delimitador;
								
								// if(ttMov.codEmpresa.contains("351")) logger.logDebug("Fiscal pelo Template");
								
                                if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
                                    txtFiscal[0].append(tipoSerie);
                                    txtFiscal[0].append(jDescricaoDupl.optString("DUPLICATA"));
                                    txtFiscal[0].append(delimitador);
                                    txtFiscal[0].append(jDescricaoDupl.optString("DATAVENCIMENTO"));
                                    txtFiscal[0].append(delimitador);
                                    txtFiscal[0].append(ttMov.dataMovimento);
                                    txtFiscal[0].append(delimitador);
									
									 
									
									ttDocumento ttDoc    = (ttDocumento)mapaDocumento.get(ttMov.documento+"-"+seg);
									if (ttDoc == null) {
										ttDoc  = new ttDocumento();
										ttDoc.documento  = ttMov.documento;
										ttDoc.valorDocumento  = 0;
 									}
									
									double valorBaixar = 0;
									
									ttDoc.valorDocumento   = ttDoc.valorDocumento + DecimalUtil.toDecimal(String.format("%.2f", ((ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta + diferencaParcela) * (valorSegmento /  valorSomaSegmentos))));
									valorBaixar = DecimalUtil.toDecimal(String.format("%.2f", ((ttMov.valorDocumento - ttMov.valorDesconto + ttMov.valorJuros + ttMov.valorMulta + diferencaParcela) * (valorSegmento /  valorSomaSegmentos))));										
									
  
									if ((valorSegmento - ttDoc.valorDocumento) <= 0.02 && (valorSegmento - ttDoc.valorDocumento) > 0) valorBaixar = valorBaixar  + (valorSegmento - ttDoc.valorDocumento);
									if ((ttDoc.valorDocumento - valorSegmento) <= 0.02 && (ttDoc.valorDocumento - valorSegmento) > 0) valorBaixar = valorBaixar  - (ttDoc.valorDocumento - valorSegmento);
									
									 valorTotalBaixado += valorBaixar; 
									 
 									 
 									
									// calcula se o valor a ser baixado somando os segmentos eh maior que o valor pago pelo cliente
									// quando isto ocorrer, deve-se ajustar no ultimo segmento o valor
									 if ((valorTotalBaixado - ttMov.valorDocumento) <= 0.02 && (valorTotalBaixado - ttMov.valorDocumento) > 0) {
										 valorBaixar = valorBaixar  - (valorTotalBaixado - ttMov.valorDocumento);
										 ttDoc.valorDocumento = ttDoc.valorDocumento  - (valorTotalBaixado - ttMov.valorDocumento);
									 }
									
									 if ((ttMov.valorDocumento - valorTotalBaixado) <= 0.02 && (ttMov.valorDocumento - valorTotalBaixado) > 0) {
										 valorBaixar = valorBaixar  - (ttMov.valorDocumento - valorTotalBaixado);
										 ttDoc.valorDocumento = ttDoc.valorDocumento  - (ttMov.valorDocumento - valorTotalBaixado);
									 }
									 
 									
									mapaDocumento.put(ttMov.documento+"-"+seg,ttDoc);									
									
									txtFiscal[0].append(String.format("%.2f", (valorBaixar)).replaceAll("\\.",","));

                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALJUROS").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALMULTA").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    txtFiscal[0].append(delimitador);
                                    if (seg == 0) txtFiscal[0].append(jDescricaoDupl.optString("VALORFINALDESCONTO").replaceAll("\\.",","));
                                    if (seg > 0)  txtFiscal[0].append("0");
                                    // txtFiscal[0].append("||||||||||");
                                    // if(ttMov.tipoLancamento.contains("RECEBER")) txtFiscal[0].append("||");
                                    txtFiscal[0].append("||||||||");
                                    if(ttMov.tipoLancamento.contains("RECEBER")) txtFiscal[0].append("||||");
                                    
									if(ttMov.tipoLancamento.contains("PAGAR")) {
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(jDescricaoDupl.optString("CPFCNPJ"));
										txtFiscal[0].append(delimitador);
									}
									txtFiscal[0].append(segmento);
                                    txtFiscal[0].append(delimitador);
                                    //txtFiscal[0].append(jDescricaoDupl.optString("OBSERVACAO"));	// FEITO PARA SPEROTO VANZELLA
                                    //txtFiscal[0].append(delimitador);
                                    txtFiscal[0].append("\r\n");


                                    if (ttMov.valorDocumento > ttMov.valorDesconto) {
										codContabil = codContabil.replaceAll("00","10");

										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(codContabil);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.dataMovimento);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.contaDebito);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.contaCredito);
										txtFiscal[0].append(delimitador);
										 
										txtFiscal[0].append(String.format("%.2f", (valorBaixar)).replaceAll("\\.",","));

										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										if(ttMov.historico.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historico, "CodigoHistorico:", " "));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(cutString(cutString(ttMov.historico, 0, "Filial:"), 0 ,"Codigo"));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										txtFiscal[0].append(delimitador + codEmpresa + delimitador);
										txtFiscal[0].append("\r\n");
									}

									if (ttMov.valorDesconto > 0 && seg == 0) {

										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(codContabil);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.dataMovimento);
										txtFiscal[0].append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(ttMov.contaDebito);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(contaDesconto);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(contaDesconto);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(ttMov.contaCredito);
										}
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(String.format("%.2f", ttMov.valorDesconto).replaceAll("\\.",","));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										if(ttMov.historicoDesconto.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoDesconto, "CodigoHistorico:", " "));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(cutString(cutString(ttMov.historicoDesconto, 0, "Filial:"), 0 ,"Codigo"));

										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										txtFiscal[0].append(delimitador + codEmpresa + delimitador);
										txtFiscal[0].append("\r\n");
									}

									 if (ttMov.valorJuros > 0  && seg == 0) {
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(codContabil);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.dataMovimento);
										txtFiscal[0].append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(contaJuros);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(ttMov.contaDebito);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(ttMov.contaCredito);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(contaJuros);
										}
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(String.format("%.2f", ttMov.valorJuros).replaceAll("\\.",","));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										if(ttMov.historicoJuros.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoJuros, "CodigoHistorico:", " "));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(cutString(cutString(ttMov.historicoJuros, 0, "Filial:"), 0 ,"Codigo"));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										txtFiscal[0].append(delimitador + codEmpresa + delimitador);
										txtFiscal[0].append("\r\n");
									}

									 if (ttMov.valorMulta > 0 && seg == 0) {
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(codContabil);
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(ttMov.dataMovimento);
										txtFiscal[0].append(delimitador);
										if(ttMov.tipoLancamento.contains("PAGAR")) {
											txtFiscal[0].append(contaMulta);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(ttMov.contaDebito);
										}
										if(ttMov.tipoLancamento.contains("RECEBER")) {
											txtFiscal[0].append(ttMov.contaCredito);
											txtFiscal[0].append(delimitador);
											txtFiscal[0].append(contaMulta);
										}
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(String.format("%.2f", ttMov.valorMulta).replaceAll("\\.",","));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										if(ttMov.historicoMulta.contains("CodigoHistorico")) txtFiscal[0].append(cutString(ttMov.historicoMulta, "CodigoHistorico:", " "));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append(cutString(cutString(ttMov.historicoMulta, 0, "Filial:"), 0 ,"Codigo"));
										txtFiscal[0].append(delimitador);
										txtFiscal[0].append("");
										txtFiscal[0].append(delimitador + codEmpresa + delimitador);
										txtFiscal[0].append("\r\n");
									}

                                    diferencaParcela = 0;

                                    geraFiscal = true;
                                    loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
                                    
									if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
									
									eFornecedor = false;
                                    leuDuplicata = true;

                                }
                            }
                            if (leuDuplicata) continue;
                        } else {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
                            txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
                            txtFornecedor.append(";");
                            txtFornecedor.append(razaoSocialDuplicata);
                            txtFornecedor.append(";");
                            txtFornecedor.append(ttMov.documento);
                            txtFornecedor.append(";");
                            txtFornecedor.append(ttMov.dataMovimento);
                            txtFornecedor.append(";");
                            txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
                            txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
                            txtFornecedor.append("Valor Duplicata " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata));
                            txtFornecedor.append("\r\n");

                            geraFiscal = true;
                            loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
                            
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
                            
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
                            mapaVariavel.put(key,ttMov);
                        }
                    }
                    else {
						if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
							jDescricaoDupl.put("TIPO","FORNECEDOR"); // se nao acha serie vai para duplicatas nao encontradas
							eFornecedor = true;
						}
					}
				}


				if (eFornecedor) {

					dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
					contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");


					if(dupliNaoEncontContabil){
						contaMovimento = contaTemp;
						if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
						if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

						histobj.put("contaMovimento", contaMovimento);
						ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);


					}else{
						if(jDescricaoDupl.has("TIPO") && jDescricaoDupl.optString("TIPO").equals("FORNECEDOR")) {
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorFinal = String.format("%.2f", ttMov.valorDocumento);
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							
							
							jDescricaoDupl.put("NOMEORIGEM",     ttMov.nomeOrigem);
							jDescricaoDupl.put("DOCUMENTO",      ttMov.documento);
							jDescricaoDupl.put("DATAMOVIMENTO",  ttMov.dataMovimento);
							jDescricaoDupl.put("VALORFINAL",  valorFinal);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("NOMEORIGEM"));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("DOCUMENTO"));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("DATAMOVIMENTO"));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORFINAL").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							if (jDescricaoDupl.has("FORNECEDORESNAOBATEM")) {
								txtFornecedor.append("Nome do Fornecedor/Cliente nao confere com a duplicata aberta no fiscal ");
							}
							else {
								txtFornecedor.append("Duplicata nao encontrada no Fiscal ");
																
							}							
							txtFornecedor.append("\r\n");


							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							
							if (ttMov.nomeArquivo.toUpperCase().contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(ttMov.nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + ttMov.tipoLancamento;
							
							ttMov.tipoPlanilha = "NAO LER";
							mapaVariavel.put(key,ttMov);
							continue;
							
						}
					}
				}
			}
			
			/*	
			if (integraContrato.toUpperCase().equals("TRUE")) {
				if (roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("DOMINIO")) {
					String dataVencimentoTTMov = "";
					
 				
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR")) {
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) dataVencimentoTTMov = ttMov.complemento01;
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) dataVencimentoTTMov = ttMov.complemento02; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) dataVencimentoTTMov = ttMov.complemento03; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) dataVencimentoTTMov = ttMov.complemento04; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) dataVencimentoTTMov = ttMov.complemento05; 
						if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) dataVencimentoTTMov = ttMov.complemento06; 
					}	
					
						
					JSONObject jDados = new JSONObject();
					
					if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
						jDados.put("DATAVENCIMENTO", dataVencimentoTTMov);
					}
					else {
						jDados.put("DATAVENCIMENTO", ttMov.dataMovimento);
					}
					
					jDados.put("CODEMPRESA",     codEmpresa);
					jDados.put("RAZAOSOCIAL",    razaoSocial);
					jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
					jDados.put("DOCUMENTO",      ttMov.documento);
					jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
					jDados.put("OBSERVACAO", 	 ttMov.dataMovimento);
					jDados.put("PARCELADOC",     99);
					jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jDados.put("VALORJUROS",     ttMov.valorJuros);
					jDados.put("VALORMULTA",     ttMov.valorMulta);
					jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
					jDados.put("TABELACONTABIL", tabelaContabil);
 					
 					try {
						Date dtvenc = DateUtil.stringToDate(dataVencimentoTTMov, "dd/MM/yyyy");	 
				
						jDescricaoDupl = dbIOCont.sql("SELECT CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO FROM IO_DUPLICATA WHERE CODEMPRESA = ? AND DUPLICATA = ? AND VALORPARCELA >= ? and VENCIMENTO = ? order by VENCIMENTO   limit 1 ")
						.fields("CPFCNPJ,CODEMPRESA,RAZAOSOCIAL,CODIGOFORNECEDOR,CHAVE,CHAVEDUPLICATA,DUPLICATA,PARCELA,SERIE,VENCIMENTO,VALORPARCELA,SITUACAO,VALORJUROS,VALORDESCONTO,VALORMULTA,VALORPAGO,VALORTARIFA,OBSERVACAO")
						.param(codEmpresa)
						.param(ttMov.documento)
						.param(ttMov.valorDocumento)
						.param(dtvenc)
						.queryUnique();
					} catch (Exception e2) {
						logger.logDebug("ERROR: " + e2.getMessage());
						continue;
					}
					
 					
					if (jDescricaoDupl != null && jDescricaoDupl.has("VALORPARCELA")) { 

 						Date dtL = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");	// --- VERIFICAR
						dataLote = DateUtil.dateToString(dtL, "yyyy-MM");
	 
						boolean leuDuplicata = false;
						double valorSaldoDuplicata = 0;
						
						// valor saldo duplicata = valor que esta em aberto no Dominio. Baixa nao pode ser maior que valor de saldo no Dominio
						if (jDescricaoDupl.has("VALORPARCELA")) valorSaldoDuplicata = DecimalUtil.toDecimal(jDescricaoDupl.optString("VALORPARCELA"));
						 
 						if ((ttMov.valorDocumento) <= valorSaldoDuplicata ) { 
 
							String codContabil = "5700";								 							
							// |5700|1875|57593981053| | |1|25/02/2021|01/03/2021|5527,28|1649,16||||||

							String delimitador = "|";
							String tipoSerie = delimitador + codContabil + delimitador + ttMov.documento + delimitador + ttMov.complemento01 + delimitador + delimitador + delimitador + ttMov.complemento02  + delimitador;


						 try {
								String dataVencimento = jDescricaoDupl.optString("VENCIMENTO");
								Date dt        = DateUtil.stringToDate(dataVencimento, "yyyy-MM-dd HH:mm:ss");
								dataVencimento = DateUtil.dateToString(dt, "dd/MM/yyyy");
								dataVencimentoTTMov = dataVencimento;
							} catch (Exception e4) {
 							}
								
								
							if(jDescricaoDupl.has("VALORPARCELA")) {
								txtFiscal[0].append(tipoSerie);
								txtFiscal[0].append(dataVencimentoTTMov);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(ttMov.dataMovimento);
								txtFiscal[0].append(delimitador);
								txtFiscal[0].append(String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta)).replaceAll("\\.",","));
 								txtFiscal[0].append(delimitador);
							    txtFiscal[0].append(String.format("%.2f", (ttMov.valorJuros)).replaceAll("\\.",","));
								txtFiscal[0].append("||||||");								 
								txtFiscal[0].append("\r\n");

								geraFiscal = true;
								loteFiscal[0]= nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
								eFornecedor = false;
								leuDuplicata = true;

							}
							
 						} else { //Add dia 02/03/2021 - > Enviar dupli n encontradas p/ contabil Dominio
							 
							if(cabecalhoNaoEncontrada){
								txtFornecedor.append("Codigo");
								txtFornecedor.append(";");
								txtFornecedor.append("Fornecedor/Cliente");
								txtFornecedor.append(";");
								txtFornecedor.append("Duplicata");
								txtFornecedor.append(";");
								txtFornecedor.append("Data");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor bruto");
								txtFornecedor.append(";");
								txtFornecedor.append("Valor liquido");
								txtFornecedor.append(";");
								txtFornecedor.append("Banco");
								txtFornecedor.append(";");
								txtFornecedor.append("Obs:");
								txtFornecedor.append("\r\n");
								cabecalhoNaoEncontrada = false;
							}
							String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
							jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
							txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
							txtFornecedor.append(";");
							txtFornecedor.append(razaoSocialDuplicata);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.documento);
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.dataMovimento);
							txtFornecedor.append(";");
							txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
							txtFornecedor.append(";");
							txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
							txtFornecedor.append(";");
							txtFornecedor.append(ttMov.nomePortador);
							txtFornecedor.append(";");
							txtFornecedor.append("Valor Contrato " + String.format("%.2f", ttMov.valorDocumento) + " maior que saldo no Fiscal " + String.format("%.2f", valorSaldoDuplicata));
							txtFornecedor.append("\r\n");

							geraFiscal = true;
							loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
							if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 							mapaVariavel.put(key,ttMov);
							
						}
					}
					else {
						if(cabecalhoNaoEncontrada){
							txtFornecedor.append("Codigo");
							txtFornecedor.append(";");
							txtFornecedor.append("Fornecedor/Cliente");
							txtFornecedor.append(";");
							txtFornecedor.append("Duplicata");
							txtFornecedor.append(";");
							txtFornecedor.append("Data");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor bruto");
							txtFornecedor.append(";");
							txtFornecedor.append("Valor liquido");
							txtFornecedor.append(";");
							txtFornecedor.append("Banco");
							txtFornecedor.append(";");
							txtFornecedor.append("Obs:");
							txtFornecedor.append("\r\n");
							cabecalhoNaoEncontrada = false;
						}
						String valorLiquido = String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta);
						jDescricaoDupl.put("VALORLIQUIDO",  valorLiquido);
						txtFornecedor.append(jDescricaoDupl.optString("CODEMPRESA"));
						txtFornecedor.append(";");
						txtFornecedor.append(razaoSocialDuplicata);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.documento);
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.dataMovimento);
						txtFornecedor.append(";");
						txtFornecedor.append(String.format("%.2f", ttMov.valorDocumento));
						txtFornecedor.append(";");
						txtFornecedor.append(jDescricaoDupl.optString("VALORLIQUIDO").replaceAll("\\.",","));
						txtFornecedor.append(";");
						txtFornecedor.append(ttMov.nomePortador);
						txtFornecedor.append(";");
						txtFornecedor.append("Contrato " + ttMov.documento + " nao encontrado no Dominio ");
						txtFornecedor.append("\r\n");

						geraFiscal = true;
						loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_" + dataLote + "_" + ttMov.tipoLancamento;
						if (ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_TESTE_OTTIMIZZA_" + dataLote + "_" + ttMov.tipoLancamento;
 						mapaVariavel.put(key,ttMov);
					}
 				}

			}
			
			*/
			
			boolean ctFiscal = false;
			if(ttMov.tipoLancamento.contains("PAGAR")	&& ttMov.contaDebito.toUpperCase().contains("FISCAL")) ctFiscal = true;
			if(ttMov.tipoLancamento.contains("RECEBER") && ttMov.contaCredito.toUpperCase().contains("FISCAL")) ctFiscal = true;

			dupliNaoEncontContabil	= Boolean.parseBoolean(roteiroCRM.optString("dupliNaoEncontContabil").toLowerCase().trim());
			contaTemp				= roteiroCRMPrincipal.optString("Conta_Dupl_Contabil");

			if(contaMovimento.toUpperCase().contains("FISCAL") || ctFiscal) {
				contaMovimento = contaTemp;
				if(ttMov.tipoLancamento.contains("PAGAR"))	ttMov.contaDebito = contaTemp;
				if(ttMov.tipoLancamento.contains("RECEBER"))ttMov.contaCredito = contaTemp;

				histobj.put("contaMovimento", contaMovimento);
				ttMov.historico = getHistoricoRegra(contaMovimento, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			}

			if (!contaMovimento.equals("")){
			
				ttPlano ttP  = (ttPlano)mapaPlano.get(contaMovimento);
				if (ttP == null) {
					
					ttP  = new ttPlano(); 
					ttP.descricaoPlano = "";
					ttP.contaAnalitica = "";
					
					JSONObject descricaoPlano = dbIOCont.sql("SELECT DESCRICAOPLANO,CONTAANALITICA FROM IO_PLANOCONTA WHERE CODEMPRESA = ? AND CONTACONTABIL = ?")
					.fields("DESCRICAOPLANO,CONTAANALITICA")
					.param(codEmpresaPlanoContas)
					.param(cutString(contaMovimento,0, 20))
					.queryUnique();

					if (descricaoPlano == null || !descricaoPlano.has("DESCRICAOPLANO")) {
						dbIOCont.insert("IO_PLANOCONTA")
						.fields("CODEMPRESA,CONTACONTABIL")
						.param(codEmpresaPlanoContas)
						.param(cutString(contaMovimento,0, 20))
						.execute();
					} else {
						ttP.descricaoPlano = descricaoPlano.optString("DESCRICAOPLANO");
						ttP.contaAnalitica = descricaoPlano.optString("CONTAANALITICA");
					}					
					ttP.contaContabil     = cutString(contaMovimento,0, 20);
					mapaPlano.put(contaMovimento,ttP);


				}
			}
			 //Tratamento para inverter conta em lencamento simples feito para JBSOFTWARE
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM")){
				if(ttMov.contaDebito.contains("INVERTE") && !ttMov.contaCredito.contains("INVERTE")) ttMov.contaCredito = ttMov.contaCredito+ "INVERTE";
				if(!ttMov.contaDebito.contains("INVERTE") && ttMov.contaCredito.contains("INVERTE")) ttMov.contaDebito = ttMov.contaDebito+ "INVERTE";
			} 

			chave = ttMov.chave;
			//chave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
			String testeChave = getRegrasParaAcumular(ttMov.lote, ttMov.chave, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
			if(!testeChave.toUpperCase().contains("ACUMULAANTES") && !testeChave.toUpperCase().contains("ACUMULARANTES")) chave = testeChave;
			
			if(chave.length() > 180) chave = cutString(chave, 0, 179);
			
			chave = chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";
			ttMov.chave = ttMov.chave.replaceAll("[^0-9a-zA-Z]*", "") + "-CTB";

			apagaStatus = true;
			String keyAc = chave;
			
			// logger.logDebug("EMPR " + nomeEmpresa + " | " + tipoProduto + " | " + mantemArquivo + " | " + processaOud);
			
			if (((!tipoProduto.equals("OIC_PACOTE") && mantemArquivo.equals("SIM"))  || processaOud.equals("TRUE")) && !ttMov.lote.toUpperCase().contains("_OUD_")) {
				ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
			}
			else {
				if (ttMov.nomeArquivo.contains(".omc")) {
					ttMov.lote = ttMov.lote.replace(codEmpresa +"_",codEmpresa +"_oud_");
				}
			}
			
			// logger.logDebug("LOTEE " + ttMov.lote);
 
 			
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);		
			

			ttMovimentoPadrao ttMov3       = (ttMovimentoPadrao)mapaOficial.get(keyAc);
			if (ttMov3  == null) {
				ttMov3                = new ttMovimentoPadrao(ttMov);
				ttMov3.valorDesconto   = 0;
				ttMov3.valorJuros      = 0;
				ttMov3.valorDocumento  = 0;
				ttMov3.valorMulta      = 0;
				ttMov3.documento       = "";
			}
			if (ttMov3.documento.equals("")) {
				ttMov3.documento         = ttMov.documento;
			} else { if (!ttMov3.documento.contains(ttMov.documento)) ttMov3.documento = ttMov3.documento + ", " + ttMov.documento; }


			ttMov3.valorDesconto     = ttMov3.valorDesconto   + ttMov.valorDesconto;
			ttMov3.valorDocumento    = ttMov3.valorDocumento  + ttMov.valorDocumento;
			ttMov3.valorMulta        = ttMov3.valorMulta      + ttMov.valorMulta;
			ttMov3.valorJuros        = ttMov3.valorJuros      + ttMov.valorJuros;
			ttMov3.chave = chave;


			// logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador);
			String testeChavePortador = getRegrasParaAcumularPortador("", "", ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj).replaceAll("[^0-9a-zA-Z]*", "");
 			if (!testeChavePortador.equals("")) ttMov3.contador = 3;
			
			if (!ttMov.chave.equals(chave)) ttMov3.contador = 3;

			// for?a lancamento aberto no FB software
			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("JBSOFTWARE") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("TRON") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET") || 
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("DYAD") ||//removido o erp FORTES dessa valida??o - 202301-0023113
			    roteiroCRMPrincipal.optString("erpContabilidade").contains("MICROSYSTEM")) ttMov3.contador = 3;
				
			//logger.logDebug("ERP =>> "+roteiroCRM.optString("erpContabilidade")+" - ttMov3.contador =>> "+ttMov3.contador+" - AGORA E AGORA -> "+roteiroCRMPrincipal.optString("erpContabilidade"));

			mapaVariavel.put(key,ttMov);
			mapaOficial.put(keyAc,ttMov3);			 			
 
			if(ttMov.tipoPlanilha.contains("EXTRATO") || ttMov.tipoPlanilha.contains("CARTAO")){
				if(roteiroCRMPrincipal.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			}else if(roteiroCRM.optString("Forcar_Partida_Simples").equals("TRUE")) ttMov3.contador = 3;
			
			//#2305-005880
			//if (ttMov.tipoPlanilha.contains("OTTCARTAO")) ttMov3.contador = 0;
			if (ttMov.tipoPlanilha.contains("OTTCARTAO") && !roteiroCRMPrincipal.optString("erpContabilidade").contains("CONSISANET")) ttMov3.contador = 0;
			
			if  ((ttMov.valorJuros > 0 || ttMov.valorDesconto > 0 || ttMov.valorMulta > 0 || ttMov3.contador == 3) && !ttMov.tipoPlanilha.equals("NAO LER")) {
				chave = chave.replaceAll("CTB","CTBPORT");
				if (!testeChavePortador.equals("")) chave = testeChavePortador;

				key = chave;
				ttMovimentoPadrao ttMov2       = (ttMovimentoPadrao)mapaOficial.get(key);
				if (ttMov2  == null) {
					ttMov2                = new ttMovimentoPadrao(ttMov);
					ttMov2.contador        = 0;
					ttMov2.valorDesconto   = 0;
					ttMov2.valorJuros      = 0;
					ttMov2.valorDocumento  = 0;
					ttMov2.valorMulta      = 0;
					ttMov2.classificacao     = ttMov.classificacao;

				}
				ttMov2.tipoMovimento     = "CTBPORT";
				ttMov2.valorDesconto     = ttMov2.valorDesconto   + ttMov.valorDesconto;
				ttMov2.valorMulta        = ttMov2.valorMulta      + ttMov.valorMulta;
				ttMov2.valorJuros        = ttMov2.valorJuros      + ttMov.valorJuros;
				ttMov2.chave             = chave;
				ttMov2.chaveExtrato      = "";
				ttMov2.documento         = ttMov3.documento;
				ttMov2.valorDocumento    = ttMov2.valorDocumento + ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto + ttMov.valorMulta;
				ttMov2.contador          = ttMov2.contador + ttMov3.contador;
				if(tipoLancamento.contains("PAGAR") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")) {
					ttMov2.naturezaContabil  = "C";
					ttMov2.contaDebito       = "";
					ttMov2.contaCredito      = ttMov.contaCredito;
				}
				if(tipoLancamento.contains("RECEBER") && !ttMov2.tipoPlanilha.contains("OTTCARTAO")){
					ttMov2.naturezaContabil  = "D";
					ttMov2.contaDebito       = ttMov.contaDebito;
					ttMov2.contaCredito      = "";
				}
				if (ttMov2.valorDocumento == 0) continue; //JWR
				ttMov2.historico = getHistoricoPortador(contaPortador, ttMov2.historico, ttMov2.tipoLancamento, ttMov2.documento, ttMov2.nomeOrigem, histobj);
				
				//Descomentar caso haja problema com a perna de portador do lancamento
				if (!ttMov2.codFilial.equals("") && !ttMov2.historico.contains("Filial:")) ttMov2.historico = ttMov2.historico + " Filial:" + ttMov2.codFilial;
				
				String tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV FORNECEDOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("FORNECEDOR"))    ttMov3.historico = cutString(ttMov3.historico,0," Filial:") + " Filial:"+filial;
					if(tratarDiv.contains("PORTADOR"))      ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
  					ttMov3.historicoJuros	 = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoMulta 	 = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
					ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV DESCONTO", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("DESCONTO"))    ttMov3.historicoDesconto = cutString(ttMov3.historicoDesconto,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV JUROS", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("JUROS"))    ttMov3.historicoJuros = cutString(ttMov3.historicoJuros,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV MULTA", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("MULTA"))    ttMov3.historicoMulta = cutString(ttMov3.historicoMulta,0," Filial:") + " Filial:"+filial;
				}
				tratarDiv = getTratarComoDiv(ttMov2.documento, ttMov2.nomeOrigem + " DIV PORTADOR", histobj);
				if(!tratarDiv.equals("")){
					String filial = "";
					filial = cutString(tratarDiv, "-").replaceAll("[^0-9]", "");
					if(tratarDiv.contains("PORTADOR"))    ttMov2.historico = cutString(ttMov2.historico,0," Filial:") + " Filial:"+filial;
				}

				mapaOficial.put(key,ttMov2);
				ttMov3.classificacao = ttMov2.classificacao;
				mapaOficial.put(keyAc,ttMov3);
			}
		}
		if(contRegra == -1){
			String codEmp = props.get(empresa + "_COD_EMPRESA");
			String nomeEmp = props.get(empresa + "_NOME_EMPRESA");
			
			String info = tipoPlanilha + ";" + roteiroCRM.optString("codigo");
			compDirName = nomeEmp + "_#" + codEmp;
			String tipoPlanilhaDirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/" + compDirName + "/DePara/Processado/";
			String tipoPlanilhaPath = tipoPlanilhaDirName + "TIPOPLANILHA" + ".txt";
			// inout/contabil/Depaula/vektor_#123/Depara/TIPOPLANILHA.txt
			FileWriter 	arquivoTp = new FileWriter(tipoPlanilhaPath);
			arquivoTp.writeNewFile(info);
			//sssssss
		}


		//-------------------------------------------------------------------------
		// GERA OS ARQUICOS PARA BAIXA DE DUPLICATAS -- FISCAL
		//-------------------------------------------------------------------------
		if (geraFiscal) {

			String auxExtencao = ".txt";
			if(roteiroCRMPrincipal.optString("erpContabilidade").toUpperCase().contains("CORDILHEIRA")) auxExtencao = ".csv";
			String filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + auxExtencao;
			FileWriter writer = new FileWriter(filename);
			writer.writeNewFile(txtFiscal[0].toString());
			
			if (nomeArquivo.toUpperCase().contains("_ID") && !loteFiscal[0].contains("_ID")) loteFiscal[0] = nomeEmpresa + "_" + codEmpresa + "_" + "_PELO_FISCAL_ID" + cutString(nomeArquivo.toUpperCase(), "_ID", "_") + "_" + dataLote + "_" + tipoLancamento;

			loteFiscal[0] = loteFiscal[0].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
			
			filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[0] + ".csv";
			writer = new FileWriter(filename);
			writer.writeNewFile(txtFornecedor.toString());
			
			//JWR 2303-000613 Descomentar para quando utilizar arquivos fiscais separados por filial
			/*if (!loteFiscal[i].equals("") && geraNaoEncontradas) {
				loteFiscal[i] = loteFiscal[i].replaceAll("_PELO_FISCAL","_DUPLICATAS_NAO_ENCONTRADAS");
				filename = RouteEngine.INOUT_HOME + "/Contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/" + loteFiscal[i] + ".csv";
				writer = new FileWriter(filename);
				writer.writeNewFile(txtFornecedor.toString());
				geraNaoEncontradas = false;
			}*/
			
			
		}


		//-------------------------------------------------------------------------
		//--- DESABILITAR AQUI SOMENTE SE O BANCO DE DADOS CONTIVER TABELA IO_RAZAO
		//-------------------------------------------------------------------------


		
		mapaVariavel		= new HashMap();

		if (apagaStatus) {
			jStatus = new JSONObject();
			// logger.logDebug("PUTSTATUS 4745");
			putStatus(dirName, "", jStatus, logger);
		}
		
		// =======================================================================================
		// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base
		// =======================================================================================
  	   
		
		Iterator itLote = mapaLote.keySet().iterator();
		while (itLote.hasNext()) {

			String key = (String)itLote.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			lote = ttLot.lote;

			try {
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				dbIOCont.delete("IO_MOVIMENTO")
				.where("LOTE=?")
				.param(lote)
				.execute();
				
 				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_MOVIMENTO")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param("%" + tipoLancamento + "%")
					.param(nomeEmpresa + "_" + "%")
					
					.execute();
					
				}
				
				if (mantemArquivo.equals("SIM")) {
					 
					dbIOCont.delete("IO_ARQUIVOS")
					.where("LOTE LIKE ? AND LOTE LIKE ? ")
					.param(cutString(lote, 0, "_") + "%")
					.param("%" + tipoLancamento + "%")
					.execute();
					
				}
				
				
			} catch (Exception eDel) {
				logger.logError("EndpointB: ERROR DELETE IO_MOVIMENTO", eDel);
			}
		}
		// logger.logDebug("ETAPA 04 TEMPLATE ");
		
		// logger.logInfo("Antes etapa 4");
	
	
		contRegra = -1;
		Iterator it = mapaOficial.keySet().iterator();
		while (it.hasNext()) {
			
			String chaveExtrato     = "";

			String key = (String)it.next();
			ttMovimentoPadrao ttMov = new ttMovimentoPadrao();
			try {
				ttMov = (ttMovimentoPadrao)mapaOficial.get(key);
			}
			catch (Exception xx) { continue;}

  
			if (ttMov.tipoPlanilha.equals("NAO LER")) continue;


			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				if(tipoLancamento.contains("PAGAR") && ttMov.debitoCredito.equals("EXTRATO-CREDITO")) continue;
				if(tipoLancamento.contains("RECEBER") && ttMov.debitoCredito.equals("EXTRATO-DEBITO"))  continue;

			}
			if (ttMov.contaDebito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			if (ttMov.contaCredito.toUpperCase().contains("IGNORA")) {
				temIgnorar = true;
				continue;
			}
			ttMov.nomeOrigem = ttMov.nomeOrigem.replaceAll("EAMP;","&").replaceAll(";","").trim();

			contRegra++;
			int restoLinha = 0;
			restoLinha = (contRegra % 100);
			if (restoLinha == 0) putStatus(dirName, "04--Etapa 4 de 4 - " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			// quando cliente escolhe para agrupar tudo em um unico lote, mudamos o nome do arquivo.
			
			String idLote = cutString(ttMov.lote, "ott_oud", ttMov.lote.indexOf("ott_oud") + 16);//202302-0025707
			
			if (ttMov.lote.contains("ott_oud__id")) idLote = cutString(ttMov.lote, "ott_oud__id", "_");//2308-011361
			if (ttMov.lote.contains("ott_oud_id")) idLote = cutString(ttMov.lote, "ott_oud_id", "_");//2308-011361

			if (roteiroCRMPrincipal.optString("agrupaArquivos").toUpperCase().contains("TRUE")) {
				if (ttMov.lote.contains("_CORA_")) {
					ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_CORA_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
				} 
				
				else {
					if (ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) {

						ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_OTTIMIZZA_PROJETO_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
					}
					else {
						if (ttMov.lote.toUpperCase().contains("_OUD_")) {
	
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_ott_oud__id" + idLote + "_" + arquivoAgora  + "_OUD_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						}
					
						else {
							ttMov.lote = (nomeEmpresa + "_" + codEmpresa + "_" + arquivoAgora  + "_" + DateUtil.dateToString(new Date(),"yyyy-MM") + "_" + tipoLancamento).replaceAll("\\." , "");
						
						}
					}
				}
				
				
			}
			
			if (ttMov.lote.toLowerCase().contains("ott_oud_")) ttMov.lote = ttMov.lote.replaceAll("__", "_");
  			
			// logger.logDebug("LOTIZIN " + nomeEmpresa + " | " + ttMov.lote);
			
			ttLote ttLot    = (ttLote)mapaLote.get(ttMov.lote);
			if (ttLot       == null) {
				ttLot       = new ttLote();
				ttLot.lote  = ttMov.lote;
				ttLot.tipoPlanilha  = ttMov.tipoPlanilha;
 			}
			mapaLote.put(ttMov.lote,ttLot);
			

			if(tipoLancamento.contains("PAGAR")){
				ttMov.naturezaContabil = "D";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "C";
			}
			if(tipoLancamento.contains("RECEBER")){
				ttMov.naturezaContabil = "C";
				if(ttMov.tipoMovimento.contains("CTBPORT") || ttMov.tipoMovimento.contains("CTBDES")) ttMov.naturezaContabil = "D";
			}

			JSONObject extratoEmpresa = new JSONObject();

			// CASO A LINHA DO EXTATO JA TENHA SIDO LIDA PELA PLANILHA DE PAGAMENTOS, DEVE SER IGNORADA
			if (ttMov.tipoPlanilha.contains("EXTRATO")) {
				chaveExtrato = ttMov.chaveExtrato;

				extratoEmpresa = dbIOCont.sql("SELECT CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO FROM IO_EXTRATO WHERE CHAVE LIKE ? ")
				.fields("CHAVE,CODEMPRESA, DATAMOVIMENTO, PORTADOR, HISTORICO, LOTE, COMPLEMENTO, VALORDOCUMENTO, DEBITOCREDITO, EXTRATOLIDO")
				.param(chaveExtrato + "%")
				.queryUnique();

				if (extratoEmpresa != null && extratoEmpresa.length() > 0) {
					if (extratoEmpresa.has("EXTRATOLIDO")) {

						double extratoLido = extratoEmpresa.optDouble("EXTRATOLIDO");

						if (extratoLido == 1) continue;

						dbIOCont.update("IO_EXTRATO")
						.fields("EXTRATOLIDO")
						.where("CHAVE = ? ")
						.param(1)
						.param(chaveExtrato)
						.execute();

					}
				}

			}


			// -----------------------------------------------------------------------------------------------------------
			// COMPARA COM RAZAO APENAS QUANDO O NOME DO ARQUIVO CONTIVER OTTIMIZZA, ASSIM FICA MAIS RAPIDA A INTEGRACAO
			// QUANDO O CLIENTE FINAL ESTIVER RODANDO.
			// -----------------------------------------------------------------------------------------------------------

			if (!ttMov.tipoMovimento.equals("CTBPORT") && ttMov.nomeArquivo.toUpperCase().contains("OTTIMIZZA")) {

				String tipoData = "MOVIMENTO";

				comparaRazao = true;


				Date dataMovimentoDate = DateUtil.stringToDate(ttMov.dataMovimento, "dd/MM/yyyy");
				Date dataMovimentoDateMenosUm= new Date();
				Date dataMovimentoDateMenosDois= new Date();
				Date dataMovimentoDateMenosTres= new Date();
				Date dataMovimentoDateMaisUm= new Date();
				Date dataMovimentoDateMaisDois= new Date();
				Date dataMovimentoDateMaisTres= new Date();

				Calendar cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -1); dataMovimentoDateMenosUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -2); dataMovimentoDateMenosDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, -3); dataMovimentoDateMenosTres = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +1); dataMovimentoDateMaisUm = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +2); dataMovimentoDateMaisDois = cal.getTime();
				cal = Calendar.getInstance(); cal = DateUtil.dateToCalendar(dataMovimentoDate); cal.add (Calendar.DATE, +3); dataMovimentoDateMaisTres = cal.getTime();

				if (ttMov.valorDocumento == 0) continue;

				String valorFinal = String.format("%.2f", ttMov.valorDocumento);
				valorFinal = valorFinal.replaceAll("\\.",",");

				JSONArray registro = new JSONArray();

				

				JSONObject histobj = new JSONObject();
				ttMov.complemento01 = getReplaceTermos("complemento01", ttMov.complemento01, histobj);
				ttMov.complemento02 = getReplaceTermos("complemento02", ttMov.complemento02, histobj);
				ttMov.complemento03 = getReplaceTermos("complemento03", ttMov.complemento03, histobj);
				ttMov.complemento04 = getReplaceTermos("complemento04", ttMov.complemento04, histobj);
				ttMov.complemento05 = getReplaceTermos("complemento05", ttMov.complemento05, histobj);
				ttMov.complemento06 = getReplaceTermos("complemento06", ttMov.complemento06, histobj);
				ttMov.complemento07 = getReplaceTermos("complemento07", ttMov.complemento07, histobj);
				ttMov.complemento08 = getReplaceTermos("complemento09", ttMov.complemento08, histobj);
				ttMov.complemento09 = getReplaceTermos("complemento09", ttMov.complemento09, histobj);
				ttMov.complemento10 = getReplaceTermos("complemento10", ttMov.complemento10, histobj);
				ttMov.nomeOrigem = getReplaceTermos("nomeOrigem", ttMov.nomeOrigem, histobj);
				ttMov.documento = getReplaceTermos("documento", ttMov.documento, histobj);
				ttMov.nomePortador = getReplaceTermos("nomePortador", ttMov.nomePortador, histobj);

				histobj.put("nomeOrigem", ttMov.nomeOrigem); histobj.put("documento", ttMov.documento);
				histobj.put("complemento01", ttMov.complemento01); histobj.put("complemento02", ttMov.complemento02);
				histobj.put("complemento03", ttMov.complemento03); histobj.put("complemento04", ttMov.complemento04);
				histobj.put("complemento05", ttMov.complemento05); histobj.put("complemento06", ttMov.complemento06);
				histobj.put("complemento07", ttMov.complemento07); histobj.put("complemento08", ttMov.complemento08);
				histobj.put("complemento09", ttMov.complemento09); histobj.put("complemento10", ttMov.complemento10);
				histobj.put("dataMovimento", ttMov.dataMovimento); histobj.put("mesAnoAnterior", mesAnoAnterior);
				histobj.put("mesAno2Anterior", mesAno2Anterior); histobj.put("mesAnoAtual", mesAnoAtual);
				histobj.put("nomePortador", ttMov.nomePortador); histobj.put("contaMovimento", contaMovimento);
				histobj.put("contaPortador", contaPortador); histobj.put("contaDebito", "");
				histobj.put("contaCredito", ""); histobj.put("contaJuros", ttMov.contaJuros);
				histobj.put("contaDesconto", ttMov.contaDesconto); histobj.put("contaMulta", ttMov.contaMulta);
				histobj.put("centroCusto", ttMov.centroCusto); histobj.put("valorDocumento", ttMov.valorDocumento);
				histobj.put("valorJuros", ttMov.valorJuros); histobj.put("valorDesconto", ttMov.valorDesconto);
				histobj.put("valorMulta", ttMov.valorMulta); histobj.put("codFilial", ttMov.codFilial);
				histobj.put("tipoPlanilha", ttMov.tipoPlanilha); histobj.put("numeroAba", ttMov.abaPlanilha);

				String contaPrincipal = "";
				String contraSecundaria = "";

				if (tipoLancamento.contains("PAGAR")) {
					contaPrincipal = ttMov.contaDebito;
					contraSecundaria = ttMov.contaCredito;

				}
				if (tipoLancamento.contains("RECEBER")) {
					contaPrincipal = ttMov.contaCredito;
					contraSecundaria = ttMov.contaDebito;
				}

				regraContaMovimento = getRegraContaMovimento(contaPrincipal, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);
				regraHistorico = getRegraHistoricoRegra(contaPrincipal, ttMov.historico, ttMov.tipoLancamento, ttMov.documento, ttMov.nomeOrigem, histobj);

				 
				ResumoTxt.append("\r\n");
				ResumoTxt.append("NAO ENCONTRADO;");
				ResumoTxt.append(ttMov.dataMovimento);
				ResumoTxt.append(";");
				ResumoTxt.append(tipoData);
				ResumoTxt.append(";");
				ResumoTxt.append(valorFinal);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.documento);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomeOrigem);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.nomePortador);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento01);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento02);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento03);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento04);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento05);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.complemento06);
				ResumoTxt.append(";;");

				ResumoTxt.append(ttMov.contaDebito);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.contaCredito);
				ResumoTxt.append(";");
				ResumoTxt.append(regraContaMovimento);
				ResumoTxt.append(";");
				ResumoTxt.append(ttMov.historico);
				ResumoTxt.append(";");
				ResumoTxt.append(regraHistorico);
				ResumoTxt.append(";;");
				ResumoTxt.append(ttMov.nomeArquivo);
				ResumoTxt.append(";");
				 
			}			
 
			if(tipoLancamento.contains("PAGAR")){

				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "C";
				if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
			}
			if(tipoLancamento.contains("RECEBER")){
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros == 0) classificacao = "X";
				if (ttMov.valorDesconto == 0 && ttMov.valorJuros > 0)  classificacao = "D";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros == 0) classificacao = "C";
				if (ttMov.valorDesconto >  0 && ttMov.valorJuros > 0)  classificacao = "V";

				if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "D";
				if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
			}

			if (roteiroCRMPrincipal.optString("erpContabilidade").contains("DOMINIO")) {
				if(tipoLancamento.contains("PAGAR")){

					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("D")) classificacao = "V";
				}
				if(tipoLancamento.contains("RECEBER")){
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "X";
					if (ttMov.valorDesconto == 0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) == 0) classificacao = "V";
					if (ttMov.valorDesconto >  0 && (ttMov.valorJuros + ttMov.valorMulta) > 0)  classificacao = "V";

					if ((ttMov.contador > 1 || ttMov.valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
					if (ttMov.contador > 1 && classificacao.equals("C")) classificacao = "V";
				}
			}

			String classificacaoFinal = classificacao + ttMov.classificacao + "01";

			if ((classificacao.startsWith("X") || roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) && ttMov.tipoMovimento.equals("CTBPORT")) { continue;}
			
			if(!ttMov.tipoPlanilha.equals("MOVIMENTO") && !ttMov.tipoPlanilha.contains("EXTRATO")){
				roteiroCRM = buscaRoteiro("getRoteiro"+ttMov.tipoPlanilha, logger);
			}else{
				roteiroCRM = getRoteiro();
			}
			
			//Feito para retirar os indices apos o tipoPlanilha, estavam impactando nas regras do oud
			if(!ttMov.tipoPlanilha.equals("")){
				String sequencia = "";
				try{
					sequencia = cutString(ttMov.tipoPlanilha, ttMov.tipoPlanilha.length()-4).replaceAll("[^0-9]", "");
				}catch(Exception s1){}
				if(ttMov.tipoPlanilha.contains(sequencia)){
					try{
						ttMov.tipoPlanilha = cutString(ttMov.tipoPlanilha, 0, sequencia);
						
					}catch(Exception s2){}
				}
			}
			
			// logger.logDebug("AQQQQ " + roteiroCRM.optString("erpContabilidade") + " | " + roteiroCRMPrincipal.optString("erpContabilidade") + " | " + ttMov.complemento05 + " | " + roteiroCRM.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase() + " | " + ttMov.contaJuros + " | " + ttMov.contaDebito + " | " + ttMov.contaCredito + " | " + classificacao);
			// logger.logDebug("TP -- "+ttMov.tipoPlanilha+"VALOR = "+ttMov.valorDocumento+" | COMP01 = "+ttMov.complemento01+" | CP02 = "+ttMov.complemento02+" | CP03 = "+ttMov.complemento03+" | TM = "+ttMov.tipoMovimento);
			
			
			if (classificacao.startsWith("X")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", ttMov.tipoMovimento);
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("CONTADEBITO", ttMov.contaDebito);
				js.put("CONTACREDITO", ttMov.contaCredito);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave  + "-CTB");
				js.put("CLASSIFICACAO", classificacaoFinal);

 
				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}
					
  				 

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);
				
				if(tipoLancamento.contains("PAGAR")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaJuros);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaMulta);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaCredito);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaDesconto);
							}
						}
					
					}
				}
				if(tipoLancamento.contains("RECEBER")){
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) {
						if (roteiroCRMPrincipal.optString("erpContabilidade").equals("LEDWARE") 
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("ALTERDATA")
							|| roteiroCRMPrincipal.optString("erpContabilidade").equals("CONTMATIC")) {
							if (ttMov.complemento05.equals("JUROS") && !ttMov.contaJuros.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaJuros);
							}
							if (ttMov.complemento05.equals("MULTA") && !ttMov.contaMulta.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDebito);
								js.put("CONTACREDITO", ttMov.contaMulta);
							}
							if (ttMov.complemento05.equals("DESCONTO") && !ttMov.contaDesconto.equals("")) {
								js.put("CONTADEBITO", ttMov.contaDesconto);
								//#2303-000922
								//js.put("CONTACREDITO", ttMov.contaCredito);
								js.put("CONTACREDITO", ttMov.contaDebito);
							}
						}
					}
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");
				
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB")   && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
 				

				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito);
					rec3.put("CONTACREDITO", ttMov.contaCredito);
					rec3.put("TIPOMOVIMENTO", "CTBCC");
					rec3.put("CHAVE", ttMov.chave + "-CTBCC");
					rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);

					//records.put(rec3);
				}
				continue;
			}

			String classJur = "";
			String classDes = "";
			String classMul = "";

			if(tipoLancamento.contains("PAGAR")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("C") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("D")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}
			}
			
			
			if(tipoLancamento.contains("RECEBER")){
				if(roteiroCRMPrincipal.optString("erpContabilidade").equals("DYAD")){
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "03";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}
				}else{
					if(classificacao.startsWith("D") || classificacao.startsWith("V")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "01";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "03";
						classDes = classificacao + ttMov.classificacao + "02";
						classJur = classificacao + ttMov.classificacao + "04";
						classMul = classificacao + ttMov.classificacao + "05";
					}
					if(classificacao.startsWith("C")){
						if (ttMov.tipoMovimento.equals("CTBPORT"))  classificacaoFinal = classificacao + ttMov.classificacao + "04";
						if (ttMov.tipoMovimento.equals("CTB"))      classificacaoFinal = classificacao + ttMov.classificacao + "01";
						classDes = classificacao + ttMov.classificacao + "05";
						classJur = classificacao + ttMov.classificacao + "02";
						classMul = classificacao + ttMov.classificacao + "03";
					}

				}
			}
			  


			if (ttMov.tipoMovimento.equals("CTBPORT")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", "CTBPORT");
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave + "-CTBPORT");
				js.put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", "");
					js.put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", ttMov.contaDebito);
					js.put("CONTACREDITO", "");
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBPORT");				
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTBPORT") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBPORT", js);
			 
				//records.put(js);
			}
			if (ttMov.tipoMovimento.equals("CTB")) {
				JSONObject js = new JSONObject();
				js.put("LOTE", ttMov.lote);
				js.put("CNPJEMPRESA", cnpjEmpresa);
				js.put("DOCUMENTO", ttMov.documento);
				js.put("CODEMPRESA", ttMov.codEmpresa);
				js.put("NOMEEMPRESA", ttMov.nomeEmpresa);
				js.put("DATAMOVIMENTO", ttMov.dataMovimento);
				js.put("TIPOMOVIMENTO", "CTB");
				js.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
				js.put("HISTORICO", ttMov.historico);
				js.put("VALORDOCUMENTO", ttMov.valorDocumento);
				js.put("VALORLIQUIDACAO", ttMov.valorDocumento);
				js.put("VALORDESCONTO", ttMov.valorDesconto);
				js.put("VALORJUROS", ttMov.valorJuros);
				js.put("VALORMULTA", ttMov.valorMulta);
				js.put("NOMEPORTADOR", ttMov.nomePortador);
				js.put("CENTROCUSTO", ttMov.centroCusto);
				js.put("NATUREZACONTABIL", ttMov.naturezaContabil);
				js.put("NOMEORIGEM", ttMov.nomeOrigem);
				js.put("CPFCNPJ", ttMov.cpfCnpj);
				js.put("SERIE", ttMov.serie);
				js.put("STATUSMOVIMENTO", ttMov.statusMovimento);
				js.put("CHAVE", ttMov.chave + "-CTB");
				js.put("CLASSIFICACAO", classificacaoFinal);

				if ((ttMov.lote.toUpperCase().contains("OTTIMIZZA") && ttMov.lote.toUpperCase().contains("PROJETO")) ||
					ttMov.lote.toUpperCase().contains("_OUD") ||
				    (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) || processaOud.equals("TRUE")) {
					js.put("ID_ROTEIRO", roteiroCRMPrincipal.optString("idRoteiro"));
					js.put("CNPJ_EMPRESA", roteiroCRMPrincipal.optString("CnpjEmpresa"));
					js.put("CNPJ_CONTABILIDADE", roteiroCRMPrincipal.optString("CnpjContabilidade").replaceAll("\\.","").replaceAll("-","").replaceAll("/",""));
					js.put("TIPO_PLANILHA", ttMov.tipoPlanilha );
					// 2307-010554
					if (!ttMov.tipoPlanilha.contains("EXTRATO")) {
						js.put("LABEL_COMPLEMENTO01", roteiroCRM.optString("Rotulo_Complemento_01"));
						js.put("LABEL_COMPLEMENTO02", roteiroCRM.optString("Rotulo_Complemento_02"));
						js.put("LABEL_COMPLEMENTO03", roteiroCRM.optString("Rotulo_Complemento_03"));
						js.put("LABEL_COMPLEMENTO04", roteiroCRM.optString("Rotulo_Complemento_04"));
						js.put("LABEL_COMPLEMENTO05", roteiroCRM.optString("Rotulo_Complemento_05"));
					}
				}

				js.put("COMPLEMENTO01", ttMov.complemento01);
				js.put("COMPLEMENTO02", ttMov.complemento02);
				js.put("COMPLEMENTO03", ttMov.complemento03);
				js.put("COMPLEMENTO04", ttMov.complemento04);
				js.put("COMPLEMENTO05", ttMov.complemento05);
				js.put("COMPLEMENTO06", ttMov.complemento06);
				js.put("COMPLEMENTO07", ttMov.complemento07);
				js.put("COMPLEMENTO08", ttMov.complemento08);
				js.put("COMPLEMENTO09", ttMov.complemento09);
				js.put("COMPLEMENTO10", ttMov.complemento10);
				js.put("NOMEARQUIVO", ttMov.nomeArquivo);

				if(tipoLancamento.contains("PAGAR")){
					js.put("CONTADEBITO", ttMov.contaDebito);
					js.put("CONTACREDITO", "");
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTACREDITO", ttMov.contaCredito);
				}
				if(tipoLancamento.contains("RECEBER")){
					js.put("CONTADEBITO", "");
					js.put("CONTACREDITO", ttMov.contaCredito);
					if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) js.put("CONTADEBITO", ttMov.contaDebito);
				}
				
				recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTB");
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("PAGAR") && ttMov.contaDebito.equals("")) js.put("CONTADEBITO", "PENDENTE");
				if (ttMov.tipoMovimento.equals("CTB") && ttMov.tipoLancamento.equals("RECEBER") && ttMov.contaCredito.equals("")) js.put("CONTACREDITO", "PENDENTE");				
				
				criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTB", js);
				
				//records.put(js);
				if (!ttMov.centroCusto.equals("")) {
					JSONObject rec3 = new JSONObject(js.toString());
					rec3.put("CONTADEBITO", ttMov.contaDebito);
					rec3.put("CONTACREDITO", ttMov.contaCredito);
					rec3.put("TIPOMOVIMENTO", "CTBCC");
					rec3.put("CHAVE", ttMov.chave + "-CTBCC");
					rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBCC");
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBCC");
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBCC", rec3);
					//records.put(rec3);
				}

				 
				if (ttMov.valorJuros > 0)  {
					classificacaoFinal = classJur;
					JSONObject jsJUR = new JSONObject(js.toString());
					jsJUR.put("LOTE", ttMov.lote);
					jsJUR.put("CNPJEMPRESA", cnpjEmpresa);
					jsJUR.put("DOCUMENTO", ttMov.documento);
					jsJUR.put("CODEMPRESA", ttMov.codEmpresa);
					jsJUR.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsJUR.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsJUR.put("TIPOMOVIMENTO", "CTBJUR");
					jsJUR.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsJUR.put("HISTORICO", ttMov.historicoJuros);
					jsJUR.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsJUR.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsJUR.put("VALORDESCONTO", ttMov.valorDesconto);
					jsJUR.put("VALORJUROS", ttMov.valorJuros);
					jsJUR.put("VALORMULTA", ttMov.valorMulta);
					jsJUR.put("NOMEPORTADOR", ttMov.nomePortador);
					jsJUR.put("CENTROCUSTO", ttMov.centroCusto);
					jsJUR.put("NATUREZACONTABIL", "D");
					jsJUR.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsJUR.put("CPFCNPJ", ttMov.cpfCnpj);
					jsJUR.put("SERIE", ttMov.serie);
					jsJUR.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsJUR.put("CHAVE", ttMov.chave + "-CTBJUR");
					jsJUR.put("CLASSIFICACAO", classificacaoFinal);

					jsJUR.put("COMPLEMENTO01", ttMov.complemento01);
					jsJUR.put("COMPLEMENTO02", ttMov.complemento02);
					jsJUR.put("COMPLEMENTO03", ttMov.complemento03);
					jsJUR.put("COMPLEMENTO04", ttMov.complemento04);
					jsJUR.put("COMPLEMENTO05", ttMov.complemento05);
					jsJUR.put("COMPLEMENTO06", ttMov.complemento06);
					jsJUR.put("COMPLEMENTO07", ttMov.complemento07);
					jsJUR.put("COMPLEMENTO08", ttMov.complemento08);
					jsJUR.put("COMPLEMENTO09", ttMov.complemento09);
					jsJUR.put("COMPLEMENTO10", ttMov.complemento10);
					jsJUR.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsJUR.put("CONTADEBITO",  ttMov.contaJuros);
						jsJUR.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsJUR.put("CONTADEBITO",  "");
						jsJUR.put("CONTACREDITO", ttMov.contaJuros);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsJUR.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJUR");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJUR", jsJUR);
				
				
					//records.put(jsJUR);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsJUR.toString());
						 rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBJURCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBJURCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBJURCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBJURCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBJURCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorDesconto > 0)  {
					classificacaoFinal = classDes;
					JSONObject jsDES = new JSONObject(js.toString());
					jsDES.put("LOTE", ttMov.lote);
					jsDES.put("CNPJEMPRESA", cnpjEmpresa);
					jsDES.put("DOCUMENTO", ttMov.documento);
					jsDES.put("CODEMPRESA", ttMov.codEmpresa);
					jsDES.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsDES.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsDES.put("TIPOMOVIMENTO", "CTBDES");
					jsDES.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsDES.put("HISTORICO", ttMov.historicoDesconto);
					jsDES.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsDES.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsDES.put("VALORDESCONTO", ttMov.valorDesconto);
					jsDES.put("VALORJUROS", ttMov.valorJuros);
					jsDES.put("VALORMULTA", ttMov.valorMulta);
					jsDES.put("NOMEPORTADOR", ttMov.nomePortador);
					jsDES.put("CENTROCUSTO", ttMov.centroCusto);
					jsDES.put("NATUREZACONTABIL", "C");
					jsDES.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsDES.put("CPFCNPJ", ttMov.cpfCnpj);
					jsDES.put("SERIE", ttMov.serie);
					jsDES.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsDES.put("CHAVE", ttMov.chave + "-CTBDES");
					jsDES.put("CLASSIFICACAO", classificacaoFinal);

					jsDES.put("COMPLEMENTO01", ttMov.complemento01);
					jsDES.put("COMPLEMENTO02", ttMov.complemento02);
					jsDES.put("COMPLEMENTO03", ttMov.complemento03);
					jsDES.put("COMPLEMENTO04", ttMov.complemento04);
					jsDES.put("COMPLEMENTO05", ttMov.complemento05);
					jsDES.put("COMPLEMENTO06", ttMov.complemento06);
					jsDES.put("COMPLEMENTO07", ttMov.complemento07);
					jsDES.put("COMPLEMENTO08", ttMov.complemento08);
					jsDES.put("COMPLEMENTO09", ttMov.complemento09);
					jsDES.put("COMPLEMENTO10", ttMov.complemento10);
					jsDES.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsDES.put("CONTADEBITO", "");
						jsDES.put("CONTACREDITO", ttMov.contaDesconto);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTADEBITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsDES.put("CONTADEBITO",  ttMov.contaDesconto);
						jsDES.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsDES.put("CONTACREDITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDES");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDES", jsDES);
				 
					//records.put(jsDES);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsDES.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBDESCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBDESCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBDESCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBDESCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBDESCC", rec3);
					   // records.put(rec3);
					}
				}
				if (ttMov.valorMulta > 0)  {
					classificacaoFinal = classMul;
					JSONObject jsMUL = new JSONObject(js.toString());
					jsMUL.put("LOTE", ttMov.lote);
					jsMUL.put("CNPJEMPRESA", cnpjEmpresa);
					jsMUL.put("DOCUMENTO", ttMov.documento);
					jsMUL.put("CODEMPRESA", ttMov.codEmpresa);
					jsMUL.put("NOMEEMPRESA", ttMov.nomeEmpresa);
					jsMUL.put("DATAMOVIMENTO", ttMov.dataMovimento);
					jsMUL.put("TIPOMOVIMENTO", "CTBMUL");
					jsMUL.put("TIPOLANCAMENTO", ttMov.tipoLancamento);
					jsMUL.put("HISTORICO", ttMov.historicoMulta);
					jsMUL.put("VALORDOCUMENTO", ttMov.valorDocumento);
					jsMUL.put("VALORLIQUIDACAO", ttMov.valorDocumento);
					jsMUL.put("VALORDESCONTO", ttMov.valorDesconto);
					jsMUL.put("VALORJUROS", ttMov.valorJuros);
					jsMUL.put("VALORMULTA", ttMov.valorMulta);
					jsMUL.put("NOMEPORTADOR", ttMov.nomePortador);
					jsMUL.put("CENTROCUSTO", ttMov.centroCusto);
					jsMUL.put("NATUREZACONTABIL", "D");
					jsMUL.put("NOMEORIGEM", ttMov.nomeOrigem);
					jsMUL.put("CPFCNPJ", ttMov.cpfCnpj);
					jsMUL.put("SERIE", ttMov.serie);
					jsMUL.put("STATUSMOVIMENTO", ttMov.statusMovimento);
					jsMUL.put("CHAVE", ttMov.chave + "-CTBMUL");
					jsMUL.put("CLASSIFICACAO", classificacaoFinal);

					jsMUL.put("COMPLEMENTO01", ttMov.complemento01);
					jsMUL.put("COMPLEMENTO02", ttMov.complemento02);
					jsMUL.put("COMPLEMENTO03", ttMov.complemento03);
					jsMUL.put("COMPLEMENTO04", ttMov.complemento04);
					jsMUL.put("COMPLEMENTO05", ttMov.complemento05);
					jsMUL.put("COMPLEMENTO06", ttMov.complemento06);
					jsMUL.put("COMPLEMENTO07", ttMov.complemento07);
					jsMUL.put("COMPLEMENTO08", ttMov.complemento08);
					jsMUL.put("COMPLEMENTO09", ttMov.complemento09);
					jsMUL.put("COMPLEMENTO10", ttMov.complemento10);
					jsMUL.put("NOMEARQUIVO", ttMov.nomeArquivo);

					if(tipoLancamento.contains("PAGAR")){
						jsMUL.put("CONTADEBITO",  ttMov.contaMulta);
						jsMUL.put("CONTACREDITO", "");
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTACREDITO", ttMov.contaCredito);

					}
					if(tipoLancamento.contains("RECEBER")){
						jsMUL.put("CONTADEBITO",  "");
						jsMUL.put("CONTACREDITO", ttMov.contaMulta);
						if (roteiroCRMPrincipal.optString("Forcar_Partida_Dobrada").toUpperCase().equals("TRUE")) jsMUL.put("CONTADEBITO", ttMov.contaDebito);

					}
					
					
					recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMUL");				
					criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMUL", jsMUL);				 
					
					//records.put(jsMUL);
					if (!ttMov.centroCusto.equals("")) {
						JSONObject rec3 = new JSONObject(jsMUL.toString());
						rec3.put("CONTADEBITO", ttMov.contaDebito);
						rec3.put("CONTACREDITO", ttMov.contaCredito);
						rec3.put("TIPOMOVIMENTO", "CTBMULCC");
						rec3.put("CHAVE", ttMov.chave + "-CTBMULCC");
						rec3.put("CLASSIFICACAO", classificacaoFinal + "-CTBMULCC");
						recordF = findMovimentoPorChave(dbIOCont, ttMov.chave+ "-CTBMULCC");
						criaMovimento(dbIOCont, recordF, ttMov.chave+ "-CTBMULCC", rec3);
					   //records.put(rec3);
					}
				}
			}
		}
		// JWR adicionamos essa parte para mandar uma mensagem personalizada para o cliente, no caso de apenas nao conseguir ler os movimentos e nao um erro de layout
		// vamos descomentar depois de adicionar todas as validacoes sobre fiscal e afins
		// logger.logDebug("contRegra -> " + contRegra + " | temFiltro -> " + temFiltro);
		
		/*if (roteiroCRMPrincipal.optString("contabilidade").toUpperCase().contains("MICALI")) */logger.logDebug("TEPE DO JOTA " + contRegra + " | " + tipoPlanilha + " | " + nomeArquivo.toUpperCase());
		
		if (contRegra > 0 && nomeArquivo.toUpperCase().contains("_ID") && nomeArquivo.toUpperCase().contains(".PDF")) {
			// logger.logDebug("ENTROU 34");
			putStatus(dirName, "03--Etapa 3 de 4 LEUCONVERSORANTIGO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
		}
		
		//#2304-002843. Melhorias no feedback
		if (contRegra < 0 && nomeArquivo.toUpperCase().contains("_ID") && !nomeArquivo.toUpperCase().startsWith("OK_DEPARACONTA") && ((roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE") && !temFiscal && !mantemArquivo.equals("SIM")) || !roteiroCRM.optString("Integracao_fiscal").toUpperCase().contains("TRUE"))) {
			if (temFiltro) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUFILTRO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temIgnorar) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUIGNORAR- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
			 	}
			} else if (temLinhas) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEULINHAS- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else if (temOFX || retornaPadroes.equals("break")) {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEU- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			} else {
				if (mantemArquivo.equals("SIM") && !tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
				if (!mantemArquivo.equals("SIM") && tipoProduto.equals("OIC_PACOTE")) {
					putStatus(dirName, "03--Etapa 3 de 4 NAOLEUMOVIMENTO- " + String.valueOf(contRegra) + "--" + tipoLancamento + ".status", jStatus, logger);
				}
			}
			
		}
		
		if (apagaExtrato) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				dbIOCont.delete("IO_EXTRATO")
				.where("CODEMPRESA=?")
				.param(codEmpresa)
				.execute();
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR EXTRATO " + e.getMessage());
			}
		}
		
		// Apaga as Contas T quando sao informadas pelos contadore no Conf. REfras 
		if (apagaContaT) {
			try {
			
				if (dbIOCont != null) {
					dbIOCont.closeConnection();
					dbIOCont = null;
				}
				if (dbIOCont == null) {
					dbIOCont = connectIOContabil(props, logger);
				}
				
				if (tipoLancamento.contains("PAGAR")) {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBFOR LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
				else {
					dbIOCont.delete("IO_PESSOA")
					.where("CODEMPRESA = ? 	AND CONTACTBCLI LIKE '%T%'")
					.param(codEmpresa)
					.execute();
					}
			} catch (Exception e) {
				logger.logDebug("PROBLEMA APAGAR IO_PESSOA  " + e.getMessage());
			}
		}
		// resumo comparativo com razao
		String idLoteResumo = "";
		if (comparaRazao) {
			if(loteEtapaTres.toUpperCase().contains("_ID") && fornecedorUnico.contains("EXIBE_RESUMO")){
				idLoteResumo = "_ID"+cutString(loteEtapaTres.toUpperCase(), "_ID", "_")+"_";
			}
			String filenameRazao = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_APOS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerRazao = new FileWriter(filenameRazao);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerRazao.writeNewFile(ResumoTxt.toString());
		}
		
		if(logs){
			String filenameLogs = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRMPrincipal.optString("contabilidade") + "/Arquivos/RESUMO_LOGS_IMPORTACAO_" + tipoLancamento + "_" + nomeEmpresa + "_"+codEmpresa +idLoteResumo+".csv";
			FileWriter writerLogs = new FileWriter(filenameLogs);
			// writerRazao.writeNewFile(ResumoTxt.toString());
			writerLogs.writeNewFile(logsTxt.toString());
		}

		//-------------------------------------------------------------------------------------
		// GERA ARQUIVO COM CONTAS NAO ENCONTRADAS
		//-------------------------------------------------------------------------------------
		String filename = backupDirName + "/ARQUIVO_APOIO_" + tipoLancamento + ".csv";
		// Cria o arquivo de DE-PARA FORNECEDOR
		FileWriter writer = new FileWriter(filename);
		writer.writeNewFile(txtDePara.toString());

		Iterator ite = mapaLote.keySet().iterator();
		while (ite.hasNext()) {
			String key = (String)ite.next();
			ttLote ttLot = (ttLote)mapaLote.get(key);
			// =======================================================================================
			// * elimina da tabela IO_MOVIMENTO os movimentos deste LOTE para evitar sujeira na base *
			// =======================================================================================
			lote = ttLot.lote;     

  			
			ultimoJS = new JSONObject();
			ultimoJS.put("LOTE", lote);
			ultimoJS.put("DOCUMENTO", "");
			ultimoJS.put("CODEMPRESA", codEmpresa);
			ultimoJS.put("NOMEEMPRESA", nomeEmpresa);
			ultimoJS.put("DATAMOVIMENTO", "");
			ultimoJS.put("TIPOMOVIMENTO", "");
			ultimoJS.put("TIPOLANCAMENTO", "");
			ultimoJS.put("CONTADEBITO", "LOTE_ENCERRADO");
			ultimoJS.put("CONTACREDITO", "LOTE_ENCERRADO");
			ultimoJS.put("HISTORICO", ttLot.tipoPlanilha);
			ultimoJS.put("VALORLIQUIDACAO", 0);
			ultimoJS.put("VALORDOCUMENTO", 0);
			ultimoJS.put("VALORDESCONTO", 0);
			ultimoJS.put("VALORJUROS", 0);
			ultimoJS.put("VALORMULTA", 0);
			ultimoJS.put("NOMEPORTADOR", "");
			ultimoJS.put("CENTROCUSTO", "");
			ultimoJS.put("NATUREZACONTABIL", "");
			ultimoJS.put("NOMEORIGEM", "");
			ultimoJS.put("CPFCNPJ", "");
			ultimoJS.put("SERIE", "");
			ultimoJS.put("STATUSMOVIMENTO", 0);
			ultimoJS.put("CHAVE","LOTE_ENCERRADO " + lote );
			ultimoJS.put("CLASSIFICACAO", "LOTE_ENCERRADO");
			ultimoJS.put("STATUSMOVIMENTO", 1);
			records.put(ultimoJS);
			// Resumo Planilha
			try {
				String dirName1 = dirName.substring(0, dirName.lastIndexOf("/"))+"/DePara/";
				File file = new File(dirName1);
				try {
					String diretorio = dirName1;
					File file2 = new File(diretorio);
					File[] files = file2.listFiles();
					if (FileUtil.dirHasFiles(diretorio)) {
						for (File fl: files) {
							if (fl.isFile()){
								if(fl.getName().contains(lote) && fl.getName().toLowerCase().endsWith(".csv") && !fl.getName().startsWith("OK_") ){
									// ELIMINA ARQUIVO IMPORTADO
									file = new File(dirName1);
									if (file.exists()){
										FileUtil.deleteFile(dirName1+fl.getName());
									}
								}
							}
						}
					}
				} catch (Exception ee) {
					logger.logError(ee);
				}
			}catch (Exception e) {
				logger.logError(e);
			}
		}
	} catch (Exception ee) {
		logger.logError("EndpointA: ", ee);
	} finally {
	
		try {
			if (dbIOCont != null) {
				dbIOCont.closeConnection();
			}
			if (dbIODepara != null) {
				dbIODepara.closeConnection();
			}
		} catch (Exception ee) {}
	}
	return records;
}

class ttLote {
	public String lote;
	public String tipoPlanilha;
	public ttLote(){}
	public ttLote(ttLote tt){
		lote=tt.lote;
		tipoPlanilha=tt.tipoPlanilha;		
	}
}

class ttArquivo {
	public String arquivo;
	public String abas;
	public ttArquivo(){}
	public ttArquivo(ttArquivo tt){
		arquivo=tt.arquivo;
		abas=tt.abas;
	}
}

class ttDocumento {
    public String documento;
	public double valorDocumento;
     public ttDocumento(){}
    public ttDocumento(ttDocumento ttD){
        documento = ttD.documento;
 		valorDocumento  = ttD.valorDocumento;
    }
}
class ttJuros {
	public String documento;
	public double valorJur;
	public int valorLido;
	public ttJuros(){}
	public ttJuros(ttJuros ttJ){
		documento = ttJ.documento;
		valorLido = ttJ.valorLido;
		valorJur  = ttJ.valorJur;
	}
}

class ttDesconto {
	public String documento;
	public double valorDesc;
	public int valorLido;
	public ttDesconto(){}
	public ttDesconto(ttDesconto ttD){
		documento  = ttD.documento;
		valorDesc  = ttD.valorDesc;
		valorLido  = ttD.valorLido;
	}
}

class ttPlano {
	public String contaContabil;
	public String descricaoPlano;
	public String contaAnalitica;
	public ttPlano(){}
	public ttPlano(ttPlano ttP){
		contaContabil = ttP.contaContabil;
		descricaoPlano = ttP.descricaoPlano;
		contaAnalitica = ttP.contaAnalitica;
	}
}

class ttFornecedor {
	public String nomeOrigem;
	public String contaMovimento;
	public ttFornecedor(){}
	public ttFornecedor(ttFornecedor ttF){
		nomeOrigem 	 = ttF.nomeOrigem;
		contaMovimento = ttF.contaMovimento;
	}
}



public String verificaSeparador(String separadorCsv, String dirName, String extensao, SysProperties props, InoutLogger logger) {

	try {
		if(extensao.contains("CSV")) {

			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if(memFile.getFilename().startsWith("OK_DeParaConta__")) importaDePara(memFile, dirName, extensao, logger, props);
				if (memFile.getFilename().toUpperCase().contains("CSV")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length < fields2.length) { separadorCsv = ","; break; }
								if(fields1.length > fields2.length) { separadorCsv = ";"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
		
		
		
		if(extensao.contains("TXT")) {
			FilesLoader fileLoader2 = new FilesLoader(dirName, extensao, null, true, logger);
			fileLoader2.loadFiles();
			for (MemoryFile memFile: fileLoader2.getMemFiles()) {
				if (memFile.getFilename().toUpperCase().endsWith(".TXT")) {
					while (memFile.hasNextLine()) {
						try {
							String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line).replaceAll("\"","");
							if (line.length() < 10) return separadorCsv;
							String [] fields1 = line.split(";");
							String [] fields2 = line.split(",");
							String [] fields3 = line.split("\t");
							if(fields1.length > 0 && fields2.length > 0){
								if(fields1.length > fields2.length && fields1.length > fields3.length) { separadorCsv = ";"; break; }
								if(fields2.length > fields1.length && fields2.length > fields3.length) { separadorCsv = ","; break; }
								if(fields3.length > fields1.length && fields3.length > fields2.length) { separadorCsv = "\t"; break; }
							}
						}
						catch(Exception xx) {}
					}
					return separadorCsv;
				}
			}
		}
	
	}
	 catch(Exception xx) {}
	
	return separadorCsv;


}

public void criaMovimento(DataBase dbIO, JSONObject recordRec, String chave, JSONObject js) {
	if (recordRec != null)  {
		try {
			updateMovimento(dbIO, js);
			/*if (js.has("idRoteiro")) {
				try {
					updateArquivo(dbIO, js);
				} catch(Exception ex){}
			}*/
		} catch (Exception eUpdateMovimento) {						 
			logger.logError("EndpointB: Erro ao Atualizar Movimento", eUpdateMovimento);
		}
	} else {
		try {
			insertMovimento(dbIO, js); 
			/*if (js.has("idRoteiro")) {
				try {
					insertArquivo(dbIO, js);
				} catch(Exception ex) {}
			}*/
				
		} catch (Exception eInsertMovimento) { 						 
			logger.logError("EndpointB: Erro ao fazer insert no Movimento", eInsertMovimento);
		}
	}
}

public int getIndiceRoteiro(String nomeCampo, JSONObject roteiroIndice) {
	int validaCampo = -1;
	try {
		if (!roteiroIndice.optString(nomeCampo).equals("")) {
			try {
				validaCampo = Integer.parseInt(roteiroIndice.optString(nomeCampo).replaceAll("@","").trim());
			}
			catch (Exception xx) { validaCampo = -1;}
		}
	}
	catch (Exception xx) {validaCampo = -1;}
	return  validaCampo;
}


public HashMap geralancamentoExtraInterno(HashMap mapaVariavel, ttMovimentoPadrao ttMov2, String chave,boolean gerarApenasValorDocumento, int complemento , String textoComplemento, String classificacao){
	ttMovimentoPadrao ttMov4      = (ttMovimentoPadrao)mapaVariavel.get(chave);
	if (ttMov4 == null) {
		ttMov4 = new ttMovimentoPadrao(ttMov2);
		ttMov4.chave                    = chave;
		if(gerarApenasValorDocumento){
			ttMov4.valorDesconto            = 0;
			ttMov4.valorMulta               = 0;
			ttMov4.valorJuros               = 0;
		}
		ttMov4.classificacao            = classificacao;
		switch(complemento){
			case 1: ttMov4.complemento01 = textoComplemento; break;
			case 2: ttMov4.complemento02 = textoComplemento; break;
			case 3: ttMov4.complemento03 = textoComplemento; break;
			case 4: ttMov4.complemento04 = textoComplemento; break;
			case 5: ttMov4.complemento05 = textoComplemento; break;
			case 6: ttMov4.complemento06 = textoComplemento; break;
		}
		mapaVariavel.put(chave, ttMov4);
	}
	return mapaVariavel;
}


public JSONObject getAlternativeDataInt (JSONObject objIn, MemoryFile memFile) throws Exception {
	JSONObject response	= new JSONObject();
	String validar		= objIn.optString("validar");
	String [] validaArr	= validar.split(";");
	String changeIt		= "";
	String changeText	= "nomeOrigem;documento;complemento01;complemento02;complemento03;complemento04;complemento05;complemento06;complemento07;complemento08;complemento09;complemento10;nomePortador";
	String changeDate	= "dataMovimento";
	String changeValue	= "valorDocumento;valorPagamento;valorJuros;valorDesconto;valorMulta";

	for (String parameter : validaArr) {
		response.put(parameter,	"");

		// String indiceAux = "";
		String indiceAux = getColunaAlternativa(parameter,	objIn);
		if (!indiceAux.equals("")) {
			if (changeDate.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String dataStrAux = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						if (!dataStrAux.equals("")) {
							String dataMovAux = getCampoDate(dataStrAux);
							if (dataMovAux.contains("/")) {
								String dataAlternativa = getCampoDate(dataStrAux);
								response.put(parameter,	dataAlternativa);
								response.put("dataLote", dataAlternativa);
								changeIt = changeIt+";"+parameter;
								
								//feito pra que as proximas iteracoes ja tenham o dado atualizado
								objIn.put(parameter, dataAlternativa);
							}
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Data'! "+ee.getMessage()); }
				}
				
			} else if (changeValue.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try {
						int iAux  = Integer.parseInt(indiceAux);
						if(iAux >=0){
							double valorAlternativo = memFile.getDoubleField(iAux);
							response.put(parameter, valorAlternativo);
							changeIt = changeIt+";"+parameter;
							
							//feito pra que as proximas iteracoes ja tenham o dado atualizado
							objIn.put(parameter, valorAlternativo);
						}
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Valor'! "+ee.getMessage()); }

				}
				if (indiceAux.contains(";")) {
					double valorAlternativo = 0;
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux = Integer.parseInt(k);
							valorAlternativo = valorAlternativo + memFile.getDoubleField(iAux);
						}
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Valor 02'! "+ee.getMessage());  }
					
					if (valorAlternativo != 0) {
						response.put(parameter, valorAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, valorAlternativo);
					}
				}
			} else if (changeText.contains(parameter)) {
				if(!indiceAux.contains(";")) {
					try { 
						int iAux = Integer.parseInt(indiceAux);
						String textoAlternativo = memFile.getStringFieldRemoveEspCharsUpper(iAux);
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					} catch (Exception ee) { logger.logDebug("Erro getColunaAlternativa 'Texto'! "+ee.getMessage()); }
				}
				if (indiceAux.contains(";")) {
					String textoAlternativo = "";
					
					try {
						String [] izis = indiceAux.split(";");
						for (String k : izis) {
							int iAux	 = Integer.parseInt(k);
							textoAlternativo = textoAlternativo+" - "+memFile.getStringFieldRemoveEspCharsUpper(iAux).trim();
							textoAlternativo = textoAlternativo.trim();
						}
						if (textoAlternativo.startsWith("-")) textoAlternativo = cutString(textoAlternativo, 1).trim();
						
					} catch (Exception ee) {logger.logDebug("Erro getColunaAlternativa 'Texto 02'! "+ee.getMessage());  }
					
					if (!textoAlternativo.equals("")) {
						response.put(parameter, textoAlternativo);
						changeIt = changeIt+";"+parameter;
						
						//feito pra que as proximas iteracoes ja tenham o dado atualizado
						objIn.put(parameter, textoAlternativo);
					}
				}
			} else {
				response.put(parameter, "");
				objIn.put(parameter, "");
			}
		}
	}
	
	response.put("changeIt",	changeIt);
	return response;
}




public String getRefatoraCampo(String valorOriginal, String conteudoRoteiro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String line            = objHistorico.optString("line");
    String cabecalhoRegra  = objHistorico.optString("cabecalhoRegra");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
	
	nomeArquivo = StringUtil.removeSpecialCharsToUC(nomeArquivo);


	if (conteudoRoteiro.toUpperCase().contains("#CABECALHO"))      return cabecalhoRegra;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO01"))  return complemento01;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO02"))  return complemento02;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO03"))  return complemento03;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO04"))  return complemento04;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO05"))  return complemento05;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO06"))  return complemento06;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO07"))  return complemento07;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO08"))  return complemento08;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO09"))  return complemento09;
	if (conteudoRoteiro.toUpperCase().contains("#COMPLEMENTO10"))  return complemento10;
	if (conteudoRoteiro.toUpperCase().contains("#TIPOPLANILHA"))   return tipoPlanilha;
	if (conteudoRoteiro.toUpperCase().contains("#NOMEDOARQUIVO"))   return nomeArquivo;
	if (conteudoRoteiro.toUpperCase().contains("#LINE"))  		   return line;
	if (conteudoRoteiro.toUpperCase().contains("#NUMEROABA"))      return ("ABA:" + String.valueOf(numeroAba));


    return valorOriginal;
}

public boolean buscaProtocoloConversor(String protocolo_id, LancamentosApi apiWeb, String tipoLancamento, String nomeArquivo, InoutLogger logger) throws Exception {
	logger.logDebug("ENTROU PROTOCOLOCONV");
	String diretorio = "C:/Conversor/Pdf";
	File file2 = new File(diretorio);
	
	File [] files = file2.listFiles();
	nomeArquivo = cutString(nomeArquivo, 0, ".pdf");
	
	if (FileUtil.dirHasFiles(diretorio)) {
		
		boolean notificouProtocolo = false;
			for (File fl: files) {
				// logger.logDebug("FL " + fl.getAbsolutePath()+ " | " + nomeArquivo + " | " + tipoLancamento);
				if (fl.getAbsolutePath().contains(tipoLancamento) && fl.getAbsolutePath().contains(nomeArquivo)) {
					// logger.logDebug("AQ FOI " + fl.getAbsolutePath());
					if ((fl.getAbsolutePath().contains("pagar") || fl.getAbsolutePath().contains("receber")) && fl.getAbsolutePath().contains("#") && fl.getAbsolutePath().toUpperCase().contains(".CSV") && fl.getAbsolutePath().contains("_ancora_") && fl.length() > 0){
						String diretorioArquivoCsv = "C:/inout/contabil/";
						String testeCsv = "";									
						String contabilidadeCsv = "";
						String empresaCsv = "";
						
						// logger.logDebug("ENTROU NOS PDFFFFFF");
						
						if (fl.getAbsolutePath().contains("pagar_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "pagar_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/APagar";
							} catch (Exception e) {
								logger.logDebug("ERRO AO CORTAR ARQUIVO " + e.getMessage());
							}
						}
						else if (fl.getAbsolutePath().contains("receber_")) {
							try {											
								testeCsv = cutString(fl.getAbsolutePath(), "receber_");
								contabilidadeCsv = testeCsv.substring(0, testeCsv.indexOf("_"));
								empresaCsv = testeCsv.substring(testeCsv.indexOf("_")+1);
								empresaCsv = empresaCsv.substring(0, empresaCsv.indexOf("_ancora_"));
								diretorioArquivoCsv += contabilidadeCsv + "/" + empresaCsv + "/AReceber";
							} catch (Exception e) {
								logger.logDebug("ERRO AO CORTAR ARQUIVO " + e.getMessage());
							}
						}
						String arquivoDeployStr = "";
						try {
							// mantivemos o ancora no nome do arquivo para saber que foi convertido e usado nos extratos
							arquivoDeployStr = fl.getAbsolutePath().substring(fl.getAbsolutePath().indexOf("_ancora_"));
						} catch (Exception e) {
							logger.logDebug("NAOCRIOURODACONVERSOR " + e.getMessage());
						}
						logger.logDebug("DIRETORIOS " + diretorioArquivoCsv + " | " + arquivoDeployStr);
						if (!arquivoDeployStr.equals("")) {
							File arquivoDeploy  = new File(diretorioArquivoCsv + "/" + arquivoDeployStr);
							logger.logDebug("COPIOUARQUIVO " + arquivoDeploy.getName());
							FileUtil.copyFolder(fl, arquivoDeploy);
							
							try { 
								FileUtil.deleteFile(fl);
							} catch (Exception XX) {}
						}
						if (!notificouProtocolo) {
							notificouProtocolo = true;
							String atualizaStatus = atualizaStatusProtocoloOic(apiWeb, fl, "0", "Estamos convertendo os PDFs.",  logger);
						}
						continue;
					}
				}
			}
		if (notificouProtocolo) return true;
	}
	return false;
}

public String atualizaStatusProtocoloOic(LancamentosApi apiWeb, File fl,  String statusProtocolo, String mensagem, InoutLogger logger) throws Exception {

    try {
		 String protocolo_id = cutString(fl.getName().toUpperCase(), fl.getName().toUpperCase().lastIndexOf("_ID")+3, "_");
		 if (fl.getName().toUpperCase().contains("OUD_ID"))  protocolo_id = cutString(fl.getName().toUpperCase(), "OUD_ID", "_");
		 if (fl.getName().toUpperCase().contains("OUD__ID")) protocolo_id = cutString(fl.getName().toUpperCase(), "OUD__ID", "_");
		// roda requisicao para atualizar o satus do protocolo
		JSONObject bodyProtocolo = new JSONObject();
		bodyProtocolo.put("status", statusProtocolo).put("mensagem", mensagem);
		String atualizaStatus = apiWeb.atualizaStatusProtocolo("https://integrador-contabil.herokuapp.com", protocolo_id, bodyProtocolo);
		return atualizaStatus;
	} catch (Exception xx) {
		logger.logDebug(" Erro ao Atualizar Status " + xx);
		return "";
	}
 
}






















































//## CODIGO GERADO A PARTIR DAS REGRAS NO SALESFORCE ##
//## NAO ALTERAR DAQUI ATE O FINAL DO SCRIPT!!!!     ##
public JSONObject getRoteiro() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2023-1094472");
    js.put("idRoteiro", "a0A6R000017tjuk");
    js.put("idEmpresa", "a0q6R000008aFY8QAM");
    js.put("idContabilidade", "a091C00002DG3FG");
    js.put("CnpjContabilidade", "04.952.221/0001-10");
    js.put("CnpjEmpresa", "72.096.100/0001-74");
    js.put("fornecedor", "6");
    js.put("dataMovimento", "1");
    js.put("portador", "4");
    js.put("documentoNF", "10");
    js.put("valorDocumento", "8");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "");
    js.put("complemento01", "6");
    js.put("complemento02", "4");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("valorAlternativo", "");
    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("dataFake", "");

    js.put("Abas_Especificas", "");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Servicecontabilidade");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "TRUE");
    js.put("cruzaExtrato", "FALSE");
    js.put("empresa", "Micromazzaindustriade");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "SCI UNICO");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "FALSE");
    js.put("ValidaFornecedorFiscal", "0");
    js.put("Integracao_contratos", "false");
    js.put("Usa_Filial_Questor", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "PRINCIPAL");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS PAGAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");

    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("especiaisBaixaFiscal", "");
    js.put("Arredonda", "false");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");
    js.put("Coluna_Valor_Duplicata_Dominio", "9");
    js.put("delimitadorDoArquivo", "");
    js.put("agrupaArquivos", "FALSE");

    js.put("X001_ROB", "");
    js.put("X002_Despesas", "");
    js.put("X003_Despesas_Detalhe", "");
    js.put("X004_Geracao_Caixa_Mes", "");
    js.put("X005_Geracao_Caixa_Acumulado", "");
    js.put("X006_Despesas_sobre_Faturamento", "");
    js.put("X007_Lucro", "");
    js.put("X008_Deducoes_Receitas", "");
    js.put("X009_CMV", "");
    js.put("X010_CPV", "");
    js.put("X011_CSP", "");
    js.put("X012_Indicador", "");
    js.put("X013_Indicador", "");
    js.put("X014_Indicador", "");
    js.put("X015_Indicador", "");
    js.put("X016_Indicador", "");
    js.put("X017_Indicador", "");
    js.put("X018_Indicador", "");
    js.put("X019_Indicador", "");
    js.put("X020_Indicador", "");
    js.put("X021_Indicador", "");

    js.put("X015_Label", "");
    js.put("X016_Label", "");
    js.put("X017_Label", "");
    js.put("X018_Label", "");
    js.put("X019_Label", "");
    js.put("X020_Label", "");
    js.put("Email_Logo", "");
    js.put("BuscaCnpjCRM", "FALSE");
    js.put("Idioma", "PORTUGUES");
    js.put("Ordem_dos_Indicadores", "7, 12, 21, 1, 8, 9, 10, 11, 13, 2, 3, 6, 4, 5, 15, 16, 18, 14, 17, 19, 20");
    js.put("Rotulo_Complemento_01", "CNPJ");
    js.put("Rotulo_Complemento_02", "PORTADOR");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Gera_LOG", "false");
    js.put("Gera_LOG_PARAMETROS", "");

    return js;
}

public JSONObject getRoteiroZZPADRAOOTTIMIZZAPAG2() {
    JSONObject js = new JSONObject();
    js.put("codigo", "ROT-2021-1016997");
    js.put("idRoteiro", "a0A6R000017tjuk");
    js.put("idEmpresa", "a0q6R000007KGdjQAG");
    js.put("idContabilidade", "a091500001BVcOf");
    js.put("CnpjContabilidade", "10.000.000/0000-0");
    js.put("CnpjEmpresa", "1");
    js.put("usarComplementoVencimento", "NAO USAR");
    js.put("usarComplementoParcela", "NAO USAR");
    js.put("fornecedor", "2");
    js.put("dataMovimento", "0");
    js.put("portador", "6");
    js.put("documentoNF", "1");
    js.put("valorDocumento", "4");
    js.put("valorJuros", "");
    js.put("valorDesconto", "");
    js.put("valorMulta", "");
    js.put("valorPagamento", "5");
    js.put("complemento01", "3");
    js.put("complemento02", "7");
    js.put("complemento03", "");
    js.put("complemento04", "");
    js.put("complemento05", "");
    js.put("complemento06", "");
    js.put("centroCusto", "");
    js.put("dataFake", "");

    js.put("cpfCnpj", "");
    js.put("gravaCnpjMovimento", "FALSE");
    js.put("cnpjSomenteNumeros", "FALSE");
    js.put("valorAlternativo", "");
    js.put("Abas_Especificas", "0");
    js.put("classificaFornec", "");
    js.put("classificaPlano", "");
    js.put("contaFixaCredito", "");
    js.put("contaFixaDebito", "");
    js.put("contaFixaDesconto", "");
    js.put("contaFixaJuros", "");
    js.put("contaFixaMulta", "");
    js.put("contabilidade", "Servicecontabilidade");
    js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
    js.put("Conta_Fixa_Cruzamento_Extrato", "");
    js.put("Cruza_Extrato_com_Extrato", "false");
    js.put("cruzaExtrato", "false");
    js.put("empresa", "Micromazzaindustriade");
    js.put("empresaDir", "");
    js.put("erpContabilidade", "QUESTOR");
    js.put("Forcar_Partida_Dobrada", "FALSE");
    js.put("Forcar_Partida_Simples", "FALSE");
    js.put("Realizar_Busca_Plano", "FALSE");
    js.put("geraGerencial", "FALSE");
    js.put("Integracao_fiscal", "false");
    js.put("Integracao_contratos", "false");
    js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
    js.put("movimentoPortador", "PARTIDA DOBRADA");
    js.put("naoZerarValores", "FALSE");
    js.put("lerAposPrincipal", "");
    js.put("campoLinhaPrincipal", "VALOR DOCUMENTO");
    js.put("nomeRelatorioRef", "OFICIAL PLANILHA PADRAO OTTIMIZZA");
    js.put("Planilhas_Padroes", "");
    js.put("statusRoteiro", "EM DESENVOLVIMENTO");
    js.put("tipoArquivo", ".XLSX - EXCEL");
    js.put("tipoIntegracao", "CONTAS PAGAS");
    js.put("fazerShrink", "FALSE");
    js.put("colunaShrink", "0");
    js.put("dupliNaoEncontContabil", "FALSE");
    js.put("Conta_Dupl_Contabil", "");
    js.put("Aloca_Checknum", "FALSE");
    js.put("Rotulo_Complemento_01", "");
    js.put("Rotulo_Complemento_02", "");
    js.put("Rotulo_Complemento_03", "");
    js.put("Rotulo_Complemento_04", "");
    js.put("Rotulo_Complemento_05", "");
    js.put("Colunas_de_Valores_Extras", "");
    js.put("Rotulos_Para_Valores_Extras", "");
    js.put("Colunas_de_Portadores_Extras", "");

    return js;
}

public String getTipoPlanilha(String line, String tipoPlanilha, String nomeArquivo, JSONObject jDadosObj) {
    boolean achouTipo = true;
    achouTipo = false;
    if (achouTipo) return "";
    achouTipo = true;
    String [] campos2 = "DATA PAGAMENTO;DOCUMENTO;FORNECEDOR;DETALHES DO PAGAMENTO".split(";");
    for (int x=0;x<campos2.length;x++) {
        if (!line.contains(campos2[x])) { 
            achouTipo = false; break; }
    }
    if (achouTipo) return "ZZPADRAOOTTIMIZZAPAG2";
    achouTipo = true;
    return tipoPlanilha;
}
public String getConta(String nomeOrigem, String documento, String nomePortador,
                       String complemento01, String complemento02, String complemento03, 
                       String nomeArquivo, String codCentroCusto) {
    String conta = "";
    String complemento04 = "";
    String complemento05 = "";
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getConta09(String contaMovimento, String nomeOrigem, String documento, 
                       String nomePortador, String complemento01, String complemento02, 
                       String complemento03, String nomeArquivo, String codCentroCusto) {
    String conta = contaMovimento;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomePortador).contains("EM BRANCO")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).startsWith("MO")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).contains("DEPREC")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (documento.contains("194580") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("DESP01")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("DARF01")) {
        conta = "171";
        contaMovimento = "171";
    }
    if (documento.contains("IRASS01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "184";
        contaMovimento = "184";
    }
    if (documento.contains("CRF11") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "636";
        contaMovimento = "636";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("CRF12")) {
        conta = "636";
        contaMovimento = "636";
    }
    if (documento.contains("DISTRIB") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "791";
        contaMovimento = "791";
    }
    if (documento.contains("INCOICE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("INVOICE")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (documento.contains("CERTIDAO") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (documento.contains("ADIANT") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("CRF03")) {
        conta = "636";
        contaMovimento = "636";
    }
    if (documento.contains("RESC") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (documento.contains("DARF04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("CRF04")) {
        conta = "636";
        contaMovimento = "636";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("IRASS04")) {
        conta = "184";
        contaMovimento = "184";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("CRF05")) {
        conta = "636";
        contaMovimento = "636";
    }
    if (documento.contains("IRASS05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "184";
        contaMovimento = "184";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("10052784")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (documento.contains("FUNAD05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (documento.contains("2724416170") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("340838")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (documento.contains("DESP") && tipoPlanilha.contains("MOVIMENTO") && documento.contains("PATRI")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (documento.contains("LUIZ") && documento.contains("DESP") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("VISIT") && documento.contains("DESP")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (nomeOrigem.contains("22") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0020")) {
        conta = "171";
        contaMovimento = "171";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("DESP") && documento.contains("WALTE")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("/") && nomeOrigem.contains("555") && nomeOrigem.contains("55")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("999") && nomeOrigem.contains("9999") && nomeOrigem.contains("99")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (nomeOrigem.contains("351") && nomeOrigem.contains("0001") && nomeOrigem.contains("87") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("117")) {
        conta = "1027519P";
        contaMovimento = "1027519P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("125") && nomeOrigem.contains("73") && nomeOrigem.contains("0001") && nomeOrigem.contains("433")) {
        conta = "2846P";
        contaMovimento = "2846P";
    }
    if (nomeOrigem.contains("169") && nomeOrigem.contains("558") && nomeOrigem.contains("0001") && nomeOrigem.contains("03") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1681958P";
        contaMovimento = "1681958P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0001") && nomeOrigem.contains("36") && nomeOrigem.contains("214") && nomeOrigem.contains("121")) {
        conta = "7198P";
        contaMovimento = "7198P";
    }
    if (nomeOrigem.contains("121") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("214") && nomeOrigem.contains("0003") && nomeOrigem.contains("06")) {
        conta = "1031556P";
        contaMovimento = "1031556P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("01") && nomeOrigem.contains("0055") && nomeOrigem.contains("788") && nomeOrigem.contains("331")) {
        conta = "3155P";
        contaMovimento = "3155P";
    }
    if (nomeOrigem.contains("369") && nomeOrigem.contains("09") && nomeOrigem.contains("0001") && nomeOrigem.contains("028") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685392P";
        contaMovimento = "1685392P";
    }
    if (nomeOrigem.contains("428") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("11") && nomeOrigem.contains("0005") && nomeOrigem.contains("307")) {
        conta = "3086P";
        contaMovimento = "3086P";
    }
    if (nomeOrigem.contains("307") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("89") && nomeOrigem.contains("0010") && nomeOrigem.contains("428")) {
        conta = "11454P";
        contaMovimento = "11454P";
    }
    if (nomeOrigem.contains("50") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("307") && nomeOrigem.contains("428") && nomeOrigem.contains("0020")) {
        conta = "15324P";
        contaMovimento = "15324P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0022") && nomeOrigem.contains("307") && nomeOrigem.contains("12") && nomeOrigem.contains("428")) {
        conta = "1630121P";
        contaMovimento = "1630121P";
    }
    if (nomeOrigem.contains("694") && nomeOrigem.contains("0001") && nomeOrigem.contains("57") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("920")) {
        conta = "2697P";
        contaMovimento = "2697P";
    }
    if (nomeOrigem.contains("039") && nomeOrigem.contains("0001") && nomeOrigem.contains("01") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("889")) {
        conta = "1685636P";
        contaMovimento = "1685636P";
    }
    if (nomeOrigem.contains("579") && nomeOrigem.contains("31") && nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("905")) {
        conta = "9700P";
        contaMovimento = "9700P";
    }
    if (nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("989") && nomeOrigem.contains("926") && nomeOrigem.contains("51")) {
        conta = "1683628P";
        contaMovimento = "1683628P";
    }
    if (complemento01.contains("0009") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("273") && complemento01.contains("320") && complemento01.contains("35")) {
        conta = "1634590P";
        contaMovimento = "1634590P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("09") && complemento01.contains("0001") && complemento01.contains("708") && complemento01.contains("625")) {
        conta = "6673P";
        contaMovimento = "6673P";
    }
    if (complemento01.contains("708") && complemento01.contains("625") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0005") && complemento01.contains("24")) {
        conta = "15273P";
        contaMovimento = "15273P";
    }
    if (nomeOrigem.contains("17") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("815") && nomeOrigem.contains("619") && nomeOrigem.contains("0001")) {
        conta = "1683623P";
        contaMovimento = "1683623P";
    }
    if (complemento01.contains("0001") && complemento01.contains("03") && complemento01.contains("341") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("899")) {
        conta = "1640446P";
        contaMovimento = "1640446P";
    }
    if (nomeOrigem.contains("440") && nomeOrigem.contains("0001") && nomeOrigem.contains("62") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("016")) {
        conta = "14794P";
        contaMovimento = "14794P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("19") && nomeOrigem.contains("773") && nomeOrigem.contains("152") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1618641P";
        contaMovimento = "1618641P";
    }
    if (complemento01.contains("180") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("53") && complemento01.contains("0001") && complemento01.contains("337")) {
        conta = "2664P";
        contaMovimento = "2664P";
    }
    if (complemento01.contains("0001") && complemento01.contains("166") && complemento01.contains("659") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("02")) {
        conta = "656";
        contaMovimento = "656";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("384") && complemento01.contains("944") && complemento01.contains("0001") && complemento01.contains("60")) {
        conta = "1685393P";
        contaMovimento = "1685393P";
    }
    if (complemento01.contains("0001") && complemento01.contains("60") && complemento01.contains("615") && complemento01.contains("601") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640596P";
        contaMovimento = "1640596P";
    }
    if (complemento01.contains("934") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("886") && complemento01.contains("23") && complemento01.contains("0001")) {
        conta = "6473P";
        contaMovimento = "6473P";
    }
    if (complemento01.contains("84") && complemento01.contains("0001") && complemento01.contains("344") && complemento01.contains("939") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2962P";
        contaMovimento = "2962P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("402") && complemento01.contains("438") && complemento01.contains("0001") && complemento01.contains("50")) {
        conta = "1681186P";
        contaMovimento = "1681186P";
    }
    if (complemento01.contains("0001") && complemento01.contains("87") && complemento01.contains("191") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("869")) {
        conta = "6492P";
        contaMovimento = "6492P";
    }
    if (complemento01.contains("162") && complemento01.contains("0001") && complemento01.contains("00") && complemento01.contains("234") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640343P";
        contaMovimento = "1640343P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("286") && complemento01.contains("25") && complemento01.contains("425")) {
        conta = "1640640P";
        contaMovimento = "1640640P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("44") && complemento01.contains("0001") && complemento01.contains("954") && complemento01.contains("729")) {
        conta = "6490P";
        contaMovimento = "6490P";
    }
    if (complemento01.contains("846") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("67") && complemento01.contains("0001") && complemento01.contains("301")) {
        conta = "1428047P";
        contaMovimento = "1428047P";
    }
    if (complemento01.contains("84") && complemento01.contains("0007") && complemento01.contains("233") && complemento01.contains("268") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1627069P";
        contaMovimento = "1627069P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("309") && complemento01.contains("536") && complemento01.contains("0001") && complemento01.contains("80")) {
        conta = "11809P";
        contaMovimento = "11809P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("00") && complemento01.contains("390") && complemento01.contains("209") && complemento01.contains("0001")) {
        conta = "1687748P";
        contaMovimento = "1687748P";
    }
    if (complemento01.contains("815") && complemento01.contains("56") && complemento01.contains("0001") && complemento01.contains("460") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "730";
        contaMovimento = "730";
    }
    if (complemento01.contains("73") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("619") && complemento01.contains("747") && complemento01.contains("0001")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("417") && complemento01.contains("345") && complemento01.contains("0001") && complemento01.contains("09")) {
        conta = "1640319P";
        contaMovimento = "1640319P";
    }
    if (complemento01.contains("0004") && complemento01.contains("74") && complemento01.contains("977") && complemento01.contains("448") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3603P";
        contaMovimento = "3603P";
    }
    if (complemento01.contains("83") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("247") && complemento01.contains("576") && complemento01.contains("0001")) {
        conta = "1640391P";
        contaMovimento = "1640391P";
    }
    if (complemento01.contains("0001") && complemento01.contains("18") && complemento01.contains("448") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("275")) {
        conta = "1640372P";
        contaMovimento = "1640372P";
    }
    if (complemento01.contains("0017") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("558") && complemento01.contains("157") && complemento01.contains("20")) {
        conta = "6203P";
        contaMovimento = "6203P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0797") && complemento01.contains("558") && complemento01.contains("157") && complemento01.contains("53")) {
        conta = "1688333P";
        contaMovimento = "1688333P";
    }
    if (complemento01.contains("691") && complemento01.contains("70") && complemento01.contains("0001") && complemento01.contains("745") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "878499P";
        contaMovimento = "878499P";
    }
    if (complemento01.contains("0001") && complemento01.contains("880") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("815") && complemento01.contains("80")) {
        conta = "878466P";
        contaMovimento = "878466P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("819") && complemento01.contains("76") && complemento01.contains("0001") && complemento01.contains("005")) {
        conta = "9863P";
        contaMovimento = "9863P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("855") && complemento01.contains("72") && complemento01.contains("885")) {
        conta = "4149P";
        contaMovimento = "4149P";
    }
    if (complemento01.contains("890") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("04") && complemento01.contains("0001") && complemento01.contains("199")) {
        conta = "1683647P";
        contaMovimento = "1683647P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("034") && complemento01.contains("56") && complemento01.contains("0001") && complemento01.contains("433")) {
        conta = "397";
        contaMovimento = "397";
    }
    if (complemento01.contains("36") && complemento01.contains("094") && complemento01.contains("114") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1640888P";
        contaMovimento = "1640888P";
    }
    if (complemento01.contains("65") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("094") && complemento01.contains("114") && complemento01.contains("0019")) {
        conta = "1684596P";
        contaMovimento = "1684596P";
    }
    if (complemento01.contains("245") && complemento01.contains("42") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("071")) {
        conta = "1625158P";
        contaMovimento = "1625158P";
    }
    if (complemento01.contains("27") && complemento01.contains("0001") && complemento01.contains("503") && complemento01.contains("517") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640467P";
        contaMovimento = "1640467P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("50") && complemento01.contains("0001") && complemento01.contains("766") && complemento01.contains("054")) {
        conta = "1032939P";
        contaMovimento = "1032939P";
    }
    if (complemento01.contains("76") && complemento01.contains("0001") && complemento01.contains("159") && complemento01.contains("775") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2284";
        contaMovimento = "2284";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("877") && complemento01.contains("968") && complemento01.contains("69") && complemento01.contains("0001")) {
        conta = "1683625P";
        contaMovimento = "1683625P";
    }
    if (nomeOrigem.contains("178") && nomeOrigem.contains("880") && nomeOrigem.contains("0001") && nomeOrigem.contains("41") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1628212P";
        contaMovimento = "1628212P";
    }
    if (complemento01.contains("85") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("237") && complemento01.contains("744") && complemento01.contains("0001")) {
        conta = "1688337P";
        contaMovimento = "1688337P";
    }
    if (complemento01.contains("08") && complemento01.contains("0001") && complemento01.contains("499") && complemento01.contains("270") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "14324P";
        contaMovimento = "14324P";
    }
    if (complemento01.contains("275") && complemento01.contains("0001") && complemento01.contains("16") && complemento01.contains("914") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640360P";
        contaMovimento = "1640360P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("896") && complemento01.contains("03") && complemento01.contains("729") && complemento01.contains("0001")) {
        conta = "3153P";
        contaMovimento = "3153P";
    }
    if (complemento01.contains("0001") && complemento01.contains("912") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("543") && complemento01.contains("36")) {
        conta = "1640837P";
        contaMovimento = "1640837P";
    }
    if (complemento01.contains("221") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("10") && complemento01.contains("952")) {
        conta = "3946P";
        contaMovimento = "3946P";
    }
    if (complemento01.contains("0001") && complemento01.contains("34") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("788") && complemento01.contains("971")) {
        conta = "1640335P";
        contaMovimento = "1640335P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("33") && complemento01.contains("0001") && complemento01.contains("382") && complemento01.contains("555")) {
        conta = "1640565P";
        contaMovimento = "1640565P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("564") && complemento01.contains("122") && complemento01.contains("0003") && complemento01.contains("96")) {
        conta = "1640567P";
        contaMovimento = "1640567P";
    }
    if (complemento01.contains("714") && complemento01.contains("0008") && complemento01.contains("25") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("570")) {
        conta = "5969P";
        contaMovimento = "5969P";
    }
    if (complemento01.contains("27") && complemento01.contains("0001") && complemento01.contains("561") && complemento01.contains("632") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "6939P";
        contaMovimento = "6939P";
    }
    if (complemento01.contains("188") && complemento01.contains("0001") && complemento01.contains("60") && complemento01.contains("827") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640822P";
        contaMovimento = "1640822P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("65") && complemento01.contains("0001") && complemento01.contains("061") && complemento01.contains("646")) {
        conta = "2939P";
        contaMovimento = "2939P";
    }
    if (complemento01.contains("92") && complemento01.contains("0001") && complemento01.contains("105") && complemento01.contains("320") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1688338P";
        contaMovimento = "1688338P";
    }
    if (complemento01.contains("0001") && complemento01.contains("121") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("64") && complemento01.contains("324")) {
        conta = "1680935P";
        contaMovimento = "1680935P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("667") && complemento01.contains("140") && complemento01.contains("0001") && complemento01.contains("76")) {
        conta = "1640426P";
        contaMovimento = "1640426P";
    }
    if (complemento01.contains("694") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("200") && complemento01.contains("97") && complemento01.contains("0001")) {
        conta = "17121P";
        contaMovimento = "17121P";
    }
    if (complemento01.contains("67") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("216") && complemento01.contains("874")) {
        conta = "5085P";
        contaMovimento = "5085P";
    }
    if (complemento01.contains("371") && complemento01.contains("610") && complemento01.contains("0002") && complemento01.contains("69") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "878908P";
        contaMovimento = "878908P";
    }
    if (complemento01.contains("971") && complemento01.contains("55") && complemento01.contains("684") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2927P";
        contaMovimento = "2927P";
    }
    if (complemento01.contains("930") && complemento01.contains("92") && complemento01.contains("0001") && complemento01.contains("077") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683613P";
        contaMovimento = "1683613P";
    }
    if (complemento01.contains("0001") && complemento01.contains("73") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("097") && complemento01.contains("542")) {
        conta = "1640336P";
        contaMovimento = "1640336P";
    }
    if (complemento01.contains("230") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("427") && complemento01.contains("0002") && complemento01.contains("06")) {
        conta = "1640635P";
        contaMovimento = "1640635P";
    }
    if (complemento01.contains("825") && complemento01.contains("57") && complemento01.contains("0004") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("272")) {
        conta = "1685971P";
        contaMovimento = "1685971P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("793") && complemento01.contains("289") && complemento01.contains("50") && complemento01.contains("0001")) {
        conta = "1683632P";
        contaMovimento = "1683632P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("566") && complemento01.contains("529") && complemento01.contains("16")) {
        conta = "14539P";
        contaMovimento = "14539P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("656") && complemento01.contains("068") && complemento01.contains("72")) {
        conta = "1618631P";
        contaMovimento = "1618631P";
    }
    if (complemento01.contains("0001") && complemento01.contains("022") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("909") && complemento01.contains("18")) {
        conta = "16914P";
        contaMovimento = "16914P";
    }
    if (complemento01.contains("28") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("177") && complemento01.contains("641") && complemento01.contains("0001")) {
        conta = "1025529P";
        contaMovimento = "1025529P";
    }
    if (complemento01.contains("226") && complemento01.contains("143") && complemento01.contains("28") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1030607P";
        contaMovimento = "1030607P";
    }
    if (complemento01.contains("202") && complemento01.contains("243") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("76") && complemento01.contains("0001")) {
        conta = "1640444P";
        contaMovimento = "1640444P";
    }
    if (complemento01.contains("0001") && complemento01.contains("90") && complemento01.contains("916") && complemento01.contains("611") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "17498P";
        contaMovimento = "17498P";
    }
    if (complemento01.contains("928") && complemento01.contains("759") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("66")) {
        conta = "1640728P";
        contaMovimento = "1640728P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("926") && complemento01.contains("179") && complemento01.contains("14")) {
        conta = "574205P";
        contaMovimento = "574205P";
    }
    if (complemento01.contains("0001") && complemento01.contains("115") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("11") && complemento01.contains("992")) {
        conta = "1640709P";
        contaMovimento = "1640709P";
    }
    if (complemento01.contains("05") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("006") && complemento01.contains("301") && complemento01.contains("0001")) {
        conta = "6484P";
        contaMovimento = "6484P";
    }
    if (complemento01.contains("353") && complemento01.contains("50") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("055")) {
        conta = "1035824P";
        contaMovimento = "1035824P";
    }
    if (complemento01.contains("559") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("474") && complemento01.contains("0001") && complemento01.contains("42")) {
        conta = "1640377P";
        contaMovimento = "1640377P";
    }
    if (complemento01.contains("34") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("732") && complemento01.contains("570") && complemento01.contains("0004")) {
        conta = "1687750P";
        contaMovimento = "1687750P";
    }
    if (complemento01.contains("218") && complemento01.contains("0001") && complemento01.contains("688") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("55")) {
        conta = "1640394P";
        contaMovimento = "1640394P";
    }
    if (complemento01.contains("462") && complemento01.contains("0001") && complemento01.contains("01") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("175")) {
        conta = "1681183P";
        contaMovimento = "1681183P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("506") && complemento01.contains("33") && complemento01.contains("945")) {
        conta = "11654P";
        contaMovimento = "11654P";
    }
    if (complemento01.contains("58") && complemento01.contains("0001") && complemento01.contains("946") && complemento01.contains("543") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1030688P";
        contaMovimento = "1030688P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("684") && complemento01.contains("530") && complemento01.contains("0001") && complemento01.contains("50")) {
        conta = "15352P";
        contaMovimento = "15352P";
    }
    if (complemento01.contains("662") && complemento01.contains("53") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("784")) {
        conta = "17818P";
        contaMovimento = "17818P";
    }
    if (complemento01.contains("0001") && complemento01.contains("48") && complemento01.contains("254") && complemento01.contains("800") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "10016P";
        contaMovimento = "10016P";
    }
    if (complemento01.contains("934") && complemento01.contains("01") && complemento01.contains("436") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11838P";
        contaMovimento = "11838P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("028") && complemento01.contains("237") && complemento01.contains("0001") && complemento01.contains("05")) {
        conta = "8625P";
        contaMovimento = "8625P";
    }
    if (complemento01.contains("0001") && complemento01.contains("214") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("644") && complemento01.contains("07")) {
        conta = "11536P";
        contaMovimento = "11536P";
    }
    if (complemento01.contains("285") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("621") && complemento01.contains("0001") && complemento01.contains("85")) {
        conta = "1683626P";
        contaMovimento = "1683626P";
    }
    if (complemento01.contains("511") && complemento01.contains("0001") && complemento01.contains("52") && complemento01.contains("435") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "13907P";
        contaMovimento = "13907P";
    }
    if (complemento01.contains("0002") && complemento01.contains("33") && complemento01.contains("511") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("435")) {
        conta = "5682P";
        contaMovimento = "5682P";
    }
    if (complemento01.contains("492") && complemento01.contains("058") && complemento01.contains("0001") && complemento01.contains("16") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8893P";
        contaMovimento = "8893P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("46") && complemento01.contains("0001") && complemento01.contains("988") && complemento01.contains("581")) {
        conta = "430080P";
        contaMovimento = "430080P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("594") && complemento01.contains("273") && complemento01.contains("0001") && complemento01.contains("28")) {
        conta = "1640427P";
        contaMovimento = "1640427P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("792") && complemento01.contains("179") && complemento01.contains("0001") && complemento01.contains("83")) {
        conta = "1650728P";
        contaMovimento = "1650728P";
    }
    if (complemento01.contains("501") && complemento01.contains("214") && complemento01.contains("0001") && complemento01.contains("20") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1622580P";
        contaMovimento = "1622580P";
    }
    if (complemento01.contains("82") && complemento01.contains("0001") && complemento01.contains("647") && complemento01.contains("534") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1613949P";
        contaMovimento = "1613949P";
    }
    if (complemento01.contains("36") && complemento01.contains("330") && complemento01.contains("148") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1680312P";
        contaMovimento = "1680312P";
    }
    if (complemento01.contains("0001") && complemento01.contains("34") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("576") && complemento01.contains("389")) {
        conta = "7943P";
        contaMovimento = "7943P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("49") && complemento01.contains("0001") && complemento01.contains("955") && complemento01.contains("409")) {
        conta = "1640886P";
        contaMovimento = "1640886P";
    }
    if (complemento01.contains("06") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("155") && complemento01.contains("140") && complemento01.contains("0001")) {
        conta = "1683617P";
        contaMovimento = "1683617P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40") && complemento01.contains("0001") && complemento01.contains("288") && complemento01.contains("155")) {
        conta = "1036119P";
        contaMovimento = "1036119P";
    }
    if (complemento01.contains("86") && complemento01.contains("368") && complemento01.contains("618") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1640312P";
        contaMovimento = "1640312P";
    }
    if (complemento01.contains("0001") && complemento01.contains("384") && complemento01.contains("372") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40")) {
        conta = "4265P";
        contaMovimento = "4265P";
    }
    if (complemento01.contains("786") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("85") && complemento01.contains("673")) {
        conta = "5992P";
        contaMovimento = "5992P";
    }
    if (complemento01.contains("58") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("235") && complemento01.contains("251") && complemento01.contains("0001")) {
        conta = "1026898P";
        contaMovimento = "1026898P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("915") && complemento01.contains("0001") && complemento01.contains("42") && complemento01.contains("299")) {
        conta = "1640438P";
        contaMovimento = "1640438P";
    }
    if (complemento01.contains("82") && complemento01.contains("456") && complemento01.contains("463") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0038")) {
        conta = "1034651P";
        contaMovimento = "1034651P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("663") && complemento01.contains("740") && complemento01.contains("00") && complemento01.contains("0001")) {
        conta = "1625277P";
        contaMovimento = "1625277P";
    }
    if (complemento01.contains("0001") && complemento01.contains("90") && complemento01.contains("026") && complemento01.contains("796") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5714P";
        contaMovimento = "5714P";
    }
    if (complemento01.contains("256") && complemento01.contains("90") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("493")) {
        conta = "1675226P";
        contaMovimento = "1675226P";
    }
    if (complemento01.contains("758") && complemento01.contains("24") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("677") && complemento01.contains("0001")) {
        conta = "1685637P";
        contaMovimento = "1685637P";
    }
    if (complemento01.contains("0014") && complemento01.contains("791") && complemento01.contains("896") && complemento01.contains("17") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1625476P";
        contaMovimento = "1625476P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("14") && complemento01.contains("0039") && complemento01.contains("617") && complemento01.contains("147")) {
        conta = "574469P";
        contaMovimento = "574469P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("967") && complemento01.contains("306") && complemento01.contains("03")) {
        conta = "1640891P";
        contaMovimento = "1640891P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("431") && complemento01.contains("369") && complemento01.contains("66")) {
        conta = "1617286P";
        contaMovimento = "1617286P";
    }
    if (complemento01.contains("291") && complemento01.contains("0001") && complemento01.contains("64") && complemento01.contains("825") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1613919P";
        contaMovimento = "1613919P";
    }
    if (complemento01.contains("528") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("87") && complemento01.contains("0001") && complemento01.contains("991")) {
        conta = "651838P";
        contaMovimento = "651838P";
    }
    if (complemento01.contains("07") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("902") && complemento01.contains("673")) {
        conta = "1687746P";
        contaMovimento = "1687746P";
    }
    if (complemento01.contains("0001") && complemento01.contains("30") && complemento01.contains("053") && complemento01.contains("922") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1629760P";
        contaMovimento = "1629760P";
    }
    if (complemento01.contains("086") && complemento01.contains("483") && complemento01.contains("0001") && complemento01.contains("21") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1616464P";
        contaMovimento = "1616464P";
    }
    if (complemento01.contains("746") && complemento01.contains("06") && complemento01.contains("0001") && complemento01.contains("559") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683267P";
        contaMovimento = "1683267P";
    }
    if (complemento01.contains("09") && complemento01.contains("0001") && complemento01.contains("186") && complemento01.contains("045") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1615138P";
        contaMovimento = "1615138P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("107") && complemento01.contains("422") && complemento01.contains("0001") && complemento01.contains("23")) {
        conta = "473";
        contaMovimento = "473";
    }
    if (nomeOrigem.contains("75") && nomeOrigem.contains("0001") && nomeOrigem.contains("822") && nomeOrigem.contains("142") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1687745P";
        contaMovimento = "1687745P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("868") && complemento01.contains("006") && complemento01.contains("0001") && complemento01.contains("43")) {
        conta = "1683621P";
        contaMovimento = "1683621P";
    }
    if (complemento01.contains("0001") && complemento01.contains("144") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("351") && complemento01.contains("86")) {
        conta = "1640383P";
        contaMovimento = "1640383P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("422") && complemento01.contains("181") && complemento01.contains("0001") && complemento01.contains("63")) {
        conta = "5967P";
        contaMovimento = "5967P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("62") && complemento01.contains("0001") && complemento01.contains("914") && complemento01.contains("765")) {
        conta = "3522P";
        contaMovimento = "3522P";
    }
    if (complemento01.contains("941") && complemento01.contains("18") && complemento01.contains("0001") && complemento01.contains("102") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685661P";
        contaMovimento = "1685661P";
    }
    if (complemento01.contains("87") && complemento01.contains("0003") && complemento01.contains("348") && complemento01.contains("302") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3991P";
        contaMovimento = "3991P";
    }
    if (complemento01.contains("854") && complemento01.contains("666") && complemento01.contains("93") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "5750P";
        contaMovimento = "5750P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40") && complemento01.contains("0001") && complemento01.contains("942") && complemento01.contains("478")) {
        conta = "1684649P";
        contaMovimento = "1684649P";
    }
    if (complemento01.contains("370") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("05") && complemento01.contains("0001") && complemento01.contains("147")) {
        conta = "1640835P";
        contaMovimento = "1640835P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("143") && complemento01.contains("0001") && complemento01.contains("90") && complemento01.contains("629")) {
        conta = "1682723P";
        contaMovimento = "1682723P";
    }
    if (complemento01.contains("17") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("533") && complemento01.contains("415") && complemento01.contains("0001")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (complemento01.contains("0001") && complemento01.contains("91") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("786") && complemento01.contains("902")) {
        conta = "1684199P";
        contaMovimento = "1684199P";
    }
    if (complemento01.contains("000") && complemento01.contains("167") && complemento01.contains("0793") && complemento01.contains("79") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683430P";
        contaMovimento = "1683430P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("222") && complemento01.contains("0001") && complemento01.contains("04") && complemento01.contains("109")) {
        conta = "1613974P";
        contaMovimento = "1613974P";
    }
    if (complemento01.contains("33") && complemento01.contains("053") && complemento01.contains("150") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0007")) {
        conta = "429296P";
        contaMovimento = "429296P";
    }
    if (complemento01.contains("673") && complemento01.contains("0001") && complemento01.contains("26") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("778")) {
        conta = "1029755P";
        contaMovimento = "1029755P";
    }
    if (complemento01.contains("0026") && complemento01.contains("316") && complemento01.contains("028") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("61")) {
        conta = "482";
        contaMovimento = "482";
    }
    if (complemento01.contains("122") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("96") && complemento01.contains("673")) {
        conta = "11646P";
        contaMovimento = "11646P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("896") && complemento01.contains("691") && complemento01.contains("09")) {
        conta = "16866P";
        contaMovimento = "16866P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("818") && complemento01.contains("487") && complemento01.contains("0001") && complemento01.contains("24")) {
        conta = "1626049P";
        contaMovimento = "1626049P";
    }
    if (complemento01.contains("0001") && complemento01.contains("342") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("649") && complemento01.contains("26")) {
        conta = "1632871P";
        contaMovimento = "1632871P";
    }
    if (complemento01.contains("627") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("59") && complemento01.contains("0001") && complemento01.contains("753")) {
        conta = "4310P";
        contaMovimento = "4310P";
    }
    if (complemento01.contains("11") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("106") && complemento01.contains("100") && complemento01.contains("0001")) {
        conta = "1685973P";
        contaMovimento = "1685973P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("208") && complemento01.contains("524") && complemento01.contains("0001") && complemento01.contains("97")) {
        conta = "1683620P";
        contaMovimento = "1683620P";
    }
    if (complemento01.contains("50") && complemento01.contains("0001") && complemento01.contains("573") && complemento01.contains("558") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683563P";
        contaMovimento = "1683563P";
    }
    if (complemento01.contains("284") && complemento01.contains("070") && complemento01.contains("70") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1640698P";
        contaMovimento = "1640698P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("15") && complemento01.contains("0001") && complemento01.contains("203") && complemento01.contains("859")) {
        conta = "1647332P";
        contaMovimento = "1647332P";
    }
    if (complemento01.contains("03") && complemento01.contains("021") && complemento01.contains("0001") && complemento01.contains("906") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640348P";
        contaMovimento = "1640348P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("217") && complemento01.contains("850") && complemento01.contains("0001") && complemento01.contains("59")) {
        conta = "1683624P";
        contaMovimento = "1683624P";
    }
    if (complemento01.contains("179") && complemento01.contains("0001") && complemento01.contains("84") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("455")) {
        conta = "1640528P";
        contaMovimento = "1640528P";
    }
    if (complemento01.contains("336") && complemento01.contains("204") && complemento01.contains("0001") && complemento01.contains("73") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640328P";
        contaMovimento = "1640328P";
    }
    if (complemento01.contains("564") && complemento01.contains("115") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("84")) {
        conta = "1635039P";
        contaMovimento = "1635039P";
    }
    if (complemento01.contains("29") && complemento01.contains("0001") && complemento01.contains("023") && complemento01.contains("922") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1619152P";
        contaMovimento = "1619152P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("30") && complemento01.contains("0001") && complemento01.contains("751") && complemento01.contains("114")) {
        conta = "1640378P";
        contaMovimento = "1640378P";
    }
    if (complemento01.contains("20") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("384") && complemento01.contains("284") && complemento01.contains("0001")) {
        conta = "1033753P";
        contaMovimento = "1033753P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("922") && complemento01.contains("042") && complemento01.contains("0001") && complemento01.contains("43")) {
        conta = "1682734P";
        contaMovimento = "1682734P";
    }
    if (complemento01.contains("42") && complemento01.contains("351") && complemento01.contains("740") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0114")) {
        conta = "13895P";
        contaMovimento = "13895P";
    }
    if (complemento01.contains("0001") && complemento01.contains("790") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("18") && complemento01.contains("539")) {
        conta = "1640367P";
        contaMovimento = "1640367P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("802") && complemento01.contains("918") && complemento01.contains("0001") && complemento01.contains("80")) {
        conta = "1683615P";
        contaMovimento = "1683615P";
    }
    if (complemento01.contains("40") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("172") && complemento01.contains("883") && complemento01.contains("0001")) {
        conta = "1624200P";
        contaMovimento = "1624200P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("906") && complemento01.contains("369") && complemento01.contains("0001") && complemento01.contains("57")) {
        conta = "1653136P";
        contaMovimento = "1653136P";
    }
    if (complemento01.contains("83") && complemento01.contains("0001") && complemento01.contains("916") && complemento01.contains("982") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683631P";
        contaMovimento = "1683631P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("479") && complemento01.contains("443") && complemento01.contains("0001") && complemento01.contains("85")) {
        conta = "1640722P";
        contaMovimento = "1640722P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("65") && complemento01.contains("0001") && complemento01.contains("253") && complemento01.contains("223")) {
        conta = "1613950P";
        contaMovimento = "1613950P";
    }
    if (complemento01.contains("648") && complemento01.contains("64") && complemento01.contains("0001") && complemento01.contains("936") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683627P";
        contaMovimento = "1683627P";
    }
    if (complemento01.contains("020") && complemento01.contains("0001") && complemento01.contains("152") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("12")) {
        conta = "1685634P";
        contaMovimento = "1685634P";
    }
    if (complemento01.contains("725") && complemento01.contains("0003") && complemento01.contains("29") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("287")) {
        conta = "1034338P";
        contaMovimento = "1034338P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("05") && complemento01.contains("0001") && complemento01.contains("241") && complemento01.contains("451")) {
        conta = "1640747P";
        contaMovimento = "1640747P";
    }
    if (complemento01.contains("71") && complemento01.contains("0001") && complemento01.contains("666") && complemento01.contains("106") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683766P";
        contaMovimento = "1683766P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("598") && complemento01.contains("0001") && complemento01.contains("52") && complemento01.contains("818")) {
        conta = "1682436P";
        contaMovimento = "1682436P";
    }
    if (complemento01.contains("23") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("933") && complemento01.contains("017") && complemento01.contains("0001")) {
        conta = "1685010P";
        contaMovimento = "1685010P";
    }
    if (complemento01.contains("737") && complemento01.contains("20") && complemento01.contains("0011") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("442")) {
        conta = "1613774P";
        contaMovimento = "1613774P";
    }
    if (complemento01.contains("936") && complemento01.contains("94") && complemento01.contains("0001") && complemento01.contains("522") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640495P";
        contaMovimento = "1640495P";
    }
    if (complemento01.contains("173") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("620") && complemento01.contains("0093") && complemento01.contains("06")) {
        conta = "6584P";
        contaMovimento = "6584P";
    }
    if (complemento01.contains("422") && complemento01.contains("0001") && complemento01.contains("60") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("654")) {
        conta = "1620909P";
        contaMovimento = "1620909P";
    }
    if (complemento01.contains("0001") && complemento01.contains("07") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("034") && complemento01.contains("847")) {
        conta = "1640393P";
        contaMovimento = "1640393P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("351") && complemento01.contains("204") && complemento01.contains("00")) {
        conta = "1682262P";
        contaMovimento = "1682262P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("203") && complemento01.contains("479") && complemento01.contains("60")) {
        conta = "1683561P";
        contaMovimento = "1683561P";
    }
    if (complemento01.contains("00") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("330") && complemento01.contains("772") && complemento01.contains("0001")) {
        conta = "12072P";
        contaMovimento = "12072P";
    }
    if (complemento01.contains("0001") && complemento01.contains("64") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("598") && complemento01.contains("948")) {
        conta = "1025260P";
        contaMovimento = "1025260P";
    }
    if (complemento01.contains("64") && complemento01.contains("0002") && complemento01.contains("704") && complemento01.contains("080") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1682435P";
        contaMovimento = "1682435P";
    }
    if (complemento01.contains("21") && complemento01.contains("0001") && complemento01.contains("818") && complemento01.contains("110") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1617533P";
        contaMovimento = "1617533P";
    }
    if (complemento01.contains("93") && complemento01.contains("0003") && complemento01.contains("818") && complemento01.contains("110") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "13879P";
        contaMovimento = "13879P";
    }
    if (complemento01.contains("818") && complemento01.contains("06") && complemento01.contains("110") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0008")) {
        conta = "1617533P";
        contaMovimento = "1617533P";
    }
    if (complemento01.contains("229") && complemento01.contains("624") && complemento01.contains("0001") && complemento01.contains("75") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640558P";
        contaMovimento = "1640558P";
    }
    if (complemento01.contains("689") && complemento01.contains("090") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40") && complemento01.contains("0002")) {
        conta = "1630065P";
        contaMovimento = "1630065P";
    }
    if (complemento01.contains("87") && complemento01.contains("0001") && complemento01.contains("837") && complemento01.contains("027") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "13197P";
        contaMovimento = "13197P";
    }
    if (complemento01.contains("153") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("500") && complemento01.contains("0001") && complemento01.contains("86")) {
        conta = "1683616P";
        contaMovimento = "1683616P";
    }
    if (complemento01.contains("501") && complemento01.contains("0001") && complemento01.contains("11") && complemento01.contains("953") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (complemento01.contains("20") && complemento01.contains("444") && complemento01.contains("547") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "878867P";
        contaMovimento = "878867P";
    }
    if (complemento01.contains("20") && complemento01.contains("557") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("641")) {
        conta = "894";
        contaMovimento = "894";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("991") && complemento01.contains("112") && complemento01.contains("0001") && complemento01.contains("00")) {
        conta = "501";
        contaMovimento = "501";
    }
    if (complemento01.contains("0001") && complemento01.contains("534") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("991") && complemento01.contains("78")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (complemento01.contains("263") && complemento01.contains("80") && complemento01.contains("0001") && complemento01.contains("669") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640820P";
        contaMovimento = "1640820P";
    }
    if (complemento01.contains("32") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("697") && complemento01.contains("0001") && complemento01.contains("317")) {
        conta = "6568P";
        contaMovimento = "6568P";
    }
    if (complemento01.contains("04") && complemento01.contains("0001") && complemento01.contains("887") && complemento01.contains("572") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1613970P";
        contaMovimento = "1613970P";
    }
    if (complemento01.contains("83") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("734") && complemento01.contains("560") && complemento01.contains("0001")) {
        conta = "1640884P";
        contaMovimento = "1640884P";
    }
    if (complemento01.contains("51") && complemento01.contains("525") && complemento01.contains("986") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "9462P";
        contaMovimento = "9462P";
    }
    if (complemento01.contains("525") && complemento01.contains("32") && complemento01.contains("986") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0002")) {
        conta = "1026912P";
        contaMovimento = "1026912P";
    }
    if (complemento01.contains("986") && complemento01.contains("27") && complemento01.contains("0001") && complemento01.contains("947") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9996P";
        contaMovimento = "9996P";
    }
    if (complemento01.contains("46") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("011") && complemento01.contains("784") && complemento01.contains("0001")) {
        conta = "6460P";
        contaMovimento = "6460P";
    }
    if (complemento01.contains("115") && complemento01.contains("31") && complemento01.contains("577") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11874P";
        contaMovimento = "11874P";
    }
    if (complemento01.contains("480") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("241") && complemento01.contains("0001") && complemento01.contains("75")) {
        conta = "1685422P";
        contaMovimento = "1685422P";
    }
    if (complemento01.contains("26") && complemento01.contains("0001") && complemento01.contains("534") && complemento01.contains("300") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11652P";
        contaMovimento = "11652P";
    }
    if (complemento01.contains("0001") && complemento01.contains("364") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("51") && complemento01.contains("563")) {
        conta = "1640585P";
        contaMovimento = "1640585P";
    }
    if (complemento01.contains("238") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("719") && complemento01.contains("64")) {
        conta = "1620149P";
        contaMovimento = "1620149P";
    }
    if (complemento01.contains("65") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("930") && complemento01.contains("967") && complemento01.contains("0001")) {
        conta = "9941P";
        contaMovimento = "9941P";
    }
    if (complemento01.contains("21") && complemento01.contains("0001") && complemento01.contains("977") && complemento01.contains("448") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3603P";
        contaMovimento = "3603P";
    }
    if (complemento01.contains("34") && complemento01.contains("498") && complemento01.contains("518") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "12400P";
        contaMovimento = "12400P";
    }
    if (complemento01.contains("16") && complemento01.contains("0001") && complemento01.contains("149") && complemento01.contains("614") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3925P";
        contaMovimento = "3925P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("845") && complemento01.contains("735") && complemento01.contains("0003") && complemento01.contains("33")) {
        conta = "17984P";
        contaMovimento = "17984P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("14") && complemento01.contains("845") && complemento01.contains("735") && complemento01.contains("0004")) {
        conta = "17745P";
        contaMovimento = "17745P";
    }
    if (complemento01.contains("845") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("735") && complemento01.contains("0005") && complemento01.contains("03")) {
        conta = "1685524P";
        contaMovimento = "1685524P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("987") && complemento01.contains("024") && complemento01.contains("0005") && complemento01.contains("65")) {
        conta = "1683614P";
        contaMovimento = "1683614P";
    }
    if (complemento01.contains("93") && complemento01.contains("0001") && complemento01.contains("610") && complemento01.contains("128") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "57P";
        contaMovimento = "57P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("999") && complemento01.contains("0001") && complemento01.contains("42") && complemento01.contains("176")) {
        conta = "17888P";
        contaMovimento = "17888P";
    }
    if (complemento01.contains("206") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("00") && complemento01.contains("289")) {
        conta = "1640315P";
        contaMovimento = "1640315P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("628") && complemento01.contains("312") && complemento01.contains("0001") && complemento01.contains("62")) {
        conta = "13906P";
        contaMovimento = "13906P";
    }
    if (complemento01.contains("406") && complemento01.contains("90") && complemento01.contains("0011") && complemento01.contains("660") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1684744P";
        contaMovimento = "1684744P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("87") && complemento01.contains("453") && complemento01.contains("661") && complemento01.contains("0001")) {
        conta = "430126P";
        contaMovimento = "430126P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("664") && complemento01.contains("028") && complemento01.contains("0025") && complemento01.contains("19")) {
        conta = "11994P";
        contaMovimento = "11994P";
    }
    if (complemento01.contains("028") && complemento01.contains("0027") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("664") && complemento01.contains("80")) {
        conta = "6436P";
        contaMovimento = "6436P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("695") && complemento01.contains("790") && complemento01.contains("95")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("90") && complemento01.contains("0001") && complemento01.contains("784") && complemento01.contains("802")) {
        conta = "6223P";
        contaMovimento = "6223P";
    }
    if (complemento01.contains("912") && complemento01.contains("690") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("73")) {
        conta = "1627109P";
        contaMovimento = "1627109P";
    }
    if (complemento01.contains("06") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("934") && complemento01.contains("215") && complemento01.contains("0001")) {
        conta = "7159P";
        contaMovimento = "7159P";
    }
    if (complemento01.contains("16") && complemento01.contains("0001") && complemento01.contains("157") && complemento01.contains("108") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683271P";
        contaMovimento = "1683271P";
    }
    if (complemento01.contains("11") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("360") && complemento01.contains("162")) {
        conta = "8982P";
        contaMovimento = "8982P";
    }
    if (complemento01.contains("84") && complemento01.contains("0001") && complemento01.contains("674") && complemento01.contains("412") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4615P";
        contaMovimento = "4615P";
    }
    if (complemento01.contains("59") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("472") && complemento01.contains("702") && complemento01.contains("0001")) {
        conta = "8750P";
        contaMovimento = "8750P";
    }
    if (complemento01.contains("01") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("062") && complemento01.contains("437") && complemento01.contains("0001")) {
        conta = "2682P";
        contaMovimento = "2682P";
    }
    if (complemento01.contains("01") && complemento01.contains("0001") && complemento01.contains("477") && complemento01.contains("331") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8980P";
        contaMovimento = "8980P";
    }
    if (complemento01.contains("55") && complemento01.contains("0001") && complemento01.contains("412") && complemento01.contains("405") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640821P";
        contaMovimento = "1640821P";
    }
    if (complemento01.contains("94") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("432") && complemento01.contains("879") && complemento01.contains("0001")) {
        conta = "1613947P";
        contaMovimento = "1613947P";
    }
    if (complemento01.contains("0003") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("432") && complemento01.contains("879") && complemento01.contains("56")) {
        conta = "1625153P";
        contaMovimento = "1625153P";
    }
    if (complemento01.contains("08") && complemento01.contains("0001") && complemento01.contains("796") && complemento01.contains("984") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4944P";
        contaMovimento = "4944P";
    }
    if (complemento01.contains("052") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("70") && complemento01.contains("670")) {
        conta = "1616743P";
        contaMovimento = "1616743P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("807") && nomeOrigem.contains("/") && nomeOrigem.contains("-") && nomeOrigem.contains("24")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("165") && complemento01.contains("778") && complemento01.contains("0001") && complemento01.contains("50")) {
        conta = "1640860P";
        contaMovimento = "1640860P";
    }
    if (complemento01.contains("00") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("428") && complemento01.contains("307") && complemento01.contains("0006")) {
        conta = "3085P";
        contaMovimento = "3085P";
    }
    if (complemento01.contains("0016") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("74") && complemento01.contains("428") && complemento01.contains("307")) {
        conta = "3965P";
        contaMovimento = "3965P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("51") && nomeOrigem.contains("872") && nomeOrigem.contains("609") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640673P";
        contaMovimento = "1640673P";
    }
    if (complemento01.contains("526") && complemento01.contains("0001") && complemento01.contains("79") && complemento01.contains("749") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1686466P";
        contaMovimento = "1686466P";
    }
    if (complemento01.contains("54") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("062") && complemento01.contains("422") && complemento01.contains("0001")) {
        conta = "1640692P";
        contaMovimento = "1640692P";
    }
    if (complemento01.contains("471") && complemento01.contains("527") && complemento01.contains("0001") && complemento01.contains("67") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640674P";
        contaMovimento = "1640674P";
    }
    if (complemento01.contains("75") && complemento01.contains("0001") && complemento01.contains("840") && complemento01.contains("944") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1679923P";
        contaMovimento = "1679923P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("77") && complemento01.contains("0001") && complemento01.contains("184") && complemento01.contains("953")) {
        conta = "1620673P";
        contaMovimento = "1620673P";
    }
    if (complemento01.contains("695") && complemento01.contains("45") && complemento01.contains("0002") && complemento01.contains("276") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9483P";
        contaMovimento = "9483P";
    }
    if (complemento01.contains("0001") && complemento01.contains("63") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("291") && complemento01.contains("467")) {
        conta = "1688431P";
        contaMovimento = "1688431P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("316") && complemento01.contains("315") && complemento01.contains("78")) {
        conta = "1619423P";
        contaMovimento = "1619423P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("16") && complemento01.contains("0001") && complemento01.contains("104") && complemento01.contains("326")) {
        conta = "6499P";
        contaMovimento = "6499P";
    }
    if (complemento01.contains("05") && complemento01.contains("619") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("473")) {
        conta = "6497P";
        contaMovimento = "6497P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("245") && complemento01.contains("075") && complemento01.contains("0001") && complemento01.contains("20")) {
        conta = "574400P";
        contaMovimento = "574400P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("09") && complemento01.contains("0001") && complemento01.contains("692") && complemento01.contains("271")) {
        conta = "8624P";
        contaMovimento = "8624P";
    }
    if (complemento01.contains("741") && complemento01.contains("30") && complemento01.contains("0001") && complemento01.contains("325") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5532P";
        contaMovimento = "5532P";
    }
    if (complemento01.contains("0001") && complemento01.contains("367") && complemento01.contains("450") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("03")) {
        conta = "17646P";
        contaMovimento = "17646P";
    }
    if (complemento01.contains("02") && complemento01.contains("0001") && complemento01.contains("642") && complemento01.contains("846") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1681974P";
        contaMovimento = "1681974P";
    }
    if (complemento01.contains("80") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("002") && complemento01.contains("624") && complemento01.contains("0002")) {
        conta = "4082P";
        contaMovimento = "4082P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("086") && complemento01.contains("596") && complemento01.contains("0001") && complemento01.contains("45")) {
        conta = "1687892P";
        contaMovimento = "1687892P";
    }
    if (complemento01.contains("0002") && complemento01.contains("31") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("502") && complemento01.contains("802")) {
        conta = "1038062P";
        contaMovimento = "1038062P";
    }
    if (complemento01.contains("08") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("503") && complemento01.contains("660") && complemento01.contains("0003")) {
        conta = "1026605P";
        contaMovimento = "1026605P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("542") && complemento01.contains("397") && complemento01.contains("0001") && complemento01.contains("02")) {
        conta = "4580P";
        contaMovimento = "4580P";
    }
    if (complemento01.contains("064") && complemento01.contains("003") && complemento01.contains("0001") && complemento01.contains("02") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9239P";
        contaMovimento = "9239P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("717") && complemento01.contains("0001") && complemento01.contains("23") && complemento01.contains("070")) {
        conta = "1625441P";
        contaMovimento = "1625441P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("497") && complemento01.contains("467") && complemento01.contains("02")) {
        conta = "1686729P";
        contaMovimento = "1686729P";
    }
    if (complemento01.contains("303") && complemento01.contains("0001") && complemento01.contains("28") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("952")) {
        conta = "1640443P";
        contaMovimento = "1640443P";
    }
    if (complemento01.contains("041") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("81") && complemento01.contains("0001") && complemento01.contains("992")) {
        conta = "1614617P";
        contaMovimento = "1614617P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40") && complemento01.contains("0001") && complemento01.contains("714") && complemento01.contains("064")) {
        conta = "1615036P";
        contaMovimento = "1615036P";
    }
    if (complemento01.contains("423") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("198") && complemento01.contains("0001") && complemento01.contains("44")) {
        conta = "1633108P";
        contaMovimento = "1633108P";
    }
    if (complemento01.contains("034") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("25") && complemento01.contains("0001") && complemento01.contains("091")) {
        conta = "4099P";
        contaMovimento = "4099P";
    }
    if (complemento01.contains("18") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("149") && complemento01.contains("077")) {
        conta = "1687703P";
        contaMovimento = "1687703P";
    }
    if (complemento01.contains("14") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("410") && complemento01.contains("834") && complemento01.contains("0001")) {
        conta = "8816P";
        contaMovimento = "8816P";
    }
    if (complemento01.contains("0001") && complemento01.contains("10") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("477") && complemento01.contains("549")) {
        conta = "1640521P";
        contaMovimento = "1640521P";
    }
    if (complemento01.contains("0001") && complemento01.contains("967") && complemento01.contains("784") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("50")) {
        conta = "1024881P";
        contaMovimento = "1024881P";
    }
    if (complemento01.contains("759") && complemento01.contains("15") && complemento01.contains("0005") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("956")) {
        conta = "1640616P";
        contaMovimento = "1640616P";
    }
    if (complemento01.contains("726") && complemento01.contains("17") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("010") && complemento01.contains("0001")) {
        conta = "4612P";
        contaMovimento = "4612P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("022") && complemento01.contains("91") && complemento01.contains("186") && complemento01.contains("0001")) {
        conta = "1618701P";
        contaMovimento = "1618701P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("87") && complemento01.contains("475") && complemento01.contains("252")) {
        conta = "1685425P";
        contaMovimento = "1685425P";
    }
    if (complemento01.contains("72") && complemento01.contains("0001") && complemento01.contains("334") && complemento01.contains("428") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "11829P";
        contaMovimento = "11829P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("379") && complemento01.contains("357") && complemento01.contains("0001") && complemento01.contains("05")) {
        conta = "1640305P";
        contaMovimento = "1640305P";
    }
    if (complemento01.contains("394") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("595") && complemento01.contains("0001") && complemento01.contains("81")) {
        conta = "2676P";
        contaMovimento = "2676P";
    }
    if (complemento01.contains("06") && complemento01.contains("0001") && complemento01.contains("572") && complemento01.contains("396") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640812P";
        contaMovimento = "1640812P";
    }
    if (complemento01.contains("934") && complemento01.contains("0002") && complemento01.contains("05") && complemento01.contains("436") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8637P";
        contaMovimento = "8637P";
    }
    if (complemento01.contains("0001") && complemento01.contains("774") && complemento01.contains("515") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("71")) {
        conta = "1038778P";
        contaMovimento = "1038778P";
    }
    if (complemento01.contains("869") && complemento01.contains("085") && complemento01.contains("0001") && complemento01.contains("65") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640464P";
        contaMovimento = "1640464P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("936") && complemento01.contains("095") && complemento01.contains("39")) {
        conta = "1680932P";
        contaMovimento = "1680932P";
    }
    if (complemento01.contains("0001") && complemento01.contains("76") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("087") && complemento01.contains("264")) {
        conta = "1685426P";
        contaMovimento = "1685426P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("80") && complemento01.contains("0001") && complemento01.contains("405") && complemento01.contains("373")) {
        conta = "1640647P";
        contaMovimento = "1640647P";
    }
    if (complemento01.contains("463") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("96") && complemento01.contains("0015") && complemento01.contains("456")) {
        conta = "1686817P";
        contaMovimento = "1686817P";
    }
    if (complemento01.contains("463") && complemento01.contains("456") && complemento01.contains("0016") && complemento01.contains("77") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691469P";
        contaMovimento = "1691469P";
    }
    if (complemento01.contains("038") && complemento01.contains("0001") && complemento01.contains("21") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("173")) {
        conta = "1640816P";
        contaMovimento = "1640816P";
    }
    if (complemento01.contains("617") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("147") && complemento01.contains("76") && complemento01.contains("0022")) {
        conta = "1691482P";
        contaMovimento = "1691482P";
    }
    if (complemento01.contains("771") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("09") && complemento01.contains("495")) {
        conta = "1632870P";
        contaMovimento = "1632870P";
    }
    if (complemento01.contains("0001") && complemento01.contains("32") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("178") && complemento01.contains("711")) {
        conta = "1640425P";
        contaMovimento = "1640425P";
    }
    if (complemento01.contains("000") && complemento01.contains("01") && complemento01.contains("0001") && complemento01.contains("167") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691695P";
        contaMovimento = "1691695P";
    }
    if (complemento01.contains("20") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("277") && complemento01.contains("937") && complemento01.contains("0001")) {
        conta = "1691358P";
        contaMovimento = "1691358P";
    }
    if (complemento01.contains("567") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("79") && complemento01.contains("0001") && complemento01.contains("125")) {
        conta = "1028044P";
        contaMovimento = "1028044P";
    }
    if (complemento01.contains("95") && complemento01.contains("0001") && complemento01.contains("407") && complemento01.contains("806") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1687706P";
        contaMovimento = "1687706P";
    }
    if (complemento01.contains("80") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("319") && complemento01.contains("929")) {
        conta = "1036319P";
        contaMovimento = "1036319P";
    }
    if (complemento01.contains("045") && complemento01.contains("25") && complemento01.contains("0001") && complemento01.contains("239") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1028336P";
        contaMovimento = "1028336P";
    }
    if (complemento01.contains("0001") && complemento01.contains("44") && complemento01.contains("289") && complemento01.contains("121") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685394P";
        contaMovimento = "1685394P";
    }
    if (complemento01.contains("0001") && complemento01.contains("58") && complemento01.contains("737") && complemento01.contains("347") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1683645P";
        contaMovimento = "1683645P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("70") && complemento01.contains("771") && complemento01.contains("143") && complemento01.contains("0001")) {
        conta = "1640736P";
        contaMovimento = "1640736P";
    }
    if (complemento01.contains("08") && complemento01.contains("463") && complemento01.contains("536") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "12691P";
        contaMovimento = "12691P";
    }
    if (complemento01.contains("52") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("456") && complemento01.contains("630") && complemento01.contains("0001")) {
        conta = "1688859P";
        contaMovimento = "1688859P";
    }
    if (complemento01.contains("59") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("709") && complemento01.contains("898")) {
        conta = "1691696P";
        contaMovimento = "1691696P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("04") && complemento01.contains("0003") && complemento01.contains("901") && complemento01.contains("735")) {
        conta = "1614995P";
        contaMovimento = "1614995P";
    }
    if (complemento01.contains("158") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("60") && complemento01.contains("0001") && complemento01.contains("077")) {
        conta = "1614200P";
        contaMovimento = "1614200P";
    }
    if (complemento01.contains("0001") && complemento01.contains("70") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("053") && complemento01.contains("678")) {
        conta = "1691363P";
        contaMovimento = "1691363P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("550") && complemento01.contains("05") && complemento01.contains("0008") && complemento01.contains("505")) {
        conta = "1640339P";
        contaMovimento = "1640339P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("906") && complemento01.contains("624") && complemento01.contains("0001") && complemento01.contains("73")) {
        conta = "1681959P";
        contaMovimento = "1681959P";
    }
    if (complemento01.contains("82") && complemento01.contains("0001") && complemento01.contains("684") && complemento01.contains("123") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1686108P";
        contaMovimento = "1686108P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("71") && complemento01.contains("0040") && complemento01.contains("351") && complemento01.contains("740")) {
        conta = "1685544P";
        contaMovimento = "1685544P";
    }
    if (complemento01.contains("92") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("740") && complemento01.contains("351") && complemento01.contains("0084")) {
        conta = "353635P";
        contaMovimento = "353635P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("92") && complemento01.contains("0001") && complemento01.contains("901") && complemento01.contains("141")) {
        conta = "1691357P";
        contaMovimento = "1691357P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("17") && complemento01.contains("0001") && complemento01.contains("022") && complemento01.contains("506")) {
        conta = "1621379P";
        contaMovimento = "1621379P";
    }
    if (complemento01.contains("53") && complemento01.contains("0001") && complemento01.contains("934") && complemento01.contains("892") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640774P";
        contaMovimento = "1640774P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("733") && complemento01.contains("129") && complemento01.contains("0001") && complemento01.contains("40")) {
        conta = "1683634P";
        contaMovimento = "1683634P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("982") && complemento01.contains("383") && complemento01.contains("81")) {
        conta = "1687074P";
        contaMovimento = "1687074P";
    }
    if (complemento01.contains("90") && complemento01.contains("0005") && complemento01.contains("725") && complemento01.contains("287") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1679737P";
        contaMovimento = "1679737P";
    }
    if (complemento01.contains("28") && complemento01.contains("6841") && complemento01.contains("895") && complemento01.contains("325") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (complemento01.contains("100") && complemento01.contains("04") && complemento01.contains("0001") && complemento01.contains("992") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640863P";
        contaMovimento = "1640863P";
    }
    if (complemento01.contains("04") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("621") && complemento01.contains("141") && complemento01.contains("0004")) {
        conta = "16224P";
        contaMovimento = "16224P";
    }
    if (complemento01.contains("44") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("949") && complemento01.contains("526") && complemento01.contains("0001")) {
        conta = "1640615P";
        contaMovimento = "1640615P";
    }
    if (complemento01.contains("145") && complemento01.contains("008") && complemento01.contains("0015") && complemento01.contains("07") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691697P";
        contaMovimento = "1691697P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("75") && complemento01.contains("0001") && complemento01.contains("305") && complemento01.contains("845")) {
        conta = "1687061P";
        contaMovimento = "1687061P";
    }
    if (complemento01.contains("77") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("488") && complemento01.contains("117") && complemento01.contains("0001")) {
        conta = "1640644P";
        contaMovimento = "1640644P";
    }
    if (complemento01.contains("0001") && complemento01.contains("90") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("182") && complemento01.contains("593")) {
        conta = "1691698P";
        contaMovimento = "1691698P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("587") && complemento01.contains("357") && complemento01.contains("0063") && complemento01.contains("61")) {
        conta = "278271P";
        contaMovimento = "278271P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0002") && complemento01.contains("08") && complemento01.contains("231") && complemento01.contains("668")) {
        conta = "429826P";
        contaMovimento = "429826P";
    }
    if (complemento01.contains("80") && complemento01.contains("0018") && complemento01.contains("697") && complemento01.contains("317") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9609P";
        contaMovimento = "9609P";
    }
    if (complemento01.contains("341") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("88") && complemento01.contains("0001") && complemento01.contains("127")) {
        conta = "2679P";
        contaMovimento = "2679P";
    }
    if (complemento01.contains("0001") && complemento01.contains("412") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("791") && complemento01.contains("09")) {
        conta = "1028308P";
        contaMovimento = "1028308P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("232") && complemento01.contains("84") && complemento01.contains("398") && complemento01.contains("0001")) {
        conta = "17995P";
        contaMovimento = "17995P";
    }
    return conta;
}
public String getContaMovimento2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (complemento01.contains("60") && complemento01.contains("0001") && complemento01.contains("833") && complemento01.contains("228") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640356P";
        contaMovimento = "1640356P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("242") && complemento01.contains("701") && complemento01.contains("92") && complemento01.contains("0001")) {
        conta = "1029920P";
        contaMovimento = "1029920P";
    }
    if (complemento01.contains("02") && complemento01.contains("0002") && complemento01.contains("977") && complemento01.contains("448") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "3565P";
        contaMovimento = "3565P";
    }
    if (complemento01.contains("795") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("58") && complemento01.contains("0001") && complemento01.contains("278")) {
        conta = "1024958P";
        contaMovimento = "1024958P";
    }
    if (complemento01.contains("037") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("42") && complemento01.contains("0001") && complemento01.contains("449")) {
        conta = "2454P";
        contaMovimento = "2454P";
    }
    if (complemento01.contains("881") && complemento01.contains("39") && complemento01.contains("0003") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("563")) {
        conta = "4120P";
        contaMovimento = "4120P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("309") && complemento01.contains("573") && complemento01.contains("82")) {
        conta = "3576P";
        contaMovimento = "3576P";
    }
    if (complemento01.contains("36") && complemento01.contains("471") && complemento01.contains("639") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1036942P";
        contaMovimento = "1036942P";
    }
    if (complemento01.contains("939") && complemento01.contains("393") && complemento01.contains("9393") && complemento01.contains("93") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (complemento01.contains("673") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("087") && complemento01.contains("0001") && complemento01.contains("74")) {
        conta = "1627466P";
        contaMovimento = "1627466P";
    }
    if (complemento01.contains("0001") && complemento01.contains("177") && complemento01.contains("554") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("83")) {
        conta = "1690685P";
        contaMovimento = "1690685P";
    }
    if (complemento01.contains("0001") && complemento01.contains("156") && complemento01.contains("801") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("15")) {
        conta = "4868P";
        contaMovimento = "4868P";
    }
    if (complemento01.contains("867") && complemento01.contains("0001") && complemento01.contains("14") && complemento01.contains("863") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "6485P";
        contaMovimento = "6485P";
    }
    if (complemento01.contains("736") && complemento01.contains("350") && complemento01.contains("0001") && complemento01.contains("90") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685635P";
        contaMovimento = "1685635P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("31") && complemento01.contains("0003") && complemento01.contains("149") && complemento01.contains("653")) {
        conta = "1640677P";
        contaMovimento = "1640677P";
    }
    if (complemento01.contains("793") && complemento01.contains("959") && complemento01.contains("0003") && complemento01.contains("93") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640400P";
        contaMovimento = "1640400P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("054") && complemento01.contains("0001") && complemento01.contains("98") && complemento01.contains("869")) {
        conta = "1688689P";
        contaMovimento = "1688689P";
    }
    if (complemento01.contains("0001") && complemento01.contains("82") && complemento01.contains("114") && complemento01.contains("949") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "4922P";
        contaMovimento = "4922P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("238") && complemento01.contains("801") && complemento01.contains("0001") && complemento01.contains("52")) {
        conta = "1627059P";
        contaMovimento = "1627059P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("477") && complemento01.contains("885") && complemento01.contains("0004") && complemento01.contains("20")) {
        conta = "2836P";
        contaMovimento = "2836P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("706") && complemento01.contains("38") && complemento01.contains("470")) {
        conta = "1640300P";
        contaMovimento = "1640300P";
    }
    if (complemento01.contains("062") && complemento01.contains("561") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("40") && complemento01.contains("0001")) {
        conta = "1640776P";
        contaMovimento = "1640776P";
    }
    if (complemento01.contains("253") && complemento01.contains("30") && complemento01.contains("0001") && complemento01.contains("496") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "14022P";
        contaMovimento = "14022P";
    }
    if (complemento01.contains("0001") && complemento01.contains("93") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("300") && complemento01.contains("546")) {
        conta = "1627718P";
        contaMovimento = "1627718P";
    }
    if (complemento01.contains("507") && complemento01.contains("873") && complemento01.contains("10") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1026261P";
        contaMovimento = "1026261P";
    }
    if (complemento01.contains("0001") && complemento01.contains("109") && complemento01.contains("49") && complemento01.contains("584") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1618818P";
        contaMovimento = "1618818P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("596") && complemento01.contains("453") && complemento01.contains("0001") && complemento01.contains("58")) {
        conta = "1640872P";
        contaMovimento = "1640872P";
    }
    if (complemento01.contains("85") && complemento01.contains("0003") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("633") && complemento01.contains("583")) {
        conta = "3151P";
        contaMovimento = "3151P";
    }
    if (complemento01.contains("90") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("014") && complemento01.contains("680")) {
        conta = "1640552P";
        contaMovimento = "1640552P";
    }
    if (complemento01.contains("0001") && complemento01.contains("657") && complemento01.contains("029") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("70")) {
        conta = "17669P";
        contaMovimento = "17669P";
    }
    if (complemento01.contains("380") && complemento01.contains("17") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("105")) {
        conta = "1690528P";
        contaMovimento = "1690528P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("428") && complemento01.contains("954") && complemento01.contains("98")) {
        conta = "1613918P";
        contaMovimento = "1613918P";
    }
    if (complemento01.contains("54") && complemento01.contains("0002") && complemento01.contains("233") && complemento01.contains("488") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1682957P";
        contaMovimento = "1682957P";
    }
    if (complemento01.contains("78") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("541") && complemento01.contains("660") && complemento01.contains("0001")) {
        conta = "1679929P";
        contaMovimento = "1679929P";
    }
    if (complemento01.contains("93") && complemento01.contains("0001") && complemento01.contains("763") && complemento01.contains("588") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640359P";
        contaMovimento = "1640359P";
    }
    if (complemento01.contains("0003") && complemento01.contains("588") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("55") && complemento01.contains("763")) {
        conta = "1632545P";
        contaMovimento = "1632545P";
    }
    if (complemento01.contains("683") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("043") && complemento01.contains("0004") && complemento01.contains("50")) {
        conta = "1691113P";
        contaMovimento = "1691113P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("98") && complemento01.contains("0071") && complemento01.contains("069") && complemento01.contains("775")) {
        conta = "2490P";
        contaMovimento = "2490P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("452") && complemento01.contains("774") && complemento01.contains("0001") && complemento01.contains("04")) {
        conta = "6849P";
        contaMovimento = "6849P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("05") && complemento01.contains("0001") && complemento01.contains("976") && complemento01.contains("614")) {
        conta = "1694107P";
        contaMovimento = "1694107P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("40") && complemento01.contains("518") && complemento01.contains("151")) {
        conta = "9251P";
        contaMovimento = "9251P";
    }
    if (complemento01.contains("993") && complemento01.contains("526") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("53") && complemento01.contains("0001")) {
        conta = "278196P";
        contaMovimento = "278196P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("538") && complemento01.contains("148") && complemento01.contains("06")) {
        conta = "1688197P";
        contaMovimento = "1688197P";
    }
    if (complemento01.contains("915") && complemento01.contains("0001") && complemento01.contains("82") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("072")) {
        conta = "202379P";
        contaMovimento = "202379P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("111") && complemento01.contains("916") && complemento01.contains("0001") && complemento01.contains("03")) {
        conta = "1688433P";
        contaMovimento = "1688433P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("205") && complemento01.contains("541") && complemento01.contains("0001") && complemento01.contains("32")) {
        conta = "1683633P";
        contaMovimento = "1683633P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("230") && complemento01.contains("25") && complemento01.contains("427")) {
        conta = "1690393P";
        contaMovimento = "1690393P";
    }
    if (complemento01.contains("0001") && complemento01.contains("057") && complemento01.contains("543") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("86")) {
        conta = "127239P";
        contaMovimento = "127239P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("645") && complemento01.contains("541") && complemento01.contains("16")) {
        conta = "1640466P";
        contaMovimento = "1640466P";
    }
    if (complemento01.contains("710") && complemento01.contains("57") && complemento01.contains("0001") && complemento01.contains("439") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "25P";
        contaMovimento = "25P";
    }
    if (complemento01.contains("972") && complemento01.contains("0001") && complemento01.contains("87") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("038")) {
        conta = "1640754P";
        contaMovimento = "1640754P";
    }
    if (complemento01.contains("18") && complemento01.contains("945") && complemento01.contains("195") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1694730P";
        contaMovimento = "1694730P";
    }
    if (complemento01.contains("305") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("803") && complemento01.contains("0001") && complemento01.contains("66")) {
        conta = "5571P";
        contaMovimento = "5571P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("04") && complemento01.contains("328") && complemento01.contains("663")) {
        conta = "1686279P";
        contaMovimento = "1686279P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("01") && complemento01.contains("363") && complemento01.contains("075")) {
        conta = "1640656P";
        contaMovimento = "1640656P";
    }
    if (complemento01.contains("642") && complemento01.contains("75") && complemento01.contains("0001") && complemento01.contains("168") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1650878P";
        contaMovimento = "1650878P";
    }
    if (complemento01.contains("901") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("57") && complemento01.contains("0001") && complemento01.contains("123")) {
        conta = "1640682P";
        contaMovimento = "1640682P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("109") && complemento01.contains("112") && complemento01.contains("00")) {
        conta = "2583P";
        contaMovimento = "2583P";
    }
    if (complemento01.contains("0001") && complemento01.contains("140") && complemento01.contains("89") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("195")) {
        conta = "1687992P";
        contaMovimento = "1687992P";
    }
    if (complemento01.contains("420") && complemento01.contains("435") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("01")) {
        conta = "17437P";
        contaMovimento = "17437P";
    }
    if (complemento01.contains("693") && complemento01.contains("06") && complemento01.contains("0001") && complemento01.contains("268") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640765P";
        contaMovimento = "1640765P";
    }
    if (complemento01.contains("0001") && complemento01.contains("20") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("571") && complemento01.contains("415")) {
        conta = "1640792P";
        contaMovimento = "1640792P";
    }
    if (complemento01.contains("0001") && complemento01.contains("267") && complemento01.contains("17") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("605")) {
        conta = "1640738P";
        contaMovimento = "1640738P";
    }
    if (complemento01.contains("863") && complemento01.contains("65") && complemento01.contains("0001") && complemento01.contains("895") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1030148P";
        contaMovimento = "1030148P";
    }
    if (complemento01.contains("07") && complemento01.contains("0001") && complemento01.contains("438") && complemento01.contains("819") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1695108P";
        contaMovimento = "1695108P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("379") && complemento01.contains("043") && complemento01.contains("95") && complemento01.contains("0001")) {
        conta = "5988P";
        contaMovimento = "5988P";
    }
    if (complemento01.contains("545") && complemento01.contains("27") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("758") && complemento01.contains("0001")) {
        conta = "1688430P";
        contaMovimento = "1688430P";
    }
    if (complemento01.contains("64") && complemento01.contains("0001") && complemento01.contains("253") && complemento01.contains("814") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691403P";
        contaMovimento = "1691403P";
    }
    if (complemento01.contains("09") && complemento01.contains("610") && complemento01.contains("172") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1680609P";
        contaMovimento = "1680609P";
    }
    if (complemento01.contains("588") && complemento01.contains("333") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("23") && complemento01.contains("0001")) {
        conta = "1686189P";
        contaMovimento = "1686189P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("37") && complemento01.contains("0001") && complemento01.contains("150") && complemento01.contains("680")) {
        conta = "1694912P";
        contaMovimento = "1694912P";
    }
    if (complemento01.contains("0001") && complemento01.contains("11") && complemento01.contains("062") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("238")) {
        conta = "4234P";
        contaMovimento = "4234P";
    }
    if (complemento01.contains("0001") && complemento01.contains("34") && complemento01.contains("601") && complemento01.contains("332") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685397P";
        contaMovimento = "1685397P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("198") && complemento01.contains("930") && complemento01.contains("0001") && complemento01.contains("22")) {
        conta = "1688690P";
        contaMovimento = "1688690P";
    }
    if (complemento01.contains("39") && complemento01.contains("0001") && complemento01.contains("246") && complemento01.contains("290") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691966P";
        contaMovimento = "1691966P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("958") && complemento01.contains("525") && complemento01.contains("16")) {
        conta = "1690389P";
        contaMovimento = "1690389P";
    }
    if (complemento01.contains("11") && complemento01.contains("0001") && complemento01.contains("392") && complemento01.contains("020") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691222P";
        contaMovimento = "1691222P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("019") && complemento01.contains("997") && complemento01.contains("18")) {
        conta = "10752P";
        contaMovimento = "10752P";
    }
    if (complemento01.contains("78") && complemento01.contains("0001") && complemento01.contains("997") && complemento01.contains("173") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "429441P";
        contaMovimento = "429441P";
    }
    if (complemento01.contains("090") && complemento01.contains("72") && complemento01.contains("0001") && complemento01.contains("595") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1687994P";
        contaMovimento = "1687994P";
    }
    if (complemento01.contains("008") && complemento01.contains("04") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("702")) {
        conta = "1690293P";
        contaMovimento = "1690293P";
    }
    if (complemento01.contains("067") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("947") && complemento01.contains("0001") && complemento01.contains("48")) {
        conta = "1694732P";
        contaMovimento = "1694732P";
    }
    if (complemento01.contains("0001") && complemento01.contains("47") && complemento01.contains("432") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("544")) {
        conta = "1024882P";
        contaMovimento = "1024882P";
    }
    if (complemento01.contains("0001") && complemento01.contains("61") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("016") && complemento01.contains("707")) {
        conta = "1690388P";
        contaMovimento = "1690388P";
    }
    if (complemento01.contains("914") && complemento01.contains("992") && complemento01.contains("15") && complemento01.contains("0033") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "12105P";
        contaMovimento = "12105P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("10") && complemento01.contains("897") && complemento01.contains("828") && complemento01.contains("0001")) {
        conta = "1683301P";
        contaMovimento = "1683301P";
    }
    if (complemento01.contains("70") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("547") && complemento01.contains("098") && complemento01.contains("0001")) {
        conta = "1691887P";
        contaMovimento = "1691887P";
    }
    if (complemento01.contains("0001") && complemento01.contains("809") && complemento01.contains("881") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("61")) {
        conta = "1690134P";
        contaMovimento = "1690134P";
    }
    if (complemento01.contains("254") && complemento01.contains("14") && complemento01.contains("0001") && complemento01.contains("815") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1688195P";
        contaMovimento = "1688195P";
    }
    if (complemento01.contains("09") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("408") && complemento01.contains("005") && complemento01.contains("0001")) {
        conta = "1640611P";
        contaMovimento = "1640611P";
    }
    if (complemento01.contains("719") && complemento01.contains("0097") && complemento01.contains("75") && complemento01.contains("561") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1622342P";
        contaMovimento = "1622342P";
    }
    if (complemento01.contains("50") && complemento01.contains("0009") && complemento01.contains("538") && complemento01.contains("594") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1028663P";
        contaMovimento = "1028663P";
    }
    if (complemento01.contains("381") && complemento01.contains("78") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("240")) {
        conta = "1640724P";
        contaMovimento = "1640724P";
    }
    if (complemento01.contains("173") && complemento01.contains("82") && complemento01.contains("471") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1690880P";
        contaMovimento = "1690880P";
    }
    if (complemento01.contains("0003") && complemento01.contains("56") && complemento01.contains("522") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("936")) {
        conta = "1690790P";
        contaMovimento = "1690790P";
    }
    if (complemento01.contains("181") && complemento01.contains("05") && complemento01.contains("0004") && complemento01.contains("980") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1626295P";
        contaMovimento = "1626295P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("076") && complemento01.contains("43") && complemento01.contains("863") && complemento01.contains("0002")) {
        conta = "1687704P";
        contaMovimento = "1687704P";
    }
    if (complemento01.contains("714") && complemento01.contains("472") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("48")) {
        conta = "1640424P";
        contaMovimento = "1640424P";
    }
    if (complemento01.contains("02") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("184") && complemento01.contains("778") && complemento01.contains("0001")) {
        conta = "1640810P";
        contaMovimento = "1640810P";
    }
    if (complemento01.contains("28") && complemento01.contains("248") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("284")) {
        conta = "1640668P";
        contaMovimento = "1640668P";
    }
    if (complemento01.contains("171") && complemento01.contains("83") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("357") && complemento01.contains("0001")) {
        conta = "127200P";
        contaMovimento = "127200P";
    }
    if (complemento01.contains("833") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("737") && complemento01.contains("0001") && complemento01.contains("73")) {
        conta = "1688918P";
        contaMovimento = "1688918P";
    }
    if (complemento01.contains("0001") && complemento01.contains("955") && complemento01.contains("000") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("90")) {
        conta = "1640504P";
        contaMovimento = "1640504P";
    }
    if (complemento01.contains("60") && complemento01.contains("0001") && complemento01.contains("300") && complemento01.contains("628") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640365P";
        contaMovimento = "1640365P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0003") && complemento01.contains("15") && complemento01.contains("724") && complemento01.contains("934")) {
        conta = "6507P";
        contaMovimento = "6507P";
    }
    if (complemento01.contains("84") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("115") && complemento01.contains("577") && complemento01.contains("0004")) {
        conta = "1621374P";
        contaMovimento = "1621374P";
    }
    if (complemento01.contains("275") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("72") && complemento01.contains("124")) {
        conta = "1690879P";
        contaMovimento = "1690879P";
    }
    if (complemento01.contains("278") && complemento01.contains("565") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("28")) {
        conta = "1026403P";
        contaMovimento = "1026403P";
    }
    if (complemento01.contains("084") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("61") && complemento01.contains("0001") && complemento01.contains("517")) {
        conta = "1688566P";
        contaMovimento = "1688566P";
    }
    if (complemento01.contains("71") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("845") && complemento01.contains("735") && complemento01.contains("0001")) {
        conta = "1613943P";
        contaMovimento = "1613943P";
    }
    if (complemento01.contains("0001") && complemento01.contains("088") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("608") && complemento01.contains("38")) {
        conta = "878987P";
        contaMovimento = "878987P";
    }
    if (complemento01.contains("05") && complemento01.contains("209") && complemento01.contains("216") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "2839P";
        contaMovimento = "2839P";
    }
    if (complemento01.contains("67") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("270") && complemento01.contains("966") && complemento01.contains("0001")) {
        conta = "1640472P";
        contaMovimento = "1640472P";
    }
    if (complemento01.contains("0001") && complemento01.contains("838") && complemento01.contains("352") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("98")) {
        conta = "1614019P";
        contaMovimento = "1614019P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("914") && complemento01.contains("0001") && complemento01.contains("57") && complemento01.contains("464")) {
        conta = "12808P";
        contaMovimento = "12808P";
    }
    if (complemento01.contains("804") && complemento01.contains("42") && complemento01.contains("0001") && complemento01.contains("994") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8105P";
        contaMovimento = "8105P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("407") && complemento01.contains("050") && complemento01.contains("30")) {
        conta = "202962P";
        contaMovimento = "202962P";
    }
    if (complemento01.contains("55") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("650") && complemento01.contains("150")) {
        conta = "1618793P";
        contaMovimento = "1618793P";
    }
    if (complemento01.contains("0002") && complemento01.contains("997") && complemento01.contains("669") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("52")) {
        conta = "16403P";
        contaMovimento = "16403P";
    }
    if (complemento01.contains("99") && complemento01.contains("502") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("358")) {
        conta = "1640836P";
        contaMovimento = "1640836P";
    }
    if (complemento01.contains("359") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("387") && complemento01.contains("63") && complemento01.contains("0001")) {
        conta = "1680156P";
        contaMovimento = "1680156P";
    }
    if (complemento01.contains("428") && complemento01.contains("307") && complemento01.contains("0003") && complemento01.contains("50") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9608P";
        contaMovimento = "9608P";
    }
    if (complemento01.contains("307") && complemento01.contains("0019") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("17") && complemento01.contains("428")) {
        conta = "5546P";
        contaMovimento = "5546P";
    }
    if (complemento01.contains("0006") && complemento01.contains("27") && complemento01.contains("098") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("987")) {
        conta = "1032961P";
        contaMovimento = "1032961P";
    }
    if (complemento01.contains("128") && complemento01.contains("0001") && complemento01.contains("316") && complemento01.contains("26") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640492P";
        contaMovimento = "1640492P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("475") && complemento01.contains("302") && complemento01.contains("89")) {
        conta = "1691881P";
        contaMovimento = "1691881P";
    }
    if (complemento01.contains("477") && complemento01.contains("87") && complemento01.contains("0001") && complemento01.contains("885") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691879P";
        contaMovimento = "1691879P";
    }
    if (complemento01.contains("940") && complemento01.contains("02") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("870")) {
        conta = "1695401P";
        contaMovimento = "1695401P";
    }
    if (complemento01.contains("92") && complemento01.contains("686") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("054") && complemento01.contains("0006")) {
        conta = "1695247P";
        contaMovimento = "1695247P";
    }
    if (complemento01.contains("984") && complemento01.contains("0001") && complemento01.contains("05") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("383")) {
        conta = "11807P";
        contaMovimento = "11807P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("740") && complemento01.contains("0001") && complemento01.contains("18") && complemento01.contains("450")) {
        conta = "2570P";
        contaMovimento = "2570P";
    }
    if (complemento01.contains("861") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("442") && complemento01.contains("0001") && complemento01.contains("10")) {
        conta = "1640689P";
        contaMovimento = "1640689P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("502") && complemento01.contains("802") && complemento01.contains("50")) {
        conta = "1686292P";
        contaMovimento = "1686292P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("75") && complemento01.contains("0001") && complemento01.contains("127") && complemento01.contains("722")) {
        conta = "1625530P";
        contaMovimento = "1625530P";
    }
    if (complemento01.contains("54") && complemento01.contains("751") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("306") && complemento01.contains("0001")) {
        conta = "3829P";
        contaMovimento = "3829P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("516") && complemento01.contains("082") && complemento01.contains("45")) {
        conta = "1691882P";
        contaMovimento = "1691882P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("636") && complemento01.contains("91") && complemento01.contains("0001") && complemento01.contains("764")) {
        conta = "1640613P";
        contaMovimento = "1640613P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("348") && complemento01.contains("59") && complemento01.contains("0001") && complemento01.contains("330")) {
        conta = "1685401P";
        contaMovimento = "1685401P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("683") && complemento01.contains("20") && complemento01.contains("129")) {
        conta = "1640530P";
        contaMovimento = "1640530P";
    }
    if (complemento01.contains("574") && complemento01.contains("0001") && complemento01.contains("22") && complemento01.contains("248") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "19381P";
        contaMovimento = "19381P";
    }
    if (complemento01.contains("500") && complemento01.contains("0001") && complemento01.contains("15") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("724")) {
        conta = "6918P";
        contaMovimento = "6918P";
    }
    if (complemento01.contains("97") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("912") && complemento01.contains("977") && complemento01.contains("0001")) {
        conta = "1633700P";
        contaMovimento = "1633700P";
    }
    if (complemento01.contains("58") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("829") && complemento01.contains("865") && complemento01.contains("0002")) {
        conta = "5568P";
        contaMovimento = "5568P";
    }
    if (complemento01.contains("900") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("39") && complemento01.contains("0001") && complemento01.contains("149")) {
        conta = "11913P";
        contaMovimento = "11913P";
    }
    if (complemento01.contains("986") && complemento01.contains("01") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("852")) {
        conta = "1694703P";
        contaMovimento = "1694703P";
    }
    if (complemento01.contains("80") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("010") && complemento01.contains("211")) {
        conta = "1691880P";
        contaMovimento = "1691880P";
    }
    if (complemento01.contains("107") && complemento01.contains("020") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("18") && complemento01.contains("0001")) {
        conta = "13439P";
        contaMovimento = "13439P";
    }
    if (complemento01.contains("237") && complemento01.contains("034") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("00") && complemento01.contains("0001")) {
        conta = "6483P";
        contaMovimento = "6483P";
    }
    if (complemento01.contains("52") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("924") && complemento01.contains("503")) {
        conta = "9949P";
        contaMovimento = "9949P";
    }
    if (complemento01.contains("925") && complemento01.contains("59") && complemento01.contains("0001") && complemento01.contains("530") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5575P";
        contaMovimento = "5575P";
    }
    if (complemento01.contains("93") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("320") && complemento01.contains("668") && complemento01.contains("0001")) {
        conta = "1698343P";
        contaMovimento = "1698343P";
    }
    if (complemento01.contains("777") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("992") && complemento01.contains("0001") && complemento01.contains("35")) {
        conta = "4917P";
        contaMovimento = "4917P";
    }
    if (complemento01.contains("65") && complemento01.contains("367") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("307")) {
        conta = "1613938P";
        contaMovimento = "1613938P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("17") && complemento01.contains("0001") && complemento01.contains("788") && complemento01.contains("342")) {
        conta = "1695135P";
        contaMovimento = "1695135P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("701") && complemento01.contains("0001") && complemento01.contains("50") && complemento01.contains("620")) {
        conta = "1690390P";
        contaMovimento = "1690390P";
    }
    if (complemento01.contains("881") && complemento01.contains("80") && complemento01.contains("0004") && complemento01.contains("917") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1696577P";
        contaMovimento = "1696577P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("930") && complemento01.contains("0001") && complemento01.contains("279") && complemento01.contains("33")) {
        conta = "1640628P";
        contaMovimento = "1640628P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("562") && complemento01.contains("39") && complemento01.contains("415") && complemento01.contains("0001")) {
        conta = "11974P";
        contaMovimento = "11974P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("747") && complemento01.contains("45") && complemento01.contains("401")) {
        conta = "1694108P";
        contaMovimento = "1694108P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("90") && complemento01.contains("0001") && complemento01.contains("480") && complemento01.contains("489")) {
        conta = "8915P";
        contaMovimento = "8915P";
    }
    if (complemento01.contains("80") && complemento01.contains("748") && complemento01.contains("282") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001")) {
        conta = "1698778P";
        contaMovimento = "1698778P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("54") && complemento01.contains("0001") && complemento01.contains("928") && complemento01.contains("898")) {
        conta = "9877P";
        contaMovimento = "9877P";
    }
    if (complemento01.contains("0001") && complemento01.contains("52") && complemento01.contains("017") && complemento01.contains("542") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1685389P";
        contaMovimento = "1685389P";
    }
    if (complemento01.contains("60") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("707") && complemento01.contains("172") && complemento01.contains("0001")) {
        conta = "1684231P";
        contaMovimento = "1684231P";
    }
    if (complemento01.contains("0068") && complemento01.contains("233") && complemento01.contains("274") && complemento01.contains("01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "6805P";
        contaMovimento = "6805P";
    }
    if (complemento01.contains("00") && complemento01.contains("0001") && complemento01.contains("738") && complemento01.contains("298") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1652953P";
        contaMovimento = "1652953P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("60") && complemento01.contains("0001") && complemento01.contains("035") && complemento01.contains("228")) {
        conta = "1698342P";
        contaMovimento = "1698342P";
    }
    if (complemento01.contains("914") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("992") && complemento01.contains("0027") && complemento01.contains("77")) {
        conta = "6296P";
        contaMovimento = "6296P";
    }
    if (complemento01.contains("066") && complemento01.contains("0001") && complemento01.contains("53") && complemento01.contains("791") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1695398P";
        contaMovimento = "1695398P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("76") && complemento01.contains("0001") && complemento01.contains("349") && complemento01.contains("277")) {
        conta = "1640574P";
        contaMovimento = "1640574P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("17") && complemento01.contains("0001") && complemento01.contains("827") && complemento01.contains("815")) {
        conta = "1638239P";
        contaMovimento = "1638239P";
    }
    if (complemento01.contains("94") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("421") && complemento01.contains("314") && complemento01.contains("0001")) {
        conta = "1693271P";
        contaMovimento = "1693271P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("015") && complemento01.contains("301") && complemento01.contains("0001") && complemento01.contains("55")) {
        conta = "1693074P";
        contaMovimento = "1693074P";
    }
    if (complemento01.contains("0001") && complemento01.contains("11") && complemento01.contains("793") && complemento01.contains("582") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640777P";
        contaMovimento = "1640777P";
    }
    if (complemento01.contains("05") && complemento01.contains("0553") && complemento01.contains("075") && complemento01.contains("409") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1031624P";
        contaMovimento = "1031624P";
    }
    if (complemento01.contains("977") && complemento01.contains("0004") && complemento01.contains("70") && complemento01.contains("499") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1695965P";
        contaMovimento = "1695965P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("049") && complemento01.contains("631") && complemento01.contains("90")) {
        conta = "1693977P";
        contaMovimento = "1693977P";
    }
    if (complemento01.contains("158") && complemento01.contains("81") && complemento01.contains("0001") && complemento01.contains("895") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1680047P";
        contaMovimento = "1680047P";
    }
    if (complemento01.contains("0002") && complemento01.contains("21") && complemento01.contains("758") && complemento01.contains("383") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640523P";
        contaMovimento = "1640523P";
    }
    if (complemento01.contains("17") && complemento01.contains("0001") && complemento01.contains("953") && complemento01.contains("217") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1030146P";
        contaMovimento = "1030146P";
    }
    if (complemento01.contains("847") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("20") && complemento01.contains("0001") && complemento01.contains("429")) {
        conta = "1640793P";
        contaMovimento = "1640793P";
    }
    if (complemento01.contains("41") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("110") && complemento01.contains("818") && complemento01.contains("0028")) {
        conta = "1640890P";
        contaMovimento = "1640890P";
    }
    if (complemento01.contains("73") && complemento01.contains("0001") && complemento01.contains("703") && complemento01.contains("871") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8120P";
        contaMovimento = "8120P";
    }
    if (complemento01.contains("36") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("557") && complemento01.contains("699") && complemento01.contains("0001")) {
        conta = "7922P";
        contaMovimento = "7922P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("170") && complemento01.contains("0001") && complemento01.contains("89") && complemento01.contains("012")) {
        conta = "1691112P";
        contaMovimento = "1691112P";
    }
    if (complemento01.contains("119") && complemento01.contains("0001") && complemento01.contains("70") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("612")) {
        conta = "2586P";
        contaMovimento = "2586P";
    }
    if (complemento01.contains("831") && complemento01.contains("00") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("016")) {
        conta = "11636P";
        contaMovimento = "11636P";
    }
    if (complemento01.contains("53") && complemento01.contains("0001") && complemento01.contains("629") && complemento01.contains("236") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5618P";
        contaMovimento = "5618P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("368") && complemento01.contains("0001") && complemento01.contains("01") && complemento01.contains("795")) {
        conta = "6051P";
        contaMovimento = "6051P";
    }
    if (complemento01.contains("804") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("771") && complemento01.contains("0001") && complemento01.contains("12")) {
        conta = "6505P";
        contaMovimento = "6505P";
    }
    if (complemento01.contains("22") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("827") && complemento01.contains("533") && complemento01.contains("0001")) {
        conta = "1694221P";
        contaMovimento = "1694221P";
    }
    if (nomeOrigem.contains("83") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0007") && nomeOrigem.contains("428") && nomeOrigem.contains("307")) {
        conta = "3667P";
        contaMovimento = "3667P";
    }
    if (nomeOrigem.contains("0008") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("428") && nomeOrigem.contains("64") && nomeOrigem.contains("307")) {
        conta = "3560P";
        contaMovimento = "3560P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("428") && nomeOrigem.contains("307") && nomeOrigem.contains("0015") && nomeOrigem.contains("93")) {
        conta = "5856P";
        contaMovimento = "5856P";
    }
    if (nomeOrigem.contains("397") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("554") && nomeOrigem.contains("0001") && nomeOrigem.contains("63")) {
        conta = "1699597P";
        contaMovimento = "1699597P";
    }
    if (nomeOrigem.contains("21") && nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("939") && nomeOrigem.contains("581")) {
        conta = "429315P";
        contaMovimento = "429315P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("80") && nomeOrigem.contains("674") && nomeOrigem.contains("265") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2698P";
        contaMovimento = "2698P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0001") && nomeOrigem.contains("43") && nomeOrigem.contains("378") && nomeOrigem.contains("899")) {
        conta = "1685390P";
        contaMovimento = "1685390P";
    }
    if (nomeOrigem.contains("54") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("848") && nomeOrigem.contains("082") && nomeOrigem.contains("0001")) {
        conta = "1640526P";
        contaMovimento = "1640526P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("907") && nomeOrigem.contains("585") && nomeOrigem.contains("0004") && nomeOrigem.contains("04")) {
        conta = "1696239P";
        contaMovimento = "1696239P";
    }
    if (nomeOrigem.contains("847") && nomeOrigem.contains("70") && nomeOrigem.contains("0001") && nomeOrigem.contains("508") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640723P";
        contaMovimento = "1640723P";
    }
    if (nomeOrigem.contains("541") && nomeOrigem.contains("660") && nomeOrigem.contains("0004") && nomeOrigem.contains("10") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640555P";
        contaMovimento = "1640555P";
    }
    if (nomeOrigem.contains("59") && nomeOrigem.contains("0001") && nomeOrigem.contains("304") && nomeOrigem.contains("063") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691883P";
        contaMovimento = "1691883P";
    }
    if (nomeOrigem.contains("47") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("656") && nomeOrigem.contains("984") && nomeOrigem.contains("0001")) {
        conta = "1640708P";
        contaMovimento = "1640708P";
    }
    if (nomeOrigem.contains("61") && nomeOrigem.contains("0001") && nomeOrigem.contains("858") && nomeOrigem.contains("370") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1699599P";
        contaMovimento = "1699599P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("871") && nomeOrigem.contains("048") && nomeOrigem.contains("99") && nomeOrigem.contains("0001")) {
        conta = "2999P";
        contaMovimento = "2999P";
    }
    if (nomeOrigem.contains("371") && nomeOrigem.contains("0003") && nomeOrigem.contains("40") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("610")) {
        conta = "1624108P";
        contaMovimento = "1624108P";
    }
    if (nomeOrigem.contains("08") && nomeOrigem.contains("0001") && nomeOrigem.contains("036") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("545")) {
        conta = "1640366P";
        contaMovimento = "1640366P";
    }
    if (nomeOrigem.contains("99") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("801") && nomeOrigem.contains("0001") && nomeOrigem.contains("105")) {
        conta = "1694702P";
        contaMovimento = "1694702P";
    }
    if (nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("394") && nomeOrigem.contains("587") && nomeOrigem.contains("40")) {
        conta = "1683619P";
        contaMovimento = "1683619P";
    }
    if (nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("228") && nomeOrigem.contains("109") && nomeOrigem.contains("95")) {
        conta = "1699875P";
        contaMovimento = "1699875P";
    }
    if (nomeOrigem.contains("452") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("322") && nomeOrigem.contains("0001") && nomeOrigem.contains("02")) {
        conta = "3575P";
        contaMovimento = "3575P";
    }
    if (nomeOrigem.contains("00") && nomeOrigem.contains("9000") && nomeOrigem.contains("678") && nomeOrigem.contains("345") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1699754P";
        contaMovimento = "1699754P";
    }
    if (nomeOrigem.contains("07") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("492") && nomeOrigem.contains("473") && nomeOrigem.contains("0001")) {
        conta = "1695260P";
        contaMovimento = "1695260P";
    }
    if (nomeOrigem.contains("08") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("418") && nomeOrigem.contains("975") && nomeOrigem.contains("0001")) {
        conta = "1699872P";
        contaMovimento = "1699872P";
    }
    if (nomeOrigem.contains("23") && nomeOrigem.contains("0001") && nomeOrigem.contains("961") && nomeOrigem.contains("695") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1028140P";
        contaMovimento = "1028140P";
    }
    if (nomeOrigem.contains("469") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("701") && nomeOrigem.contains("0050") && nomeOrigem.contains("55")) {
        conta = "2845P";
        contaMovimento = "2845P";
    }
    if (nomeOrigem.contains("01") && nomeOrigem.contains("0001") && nomeOrigem.contains("793") && nomeOrigem.contains("896") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "35P";
        contaMovimento = "35P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("64") && nomeOrigem.contains("0001") && nomeOrigem.contains("894") && nomeOrigem.contains("757")) {
        conta = "1699882P";
        contaMovimento = "1699882P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("266") && nomeOrigem.contains("769") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("24")) {
        conta = "1616313P";
        contaMovimento = "1616313P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("967") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("933") && nomeOrigem.contains("45")) {
        conta = "1694842P";
        contaMovimento = "1694842P";
    }
    if (nomeOrigem.contains("54") && nomeOrigem.contains("0001") && nomeOrigem.contains("622") && nomeOrigem.contains("933") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1696427P";
        contaMovimento = "1696427P";
    }
    if (nomeOrigem.contains("730") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("16") && nomeOrigem.contains("0001") && nomeOrigem.contains("166")) {
        conta = "1638515P";
        contaMovimento = "1638515P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("609") && nomeOrigem.contains("991") && nomeOrigem.contains("54") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1699873P";
        contaMovimento = "1699873P";
    }
    if (nomeOrigem.contains("769") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("94") && nomeOrigem.contains("0001") && nomeOrigem.contains("368")) {
        conta = "1699600P";
        contaMovimento = "1699600P";
    }
    if (nomeOrigem.contains("331") && nomeOrigem.contains("339") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("51") && nomeOrigem.contains("0001")) {
        conta = "1699868P";
        contaMovimento = "1699868P";
    }
    if (nomeOrigem.contains("99") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("928") && nomeOrigem.contains("391") && nomeOrigem.contains("0001")) {
        conta = "1635639P";
        contaMovimento = "1635639P";
    }
    if (nomeOrigem.contains("218") && nomeOrigem.contains("10") && nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("308")) {
        conta = "1617386P";
        contaMovimento = "1617386P";
    }
    if (nomeOrigem.contains("241") && nomeOrigem.contains("0006") && nomeOrigem.contains("279") && nomeOrigem.contains("02") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640436P";
        contaMovimento = "1640436P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("701") && nomeOrigem.contains("0003") && nomeOrigem.contains("57") && nomeOrigem.contains("273")) {
        conta = "1696578P";
        contaMovimento = "1696578P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("639") && nomeOrigem.contains("53") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("634")) {
        conta = "1620029P";
        contaMovimento = "1620029P";
    }
    if (nomeOrigem.contains("772") && nomeOrigem.contains("48") && nomeOrigem.contains("748") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0006")) {
        conta = "17185P";
        contaMovimento = "17185P";
    }
    if (nomeOrigem.contains("988") && nomeOrigem.contains("435") && nomeOrigem.contains("86") && nomeOrigem.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1697038P";
        contaMovimento = "1697038P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("897") && nomeOrigem.contains("089") && nomeOrigem.contains("0001") && nomeOrigem.contains("56")) {
        conta = "353537P";
        contaMovimento = "353537P";
    }
    if (nomeOrigem.contains("064") && nomeOrigem.contains("20") && nomeOrigem.contains("0001") && nomeOrigem.contains("556") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "14201P";
        contaMovimento = "14201P";
    }
    if (nomeOrigem.contains("317") && nomeOrigem.contains("697") && nomeOrigem.contains("0004") && nomeOrigem.contains("85") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "13872P";
        contaMovimento = "13872P";
    }
    if (nomeOrigem.contains("0005") && nomeOrigem.contains("107") && nomeOrigem.contains("394") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("88")) {
        conta = "4318P";
        contaMovimento = "4318P";
    }
    if (nomeOrigem.contains("732") && nomeOrigem.contains("0001") && nomeOrigem.contains("12") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("078")) {
        conta = "1694523P";
        contaMovimento = "1694523P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("432") && nomeOrigem.contains("678") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("74")) {
        conta = "12539P";
        contaMovimento = "12539P";
    }
    if (nomeOrigem.contains("068") && nomeOrigem.contains("0001") && nomeOrigem.contains("06") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("909")) {
        conta = "633";
        contaMovimento = "633";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("845") && nomeOrigem.contains("971") && nomeOrigem.contains("42") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1682260P";
        contaMovimento = "1682260P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("92") && nomeOrigem.contains("0001") && nomeOrigem.contains("800") && nomeOrigem.contains("118")) {
        conta = "3091P";
        contaMovimento = "3091P";
    }
    if (nomeOrigem.contains("52") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("673") && nomeOrigem.contains("480") && nomeOrigem.contains("0009")) {
        conta = "12689P";
        contaMovimento = "12689P";
    }
    if (nomeOrigem.contains("72") && nomeOrigem.contains("0001") && nomeOrigem.contains("414") && nomeOrigem.contains("809") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5608P";
        contaMovimento = "5608P";
    }
    if (nomeOrigem.contains("0001") && nomeOrigem.contains("674") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("22") && nomeOrigem.contains("708")) {
        conta = "9705P";
        contaMovimento = "9705P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("0094") && nomeOrigem.contains("54") && nomeOrigem.contains("670") && nomeOrigem.contains("085")) {
        conta = "667";
        contaMovimento = "667";
    }
    if (documento.contains("FERIAS") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "161";
        contaMovimento = "161";
    }
    if (documento.contains("ICMS12") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "195";
        contaMovimento = "195";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("ICMS")) {
        conta = "203";
        contaMovimento = "203";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("IRPJ01")) {
        conta = "190";
        contaMovimento = "190";
    }
    if (documento.contains("CSLL01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "199";
        contaMovimento = "199";
    }
    if (documento.contains("ISSQN01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "201";
        contaMovimento = "201";
    }
    if (documento.contains("PIS01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "197";
        contaMovimento = "197";
    }
    if (documento.contains("INSS01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "171";
        contaMovimento = "171";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("INSS")) {
        conta = "171";
        contaMovimento = "171";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("COFINS01")) {
        conta = "196";
        contaMovimento = "196";
    }
    if (documento.contains("FGTS01") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "172";
        contaMovimento = "172";
    }
    if (documento.contains("IRRF12") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "184";
        contaMovimento = "184";
    }
    if (documento.contains("MULTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1168";
        contaMovimento = "1168";
    }
    if (documento.contains("IOF") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "5180";
        contaMovimento = "5180";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("ISSQN03")) {
        conta = "201";
        contaMovimento = "201";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("PIS03")) {
        conta = "197";
        contaMovimento = "197";
    }
    if (documento.contains("COFINS03") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "196";
        contaMovimento = "196";
    }
    if (documento.contains("IRPJ04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "190";
        contaMovimento = "190";
    }
    if (documento.contains("ISSQN04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "201";
        contaMovimento = "201";
    }
    if (documento.contains("PIS04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "197";
        contaMovimento = "197";
    }
    if (documento.contains("CSLL04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "199";
        contaMovimento = "199";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("COFINS04")) {
        conta = "196";
        contaMovimento = "196";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("FGTS04")) {
        conta = "172";
        contaMovimento = "172";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("FGTS")) {
        conta = "172";
        contaMovimento = "172";
    }
    if (documento.contains("IRRF04") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "184";
        contaMovimento = "184";
    }
    if (documento.contains("ISSQN05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "201";
        contaMovimento = "201";
    }
    if (documento.contains("PIS05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "197";
        contaMovimento = "197";
    }
    if (documento.contains("COFINS05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "196";
        contaMovimento = "196";
    }
    if (documento.contains("IRRF05") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "187";
        contaMovimento = "187";
    }
    if (documento.contains("IPTU2024VE") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "573";
        contaMovimento = "573";
    }
    if (documento.contains("TAXA JUNTA") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "656";
        contaMovimento = "656";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("TAXA BB")) {
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
    }
    if (nomeOrigem.contains("15") && nomeOrigem.contains("0001") && nomeOrigem.contains("204") && nomeOrigem.contains("134") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "7458P";
        contaMovimento = "7458P";
    }
    if (complemento01.contains("02") && complemento01.contains("0001") && complemento01.contains("073") && complemento01.contains("135") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "8321P";
        contaMovimento = "8321P";
    }
    if (complemento01.contains("58") && complemento01.contains("0001") && complemento01.contains("645") && complemento01.contains("133") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "9469P";
        contaMovimento = "9469P";
    }
    if (complemento01.contains("90") && complemento01.contains("0001") && complemento01.contains("136") && complemento01.contains("253") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "15301P";
        contaMovimento = "15301P";
    }
    if (complemento01.contains("95") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("413") && complemento01.contains("701") && complemento01.contains("0001")) {
        conta = "1640470P";
        contaMovimento = "1640470P";
    }
    if (complemento01.contains("0013") && complemento01.contains("43") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("524") && complemento01.contains("952")) {
        conta = "1634543P";
        contaMovimento = "1634543P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("553") && complemento01.contains("13") && complemento01.contains("454")) {
        conta = "1683629P";
        contaMovimento = "1683629P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("0001") && complemento01.contains("13") && complemento01.contains("822") && complemento01.contains("258")) {
        conta = "12032P";
        contaMovimento = "12032P";
    }
    if (complemento01.contains("0006") && complemento01.contains("139") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("26") && complemento01.contains("066")) {
        conta = "1613927P";
        contaMovimento = "1613927P";
    }
    if (complemento01.contains("890") && complemento01.contains("252") && complemento01.contains("13") && complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1617868P";
        contaMovimento = "1617868P";
    }
    if (complemento01.contains("13") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("551") && complemento01.contains("867") && complemento01.contains("0001")) {
        conta = "17330P";
        contaMovimento = "17330P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("035") && complemento01.contains("113") && complemento01.contains("08") && complemento01.contains("0001")) {
        conta = "17140P";
        contaMovimento = "17140P";
    }
    if (complemento01.contains("0001") && complemento01.contains("13") && complemento01.contains("583") && complemento01.contains("633") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "2665P";
        contaMovimento = "2665P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("372") && complemento01.contains("013") && complemento01.contains("0001") && complemento01.contains("65")) {
        conta = "921915P";
        contaMovimento = "921915P";
    }
    if (complemento01.contains("69") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("013") && complemento01.contains("824") && complemento01.contains("0001")) {
        conta = "6495P";
        contaMovimento = "6495P";
    }
    if (complemento01.contains("735") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("00") && complemento01.contains("0002") && complemento01.contains("713")) {
        conta = "1681619P";
        contaMovimento = "1681619P";
    }
    if (complemento01.contains("13") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("624") && complemento01.contains("109") && complemento01.contains("0001")) {
        conta = "1632655P";
        contaMovimento = "1632655P";
    }
    if (complemento01.contains("33") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("136") && complemento01.contains("454") && complemento01.contains("0001")) {
        conta = "353510P";
        contaMovimento = "353510P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("435") && complemento01.contains("113") && complemento01.contains("36")) {
        conta = "1428085P";
        contaMovimento = "1428085P";
    }
    if (complemento01.contains("0001") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("531") && complemento01.contains("413") && complemento01.contains("84")) {
        conta = "3482P";
        contaMovimento = "3482P";
    }
    if (complemento01.contains("87") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("313") && complemento01.contains("641") && complemento01.contains("0001")) {
        conta = "6466P";
        contaMovimento = "6466P";
    }
    if (complemento01.contains("0001") && complemento01.contains("06") && complemento01.contains("043") && complemento01.contains("130") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1691362P";
        contaMovimento = "1691362P";
    }
    if (complemento01.contains("40") && complemento01.contains("0001") && complemento01.contains("913") && complemento01.contains("618") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1693379P";
        contaMovimento = "1693379P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("87") && complemento01.contains("0001") && complemento01.contains("881") && complemento01.contains("132")) {
        conta = "1640431P";
        contaMovimento = "1640431P";
    }
    if (complemento01.contains("85") && complemento01.contains("0001") && complemento01.contains("113") && complemento01.contains("321") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "15485P";
        contaMovimento = "15485P";
    }
    if (complemento01.contains("134") && tipoPlanilha.contains("MOVIMENTO") && complemento01.contains("282") && complemento01.contains("0001") && complemento01.contains("92")) {
        conta = "1683642P";
        contaMovimento = "1683642P";
    }
    if (complemento01.contains("813") && complemento01.contains("24") && complemento01.contains("0001") && complemento01.contains("802") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "1640612P";
        contaMovimento = "1640612P";
    }
    if (nomeOrigem.contains("34") && nomeOrigem.contains("132") && nomeOrigem.contains("0001") && nomeOrigem.contains("728") && tipoPlanilha.contains("MOVIMENTO")) {
        conta = "16451P";
        contaMovimento = "16451P";
    }
    if (nomeOrigem.contains("893") && tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("84") && nomeOrigem.contains("0001") && nomeOrigem.contains("913")) {
        conta = "15134P";
        contaMovimento = "15134P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && nomeOrigem.contains("81") && nomeOrigem.contains("0002") && nomeOrigem.contains("413") && nomeOrigem.contains("630")) {
        conta = "1630984P";
        contaMovimento = "1630984P";
    }
    if (tipoPlanilha.contains("MOVIMENTO") && documento.contains("FGTS13")) {
        conta = "172";
        contaMovimento = "172";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) { //ROT-2023-1093746
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) { //ROT-2023-1093778
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) { //ROT-2023-1097268
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) { //ROT-2023-11102111
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomePortador).contains("EM BRANCO")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) { //ROT-2023-0140950
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).startsWith("MO")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).contains("DEPREC")) { //ROT-2023-1094472
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) { //ROT-2021-0612707
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) { //ROT-2020-058689
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) { //ROT-2021-0311455
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) { //ROT-2021-0311491
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) { //ROT-2021-0211301
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) { //ROT-2021-0411996
        conta = "IGNORARINVERTE";
        contaMovimento = "IGNORARINVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) { //ROT-2021-0512225
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) { //ROT-2021-0512280
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) { //ROT-2021-0612672
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) { //ROT-2020-079383
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) { //ROT-2021-0612733
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    return conta;
}
public String getContaMovimento3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) { //ROT-2021-0612669
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0220368
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) { //ROT-2022-0421802
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-0421940
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) { //ROT-2022-1033321
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) { //ROT-2022-1239716
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) { //ROT-2024-03128218
        conta = "IGNORAR";
        contaMovimento = "IGNORAR";
        return conta;
    }
    return conta;
}
public String getContaMovimento4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getRegraContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_TRUDATA1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("PIX ENVIADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_TRUDATA1', Fornecedor/Cliente contem 'PIX ENVIADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGARME2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGARME2', Complemento (06) nao contem 'PAGA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PUNTO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("PAGO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PUNTO2', Complemento (06) nao contem 'PAGO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("VALOR") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("LIQUIDADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'VALOR', Fornecedor/Cliente contem 'LIQUIDADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_GETNET5") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("SALDO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_GETNET5', Fornecedor/Cliente contem 'SALDO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(nomePortador).contains("EM BRANCO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Portador contem 'EM BRANCO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AME1") &&
        StringUtil.removeSpecialCharsToUC(complemento04).equals("")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AME1', Complemento (04) contem 'EM BRANCO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).startsWith("MO")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Documento/NF comeca com 'MO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") &&
        StringUtil.removeSpecialCharsToUC(documento).contains("DEPREC")) {
        conta = "Quando Tipo Planilha contem 'MOVIMENTO', Documento/NF contem 'DEPREC', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("PAGAMENTO") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ASSINATURA") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("SAQUE") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (04) nao contem 'PAGAMENTO', Complemento (04) nao contem 'ASSINATURA', Complemento (04) nao contem 'SAQUE', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_PAGSEGURO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_PAGSEGURO1")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_PAGSEGURO1', Complemento (03) nao contem 'APROVAD', Complemento (01) contem 'CARTAO_PAGSEGURO1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("CONFIRMED")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO1', Complemento (04) nao contem 'CONFIRMED', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_ALELO2") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_ALELO2', Complemento (04) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DETODOS") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("APROVAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DETODOS', Complemento (03) nao contem 'APROVAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("COMPLETO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (04) nao contem 'COMPLETO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("USD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFA', Complemento (03) contem 'USD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("VENDAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'VENDAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_HOTMART1") &&
        StringUtil.removeSpecialCharsToUC(complemento02).equals("TARIFAINTERNACIONAL") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("BRL")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_HOTMART1', Complemento (02) igual a 'TARIFAINTERNACIONAL', Complemento (03) contem 'BRL', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento01).contains("CARTAO_MOIP1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("REEMBOLSO")) {
        conta = "Quando Complemento (01) contem 'CARTAO_MOIP1', Fornecedor/Cliente contem 'REEMBOLSO', CONTA MOVIMENTO SERA = 'IGNORAR'INVERTE";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("DINHEIRO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'DINHEIRO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento03).contains("VIA LOJA") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (03) contem 'VIA LOJA', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (!StringUtil.removeSpecialCharsToUC(complemento04).equals("") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (04) nao contem 'EM BRANCO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(complemento05).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_IFOOD_EXCEL1")) {
        conta = "Quando Complemento (05) contem 'NAO', Tipo Planilha contem 'CARTAO_IFOOD_EXCEL1', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("PRATO") &&
        StringUtil.removeSpecialCharsToUC(complemento01).contains("PRATO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CART")) {
        conta = "Quando Tipo Planilha contem 'PRATO', Complemento (01) contem 'PRATO', Complemento (03) nao contem 'CART', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_POLICARD") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("TRANSFERENCIA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_POLICARD', Complemento (03) contem 'TRANSFERENCIA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("2")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '2', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("3")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '3', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("4")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '4', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("5")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '5', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("6")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '6', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("7")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '7', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("8")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '8', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("9")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '9', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_AIQFOME1") &&
        StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("CANCELADO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_AIQFOME1', Fornecedor/Cliente contem 'CANCELADO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STONE2") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("CANCELAD")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_STONE2', Complemento (04) contem 'CANCELAD', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("10")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '10', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("11")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '11', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("12")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '12', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("13")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '13', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("14")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '14', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("15")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '15', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("16")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '16', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("17")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '17', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SIPAG2") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("18")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_SIPAG2', Complemento (03) contem '18', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO6") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO6', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_BMGCARD") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("NAO") &&
        StringUtil.removeSpecialCharsToUC(complemento04).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_BMGCARD', Complemento (04) contem 'NAO', Complemento (04) contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO8") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO8', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_REDECARD3") &&
        !StringUtil.removeSpecialCharsToUC(complemento06).contains("APROVADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_REDECARD3', Complemento (06) nao contem 'APROVADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).equals("") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'EM BRANCO', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'TARIFA', Complemento (03) contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_CIELO9") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("DEBITOCESSAO") &&
        !StringUtil.removeSpecialCharsToUC(complemento03).contains("CESSAO")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_CIELO9', Complemento (05) contem 'DEBITOCESSAO', Complemento (03) nao contem 'CESSAO', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_DOM1") &&
        !StringUtil.removeSpecialCharsToUC(complemento04).contains("ENTRADA")) {
        conta = "Quando Tipo Planilha contem 'CARTAO_DOM1', Complemento (04) nao contem 'ENTRADA', CONTA MOVIMENTO SERA = 'IGNORAR'";
        return conta;
    }
    return conta;
}
public String getContaPortador(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (nomePortador.contains("5345")) {
        conta = "7";
        contaMovimento = "7";
    }
    if (nomePortador.contains("5368")) {
        conta = "622";
        contaMovimento = "622";
    }
    if (nomePortador.contains("5339")) {
        conta = "9";
        contaMovimento = "9";
    }
    if (nomePortador.contains("5340")) {
        conta = "4108";
        contaMovimento = "4108";
    }
    if (nomePortador.contains("5387")) {
        conta = "1596";
        contaMovimento = "1596";
    }
    return conta;
}
public String getContaPortador2(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador3(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador4(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador5(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaPortador6(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros2(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros3(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros4(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros5(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaJuros6(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaDesconto(String contaDesconto, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaDesconto;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMulta(String contaMulta, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("cntaJuros");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMulta;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public boolean getTratarComoExtrato(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoExtrato = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoExtrato;
}
public boolean getTratarComoDesconto(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoDesconto = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoDesconto;
}
public boolean getTratarComoJuros(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarComoJuros = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarComoJuros;
}
public boolean getTratarLinhaIgnorar(String line, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    boolean tratarIgnoraLinha = false;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return tratarIgnoraLinha;
}
public String getTratarValorAlternativo(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoAlternativo  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoAlternativo;
}
public String getTratarComoDiv(String documento, String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoDiv  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoDiv;
}
public String getCodigoClassificacao(String nomeOrigem, JSONObject objHistorico){
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String documento   = objHistorico.optString("documento");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    String classificacao  = objHistorico.optString("classificacao");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoClassificacao  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoClassificacao;
}
public String getModificaData(JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String tipoLancamento  = objHistorico.optString("tipoLancamento");
    String documento    = objHistorico.optString("documento");
    String nomeOrigem    = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    String retornoData  = "";

    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornoData;
}
public String getCampoFiscal(String parametro, JSONObject objHistorico) {
    String especie         = objHistorico.optString("especie");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String returnaCodigo  = "";

    return returnaCodigo.trim();
}
public int getContadorCabecalho(int contador, String line) {
    return contador;
}
public double getValorPrincipal(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorPrincipal = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return valorPrincipal;
}
public String getHistorico(String conta, String histParam, String tipoLancamento, String nomeOrigem, String documento, 
                           String nomePortador, String complemento01, String complemento02, String complemento03, 
                           String nomeArquivo, String codCentroCusto) {
    String historico = "";
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getRegraHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if (!StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("HISTORICOPADRAO"))  historico = "HISTORICO POR REGRA = Quando Fornecedor/Cliente nao contem HISTORICOPADRAO, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("DARF01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem DARF01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("TAXA JUNTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem TAXA JUNTA, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ICMS12"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem ICMS12, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem CRF11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRPJ01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem IRPJ01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("INSS01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem INSS01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FERIAS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem FERIAS, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ICMS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem ICMS, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CSLL01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem CSLL01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem COFINS01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem PIS01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem ISSQN01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("INSS"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem INSS, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRASS01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem IRASS01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRRF12"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem IRRF12, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS13"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem FGTS13, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem FGTS01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF12"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem CRF12, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("DISTRIB"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem DISTRIB, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("MULTA"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem MULTA, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IOF"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem IOF, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem ISSQN03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem PIS03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem COFINS03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Documento/NF contem CRF03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("275") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 448, Complemento (01) contem 275, Complemento (01) contem 0001, Complemento (01) contem 18, HISTORICO = mastercard/visanet";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("677") && StringUtil.removeSpecialCharsToUC(complemento01).contains("758") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 677, Complemento (01) contem 758, Complemento (01) contem 0001, Complemento (01) contem 24, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("46"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 011, Complemento (01) contem 784, Complemento (01) contem 0001, Complemento (01) contem 46, HISTORICO = REF. BRADESCO SAUDE S/A";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("501") && StringUtil.removeSpecialCharsToUC(complemento01).contains("214") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 501, Complemento (01) contem 214, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("570") && StringUtil.removeSpecialCharsToUC(complemento01).contains("714") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 570, Complemento (01) contem 714, Complemento (01) contem 0008, Complemento (01) contem 25, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("982") && StringUtil.removeSpecialCharsToUC(complemento01).contains("383") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 982, Complemento (01) contem 383, Complemento (01) contem 0001, Complemento (01) contem 81, HISTORICO = Pg ref Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("336") && StringUtil.removeSpecialCharsToUC(complemento01).contains("204") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 336, Complemento (01) contem 204, Complemento (01) contem 0001, Complemento (01) contem 73, HISTORICO = RECEBIMENTO CLIENTE CFME EXTRATO BANCARIO";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("596") && StringUtil.removeSpecialCharsToUC(complemento01).contains("453") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 596, Complemento (01) contem 453, Complemento (01) contem 0001, Complemento (01) contem 58, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("270") && StringUtil.removeSpecialCharsToUC(complemento01).contains("966") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 270, Complemento (01) contem 966, Complemento (01) contem 0001, Complemento (01) contem 67, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("571") && StringUtil.removeSpecialCharsToUC(complemento01).contains("415") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 571, Complemento (01) contem 415, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("029") && StringUtil.removeSpecialCharsToUC(complemento01).contains("657") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 029, Complemento (01) contem 657, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("216") && StringUtil.removeSpecialCharsToUC(complemento01).contains("209") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 216, Complemento (01) contem 209, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("588") && StringUtil.removeSpecialCharsToUC(complemento01).contains("763") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 588, Complemento (01) contem 763, Complemento (01) contem 0001, Complemento (01) contem 93, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("710") && StringUtil.removeSpecialCharsToUC(complemento01).contains("439") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 710, Complemento (01) contem 439, Complemento (01) contem 0001, Complemento (01) contem 57, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("980") && StringUtil.removeSpecialCharsToUC(complemento01).contains("181") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 980, Complemento (01) contem 181, Complemento (01) contem 0004, Complemento (01) contem 05, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("248") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 284, Complemento (01) contem 248, Complemento (01) contem 0001, Complemento (01) contem 28, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("954") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 428, Complemento (01) contem 954, Complemento (01) contem 0001, Complemento (01) contem 98, HISTORICO = Fornecedor/Cliente Documento/NF";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("389") && StringUtil.removeSpecialCharsToUC(complemento01).contains("576") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 389, Complemento (01) contem 576, Complemento (01) contem 0001, Complemento (01) contem 34, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("136") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 253, Complemento (01) contem 136, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("792") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 792, Complemento (01) contem 179, Complemento (01) contem 0001, Complemento (01) contem 83, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("330") && StringUtil.removeSpecialCharsToUC(complemento01).contains("148") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 330, Complemento (01) contem 148, Complemento (01) contem 0001, Complemento (01) contem 36, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("238") && StringUtil.removeSpecialCharsToUC(complemento01).contains("801") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 238, Complemento (01) contem 801, Complemento (01) contem 0001, Complemento (01) contem 52, HISTORICO = EMPRESTIMO DO SOCIO -";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("203") && StringUtil.removeSpecialCharsToUC(complemento01).contains("479") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 203, Complemento (01) contem 479, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("054") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 869, Complemento (01) contem 054, Complemento (01) contem 0001, Complemento (01) contem 98, HISTORICO = DEBITO TED TLA";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("064") && StringUtil.removeSpecialCharsToUC(complemento01).contains("714") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 064, Complemento (01) contem 714, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO = Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("091") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 034, Complemento (01) contem 091, Complemento (01) contem 0001, Complemento (01) contem 25, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("105") && StringUtil.removeSpecialCharsToUC(complemento01).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 105, Complemento (01) contem 320, Complemento (01) contem 0001, Complemento (01) contem 92, HISTORICO = Documento/NF Fornecedor/Cliente";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("899") && StringUtil.removeSpecialCharsToUC(complemento01).contains("341") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 899, Complemento (01) contem 341, Complemento (01) contem 0001, Complemento (01) contem 03, HISTORICO = ENERGIA";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("694") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("920") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("57"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 694, Fornecedor/Cliente contem 920, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 57, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("117") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("351") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 117, Fornecedor/Cliente contem 351, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("214") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("121") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("36"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 214, Fornecedor/Cliente contem 121, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 36, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("331") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("788") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0055") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 331, Fornecedor/Cliente contem 788, Fornecedor/Cliente contem 0055, Fornecedor/Cliente contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("134") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("204") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("15"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 134, Fornecedor/Cliente contem 204, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 15, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("214") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("121") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0003") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 214, Fornecedor/Cliente contem 121, Fornecedor/Cliente contem 0003, Fornecedor/Cliente contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0010") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("89"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 428, Fornecedor/Cliente contem 307, Fornecedor/Cliente contem 0010, Fornecedor/Cliente contem 89, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("125") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("433") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 125, Fornecedor/Cliente contem 433, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 73, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("169") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("558") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 169, Fornecedor/Cliente contem 558, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("369") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("028") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 369, Fornecedor/Cliente contem 028, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0020") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 428, Fornecedor/Cliente contem 307, Fornecedor/Cliente contem 0020, Fornecedor/Cliente contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("889") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("039") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 889, Fornecedor/Cliente contem 039, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0005") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 428, Fornecedor/Cliente contem 307, Fornecedor/Cliente contem 0005, Fornecedor/Cliente contem 11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("273") && StringUtil.removeSpecialCharsToUC(complemento01).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0009") && StringUtil.removeSpecialCharsToUC(complemento01).contains("35"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 273, Complemento (01) contem 320, Complemento (01) contem 0009, Complemento (01) contem 35, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("989") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("926") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("51"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 989, Fornecedor/Cliente contem 926, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 51, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0022") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("12"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 428, Fornecedor/Cliente contem 307, Fornecedor/Cliente contem 0022, Fornecedor/Cliente contem 12, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("905") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("579") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("31"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 905, Fornecedor/Cliente contem 579, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 31, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("016") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("440") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("62"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 016, Fornecedor/Cliente contem 440, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 62, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("815") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("619") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("17"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 815, Fornecedor/Cliente contem 619, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 17, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("625") && StringUtil.removeSpecialCharsToUC(complemento01).contains("708") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 625, Complemento (01) contem 708, Complemento (01) contem 0005, Complemento (01) contem 24, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("625") && StringUtil.removeSpecialCharsToUC(complemento01).contains("708") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 625, Complemento (01) contem 708, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("152") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("773") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("19"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 152, Fornecedor/Cliente contem 773, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 19, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("180") && StringUtil.removeSpecialCharsToUC(complemento01).contains("337") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 180, Complemento (01) contem 337, Complemento (01) contem 0001, Complemento (01) contem 53, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("659") && StringUtil.removeSpecialCharsToUC(complemento01).contains("166") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 659, Complemento (01) contem 166, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("729") && StringUtil.removeSpecialCharsToUC(complemento01).contains("954") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 729, Complemento (01) contem 954, Complemento (01) contem 0001, Complemento (01) contem 44, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("301") && StringUtil.removeSpecialCharsToUC(complemento01).contains("846") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 301, Complemento (01) contem 846, Complemento (01) contem 0001, Complemento (01) contem 67, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("615") && StringUtil.removeSpecialCharsToUC(complemento01).contains("601") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 615, Complemento (01) contem 601, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("886") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 886, Complemento (01) contem 934, Complemento (01) contem 0001, Complemento (01) contem 23, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("402") && StringUtil.removeSpecialCharsToUC(complemento01).contains("438") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 402, Complemento (01) contem 438, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("944") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 384, Complemento (01) contem 944, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("309") && StringUtil.removeSpecialCharsToUC(complemento01).contains("536") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 309, Complemento (01) contem 536, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("939") && StringUtil.removeSpecialCharsToUC(complemento01).contains("344") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 939, Complemento (01) contem 344, Complemento (01) contem 0001, Complemento (01) contem 84, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("234") && StringUtil.removeSpecialCharsToUC(complemento01).contains("162") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 234, Complemento (01) contem 162, Complemento (01) contem 0001, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("286") && StringUtil.removeSpecialCharsToUC(complemento01).contains("425") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 286, Complemento (01) contem 425, Complemento (01) contem 0001, Complemento (01) contem 25, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("191") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 191, Complemento (01) contem 869, Complemento (01) contem 0001, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("619") && StringUtil.removeSpecialCharsToUC(complemento01).contains("747") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 619, Complemento (01) contem 747, Complemento (01) contem 0001, Complemento (01) contem 73, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 448, Complemento (01) contem 977, Complemento (01) contem 0004, Complemento (01) contem 74, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("390") && StringUtil.removeSpecialCharsToUC(complemento01).contains("209") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 390, Complemento (01) contem 209, Complemento (01) contem 0001, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("417") && StringUtil.removeSpecialCharsToUC(complemento01).contains("345") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 417, Complemento (01) contem 345, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("460") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 815, Complemento (01) contem 460, Complemento (01) contem 0001, Complemento (01) contem 56, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("268") && StringUtil.removeSpecialCharsToUC(complemento01).contains("233") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0007") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 268, Complemento (01) contem 233, Complemento (01) contem 0007, Complemento (01) contem 84, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("135") && StringUtil.removeSpecialCharsToUC(complemento01).contains("073") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 135, Complemento (01) contem 073, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("133") && StringUtil.removeSpecialCharsToUC(complemento01).contains("645") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 133, Complemento (01) contem 645, Complemento (01) contem 0001, Complemento (01) contem 58, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("880") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 815, Complemento (01) contem 880, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("819") && StringUtil.removeSpecialCharsToUC(complemento01).contains("005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 819, Complemento (01) contem 005, Complemento (01) contem 0001, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("759") && StringUtil.removeSpecialCharsToUC(complemento01).contains("928") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("66"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 759, Complemento (01) contem 928, Complemento (01) contem 0001, Complemento (01) contem 66, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0038") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 463, Complemento (01) contem 456, Complemento (01) contem 0038, Complemento (01) contem 82, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("200") && StringUtil.removeSpecialCharsToUC(complemento01).contains("694") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("97"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 200, Complemento (01) contem 694, Complemento (01) contem 0001, Complemento (01) contem 97, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("247") && StringUtil.removeSpecialCharsToUC(complemento01).contains("576") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 247, Complemento (01) contem 576, Complemento (01) contem 0001, Complemento (01) contem 83, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0017") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 558, Complemento (01) contem 157, Complemento (01) contem 0017, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0797") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 558, Complemento (01) contem 157, Complemento (01) contem 0797, Complemento (01) contem 53, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("094") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0019") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 094, Complemento (01) contem 114, Complemento (01) contem 0019, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("691") && StringUtil.removeSpecialCharsToUC(complemento01).contains("745") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 691, Complemento (01) contem 745, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("885") && StringUtil.removeSpecialCharsToUC(complemento01).contains("855") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 885, Complemento (01) contem 855, Complemento (01) contem 0001, Complemento (01) contem 72, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("890") && StringUtil.removeSpecialCharsToUC(complemento01).contains("199") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 890, Complemento (01) contem 199, Complemento (01) contem 0001, Complemento (01) contem 04, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("245") && StringUtil.removeSpecialCharsToUC(complemento01).contains("071") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 245, Complemento (01) contem 071, Complemento (01) contem 0001, Complemento (01) contem 42, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("433") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 034, Complemento (01) contem 433, Complemento (01) contem 0001, Complemento (01) contem 56, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("517") && StringUtil.removeSpecialCharsToUC(complemento01).contains("503") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 517, Complemento (01) contem 503, Complemento (01) contem 0001, Complemento (01) contem 27, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("094") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 094, Complemento (01) contem 114, Complemento (01) contem 0001, Complemento (01) contem 36, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("766") && StringUtil.removeSpecialCharsToUC(complemento01).contains("054") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 766, Complemento (01) contem 054, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("775") && StringUtil.removeSpecialCharsToUC(complemento01).contains("159") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 775, Complemento (01) contem 159, Complemento (01) contem 0001, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("968") && StringUtil.removeSpecialCharsToUC(complemento01).contains("877") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("69"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 968, Complemento (01) contem 877, Complemento (01) contem 0001, Complemento (01) contem 69, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("275") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 275, Complemento (01) contem 914, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("564") && StringUtil.removeSpecialCharsToUC(complemento01).contains("122") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 564, Complemento (01) contem 122, Complemento (01) contem 0003, Complemento (01) contem 96, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("178") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("880") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("41"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 178, Fornecedor/Cliente contem 880, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 41, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("729") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 729, Complemento (01) contem 896, Complemento (01) contem 0001, Complemento (01) contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("912") && StringUtil.removeSpecialCharsToUC(complemento01).contains("543") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 912, Complemento (01) contem 543, Complemento (01) contem 0001, Complemento (01) contem 36, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("555") && StringUtil.removeSpecialCharsToUC(complemento01).contains("382") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 555, Complemento (01) contem 382, Complemento (01) contem 0001, Complemento (01) contem 33, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("971") && StringUtil.removeSpecialCharsToUC(complemento01).contains("788") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 971, Complemento (01) contem 788, Complemento (01) contem 0001, Complemento (01) contem 34, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("221") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 952, Complemento (01) contem 221, Complemento (01) contem 0001, Complemento (01) contem 10, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("237") && StringUtil.removeSpecialCharsToUC(complemento01).contains("744") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 237, Complemento (01) contem 744, Complemento (01) contem 0001, Complemento (01) contem 85, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("270") && StringUtil.removeSpecialCharsToUC(complemento01).contains("499") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 270, Complemento (01) contem 499, Complemento (01) contem 0001, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("121") && StringUtil.removeSpecialCharsToUC(complemento01).contains("324") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 121, Complemento (01) contem 324, Complemento (01) contem 0001, Complemento (01) contem 64, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("632") && StringUtil.removeSpecialCharsToUC(complemento01).contains("561") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 632, Complemento (01) contem 561, Complemento (01) contem 0001, Complemento (01) contem 27, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("827") && StringUtil.removeSpecialCharsToUC(complemento01).contains("188") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 827, Complemento (01) contem 188, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("061") && StringUtil.removeSpecialCharsToUC(complemento01).contains("646") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 061, Complemento (01) contem 646, Complemento (01) contem 0001, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("971") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 971, Complemento (01) contem 684, Complemento (01) contem 0001, Complemento (01) contem 55, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("230") && StringUtil.removeSpecialCharsToUC(complemento01).contains("427") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 230, Complemento (01) contem 427, Complemento (01) contem 0002, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("140") && StringUtil.removeSpecialCharsToUC(complemento01).contains("667") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 140, Complemento (01) contem 667, Complemento (01) contem 0001, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("216") && StringUtil.removeSpecialCharsToUC(complemento01).contains("874") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 216, Complemento (01) contem 874, Complemento (01) contem 0001, Complemento (01) contem 67, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("285") && StringUtil.removeSpecialCharsToUC(complemento01).contains("621") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 285, Complemento (01) contem 621, Complemento (01) contem 0001, Complemento (01) contem 85, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("930") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 077, Complemento (01) contem 930, Complemento (01) contem 0001, Complemento (01) contem 92, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("272") && StringUtil.removeSpecialCharsToUC(complemento01).contains("825") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 272, Complemento (01) contem 825, Complemento (01) contem 0004, Complemento (01) contem 57, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("301") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 006, Complemento (01) contem 301, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("371") && StringUtil.removeSpecialCharsToUC(complemento01).contains("610") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("69"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 371, Complemento (01) contem 610, Complemento (01) contem 0002, Complemento (01) contem 69, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("656") && StringUtil.removeSpecialCharsToUC(complemento01).contains("068") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 656, Complemento (01) contem 068, Complemento (01) contem 0001, Complemento (01) contem 72, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("909") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 909, Complemento (01) contem 022, Complemento (01) contem 0001, Complemento (01) contem 18, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("097") && StringUtil.removeSpecialCharsToUC(complemento01).contains("542") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 097, Complemento (01) contem 542, Complemento (01) contem 0001, Complemento (01) contem 73, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 289, Complemento (01) contem 793, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("566") && StringUtil.removeSpecialCharsToUC(complemento01).contains("529") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 566, Complemento (01) contem 529, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("177") && StringUtil.removeSpecialCharsToUC(complemento01).contains("641") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 177, Complemento (01) contem 641, Complemento (01) contem 0001, Complemento (01) contem 28, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("226") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 226, Complemento (01) contem 143, Complemento (01) contem 0001, Complemento (01) contem 28, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("926") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 926, Complemento (01) contem 179, Complemento (01) contem 0001, Complemento (01) contem 14, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("243") && StringUtil.removeSpecialCharsToUC(complemento01).contains("202") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 243, Complemento (01) contem 202, Complemento (01) contem 0001, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("353") && StringUtil.removeSpecialCharsToUC(complemento01).contains("055") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 353, Complemento (01) contem 055, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("506") && StringUtil.removeSpecialCharsToUC(complemento01).contains("945") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 506, Complemento (01) contem 945, Complemento (01) contem 0001, Complemento (01) contem 33, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("662") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 784, Complemento (01) contem 662, Complemento (01) contem 0001, Complemento (01) contem 53, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("611") && StringUtil.removeSpecialCharsToUC(complemento01).contains("916") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 611, Complemento (01) contem 916, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 992, Complemento (01) contem 115, Complemento (01) contem 0001, Complemento (01) contem 11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("559") && StringUtil.removeSpecialCharsToUC(complemento01).contains("474") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 559, Complemento (01) contem 474, Complemento (01) contem 0001, Complemento (01) contem 42, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("570") && StringUtil.removeSpecialCharsToUC(complemento01).contains("732") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 570, Complemento (01) contem 732, Complemento (01) contem 0004, Complemento (01) contem 34, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("688") && StringUtil.removeSpecialCharsToUC(complemento01).contains("218") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 688, Complemento (01) contem 218, Complemento (01) contem 0001, Complemento (01) contem 55, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("175") && StringUtil.removeSpecialCharsToUC(complemento01).contains("462") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 175, Complemento (01) contem 462, Complemento (01) contem 0001, Complemento (01) contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("214") && StringUtil.removeSpecialCharsToUC(complemento01).contains("644") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 214, Complemento (01) contem 644, Complemento (01) contem 0001, Complemento (01) contem 07, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("543") && StringUtil.removeSpecialCharsToUC(complemento01).contains("946") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 543, Complemento (01) contem 946, Complemento (01) contem 0001, Complemento (01) contem 58, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("530") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 684, Complemento (01) contem 530, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("436") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 934, Complemento (01) contem 436, Complemento (01) contem 0001, Complemento (01) contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("800") && StringUtil.removeSpecialCharsToUC(complemento01).contains("254") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("48"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 800, Complemento (01) contem 254, Complemento (01) contem 0001, Complemento (01) contem 48, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("237") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 028, Complemento (01) contem 237, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("594") && StringUtil.removeSpecialCharsToUC(complemento01).contains("273") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 594, Complemento (01) contem 273, Complemento (01) contem 0001, Complemento (01) contem 28, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("511") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 435, Complemento (01) contem 511, Complemento (01) contem 0002, Complemento (01) contem 33, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("511") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 435, Complemento (01) contem 511, Complemento (01) contem 0001, Complemento (01) contem 52, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("492") && StringUtil.removeSpecialCharsToUC(complemento01).contains("058") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 492, Complemento (01) contem 058, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("581") && StringUtil.removeSpecialCharsToUC(complemento01).contains("988") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("46"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 581, Complemento (01) contem 988, Complemento (01) contem 0001, Complemento (01) contem 46, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("647") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 534, Complemento (01) contem 647, Complemento (01) contem 0001, Complemento (01) contem 82, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("409") && StringUtil.removeSpecialCharsToUC(complemento01).contains("955") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("49"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 409, Complemento (01) contem 955, Complemento (01) contem 0001, Complemento (01) contem 49, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("368") && StringUtil.removeSpecialCharsToUC(complemento01).contains("618") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 368, Complemento (01) contem 618, Complemento (01) contem 0001, Complemento (01) contem 86, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("155") && StringUtil.removeSpecialCharsToUC(complemento01).contains("140") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 155, Complemento (01) contem 140, Complemento (01) contem 0001, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("372") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 372, Complemento (01) contem 384, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("235") && StringUtil.removeSpecialCharsToUC(complemento01).contains("251") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 235, Complemento (01) contem 251, Complemento (01) contem 0001, Complemento (01) contem 58, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("155") && StringUtil.removeSpecialCharsToUC(complemento01).contains("288") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 155, Complemento (01) contem 288, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("786") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 673, Complemento (01) contem 786, Complemento (01) contem 0001, Complemento (01) contem 85, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("299") && StringUtil.removeSpecialCharsToUC(complemento01).contains("915") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 299, Complemento (01) contem 915, Complemento (01) contem 0001, Complemento (01) contem 42, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("663") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 663, Complemento (01) contem 740, Complemento (01) contem 0001, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("796") && StringUtil.removeSpecialCharsToUC(complemento01).contains("026") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 796, Complemento (01) contem 026, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("256") && StringUtil.removeSpecialCharsToUC(complemento01).contains("493") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 256, Complemento (01) contem 493, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("791") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0014") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 791, Complemento (01) contem 896, Complemento (01) contem 0014, Complemento (01) contem 17, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("306") && StringUtil.removeSpecialCharsToUC(complemento01).contains("967") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 306, Complemento (01) contem 967, Complemento (01) contem 0001, Complemento (01) contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("431") && StringUtil.removeSpecialCharsToUC(complemento01).contains("369") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("66"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 431, Complemento (01) contem 369, Complemento (01) contem 0001, Complemento (01) contem 66, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("617") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0039") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 147, Complemento (01) contem 617, Complemento (01) contem 0039, Complemento (01) contem 14, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("825") && StringUtil.removeSpecialCharsToUC(complemento01).contains("291") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 825, Complemento (01) contem 291, Complemento (01) contem 0001, Complemento (01) contem 64, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("991") && StringUtil.removeSpecialCharsToUC(complemento01).contains("528") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 991, Complemento (01) contem 528, Complemento (01) contem 0001, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("045") && StringUtil.removeSpecialCharsToUC(complemento01).contains("186") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 045, Complemento (01) contem 186, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("902") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 902, Complemento (01) contem 673, Complemento (01) contem 0001, Complemento (01) contem 07, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("413") && StringUtil.removeSpecialCharsToUC(complemento01).contains("701") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 413, Complemento (01) contem 701, Complemento (01) contem 0001, Complemento (01) contem 95, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("107") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 422, Complemento (01) contem 107, Complemento (01) contem 0001, Complemento (01) contem 23, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 922, Complemento (01) contem 053, Complemento (01) contem 0001, Complemento (01) contem 30, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("746") && StringUtil.removeSpecialCharsToUC(complemento01).contains("559") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 746, Complemento (01) contem 559, Complemento (01) contem 0001, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("142") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("822") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("75"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 142, Fornecedor/Cliente contem 822, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 75, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("144") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 351, Complemento (01) contem 144, Complemento (01) contem 0001, Complemento (01) contem 86, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("181") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("63"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 422, Complemento (01) contem 181, Complemento (01) contem 0001, Complemento (01) contem 63, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("765") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("62"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 765, Complemento (01) contem 914, Complemento (01) contem 0001, Complemento (01) contem 62, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("524") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0013") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 524, Complemento (01) contem 952, Complemento (01) contem 0013, Complemento (01) contem 43, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("478") && StringUtil.removeSpecialCharsToUC(complemento01).contains("942") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 478, Complemento (01) contem 942, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("370") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 370, Complemento (01) contem 147, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("868") && StringUtil.removeSpecialCharsToUC(complemento01).contains("006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 868, Complemento (01) contem 006, Complemento (01) contem 0001, Complemento (01) contem 43, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("102") && StringUtil.removeSpecialCharsToUC(complemento01).contains("941") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 102, Complemento (01) contem 941, Complemento (01) contem 0001, Complemento (01) contem 18, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("302") && StringUtil.removeSpecialCharsToUC(complemento01).contains("348") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 302, Complemento (01) contem 348, Complemento (01) contem 0003, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("533") && StringUtil.removeSpecialCharsToUC(complemento01).contains("415") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 533, Complemento (01) contem 415, Complemento (01) contem 0001, Complemento (01) contem 17, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("666") && StringUtil.removeSpecialCharsToUC(complemento01).contains("854") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 666, Complemento (01) contem 854, Complemento (01) contem 0001, Complemento (01) contem 93, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("553") && StringUtil.removeSpecialCharsToUC(complemento01).contains("454") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 553, Complemento (01) contem 454, Complemento (01) contem 0001, Complemento (01) contem 13, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("629") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 629, Complemento (01) contem 143, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("786") && StringUtil.removeSpecialCharsToUC(complemento01).contains("902") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("91"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 786, Complemento (01) contem 902, Complemento (01) contem 0001, Complemento (01) contem 91, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("150") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0007") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 150, Complemento (01) contem 053, Complemento (01) contem 0007, Complemento (01) contem 33, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("109") && StringUtil.removeSpecialCharsToUC(complemento01).contains("222") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 109, Complemento (01) contem 222, Complemento (01) contem 0001, Complemento (01) contem 04, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("000") && StringUtil.removeSpecialCharsToUC(complemento01).contains("167") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 000, Complemento (01) contem 167, Complemento (01) contem 0793, Complemento (01) contem 79, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("648") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 648, Complemento (01) contem 936, Complemento (01) contem 0001, Complemento (01) contem 64, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("987") && StringUtil.removeSpecialCharsToUC(complemento01).contains("024") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 987, Complemento (01) contem 024, Complemento (01) contem 0005, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("912") && StringUtil.removeSpecialCharsToUC(complemento01).contains("690") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 912, Complemento (01) contem 690, Complemento (01) contem 0001, Complemento (01) contem 73, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("479") && StringUtil.removeSpecialCharsToUC(complemento01).contains("443") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 479, Complemento (01) contem 443, Complemento (01) contem 0001, Complemento (01) contem 85, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("316") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0026") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 028, Complemento (01) contem 316, Complemento (01) contem 0026, Complemento (01) contem 61, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("778") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 778, Complemento (01) contem 673, Complemento (01) contem 0001, Complemento (01) contem 26, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("106") && StringUtil.removeSpecialCharsToUC(complemento01).contains("100") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 106, Complemento (01) contem 100, Complemento (01) contem 0001, Complemento (01) contem 11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("208") && StringUtil.removeSpecialCharsToUC(complemento01).contains("524") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("97"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 208, Complemento (01) contem 524, Complemento (01) contem 0001, Complemento (01) contem 97, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("122") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 673, Complemento (01) contem 122, Complemento (01) contem 0001, Complemento (01) contem 96, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("342") && StringUtil.removeSpecialCharsToUC(complemento01).contains("649") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 342, Complemento (01) contem 649, Complemento (01) contem 0001, Complemento (01) contem 26, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("753") && StringUtil.removeSpecialCharsToUC(complemento01).contains("627") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 753, Complemento (01) contem 627, Complemento (01) contem 0001, Complemento (01) contem 59, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("573") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 558, Complemento (01) contem 573, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("070") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 070, Complemento (01) contem 284, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("751") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 114, Complemento (01) contem 751, Complemento (01) contem 0001, Complemento (01) contem 30, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("691") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 896, Complemento (01) contem 691, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("487") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 818, Complemento (01) contem 487, Complemento (01) contem 0001, Complemento (01) contem 24, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("859") && StringUtil.removeSpecialCharsToUC(complemento01).contains("203") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 859, Complemento (01) contem 203, Complemento (01) contem 0001, Complemento (01) contem 15, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("217") && StringUtil.removeSpecialCharsToUC(complemento01).contains("850") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 217, Complemento (01) contem 850, Complemento (01) contem 0001, Complemento (01) contem 59, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("822") && StringUtil.removeSpecialCharsToUC(complemento01).contains("258") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 822, Complemento (01) contem 258, Complemento (01) contem 0001, Complemento (01) contem 13, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("455") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 455, Complemento (01) contem 179, Complemento (01) contem 0001, Complemento (01) contem 84, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("564") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 564, Complemento (01) contem 115, Complemento (01) contem 0001, Complemento (01) contem 84, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("042") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 922, Complemento (01) contem 042, Complemento (01) contem 0001, Complemento (01) contem 43, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 384, Complemento (01) contem 284, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 740, Complemento (01) contem 351, Complemento (01) contem 0114, Complemento (01) contem 42, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("790") && StringUtil.removeSpecialCharsToUC(complemento01).contains("539") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 790, Complemento (01) contem 539, Complemento (01) contem 0001, Complemento (01) contem 18, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("369") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 906, Complemento (01) contem 369, Complemento (01) contem 0001, Complemento (01) contem 57, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("982") && StringUtil.removeSpecialCharsToUC(complemento01).contains("916") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 982, Complemento (01) contem 916, Complemento (01) contem 0001, Complemento (01) contem 83, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("918") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 802, Complemento (01) contem 918, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("883") && StringUtil.removeSpecialCharsToUC(complemento01).contains("172") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 883, Complemento (01) contem 172, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("020") && StringUtil.removeSpecialCharsToUC(complemento01).contains("152") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("12"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 020, Complemento (01) contem 152, Complemento (01) contem 0001, Complemento (01) contem 12, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("287") && StringUtil.removeSpecialCharsToUC(complemento01).contains("725") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("29"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 287, Complemento (01) contem 725, Complemento (01) contem 0003, Complemento (01) contem 29, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("223") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 223, Complemento (01) contem 253, Complemento (01) contem 0001, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("139") && StringUtil.removeSpecialCharsToUC(complemento01).contains("066") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 139, Complemento (01) contem 066, Complemento (01) contem 0006, Complemento (01) contem 26, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("241") && StringUtil.removeSpecialCharsToUC(complemento01).contains("451") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 241, Complemento (01) contem 451, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("933") && StringUtil.removeSpecialCharsToUC(complemento01).contains("017") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 933, Complemento (01) contem 017, Complemento (01) contem 0001, Complemento (01) contem 23, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("890") && StringUtil.removeSpecialCharsToUC(complemento01).contains("252") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 890, Complemento (01) contem 252, Complemento (01) contem 0001, Complemento (01) contem 13, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 845, Complemento (01) contem 735, Complemento (01) contem 0004, Complemento (01) contem 14, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 845, Complemento (01) contem 735, Complemento (01) contem 0005, Complemento (01) contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("598") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 818, Complemento (01) contem 598, Complemento (01) contem 0001, Complemento (01) contem 52, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("442") && StringUtil.removeSpecialCharsToUC(complemento01).contains("737") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 442, Complemento (01) contem 737, Complemento (01) contem 0011, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("654") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 422, Complemento (01) contem 654, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("522") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("94"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 936, Complemento (01) contem 522, Complemento (01) contem 0001, Complemento (01) contem 94, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("128") && StringUtil.removeSpecialCharsToUC(complemento01).contains("610") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 128, Complemento (01) contem 610, Complemento (01) contem 0001, Complemento (01) contem 93, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("206") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 289, Complemento (01) contem 206, Complemento (01) contem 0001, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("695") && StringUtil.removeSpecialCharsToUC(complemento01).contains("790") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 695, Complemento (01) contem 790, Complemento (01) contem 0001, Complemento (01) contem 95, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("620") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0093") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 173, Complemento (01) contem 620, Complemento (01) contem 0093, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("847") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 034, Complemento (01) contem 847, Complemento (01) contem 0001, Complemento (01) contem 07, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("204") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 351, Complemento (01) contem 204, Complemento (01) contem 0001, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("598") && StringUtil.removeSpecialCharsToUC(complemento01).contains("948") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 598, Complemento (01) contem 948, Complemento (01) contem 0001, Complemento (01) contem 64, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 110, Complemento (01) contem 818, Complemento (01) contem 0001, Complemento (01) contem 21, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("229") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 229, Complemento (01) contem 624, Complemento (01) contem 0001, Complemento (01) contem 75, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("689") && StringUtil.removeSpecialCharsToUC(complemento01).contains("090") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 689, Complemento (01) contem 090, Complemento (01) contem 0002, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("027") && StringUtil.removeSpecialCharsToUC(complemento01).contains("837") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 027, Complemento (01) contem 837, Complemento (01) contem 0001, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 110, Complemento (01) contem 818, Complemento (01) contem 0003, Complemento (01) contem 93, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 110, Complemento (01) contem 818, Complemento (01) contem 0008, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("364") && StringUtil.removeSpecialCharsToUC(complemento01).contains("563") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("51"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 364, Complemento (01) contem 563, Complemento (01) contem 0001, Complemento (01) contem 51, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("263") && StringUtil.removeSpecialCharsToUC(complemento01).contains("669") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 263, Complemento (01) contem 669, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("317") && StringUtil.removeSpecialCharsToUC(complemento01).contains("697") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 317, Complemento (01) contem 697, Complemento (01) contem 0001, Complemento (01) contem 32, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("734") && StringUtil.removeSpecialCharsToUC(complemento01).contains("560") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 734, Complemento (01) contem 560, Complemento (01) contem 0001, Complemento (01) contem 83, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("525") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 986, Complemento (01) contem 525, Complemento (01) contem 0002, Complemento (01) contem 32, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("947") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 986, Complemento (01) contem 947, Complemento (01) contem 0001, Complemento (01) contem 27, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("241") && StringUtil.removeSpecialCharsToUC(complemento01).contains("480") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 241, Complemento (01) contem 480, Complemento (01) contem 0001, Complemento (01) contem 75, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("614") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 614, Complemento (01) contem 149, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("628") && StringUtil.removeSpecialCharsToUC(complemento01).contains("312") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("62"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 628, Complemento (01) contem 312, Complemento (01) contem 0001, Complemento (01) contem 62, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("300") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 300, Complemento (01) contem 534, Complemento (01) contem 0001, Complemento (01) contem 26, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("670") && StringUtil.removeSpecialCharsToUC(complemento01).contains("052") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 670, Complemento (01) contem 052, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 845, Complemento (01) contem 735, Complemento (01) contem 0003, Complemento (01) contem 33, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("719") && StringUtil.removeSpecialCharsToUC(complemento01).contains("238") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 719, Complemento (01) contem 238, Complemento (01) contem 0001, Complemento (01) contem 64, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 448, Complemento (01) contem 977, Complemento (01) contem 0001, Complemento (01) contem 21, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("518") && StringUtil.removeSpecialCharsToUC(complemento01).contains("498") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 518, Complemento (01) contem 498, Complemento (01) contem 0001, Complemento (01) contem 34, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("664") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0027") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 664, Complemento (01) contem 028, Complemento (01) contem 0027, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 802, Complemento (01) contem 784, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("215") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 934, Complemento (01) contem 215, Complemento (01) contem 0001, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("108") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 108, Complemento (01) contem 157, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("360") && StringUtil.removeSpecialCharsToUC(complemento01).contains("162") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 360, Complemento (01) contem 162, Complemento (01) contem 0001, Complemento (01) contem 11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("437") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 062, Complemento (01) contem 437, Complemento (01) contem 0001, Complemento (01) contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("432") && StringUtil.removeSpecialCharsToUC(complemento01).contains("879") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("94"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 432, Complemento (01) contem 879, Complemento (01) contem 0001, Complemento (01) contem 94, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("432") && StringUtil.removeSpecialCharsToUC(complemento01).contains("879") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 432, Complemento (01) contem 879, Complemento (01) contem 0003, Complemento (01) contem 56, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("405") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 405, Complemento (01) contem 412, Complemento (01) contem 0001, Complemento (01) contem 55, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("984") && StringUtil.removeSpecialCharsToUC(complemento01).contains("796") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 984, Complemento (01) contem 796, Complemento (01) contem 0001, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("021") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 021, Complemento (01) contem 906, Complemento (01) contem 0001, Complemento (01) contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("023") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("29"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 922, Complemento (01) contem 023, Complemento (01) contem 0001, Complemento (01) contem 29, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("106") && StringUtil.removeSpecialCharsToUC(complemento01).contains("666") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 106, Complemento (01) contem 666, Complemento (01) contem 0001, Complemento (01) contem 71, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("500") && StringUtil.removeSpecialCharsToUC(complemento01).contains("153") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 500, Complemento (01) contem 153, Complemento (01) contem 0001, Complemento (01) contem 86, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("501") && StringUtil.removeSpecialCharsToUC(complemento01).contains("953") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 501, Complemento (01) contem 953, Complemento (01) contem 0001, Complemento (01) contem 11, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("547") && StringUtil.removeSpecialCharsToUC(complemento01).contains("444") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 547, Complemento (01) contem 444, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("991") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 991, Complemento (01) contem 534, Complemento (01) contem 0001, Complemento (01) contem 78, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("525") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("51"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 986, Complemento (01) contem 525, Complemento (01) contem 0001, Complemento (01) contem 51, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("557") && StringUtil.removeSpecialCharsToUC(complemento01).contains("641") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 557, Complemento (01) contem 641, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("660") && StringUtil.removeSpecialCharsToUC(complemento01).contains("406") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 660, Complemento (01) contem 406, Complemento (01) contem 0011, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("661") && StringUtil.removeSpecialCharsToUC(complemento01).contains("453") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 661, Complemento (01) contem 453, Complemento (01) contem 0001, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("331") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 331, Complemento (01) contem 477, Complemento (01) contem 0001, Complemento (01) contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("674") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 412, Complemento (01) contem 674, Complemento (01) contem 0001, Complemento (01) contem 84, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 428, Complemento (01) contem 307, Complemento (01) contem 0016, Complemento (01) contem 74, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("165") && StringUtil.removeSpecialCharsToUC(complemento01).contains("778") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 165, Complemento (01) contem 778, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 428, Complemento (01) contem 307, Complemento (01) contem 0006, Complemento (01) contem 00, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("609") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("872") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("51"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Fornecedor/Cliente contem 609, Fornecedor/Cliente contem 872, Fornecedor/Cliente contem 0001, Fornecedor/Cliente contem 51, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("54"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 062, Complemento (01) contem 422, Complemento (01) contem 0001, Complemento (01) contem 54, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("749") && StringUtil.removeSpecialCharsToUC(complemento01).contains("526") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 749, Complemento (01) contem 526, Complemento (01) contem 0001, Complemento (01) contem 79, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("316") && StringUtil.removeSpecialCharsToUC(complemento01).contains("315") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 316, Complemento (01) contem 315, Complemento (01) contem 0001, Complemento (01) contem 78, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("113") && StringUtil.removeSpecialCharsToUC(complemento01).contains("035") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 113, Complemento (01) contem 035, Complemento (01) contem 0001, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("471") && StringUtil.removeSpecialCharsToUC(complemento01).contains("527") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 471, Complemento (01) contem 527, Complemento (01) contem 0001, Complemento (01) contem 67, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("944") && StringUtil.removeSpecialCharsToUC(complemento01).contains("840") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 944, Complemento (01) contem 840, Complemento (01) contem 0001, Complemento (01) contem 75, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("276") && StringUtil.removeSpecialCharsToUC(complemento01).contains("695") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 276, Complemento (01) contem 695, Complemento (01) contem 0002, Complemento (01) contem 45, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("291") && StringUtil.removeSpecialCharsToUC(complemento01).contains("467") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("63"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 291, Complemento (01) contem 467, Complemento (01) contem 0001, Complemento (01) contem 63, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("271") && StringUtil.removeSpecialCharsToUC(complemento01).contains("692") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 271, Complemento (01) contem 692, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("325") && StringUtil.removeSpecialCharsToUC(complemento01).contains("741") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 325, Complemento (01) contem 741, Complemento (01) contem 0001, Complemento (01) contem 30, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("846") && StringUtil.removeSpecialCharsToUC(complemento01).contains("642") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 846, Complemento (01) contem 642, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("953") && StringUtil.removeSpecialCharsToUC(complemento01).contains("184") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 953, Complemento (01) contem 184, Complemento (01) contem 0001, Complemento (01) contem 77, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("633") && StringUtil.removeSpecialCharsToUC(complemento01).contains("583") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 633, Complemento (01) contem 583, Complemento (01) contem 0001, Complemento (01) contem 13, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("619") && StringUtil.removeSpecialCharsToUC(complemento01).contains("473") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 619, Complemento (01) contem 473, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("245") && StringUtil.removeSpecialCharsToUC(complemento01).contains("075") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 245, Complemento (01) contem 075, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("450") && StringUtil.removeSpecialCharsToUC(complemento01).contains("367") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 450, Complemento (01) contem 367, Complemento (01) contem 0001, Complemento (01) contem 03, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 002, Complemento (01) contem 624, Complemento (01) contem 0002, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("086") && StringUtil.removeSpecialCharsToUC(complemento01).contains("596") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 086, Complemento (01) contem 596, Complemento (01) contem 0001, Complemento (01) contem 45, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("497") && StringUtil.removeSpecialCharsToUC(complemento01).contains("467") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 497, Complemento (01) contem 467, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("503") && StringUtil.removeSpecialCharsToUC(complemento01).contains("660") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 503, Complemento (01) contem 660, Complemento (01) contem 0003, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("326") && StringUtil.removeSpecialCharsToUC(complemento01).contains("104") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 326, Complemento (01) contem 104, Complemento (01) contem 0001, Complemento (01) contem 16, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("070") && StringUtil.removeSpecialCharsToUC(complemento01).contains("717") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 070, Complemento (01) contem 717, Complemento (01) contem 0001, Complemento (01) contem 23, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("542") && StringUtil.removeSpecialCharsToUC(complemento01).contains("397") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 542, Complemento (01) contem 397, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("502") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("31"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 502, Complemento (01) contem 802, Complemento (01) contem 0002, Complemento (01) contem 31, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 077, Complemento (01) contem 149, Complemento (01) contem 0001, Complemento (01) contem 18, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("967") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 784, Complemento (01) contem 967, Complemento (01) contem 0001, Complemento (01) contem 50, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("041") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 041, Complemento (01) contem 992, Complemento (01) contem 0001, Complemento (01) contem 81, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("198") && StringUtil.removeSpecialCharsToUC(complemento01).contains("423") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 198, Complemento (01) contem 423, Complemento (01) contem 0001, Complemento (01) contem 44, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("064") && StringUtil.removeSpecialCharsToUC(complemento01).contains("003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 064, Complemento (01) contem 003, Complemento (01) contem 0001, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("303") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 952, Complemento (01) contem 303, Complemento (01) contem 0001, Complemento (01) contem 28, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("186") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("91"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 022, Complemento (01) contem 186, Complemento (01) contem 0001, Complemento (01) contem 91, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("956") && StringUtil.removeSpecialCharsToUC(complemento01).contains("759") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 956, Complemento (01) contem 759, Complemento (01) contem 0005, Complemento (01) contem 15, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("410") && StringUtil.removeSpecialCharsToUC(complemento01).contains("834") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 410, Complemento (01) contem 834, Complemento (01) contem 0001, Complemento (01) contem 14, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("549") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 477, Complemento (01) contem 549, Complemento (01) contem 0001, Complemento (01) contem 10, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("010") && StringUtil.removeSpecialCharsToUC(complemento01).contains("726") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 010, Complemento (01) contem 726, Complemento (01) contem 0001, Complemento (01) contem 17, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("617") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 147, Complemento (01) contem 617, Complemento (01) contem 0022, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("334") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 428, Complemento (01) contem 334, Complemento (01) contem 0001, Complemento (01) contem 72, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("394") && StringUtil.removeSpecialCharsToUC(complemento01).contains("595") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 394, Complemento (01) contem 595, Complemento (01) contem 0001, Complemento (01) contem 81, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("252") && StringUtil.removeSpecialCharsToUC(complemento01).contains("475") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 252, Complemento (01) contem 475, Complemento (01) contem 0001, Complemento (01) contem 87, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("379") && StringUtil.removeSpecialCharsToUC(complemento01).contains("357") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 379, Complemento (01) contem 357, Complemento (01) contem 0001, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("396") && StringUtil.removeSpecialCharsToUC(complemento01).contains("572") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 396, Complemento (01) contem 572, Complemento (01) contem 0001, Complemento (01) contem 06, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("436") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 436, Complemento (01) contem 934, Complemento (01) contem 0002, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("515") && StringUtil.removeSpecialCharsToUC(complemento01).contains("774") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 515, Complemento (01) contem 774, Complemento (01) contem 0001, Complemento (01) contem 71, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("087") && StringUtil.removeSpecialCharsToUC(complemento01).contains("264") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 087, Complemento (01) contem 264, Complemento (01) contem 0001, Complemento (01) contem 76, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("085") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 869, Complemento (01) contem 085, Complemento (01) contem 0001, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("373") && StringUtil.removeSpecialCharsToUC(complemento01).contains("405") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 373, Complemento (01) contem 405, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("095") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 936, Complemento (01) contem 095, Complemento (01) contem 0001, Complemento (01) contem 39, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0015") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 463, Complemento (01) contem 456, Complemento (01) contem 0015, Complemento (01) contem 96, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 463, Complemento (01) contem 456, Complemento (01) contem 0016, Complemento (01) contem 77, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("771") && StringUtil.removeSpecialCharsToUC(complemento01).contains("495") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 771, Complemento (01) contem 495, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("038") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 173, Complemento (01) contem 038, Complemento (01) contem 0001, Complemento (01) contem 21, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("178") && StringUtil.removeSpecialCharsToUC(complemento01).contains("711") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 178, Complemento (01) contem 711, Complemento (01) contem 0001, Complemento (01) contem 32, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("000") && StringUtil.removeSpecialCharsToUC(complemento01).contains("167") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 000, Complemento (01) contem 167, Complemento (01) contem 0001, Complemento (01) contem 01, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("125") && StringUtil.removeSpecialCharsToUC(complemento01).contains("567") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 125, Complemento (01) contem 567, Complemento (01) contem 0001, Complemento (01) contem 79, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("277") && StringUtil.removeSpecialCharsToUC(complemento01).contains("937") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 277, Complemento (01) contem 937, Complemento (01) contem 0001, Complemento (01) contem 20, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("806") && StringUtil.removeSpecialCharsToUC(complemento01).contains("407") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 806, Complemento (01) contem 407, Complemento (01) contem 0001, Complemento (01) contem 95, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("929") && StringUtil.removeSpecialCharsToUC(complemento01).contains("319") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 929, Complemento (01) contem 319, Complemento (01) contem 0001, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("045") && StringUtil.removeSpecialCharsToUC(complemento01).contains("239") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 045, Complemento (01) contem 239, Complemento (01) contem 0001, Complemento (01) contem 25, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("121") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 121, Complemento (01) contem 289, Complemento (01) contem 0001, Complemento (01) contem 44, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0084") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 740, Complemento (01) contem 351, Complemento (01) contem 0084, Complemento (01) contem 92, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("771") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 771, Complemento (01) contem 143, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("347") && StringUtil.removeSpecialCharsToUC(complemento01).contains("737") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 347, Complemento (01) contem 737, Complemento (01) contem 0001, Complemento (01) contem 58, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("536") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 536, Complemento (01) contem 463, Complemento (01) contem 0001, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("630") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 456, Complemento (01) contem 630, Complemento (01) contem 0001, Complemento (01) contem 52, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("709") && StringUtil.removeSpecialCharsToUC(complemento01).contains("898") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 709, Complemento (01) contem 898, Complemento (01) contem 0001, Complemento (01) contem 59, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("506") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 506, Complemento (01) contem 022, Complemento (01) contem 0001, Complemento (01) contem 17, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("158") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 158, Complemento (01) contem 077, Complemento (01) contem 0001, Complemento (01) contem 60, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("678") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 053, Complemento (01) contem 678, Complemento (01) contem 0001, Complemento (01) contem 70, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("901") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 735, Complemento (01) contem 901, Complemento (01) contem 0003, Complemento (01) contem 04, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("550") && StringUtil.removeSpecialCharsToUC(complemento01).contains("505") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 550, Complemento (01) contem 505, Complemento (01) contem 0008, Complemento (01) contem 05, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 906, Complemento (01) contem 624, Complemento (01) contem 0001, Complemento (01) contem 73, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("123") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 123, Complemento (01) contem 684, Complemento (01) contem 0001, Complemento (01) contem 82, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0040") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 740, Complemento (01) contem 351, Complemento (01) contem 0040, Complemento (01) contem 71, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("733") && StringUtil.removeSpecialCharsToUC(complemento01).contains("129") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 733, Complemento (01) contem 129, Complemento (01) contem 0001, Complemento (01) contem 40, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("305") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 845, Complemento (01) contem 305, Complemento (01) contem 0001, Complemento (01) contem 75, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("892") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 892, Complemento (01) contem 934, Complemento (01) contem 0001, Complemento (01) contem 53, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("141") && StringUtil.removeSpecialCharsToUC(complemento01).contains("901") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 141, Complemento (01) contem 901, Complemento (01) contem 0001, Complemento (01) contem 92, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("287") && StringUtil.removeSpecialCharsToUC(complemento01).contains("725") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 287, Complemento (01) contem 725, Complemento (01) contem 0005, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("242") && StringUtil.removeSpecialCharsToUC(complemento01).contains("701") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 242, Complemento (01) contem 701, Complemento (01) contem 0001, Complemento (01) contem 92, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("100") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 992, Complemento (01) contem 100, Complemento (01) contem 0001, Complemento (01) contem 04, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("621") && StringUtil.removeSpecialCharsToUC(complemento01).contains("141") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 621, Complemento (01) contem 141, Complemento (01) contem 0004, Complemento (01) contem 04, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("145") && StringUtil.removeSpecialCharsToUC(complemento01).contains("008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0015") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 145, Complemento (01) contem 008, Complemento (01) contem 0015, Complemento (01) contem 07, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("317") && StringUtil.removeSpecialCharsToUC(complemento01).contains("697") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0018") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 317, Complemento (01) contem 697, Complemento (01) contem 0018, Complemento (01) contem 80, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("791") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 791, Complemento (01) contem 412, Complemento (01) contem 0001, Complemento (01) contem 09, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("488") && StringUtil.removeSpecialCharsToUC(complemento01).contains("117") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 488, Complemento (01) contem 117, Complemento (01) contem 0001, Complemento (01) contem 77, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("949") && StringUtil.removeSpecialCharsToUC(complemento01).contains("526") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 949, Complemento (01) contem 526, Complemento (01) contem 0001, Complemento (01) contem 44, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("182") && StringUtil.removeSpecialCharsToUC(complemento01).contains("593") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 182, Complemento (01) contem 593, Complemento (01) contem 0001, Complemento (01) contem 90, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("372") && StringUtil.removeSpecialCharsToUC(complemento01).contains("013") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 372, Complemento (01) contem 013, Complemento (01) contem 0001, Complemento (01) contem 65, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("087") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 087, Complemento (01) contem 673, Complemento (01) contem 0001, Complemento (01) contem 74, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 448, Complemento (01) contem 977, Complemento (01) contem 0002, Complemento (01) contem 02, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("471") && StringUtil.removeSpecialCharsToUC(complemento01).contains("639") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 471, Complemento (01) contem 639, Complemento (01) contem 0001, Complemento (01) contem 36, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("668") && StringUtil.removeSpecialCharsToUC(complemento01).contains("231") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 668, Complemento (01) contem 231, Complemento (01) contem 0002, Complemento (01) contem 08, HISTORICO =";
    
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("341") && StringUtil.removeSpecialCharsToUC(complemento01).contains("127") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("88"))  historico = "HISTORICO POR REGRA = Quando Tipo Planilha contem MOVIMENTO, Complemento (01) contem 341, Complemento (01) contem 127, Complemento (01) contem 0001, Complemento (01) contem 88, HISTORICO =";
    

    return historico.replaceAll("  "," ").trim();
}
public int getParcelaBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public int getTotalParcelas(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public String getMesAnoBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String mesAnoBase = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return mesAnoBase;
}
public double getTaxaTarifa(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorTaxaTarifa = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("VISTA")) {
        valorTaxaTarifa = 0.0319;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_STELO") &&
        StringUtil.removeSpecialCharsToUC(complemento05).contains("TARIFA") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("CREDITO") &&
        StringUtil.removeSpecialCharsToUC(complemento03).contains("PARC")) {
        valorTaxaTarifa = 0.0379;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_VRALIMENTACAO1")) {
        valorTaxaTarifa = 0.063;
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("CARTAO_SENFF")) {
        valorTaxaTarifa = 0.04;
    }
    return valorTaxaTarifa;
}
public String getHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (!StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("Historico Padrao"))    historico = "CodigoHistorico:537";  //id -> 1699968.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("991") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("609") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2434793.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("DESP") && StringUtil.removeSpecialCharsToUC(documento).contains("WALTE"))    historico = "" + documento + "    CodigoHistorico:537";  //id -> 2434860.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("308") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("218") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("10"))    historico = "CodigoHistorico:537";  //id -> 2434896.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("674") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("708") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("22"))    historico = "CodigoHistorico:537";  //id -> 2435092.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("673") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("480") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0009") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("52"))    historico = "CodigoHistorico:537";  //id -> 2435080.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("669") && StringUtil.removeSpecialCharsToUC(complemento01).contains("997") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 2016499.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("582") && StringUtil.removeSpecialCharsToUC(complemento01).contains("793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 2244845.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("813") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))    historico = "CodigoHistorico:537";  //id -> 2244939.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("848") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("082") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2434201.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("871") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("048") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("99"))    historico = "CodigoHistorico:537";  //id -> 2434208.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("695") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("961") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("23"))    historico = "CodigoHistorico:537";  //id -> 2434703.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("885") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 2014209.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("352") && StringUtil.removeSpecialCharsToUC(complemento01).contains("838") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))    historico = "CodigoHistorico:537";  //id -> 2016481.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("394") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("107") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0005") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("88"))    historico = "CodigoHistorico:537";  //id -> 2435005.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("541") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("660") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0004") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("10"))    historico = "CodigoHistorico:537";  //id -> 2434204.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("984") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("656") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("47"))    historico = "CodigoHistorico:537";  //id -> 2434206.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("551") && StringUtil.removeSpecialCharsToUC(complemento01).contains("867") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 1703614.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("497") && StringUtil.removeSpecialCharsToUC(complemento01).contains("467") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1838404.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("303") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 1838408.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("378") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("899") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("43"))    historico = "CodigoHistorico:537";  //id -> 2434200.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("322") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("452") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("02"))    historico = "CodigoHistorico:537";  //id -> 2434650.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("801") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("105") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("99"))    historico = "CodigoHistorico:537";  //id -> 2434211.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("847") && StringUtil.removeSpecialCharsToUC(complemento01).contains("429") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 2244904.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("907") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("585") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0004") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("04"))    historico = "CodigoHistorico:537";  //id -> 2434202.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("394") && StringUtil.removeSpecialCharsToUC(complemento01).contains("595") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))    historico = "CodigoHistorico:537";  //id -> 1838632.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("929") && StringUtil.removeSpecialCharsToUC(complemento01).contains("319") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1839142.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0084") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 1839468.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("094") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 1701388.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("775") && StringUtil.removeSpecialCharsToUC(complemento01).contains("159") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1701416.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("328") && StringUtil.removeSpecialCharsToUC(complemento01).contains("663") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 2016160.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("341") && StringUtil.removeSpecialCharsToUC(complemento01).contains("127") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("88"))    historico = "CodigoHistorico:537";  //id -> 1839776.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("663") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1702251.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("102") && StringUtil.removeSpecialCharsToUC(complemento01).contains("941") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 1702612.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("786") && StringUtil.removeSpecialCharsToUC(complemento01).contains("902") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("91"))    historico = "CodigoHistorico:537";  //id -> 1702717.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("778") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))    historico = "CodigoHistorico:537";  //id -> 1702825.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("633") && StringUtil.removeSpecialCharsToUC(complemento01).contains("583") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 1838181.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("706") && StringUtil.removeSpecialCharsToUC(complemento01).contains("470") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("38"))    historico = "CodigoHistorico:537";  //id -> 2014219.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("088") && StringUtil.removeSpecialCharsToUC(complemento01).contains("608") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("38"))    historico = "CodigoHistorico:537";  //id -> 2016461.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("559") && StringUtil.removeSpecialCharsToUC(complemento01).contains("474") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1701843.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("517") && StringUtil.removeSpecialCharsToUC(complemento01).contains("503") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))    historico = "CodigoHistorico:537";  //id -> 1701406.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("450") && StringUtil.removeSpecialCharsToUC(complemento01).contains("367") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1838195.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS03"))    historico = "CodigoHistorico:1006";  //id -> 2014043.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("109") && StringUtil.removeSpecialCharsToUC(complemento01).contains("222") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1702743.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("472") && StringUtil.removeSpecialCharsToUC(complemento01).contains("702") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 1703724.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("2724416170"))    historico = "CodigoHistorico:537";  //id -> 2435362.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("883") && StringUtil.removeSpecialCharsToUC(complemento01).contains("172") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1703065.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("791") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1839788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("178") && StringUtil.removeSpecialCharsToUC(complemento01).contains("711") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))    historico = "CodigoHistorico:537";  //id -> 1839026.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("000") && StringUtil.removeSpecialCharsToUC(complemento01).contains("167") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1839062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("912") && StringUtil.removeSpecialCharsToUC(complemento01).contains("690") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1703714.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("277") && StringUtil.removeSpecialCharsToUC(complemento01).contains("937") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1839121.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("285") && StringUtil.removeSpecialCharsToUC(complemento01).contains("621") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 1701965.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("791") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0014") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 1702325.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("991") && StringUtil.removeSpecialCharsToUC(complemento01).contains("528") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1702384.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("902") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))    historico = "CodigoHistorico:537";  //id -> 1702443.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("130") && StringUtil.removeSpecialCharsToUC(complemento01).contains("043") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 2016493.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("628") && StringUtil.removeSpecialCharsToUC(complemento01).contains("312") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("62"))    historico = "CodigoHistorico:537";  //id -> 1703699.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("939") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("581") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("21"))    historico = "CodigoHistorico:537";  //id -> 2434198.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("984") && StringUtil.removeSpecialCharsToUC(complemento01).contains("796") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1703740.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("333") && StringUtil.removeSpecialCharsToUC(complemento01).contains("588") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))    historico = "CodigoHistorico:537";  //id -> 2016243.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("827") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2244804.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("949") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 2014193.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("041") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))    historico = "CodigoHistorico:537";  //id -> 1838413.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("722") && StringUtil.removeSpecialCharsToUC(complemento01).contains("127") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:478";  //id -> 2244319.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("701") && StringUtil.removeSpecialCharsToUC(complemento01).contains("620") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 2244643.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("889") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("039") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1700076.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("277") && StringUtil.removeSpecialCharsToUC(complemento01).contains("349") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 2244792.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("442") && StringUtil.removeSpecialCharsToUC(complemento01).contains("737") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1703514.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("151") && StringUtil.removeSpecialCharsToUC(complemento01).contains("518") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 2016086.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("111") && StringUtil.removeSpecialCharsToUC(complemento01).contains("916") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 2016105.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("205") && StringUtil.removeSpecialCharsToUC(complemento01).contains("541") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))    historico = "CodigoHistorico:537";  //id -> 2016111.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("063") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("304") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("59"))    historico = "CodigoHistorico:537";  //id -> 2434205.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("933") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("967") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("45"))    historico = "CodigoHistorico:537";  //id -> 2434775.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("625") && StringUtil.removeSpecialCharsToUC(complemento01).contains("708") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))    historico = "CodigoHistorico:537";  //id -> 1700287.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("713") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2016039.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("958") && StringUtil.removeSpecialCharsToUC(complemento01).contains("525") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 2016278.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("020") && StringUtil.removeSpecialCharsToUC(complemento01).contains("392") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 2016280.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("707") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))    historico = "CodigoHistorico:537";  //id -> 2016315.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("54"))    historico = "CodigoHistorico:537";  //id -> 1837674.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("455") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1702908.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("087") && StringUtil.removeSpecialCharsToUC(complemento01).contains("264") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1838682.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("200") && StringUtil.removeSpecialCharsToUC(complemento01).contains("694") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("97"))    historico = "CodigoHistorico:537";  //id -> 1701691.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("054") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))    historico = "CodigoHistorico:537";  //id -> 2014185.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("TAXA JUNTA"))    historico = "CodigoHistorico:7";  //id -> 1699157.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("991") && StringUtil.removeSpecialCharsToUC(complemento01).contains("112") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1703619.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS01"))    historico = "CodigoHistorico:442";  //id -> 1699224.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("134") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("204") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("15"))    historico = "CodigoHistorico:537";  //id -> 1700016.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("301") && StringUtil.removeSpecialCharsToUC(complemento01).contains("846") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))    historico = "CodigoHistorico:537";  //id -> 1700512.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("710") && StringUtil.removeSpecialCharsToUC(complemento01).contains("439") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))    historico = "CodigoHistorico:537";  //id -> 2016138.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("286") && StringUtil.removeSpecialCharsToUC(complemento01).contains("425") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))    historico = "CodigoHistorico:537";  //id -> 1700495.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("282") && StringUtil.removeSpecialCharsToUC(complemento01).contains("748") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 2244712.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("396") && StringUtil.removeSpecialCharsToUC(complemento01).contains("572") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1838638.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("117") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("351") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1700006.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("561") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 2016014.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("496") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))    historico = "CodigoHistorico:537";  //id -> 2016017.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("507") && StringUtil.removeSpecialCharsToUC(complemento01).contains("873") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))    historico = "CodigoHistorico:537";  //id -> 2016026.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("109") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 2016099.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("015") && StringUtil.removeSpecialCharsToUC(complemento01).contains("301") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 2244829.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("709") && StringUtil.removeSpecialCharsToUC(complemento01).contains("898") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 1839361.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("305") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 1839691.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("471") && StringUtil.removeSpecialCharsToUC(complemento01).contains("639") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 1839915.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("155") && StringUtil.removeSpecialCharsToUC(complemento01).contains("140") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1702139.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0027") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))    historico = "CodigoHistorico:537";  //id -> 2244777.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("155") && StringUtil.removeSpecialCharsToUC(complemento01).contains("288") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1702148.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("786") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 1702166.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("688") && StringUtil.removeSpecialCharsToUC(complemento01).contains("218") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 1701855.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("501") && StringUtil.removeSpecialCharsToUC(complemento01).contains("214") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1702045.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("819") && StringUtil.removeSpecialCharsToUC(complemento01).contains("438") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))    historico = "CodigoHistorico:537";  //id -> 2016224.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("291") && StringUtil.removeSpecialCharsToUC(complemento01).contains("467") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("63"))    historico = "CodigoHistorico:537";  //id -> 1838136.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("746") && StringUtil.removeSpecialCharsToUC(complemento01).contains("559") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1702474.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("487") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))    historico = "CodigoHistorico:537";  //id -> 1702845.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("822") && StringUtil.removeSpecialCharsToUC(complemento01).contains("258") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 1702889.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("016") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("440") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("62"))    historico = "CodigoHistorico:537";  //id -> 1700314.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("105") && StringUtil.removeSpecialCharsToUC(complemento01).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 1701674.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1701765.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("566") && StringUtil.removeSpecialCharsToUC(complemento01).contains("529") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1701773.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("177") && StringUtil.removeSpecialCharsToUC(complemento01).contains("641") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 1701786.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("299") && StringUtil.removeSpecialCharsToUC(complemento01).contains("915") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1702179.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("796") && StringUtil.removeSpecialCharsToUC(complemento01).contains("026") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1702254.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("182") && StringUtil.removeSpecialCharsToUC(complemento01).contains("593") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1839746.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("980") && StringUtil.removeSpecialCharsToUC(complemento01).contains("181") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 2016375.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FERIAS"))    historico = "CodigoHistorico:7";  //id -> 1699160.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("306") && StringUtil.removeSpecialCharsToUC(complemento01).contains("967") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1702358.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("345") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("678") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("9000") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2434695.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("536") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1839336.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("326") && StringUtil.removeSpecialCharsToUC(complemento01).contains("104") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1838174.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("501") && StringUtil.removeSpecialCharsToUC(complemento01).contains("953") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 1703610.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("437") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1703726.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRASS04"))    historico = "CodigoHistorico:2283";  //id -> 2240759.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("020") && StringUtil.removeSpecialCharsToUC(complemento01).contains("152") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("12"))    historico = "CodigoHistorico:537";  //id -> 1703102.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("890") && StringUtil.removeSpecialCharsToUC(complemento01).contains("252") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 1703494.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("413") && StringUtil.removeSpecialCharsToUC(complemento01).contains("701") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))    historico = "CodigoHistorico:537";  //id -> 1702469.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("364") && StringUtil.removeSpecialCharsToUC(complemento01).contains("563") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("51"))    historico = "CodigoHistorico:537";  //id -> 1703668.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("309") && StringUtil.removeSpecialCharsToUC(complemento01).contains("573") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 1839903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ICMS12"))    historico = "CodigoHistorico:2810";  //id -> 1699163.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CSLL01"))    historico = "CodigoHistorico:3736";  //id -> 1699179.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("373") && StringUtil.removeSpecialCharsToUC(complemento01).contains("405") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1838696.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("070") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 1702879.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("334") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))    historico = "CodigoHistorico:537";  //id -> 1838617.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("080") && StringUtil.removeSpecialCharsToUC(complemento01).contains("704") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1703585.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("336") && StringUtil.removeSpecialCharsToUC(complemento01).contains("204") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1702915.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("736") && StringUtil.removeSpecialCharsToUC(complemento01).contains("350") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1840067.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("241") && StringUtil.removeSpecialCharsToUC(complemento01).contains("451") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1703499.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("237") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2244566.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("971") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("845") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("42"))    historico = "CodigoHistorico:537";  //id -> 2435055.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("300") && StringUtil.removeSpecialCharsToUC(complemento01).contains("546") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 2016022.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("633") && StringUtil.removeSpecialCharsToUC(complemento01).contains("583") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 2016035.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("561") && StringUtil.removeSpecialCharsToUC(complemento01).contains("719") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0097") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 2016351.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("833") && StringUtil.removeSpecialCharsToUC(complemento01).contains("737") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 2016403.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("701") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("273") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0003") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("57"))    historico = "CodigoHistorico:537";  //id -> 2434913.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("628") && StringUtil.removeSpecialCharsToUC(complemento01).contains("300") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 2016420.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("090") && StringUtil.removeSpecialCharsToUC(complemento01).contains("595") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))    historico = "CodigoHistorico:537";  //id -> 2016293.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("014") && StringUtil.removeSpecialCharsToUC(complemento01).contains("680") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 2016042.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("460") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))    historico = "CodigoHistorico:537";  //id -> 1700554.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("325") && StringUtil.removeSpecialCharsToUC(complemento01).contains("741") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))    historico = "CodigoHistorico:537";  //id -> 1838191.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("010") && StringUtil.removeSpecialCharsToUC(complemento01).contains("726") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 1838467.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0020") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1700066.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("402") && StringUtil.removeSpecialCharsToUC(complemento01).contains("438") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1700467.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("10052784"))    historico = "" + nomeOrigem + "";  //id -> 2434622.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("390") && StringUtil.removeSpecialCharsToUC(complemento01).contains("209") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1700548.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0017") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1701275.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0797") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 1701294.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("140") && StringUtil.removeSpecialCharsToUC(complemento01).contains("667") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1701683.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("492") && StringUtil.removeSpecialCharsToUC(complemento01).contains("058") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1702017.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("617") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0039") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 1702352.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("305") && StringUtil.removeSpecialCharsToUC(complemento01).contains("803") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("66"))    historico = "CodigoHistorico:537";  //id -> 2016155.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("271") && StringUtil.removeSpecialCharsToUC(complemento01).contains("692") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1838188.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("982") && StringUtil.removeSpecialCharsToUC(complemento01).contains("916") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 1703078.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("417") && StringUtil.removeSpecialCharsToUC(complemento01).contains("345") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1700594.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("226") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 1701790.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("863") && StringUtil.removeSpecialCharsToUC(complemento01).contains("895") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 2016212.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("158") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1839379.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("678") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 1839387.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("694") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("920") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("57"))    historico = "CodigoHistorico:537";  //id -> 1700074.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("198") && StringUtil.removeSpecialCharsToUC(complemento01).contains("930") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("22"))    historico = "CodigoHistorico:537";  //id -> 2016264.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("41"))    historico = "CodigoHistorico:537";  //id -> 2244914.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("543") && StringUtil.removeSpecialCharsToUC(complemento01).contains("946") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 1701881.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("135") && StringUtil.removeSpecialCharsToUC(complemento01).contains("073") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1700581.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("223") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1703090.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("664") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0025") && StringUtil.removeSpecialCharsToUC(complemento01).contains("19"))    historico = "CodigoHistorico:537";  //id -> 1703704.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("368") && StringUtil.removeSpecialCharsToUC(complemento01).contains("618") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))    historico = "CodigoHistorico:537";  //id -> 1702154.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("522") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("94"))    historico = "CodigoHistorico:537";  //id -> 1703568.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("254") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 2016342.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("947") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))    historico = "CodigoHistorico:537";  //id -> 1703650.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("000") && StringUtil.removeSpecialCharsToUC(complemento01).contains("167") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))    historico = "CodigoHistorico:537";  //id -> 1702738.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("272") && StringUtil.removeSpecialCharsToUC(complemento01).contains("825") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))    historico = "CodigoHistorico:537";  //id -> 1701758.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("133") && StringUtil.removeSpecialCharsToUC(complemento01).contains("645") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 1700587.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("121") && StringUtil.removeSpecialCharsToUC(complemento01).contains("324") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1701677.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("256") && StringUtil.removeSpecialCharsToUC(complemento01).contains("493") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1702307.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("229") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 1703598.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("176") && StringUtil.removeSpecialCharsToUC(complemento01).contains("999") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1703697.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("518") && StringUtil.removeSpecialCharsToUC(complemento01).contains("498") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))    historico = "CodigoHistorico:537";  //id -> 1703689.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF11"))    historico = "CodigoHistorico:3719";  //id -> 1699275.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("085") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1838665.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("420") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2016188.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("469") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("701") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0050") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("55"))    historico = "CodigoHistorico:537";  //id -> 2434708.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("547") && StringUtil.removeSpecialCharsToUC(complemento01).contains("444") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1703613.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("702") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 2016296.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("330") && StringUtil.removeSpecialCharsToUC(complemento01).contains("772") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1703581.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CSLL04"))    historico = "CodigoHistorico:3736";  //id -> 2240743.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("415") && StringUtil.removeSpecialCharsToUC(complemento01).contains("562") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))    historico = "CodigoHistorico:537";  //id -> 2244689.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("342") && StringUtil.removeSpecialCharsToUC(complemento01).contains("649") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))    historico = "CodigoHistorico:537";  //id -> 1702848.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0015") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))    historico = "CodigoHistorico:537";  //id -> 1838707.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("331") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("788") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0055") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1700034.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("896") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("793") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2434753.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("339") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("331") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("51"))    historico = "CodigoHistorico:537";  //id -> 2434884.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("252") && StringUtil.removeSpecialCharsToUC(complemento01).contains("475") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1838612.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("141") && StringUtil.removeSpecialCharsToUC(complemento01).contains("901") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 1839479.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("988") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("435") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("86"))    historico = "CodigoHistorico:537";  //id -> 2434942.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("139") && StringUtil.removeSpecialCharsToUC(complemento01).contains("066") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))    historico = "CodigoHistorico:537";  //id -> 1703111.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("558") && StringUtil.removeSpecialCharsToUC(complemento01).contains("573") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1702874.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("678") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("432") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("74"))    historico = "CodigoHistorico:537";  //id -> 2435026.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("871") && StringUtil.removeSpecialCharsToUC(complemento01).contains("703") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 2244922.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("432") && StringUtil.removeSpecialCharsToUC(complemento01).contains("879") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("94"))    historico = "CodigoHistorico:537";  //id -> 1703734.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("630") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("413") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0002") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("81"))    historico = "CodigoHistorico:537";  //id -> 2434990.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("918") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1703055.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("587") && StringUtil.removeSpecialCharsToUC(complemento01).contains("357") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0063") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))    historico = "CodigoHistorico:537";  //id -> 1839751.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("421") && StringUtil.removeSpecialCharsToUC(complemento01).contains("314") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("94"))    historico = "CodigoHistorico:537";  //id -> 2244819.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("809") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("414") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("72"))    historico = "CodigoHistorico:537";  //id -> 2435085.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("659") && StringUtil.removeSpecialCharsToUC(complemento01).contains("166") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1700417.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))    historico = "CodigoHistorico:537";  //id -> 1702449.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("275") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1701514.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS01"))    historico = "CodigoHistorico:447";  //id -> 1699218.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS01"))    historico = "CodigoHistorico:437";  //id -> 1699253.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("215") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1703717.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("405") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 1703731.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("270") && StringUtil.removeSpecialCharsToUC(complemento01).contains("966") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))    historico = "CodigoHistorico:537";  //id -> 2016470.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("313") && StringUtil.removeSpecialCharsToUC(complemento01).contains("641") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 2016476.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 1703691.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("525") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("51"))    historico = "CodigoHistorico:537";  //id -> 1703642.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("245") && StringUtil.removeSpecialCharsToUC(complemento01).contains("075") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1838186.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("554") && StringUtil.removeSpecialCharsToUC(complemento01).contains("177") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 1839939.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF12"))    historico = "CodigoHistorico:3719";  //id -> 1699278.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("230") && StringUtil.removeSpecialCharsToUC(complemento01).contains("427") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1701751.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("629") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1702686.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("506") && StringUtil.removeSpecialCharsToUC(complemento01).contains("945") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 1701870.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("662") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 1701937.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("175") && StringUtil.removeSpecialCharsToUC(complemento01).contains("462") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1701862.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("021") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1702895.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("268") && StringUtil.removeSpecialCharsToUC(complemento01).contains("233") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0007") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1700537.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("533") && StringUtil.removeSpecialCharsToUC(complemento01).contains("415") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 1702710.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("572") && StringUtil.removeSpecialCharsToUC(complemento01).contains("887") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1703636.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("660") && StringUtil.removeSpecialCharsToUC(complemento01).contains("406") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1703700.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN01"))    historico = "CodigoHistorico:467";  //id -> 1699216.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRRF12"))    historico = "CodigoHistorico:2283";  //id -> 1699262.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("180") && StringUtil.removeSpecialCharsToUC(complemento01).contains("337") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 1700408.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("899") && StringUtil.removeSpecialCharsToUC(complemento01).contains("341") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1700306.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("827") && StringUtil.removeSpecialCharsToUC(complemento01).contains("188") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1701637.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("511") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 1702003.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("677") && StringUtil.removeSpecialCharsToUC(complemento01).contains("758") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("24"))    historico = "CodigoHistorico:537";  //id -> 1702316.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("478") && StringUtil.removeSpecialCharsToUC(complemento01).contains("942") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1702664.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("370") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1702674.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("150") && StringUtil.removeSpecialCharsToUC(complemento01).contains("053") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0007") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 1702748.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("432") && StringUtil.removeSpecialCharsToUC(complemento01).contains("544") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("47"))    historico = "CodigoHistorico:537";  //id -> 2016307.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1837581.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("792") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 1702040.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("013") && StringUtil.removeSpecialCharsToUC(complemento01).contains("824") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("69"))    historico = "CodigoHistorico:537";  //id -> 2014198.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("516") && StringUtil.removeSpecialCharsToUC(complemento01).contains("082") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))    historico = "CodigoHistorico:537";  //id -> 2244379.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("577") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 2016433.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("331") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1703729.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("023") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("29"))    historico = "CodigoHistorico:537";  //id -> 1702986.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("274") && StringUtil.removeSpecialCharsToUC(complemento01).contains("233") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0068") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2244752.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("166") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("730") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("16"))    historico = "CodigoHistorico:537";  //id -> 2434788.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("757") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("894") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("64"))    historico = "CodigoHistorico:537";  //id -> 2434760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("689") && StringUtil.removeSpecialCharsToUC(complemento01).contains("090") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1703599.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("095") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))    historico = "CodigoHistorico:537";  //id -> 1838672.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN04"))    historico = "CodigoHistorico:467";  //id -> 2240740.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("076") && StringUtil.removeSpecialCharsToUC(complemento01).contains("863") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))    historico = "CodigoHistorico:537";  //id -> 2016380.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("530") && StringUtil.removeSpecialCharsToUC(complemento01).contains("925") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 2244582.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("719") && StringUtil.removeSpecialCharsToUC(complemento01).contains("238") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1703675.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("596") && StringUtil.removeSpecialCharsToUC(complemento01).contains("453") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 2016032.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("452") && StringUtil.removeSpecialCharsToUC(complemento01).contains("774") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 2016076.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("113") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 2016194.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("INSS"))    historico = "CodigoHistorico:427";  //id -> 1699223.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("926") && StringUtil.removeSpecialCharsToUC(complemento01).contains("179") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 1701818.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("245") && StringUtil.removeSpecialCharsToUC(complemento01).contains("071") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1701397.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("611") && StringUtil.removeSpecialCharsToUC(complemento01).contains("916") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1701803.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("588") && StringUtil.removeSpecialCharsToUC(complemento01).contains("763") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 2016063.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("670") && StringUtil.removeSpecialCharsToUC(complemento01).contains("052") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 1703749.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("301") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1701829.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("191") && StringUtil.removeSpecialCharsToUC(complemento01).contains("869") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1700472.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("612") && StringUtil.removeSpecialCharsToUC(complemento01).contains("119") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 2244957.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("118") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("800") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("92"))    historico = "CodigoHistorico:537";  //id -> 2435067.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("106") && StringUtil.removeSpecialCharsToUC(complemento01).contains("666") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))    historico = "CodigoHistorico:537";  //id -> 1703503.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("DARF01"))    historico = "CodigoHistorico:427";  //id -> 1699212.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("771") && StringUtil.removeSpecialCharsToUC(complemento01).contains("143") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 1839327.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("885") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 2244247.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("987") && StringUtil.removeSpecialCharsToUC(complemento01).contains("098") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))    historico = "CodigoHistorico:537";  //id -> 2244216.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("298") && StringUtil.removeSpecialCharsToUC(complemento01).contains("738") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2244757.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("933") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("622") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2434782.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("991") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))    historico = "CodigoHistorico:537";  //id -> 1703621.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("340838"))    historico = "CodigoHistorico:537";  //id -> 2435380.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("372") && StringUtil.removeSpecialCharsToUC(complemento01).contains("013") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1839710.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("769") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("266") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("24"))    historico = "CodigoHistorico:537";  //id -> 2434769.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("987") && StringUtil.removeSpecialCharsToUC(complemento01).contains("024") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1703695.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("228") && StringUtil.removeSpecialCharsToUC(complemento01).contains("035") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 2244760.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRPJ01"))    historico = "CodigoHistorico:3737";  //id -> 1699172.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("172") && StringUtil.removeSpecialCharsToUC(complemento01).contains("610") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 2016239.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("729") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1701525.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("636") && StringUtil.removeSpecialCharsToUC(complemento01).contains("764") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("91"))    historico = "CodigoHistorico:537";  //id -> 2244405.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("348") && StringUtil.removeSpecialCharsToUC(complemento01).contains("330") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 2244413.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("342") && StringUtil.removeSpecialCharsToUC(complemento01).contains("788") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2244636.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("881") && StringUtil.removeSpecialCharsToUC(complemento01).contains("132") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 2244683.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("489") && StringUtil.removeSpecialCharsToUC(complemento01).contains("480") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 2244707.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("748") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("772") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0006") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("48"))    historico = "CodigoHistorico:537";  //id -> 2434931.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("670") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("085") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0094") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2435230.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("515") && StringUtil.removeSpecialCharsToUC(complemento01).contains("774") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))    historico = "CodigoHistorico:537";  //id -> 1838657.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("094") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0019") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1701393.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("668") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 2244588.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("409") && StringUtil.removeSpecialCharsToUC(complemento01).contains("955") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("49"))    historico = "CodigoHistorico:537";  //id -> 1702075.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("195") && StringUtil.removeSpecialCharsToUC(complemento01).contains("945") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 2016150.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("777") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("35"))    historico = "CodigoHistorico:537";  //id -> 2244595.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS03"))    historico = "CodigoHistorico:442";  //id -> 2014121.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("642") && StringUtil.removeSpecialCharsToUC(complemento01).contains("168") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 2016171.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("584") && StringUtil.removeSpecialCharsToUC(complemento01).contains("109") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("49"))    historico = "CodigoHistorico:537";  //id -> 2016029.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("614") && StringUtil.removeSpecialCharsToUC(complemento01).contains("976") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 2016081.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("645") && StringUtil.removeSpecialCharsToUC(complemento01).contains("541") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 2016133.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("971") && StringUtil.removeSpecialCharsToUC(complemento01).contains("788") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))    historico = "CodigoHistorico:537";  //id -> 1701553.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("062") && StringUtil.removeSpecialCharsToUC(complemento01).contains("238") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 2016257.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("000") && StringUtil.removeSpecialCharsToUC(complemento01).contains("955") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 2016415.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("724") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 2016428.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("372") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1702162.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("815") && StringUtil.removeSpecialCharsToUC(complemento01).contains("880") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1701314.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("989") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("926") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("51"))    historico = "CodigoHistorico:537";  //id -> 1700088.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("815") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("619") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("17"))    historico = "CodigoHistorico:537";  //id -> 1700296.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("302") && StringUtil.removeSpecialCharsToUC(complemento01).contains("348") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1702639.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("751") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))    historico = "CodigoHistorico:537";  //id -> 1702993.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("287") && StringUtil.removeSpecialCharsToUC(complemento01).contains("725") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("29"))    historico = "CodigoHistorico:537";  //id -> 1703130.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("933") && StringUtil.removeSpecialCharsToUC(complemento01).contains("017") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))    historico = "CodigoHistorico:537";  //id -> 1703510.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))    historico = "CodigoHistorico:537";  //id -> 1703587.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("944") && StringUtil.removeSpecialCharsToUC(complemento01).contains("840") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 1838121.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("953") && StringUtil.removeSpecialCharsToUC(complemento01).contains("184") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))    historico = "CodigoHistorico:537";  //id -> 1838128.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1838207.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("554") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("397") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("63"))    historico = "CodigoHistorico:537";  //id -> 2434195.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IPTU2024VE"))    historico = "CodigoHistorico:537";  //id -> 2434742.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("070") && StringUtil.removeSpecialCharsToUC(complemento01).contains("717") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))    historico = "CodigoHistorico:537";  //id -> 1838400.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("282") && StringUtil.removeSpecialCharsToUC(complemento01).contains("134") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 2244767.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("526") && StringUtil.removeSpecialCharsToUC(complemento01).contains("993") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 2016091.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("542") && StringUtil.removeSpecialCharsToUC(complemento01).contains("397") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1838391.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("831") && StringUtil.removeSpecialCharsToUC(complemento01).contains("016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2244963.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("265") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("674") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("80"))    historico = "CodigoHistorico:537";  //id -> 2434199.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("136") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1701712.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("DISTRIB"))    historico = "CodigoHistorico:1040";  //id -> 1701465.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))    historico = "CodigoHistorico:537";  //id -> 2016456.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("506") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 1839482.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("108") && StringUtil.removeSpecialCharsToUC(complemento01).contains("157") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1703719.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("917") && StringUtil.removeSpecialCharsToUC(complemento01).contains("881") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 2244672.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("852") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2244532.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("367") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 2244602.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IOF"))    historico = "CodigoHistorico:159";  //id -> 2010957.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("488") && StringUtil.removeSpecialCharsToUC(complemento01).contains("233") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2016057.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("654") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1703571.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("241") && StringUtil.removeSpecialCharsToUC(complemento01).contains("480") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("75"))    historico = "CodigoHistorico:537";  //id -> 1703661.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 2240774.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("801") && StringUtil.removeSpecialCharsToUC(complemento01).contains("156") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 1839946.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS"))    historico = "CodigoHistorico:437";  //id -> 2240757.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("477") && StringUtil.removeSpecialCharsToUC(complemento01).contains("549") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))    historico = "CodigoHistorico:537";  //id -> 1838445.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1703596.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("531") && StringUtil.removeSpecialCharsToUC(complemento01).contains("413") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 2016272.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("369") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))    historico = "CodigoHistorico:537";  //id -> 1703070.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("147") && StringUtil.removeSpecialCharsToUC(complemento01).contains("617") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1838783.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 1701822.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("012") && StringUtil.removeSpecialCharsToUC(complemento01).contains("170") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("89"))    historico = "CodigoHistorico:537";  //id -> 2244945.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("181") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("63"))    historico = "CodigoHistorico:537";  //id -> 1702587.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 1838437.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("901") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1839374.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("371") && StringUtil.removeSpecialCharsToUC(complemento01).contains("610") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("69"))    historico = "CodigoHistorico:537";  //id -> 1701724.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRPJ04"))    historico = "CodigoHistorico:3737";  //id -> 2240739.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("064") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("556") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("20"))    historico = "CodigoHistorico:537";  //id -> 2434983.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("570") && StringUtil.removeSpecialCharsToUC(complemento01).contains("714") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))    historico = "CodigoHistorico:537";  //id -> 1701590.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("MULTA"))    historico = "CodigoHistorico:3789";  //id -> 1839110.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("049") && StringUtil.removeSpecialCharsToUC(complemento01).contains("631") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 2244872.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("795") && StringUtil.removeSpecialCharsToUC(complemento01).contains("368") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2244978.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("829") && StringUtil.removeSpecialCharsToUC(complemento01).contains("865") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 2244521.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("237") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1701953.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN05"))    historico = "CodigoHistorico:467";  //id -> 2432117.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("893") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("913") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("84"))    historico = "CodigoHistorico:537";  //id -> 2434197.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("508") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("847") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("70"))    historico = "CodigoHistorico:537";  //id -> 2434203.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))    historico = "CodigoHistorico:537";  //id -> 1703688.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF04"))    historico = "CodigoHistorico:3719";  //id -> 2240754.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS04"))    historico = "CodigoHistorico:442";  //id -> 2240745.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("621") && StringUtil.removeSpecialCharsToUC(complemento01).contains("141") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1839654.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("618") && StringUtil.removeSpecialCharsToUC(complemento01).contains("913") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 2244545.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("238") && StringUtil.removeSpecialCharsToUC(complemento01).contains("801") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 2014207.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("381") && StringUtil.removeSpecialCharsToUC(complemento01).contains("240") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))    historico = "CodigoHistorico:537";  //id -> 2016365.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("999") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("9999") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("99"))    historico = "CodigoHistorico:537";  //id -> 2435260.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("619") && StringUtil.removeSpecialCharsToUC(complemento01).contains("747") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1700565.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("037") && StringUtil.removeSpecialCharsToUC(complemento01).contains("449") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1839886.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("661") && StringUtil.removeSpecialCharsToUC(complemento01).contains("453") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1703702.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("881") && StringUtil.removeSpecialCharsToUC(complemento01).contains("809") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))    historico = "CodigoHistorico:537";  //id -> 2016338.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("653") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("31"))    historico = "CodigoHistorico:537";  //id -> 2014174.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("230") && StringUtil.removeSpecialCharsToUC(complemento01).contains("427") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))    historico = "CodigoHistorico:537";  //id -> 2016120.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("184") && StringUtil.removeSpecialCharsToUC(complemento01).contains("778") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 2016389.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("503") && StringUtil.removeSpecialCharsToUC(complemento01).contains("660") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1838384.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("547") && StringUtil.removeSpecialCharsToUC(complemento01).contains("098") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 2016333.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("759") && StringUtil.removeSpecialCharsToUC(complemento01).contains("928") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("66"))    historico = "CodigoHistorico:537";  //id -> 1701806.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("769") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("368") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("94"))    historico = "CodigoHistorico:537";  //id -> 2434871.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("897") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("089") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("56"))    historico = "CodigoHistorico:537";  //id -> 2434978.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 1703693.00

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("664") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0027") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1703706.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("766") && StringUtil.removeSpecialCharsToUC(complemento01).contains("054") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1701412.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("019") && StringUtil.removeSpecialCharsToUC(complemento01).contains("997") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 2016286.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("408") && StringUtil.removeSpecialCharsToUC(complemento01).contains("005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 2016347.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS04"))    historico = "CodigoHistorico:1006";  //id -> 2240742.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("387") && StringUtil.removeSpecialCharsToUC(complemento01).contains("359") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("63"))    historico = "CodigoHistorico:537";  //id -> 2240773.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("278") && StringUtil.removeSpecialCharsToUC(complemento01).contains("565") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 2016442.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("724") && StringUtil.removeSpecialCharsToUC(complemento01).contains("500") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 2244486.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ISSQN03"))    historico = "CodigoHistorico:467";  //id -> 2014026.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("152") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("773") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("19"))    historico = "CodigoHistorico:537";  //id -> 1700323.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("956") && StringUtil.removeSpecialCharsToUC(complemento01).contains("759") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 1838457.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))    historico = "CodigoHistorico:537";  //id -> 1837591.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("316") && StringUtil.removeSpecialCharsToUC(complemento01).contains("315") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))    historico = "CodigoHistorico:537";  //id -> 1838140.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("113") && StringUtil.removeSpecialCharsToUC(complemento01).contains("035") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1838110.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("619") && StringUtil.removeSpecialCharsToUC(complemento01).contains("473") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1838175.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("086") && StringUtil.removeSpecialCharsToUC(complemento01).contains("596") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))    historico = "CodigoHistorico:537";  //id -> 1838215.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("125") && StringUtil.removeSpecialCharsToUC(complemento01).contains("567") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))    historico = "CodigoHistorico:537";  //id -> 1839126.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("121") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))    historico = "CodigoHistorico:537";  //id -> 1839306.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0040") && StringUtil.removeSpecialCharsToUC(complemento01).contains("71"))    historico = "CodigoHistorico:537";  //id -> 1839455.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("733") && StringUtil.removeSpecialCharsToUC(complemento01).contains("129") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1839497.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("242") && StringUtil.removeSpecialCharsToUC(complemento01).contains("701") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 1839847.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("100") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1839644.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("488") && StringUtil.removeSpecialCharsToUC(complemento01).contains("117") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))    historico = "CodigoHistorico:537";  //id -> 1839699.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("668") && StringUtil.removeSpecialCharsToUC(complemento01).contains("231") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1839758.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("228") && StringUtil.removeSpecialCharsToUC(complemento01).contains("833") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1839841.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("475") && StringUtil.removeSpecialCharsToUC(complemento01).contains("302") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("89"))    historico = "CodigoHistorico:537";  //id -> 2244237.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("870") && StringUtil.removeSpecialCharsToUC(complemento01).contains("940") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 2244259.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("928") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("391") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("99"))    historico = "CodigoHistorico:537";  //id -> 2434888.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("909") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("068") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("06"))    historico = "CodigoHistorico:537";  //id -> 2435049.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("050") && StringUtil.removeSpecialCharsToUC(complemento01).contains("407") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("30"))    historico = "CodigoHistorico:537";  //id -> 2016490.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("066") && StringUtil.removeSpecialCharsToUC(complemento01).contains("791") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 2244784.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("020") && StringUtil.removeSpecialCharsToUC(complemento01).contains("107") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 2244555.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("436") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 1701946.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("471") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 2016369.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("912") && StringUtil.removeSpecialCharsToUC(complemento01).contains("543") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 1701534.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("581") && StringUtil.removeSpecialCharsToUC(complemento01).contains("988") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("46"))    historico = "CodigoHistorico:537";  //id -> 1702025.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("647") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 1702048.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("389") && StringUtil.removeSpecialCharsToUC(complemento01).contains("576") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))    historico = "CodigoHistorico:537";  //id -> 1702066.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("666") && StringUtil.removeSpecialCharsToUC(complemento01).contains("854") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 1702644.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("045") && StringUtil.removeSpecialCharsToUC(complemento01).contains("239") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))    historico = "CodigoHistorico:537";  //id -> 1839151.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("795") && StringUtil.removeSpecialCharsToUC(complemento01).contains("278") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 1839875.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("418") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("975") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("08"))    historico = "CodigoHistorico:537";  //id -> 2434700.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("431") && StringUtil.removeSpecialCharsToUC(complemento01).contains("369") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("66"))    historico = "CodigoHistorico:537";  //id -> 1702366.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("863") && StringUtil.removeSpecialCharsToUC(complemento01).contains("867") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 1839959.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("129") && StringUtil.removeSpecialCharsToUC(complemento01).contains("683") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 2244432.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("898") && StringUtil.removeSpecialCharsToUC(complemento01).contains("928") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("54"))    historico = "CodigoHistorico:537";  //id -> 2244721.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("236") && StringUtil.removeSpecialCharsToUC(complemento01).contains("629") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 2244971.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("371") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("610") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0003") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("40"))    historico = "CodigoHistorico:537";  //id -> 2434209.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("639") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("634") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("53"))    historico = "CodigoHistorico:537";  //id -> 2434921.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("464") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))    historico = "CodigoHistorico:537";  //id -> 2016484.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("216") && StringUtil.removeSpecialCharsToUC(complemento01).contains("209") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 2016465.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("695") && StringUtil.removeSpecialCharsToUC(complemento01).contains("790") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))    historico = "CodigoHistorico:537";  //id -> 1703711.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("930") && StringUtil.removeSpecialCharsToUC(complemento01).contains("967") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1703678.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("011") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("46"))    historico = "CodigoHistorico:537";  //id -> 1703653.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("563") && StringUtil.removeSpecialCharsToUC(complemento01).contains("881") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))    historico = "CodigoHistorico:537";  //id -> 1839893.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("INSS01"))    historico = "CodigoHistorico:427";  //id -> 1699220.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("615") && StringUtil.removeSpecialCharsToUC(complemento01).contains("601") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1700431.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))    historico = "CodigoHistorico:537";  //id -> 1700604.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("691") && StringUtil.removeSpecialCharsToUC(complemento01).contains("745") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 1701305.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("968") && StringUtil.removeSpecialCharsToUC(complemento01).contains("877") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("69"))    historico = "CodigoHistorico:537";  //id -> 1701421.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("353") && StringUtil.removeSpecialCharsToUC(complemento01).contains("055") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1701835.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0010") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("89"))    historico = "CodigoHistorico:537";  //id -> 1700062.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("790") && StringUtil.removeSpecialCharsToUC(complemento01).contains("539") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 1703049.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("598") && StringUtil.removeSpecialCharsToUC(complemento01).contains("948") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1703583.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1703713.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("609") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("872") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("51"))    historico = "CodigoHistorico:537";  //id -> 1837600.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("982") && StringUtil.removeSpecialCharsToUC(complemento01).contains("383") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))    historico = "CodigoHistorico:537";  //id -> 1839562.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("028") && StringUtil.removeSpecialCharsToUC(complemento01).contains("316") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0026") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))    historico = "CodigoHistorico:537";  //id -> 1702830.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("106") && StringUtil.removeSpecialCharsToUC(complemento01).contains("100") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 1702859.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("208") && StringUtil.removeSpecialCharsToUC(complemento01).contains("524") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("97"))    historico = "CodigoHistorico:537";  //id -> 1702868.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("620") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0093") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1703570.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("847") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))    historico = "CodigoHistorico:537";  //id -> 1703573.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("027") && StringUtil.removeSpecialCharsToUC(complemento01).contains("837") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 1703604.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("300") && StringUtil.removeSpecialCharsToUC(complemento01).contains("534") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))    historico = "CodigoHistorico:537";  //id -> 1703665.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0022") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("12"))    historico = "CodigoHistorico:537";  //id -> 1700071.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("944") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1700425.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("097") && StringUtil.removeSpecialCharsToUC(complemento01).contains("542") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1701746.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("321") && StringUtil.removeSpecialCharsToUC(complemento01).contains("113") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 2244741.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("275") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 1701237.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("800") && StringUtil.removeSpecialCharsToUC(complemento01).contains("254") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("48"))    historico = "CodigoHistorico:537";  //id -> 1701942.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("804") && StringUtil.removeSpecialCharsToUC(complemento01).contains("994") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 2016488.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("144") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))    historico = "CodigoHistorico:537";  //id -> 1702579.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("545") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("036") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("08"))    historico = "CodigoHistorico:537";  //id -> 2434210.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("078") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("732") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("12"))    historico = "CodigoHistorico:537";  //id -> 2435012.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("317") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("697") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0004") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("85"))    historico = "CodigoHistorico:537";  //id -> 2435002.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("557") && StringUtil.removeSpecialCharsToUC(complemento01).contains("699") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 2244932.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("363") && StringUtil.removeSpecialCharsToUC(complemento01).contains("075") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("01"))    historico = "CodigoHistorico:537";  //id -> 2016165.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("422") && StringUtil.removeSpecialCharsToUC(complemento01).contains("107") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))    historico = "CodigoHistorico:537";  //id -> 1702489.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("550") && StringUtil.removeSpecialCharsToUC(complemento01).contains("505") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1839393.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("479") && StringUtil.removeSpecialCharsToUC(complemento01).contains("443") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 1703084.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("105") && StringUtil.removeSpecialCharsToUC(complemento01).contains("380") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2016049.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("806") && StringUtil.removeSpecialCharsToUC(complemento01).contains("407") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))    historico = "CodigoHistorico:537";  //id -> 1839133.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("145") && StringUtil.removeSpecialCharsToUC(complemento01).contains("008") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0015") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))    historico = "CodigoHistorico:537";  //id -> 1839680.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("087") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("74"))    historico = "CodigoHistorico:537";  //id -> 1839928.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("038") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))    historico = "CodigoHistorico:537";  //id -> 1838772.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("530") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1701932.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("557") && StringUtil.removeSpecialCharsToUC(complemento01).contains("641") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1703615.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("232") && StringUtil.removeSpecialCharsToUC(complemento01).contains("398") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1839796.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("630") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 1839340.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("522") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))    historico = "CodigoHistorico:537";  //id -> 2016373.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("383") && StringUtil.removeSpecialCharsToUC(complemento01).contains("758") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))    historico = "CodigoHistorico:537";  //id -> 2244890.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("915") && StringUtil.removeSpecialCharsToUC(complemento01).contains("072") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 2016103.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("384") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 1703000.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("793") && StringUtil.removeSpecialCharsToUC(complemento01).contains("959") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 2014183.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("332") && StringUtil.removeSpecialCharsToUC(complemento01).contains("601") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))    historico = "CodigoHistorico:537";  //id -> 2016261.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("241") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("279") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0006") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("02"))    historico = "CodigoHistorico:537";  //id -> 2434902.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("538") && StringUtil.removeSpecialCharsToUC(complemento01).contains("148") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 2016094.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("284") && StringUtil.removeSpecialCharsToUC(complemento01).contains("248") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 2016392.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("500") && StringUtil.removeSpecialCharsToUC(complemento01).contains("153") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))    historico = "CodigoHistorico:537";  //id -> 1703608.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("892") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("53"))    historico = "CodigoHistorico:537";  //id -> 1839490.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("564") && StringUtil.removeSpecialCharsToUC(complemento01).contains("122") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))    historico = "CodigoHistorico:537";  //id -> 1701575.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("625") && StringUtil.removeSpecialCharsToUC(complemento01).contains("708") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1700282.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("648") && StringUtil.removeSpecialCharsToUC(complemento01).contains("936") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1703094.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("409") && StringUtil.removeSpecialCharsToUC(complemento01).contains("075") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0553") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 2244852.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("275") && StringUtil.removeSpecialCharsToUC(complemento01).contains("124") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))    historico = "CodigoHistorico:537";  //id -> 2016440.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("309") && StringUtil.removeSpecialCharsToUC(complemento01).contains("536") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1700542.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("749") && StringUtil.removeSpecialCharsToUC(complemento01).contains("526") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("79"))    historico = "CodigoHistorico:537";  //id -> 1837607.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("771") && StringUtil.removeSpecialCharsToUC(complemento01).contains("495") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1838791.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("984") && StringUtil.removeSpecialCharsToUC(complemento01).contains("383") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 2244272.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("307") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0019") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2244202.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("502") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 2244313.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("492") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("473") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("07"))    historico = "CodigoHistorico:537";  //id -> 2434698.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("564") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1702978.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("890") && StringUtil.removeSpecialCharsToUC(complemento01).contains("199") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("04"))    historico = "CodigoHistorico:537";  //id -> 1701359.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("448") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1839861.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("555") && StringUtil.removeSpecialCharsToUC(complemento01).contains("382") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 1701564.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS13"))    historico = "CodigoHistorico:437";  //id -> 1699251.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("693") && StringUtil.removeSpecialCharsToUC(complemento01).contains("268") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("06"))    historico = "CodigoHistorico:537";  //id -> 2016201.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("765") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("62"))    historico = "CodigoHistorico:537";  //id -> 1702605.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("410") && StringUtil.removeSpecialCharsToUC(complemento01).contains("834") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("14"))    historico = "CodigoHistorico:537";  //id -> 1838441.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("128") && StringUtil.removeSpecialCharsToUC(complemento01).contains("610") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 1703696.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("038") && StringUtil.removeSpecialCharsToUC(complemento01).contains("972") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("87"))    historico = "CodigoHistorico:537";  //id -> 2016144.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("084") && StringUtil.removeSpecialCharsToUC(complemento01).contains("517") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("61"))    historico = "CodigoHistorico:537";  //id -> 2016451.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("214") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("121") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("36"))    historico = "CodigoHistorico:537";  //id -> 1700029.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("061") && StringUtil.removeSpecialCharsToUC(complemento01).contains("646") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("65"))    historico = "CodigoHistorico:537";  //id -> 1701660.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("804") && StringUtil.removeSpecialCharsToUC(complemento01).contains("771") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("12"))    historico = "CodigoHistorico:537";  //id -> 2244981.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0114") && StringUtil.removeSpecialCharsToUC(complemento01).contains("42"))    historico = "CodigoHistorico:537";  //id -> 1703041.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("588") && StringUtil.removeSpecialCharsToUC(complemento01).contains("763") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 2016065.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("123") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 1839408.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("370") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("858") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("61"))    historico = "CodigoHistorico:537";  //id -> 2434207.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("922") && StringUtil.removeSpecialCharsToUC(complemento01).contains("042") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))    historico = "CodigoHistorico:537";  //id -> 1703017.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("825") && StringUtil.removeSpecialCharsToUC(complemento01).contains("291") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 1702373.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("594") && StringUtil.removeSpecialCharsToUC(complemento01).contains("538") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0009") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 2016357.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("270") && StringUtil.removeSpecialCharsToUC(complemento01).contains("499") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("08"))    historico = "CodigoHistorico:537";  //id -> 1701505.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("237") && StringUtil.removeSpecialCharsToUC(complemento01).contains("744") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("85"))    historico = "CodigoHistorico:537";  //id -> 1701497.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("064") && StringUtil.removeSpecialCharsToUC(complemento01).contains("003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1838393.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF03"))    historico = "CodigoHistorico:1006";  //id -> 2014138.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("499") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 2244859.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("432") && StringUtil.removeSpecialCharsToUC(complemento01).contains("879") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))    historico = "CodigoHistorico:537";  //id -> 1703736.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("686") && StringUtil.removeSpecialCharsToUC(complemento01).contains("054") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 2244263.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("379") && StringUtil.removeSpecialCharsToUC(complemento01).contains("043") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("95"))    historico = "CodigoHistorico:537";  //id -> 2016230.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("897") && StringUtil.removeSpecialCharsToUC(complemento01).contains("828") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))    historico = "CodigoHistorico:537";  //id -> 2016330.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("905") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("579") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("31"))    historico = "CodigoHistorico:537";  //id -> 1700081.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("234") && StringUtil.removeSpecialCharsToUC(complemento01).contains("162") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1700487.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("885") && StringUtil.removeSpecialCharsToUC(complemento01).contains("855") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))    historico = "CodigoHistorico:537";  //id -> 1701345.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("753") && StringUtil.removeSpecialCharsToUC(complemento01).contains("627") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 1702854.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRASS01"))    historico = "CodigoHistorico:2283";  //id -> 1699258.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("214") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("121") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0003") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("06"))    historico = "CodigoHistorico:537";  //id -> 1700030.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("125") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("433") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1700011.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("169") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("558") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1700024.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("369") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("028") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1700038.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0005") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("11"))    historico = "CodigoHistorico:537";  //id -> 1700043.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("287") && StringUtil.removeSpecialCharsToUC(complemento01).contains("725") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("90"))    historico = "CodigoHistorico:537";  //id -> 1839608.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("317") && StringUtil.removeSpecialCharsToUC(complemento01).contains("697") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0018") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1839765.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("214") && StringUtil.removeSpecialCharsToUC(complemento01).contains("644") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("07"))    historico = "CodigoHistorico:537";  //id -> 1701957.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("235") && StringUtil.removeSpecialCharsToUC(complemento01).contains("251") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 1702173.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("150") && StringUtil.removeSpecialCharsToUC(complemento01).contains("650") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 2016496.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("203") && StringUtil.removeSpecialCharsToUC(complemento01).contains("479") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 1703580.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("115") && StringUtil.removeSpecialCharsToUC(complemento01).contains("577") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("31"))    historico = "CodigoHistorico:537";  //id -> 1703659.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("471") && StringUtil.removeSpecialCharsToUC(complemento01).contains("527") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))    historico = "CodigoHistorico:537";  //id -> 1838117.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("276") && StringUtil.removeSpecialCharsToUC(complemento01).contains("695") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))    historico = "CodigoHistorico:537";  //id -> 1838132.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("502") && StringUtil.removeSpecialCharsToUC(complemento01).contains("802") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("31"))    historico = "CodigoHistorico:537";  //id -> 1838378.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("784") && StringUtil.removeSpecialCharsToUC(complemento01).contains("967") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1838451.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("379") && StringUtil.removeSpecialCharsToUC(complemento01).contains("357") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1838629.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("347") && StringUtil.removeSpecialCharsToUC(complemento01).contains("737") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("58"))    historico = "CodigoHistorico:537";  //id -> 1839316.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("570") && StringUtil.removeSpecialCharsToUC(complemento01).contains("732") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("34"))    historico = "CodigoHistorico:537";  //id -> 1701848.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("428") && StringUtil.removeSpecialCharsToUC(complemento01).contains("954") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))    historico = "CodigoHistorico:537";  //id -> 2016052.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("901") && StringUtil.removeSpecialCharsToUC(complemento01).contains("123") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("57"))    historico = "CodigoHistorico:537";  //id -> 2016175.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("109") && StringUtil.removeSpecialCharsToUC(complemento01).contains("112") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 2016180.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("136") && StringUtil.removeSpecialCharsToUC(complemento01).contains("454") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 2016114.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("077") && StringUtil.removeSpecialCharsToUC(complemento01).contains("930") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("92"))    historico = "CodigoHistorico:537";  //id -> 1701739.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("330") && StringUtil.removeSpecialCharsToUC(complemento01).contains("148") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("36"))    historico = "CodigoHistorico:537";  //id -> 1702058.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("683") && StringUtil.removeSpecialCharsToUC(complemento01).contains("043") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0004") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 2016068.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("360") && StringUtil.removeSpecialCharsToUC(complemento01).contains("162") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("11"))    historico = "CodigoHistorico:537";  //id -> 1703721.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("845") && StringUtil.removeSpecialCharsToUC(complemento01).contains("735") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("03"))    historico = "CodigoHistorico:537";  //id -> 1703694.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("707") && StringUtil.removeSpecialCharsToUC(complemento01).contains("172") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("60"))    historico = "CodigoHistorico:537";  //id -> 2244736.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("ICMS"))    historico = "CodigoHistorico:3824";  //id -> 1699168.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("886") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("23"))    historico = "CodigoHistorico:537";  //id -> 1700439.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("775") && StringUtil.removeSpecialCharsToUC(complemento01).contains("069") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0071") && StringUtil.removeSpecialCharsToUC(complemento01).contains("98"))    historico = "CodigoHistorico:537";  //id -> 2016072.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("543") && StringUtil.removeSpecialCharsToUC(complemento01).contains("057") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("86"))    historico = "CodigoHistorico:537";  //id -> 2016126.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("221") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))    historico = "CodigoHistorico:537";  //id -> 1701543.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("571") && StringUtil.removeSpecialCharsToUC(complemento01).contains("415") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("20"))    historico = "CodigoHistorico:537";  //id -> 2016204.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("195") && StringUtil.removeSpecialCharsToUC(complemento01).contains("140") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("89"))    historico = "CodigoHistorico:537";  //id -> 2016184.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("971") && StringUtil.removeSpecialCharsToUC(complemento01).contains("684") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("55"))    historico = "CodigoHistorico:537";  //id -> 1701731.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("605") && StringUtil.removeSpecialCharsToUC(complemento01).contains("267") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2016208.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("656") && StringUtil.removeSpecialCharsToUC(complemento01).contains("068") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("72"))    historico = "CodigoHistorico:537";  //id -> 1701779.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("758") && StringUtil.removeSpecialCharsToUC(complemento01).contains("545") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))    historico = "CodigoHistorico:537";  //id -> 2016233.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("814") && StringUtil.removeSpecialCharsToUC(complemento01).contains("253") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("64"))    historico = "CodigoHistorico:537";  //id -> 2016236.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("290") && StringUtil.removeSpecialCharsToUC(complemento01).contains("246") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))    historico = "CodigoHistorico:537";  //id -> 2016268.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("909") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 1701783.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("914") && StringUtil.removeSpecialCharsToUC(complemento01).contains("992") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0033") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 2016323.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("243") && StringUtil.removeSpecialCharsToUC(complemento01).contains("202") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1701797.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("472") && StringUtil.removeSpecialCharsToUC(complemento01).contains("714") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("48"))    historico = "CodigoHistorico:537";  //id -> 2016385.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("150") && StringUtil.removeSpecialCharsToUC(complemento01).contains("680") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("37"))    historico = "CodigoHistorico:537";  //id -> 2016251.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("357") && StringUtil.removeSpecialCharsToUC(complemento01).contains("171") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 2016398.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0038") && StringUtil.removeSpecialCharsToUC(complemento01).contains("82"))    historico = "CodigoHistorico:537";  //id -> 1702188.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("289") && StringUtil.removeSpecialCharsToUC(complemento01).contains("206") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1703698.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("594") && StringUtil.removeSpecialCharsToUC(complemento01).contains("273") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("28"))    historico = "CodigoHistorico:537";  //id -> 1702030.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("412") && StringUtil.removeSpecialCharsToUC(complemento01).contains("674") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1703723.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("553") && StringUtil.removeSpecialCharsToUC(complemento01).contains("454") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("13"))    historico = "CodigoHistorico:537";  //id -> 1702682.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("906") && StringUtil.removeSpecialCharsToUC(complemento01).contains("624") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("73"))    historico = "CodigoHistorico:537";  //id -> 1839402.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("433") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("56"))    historico = "CodigoHistorico:537";  //id -> 1701382.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("846") && StringUtil.removeSpecialCharsToUC(complemento01).contains("642") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("02"))    historico = "CodigoHistorico:537";  //id -> 1838198.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("436") && StringUtil.removeSpecialCharsToUC(complemento01).contains("934") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("05"))    historico = "CodigoHistorico:537";  //id -> 1838648.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("819") && StringUtil.removeSpecialCharsToUC(complemento01).contains("005") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("76"))    historico = "CodigoHistorico:537";  //id -> 1701323.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("173") && StringUtil.removeSpecialCharsToUC(complemento01).contains("997") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))    historico = "CodigoHistorico:537";  //id -> 2016290.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("947") && StringUtil.removeSpecialCharsToUC(complemento01).contains("067") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("48"))    historico = "CodigoHistorico:537";  //id -> 2016300.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("142") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("822") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("75"))    historico = "CodigoHistorico:537";  //id -> 1702532.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("029") && StringUtil.removeSpecialCharsToUC(complemento01).contains("657") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("70"))    historico = "CodigoHistorico:537";  //id -> 2016046.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("541") && StringUtil.removeSpecialCharsToUC(complemento01).contains("660") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("78"))    historico = "CodigoHistorico:537";  //id -> 2016061.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("729") && StringUtil.removeSpecialCharsToUC(complemento01).contains("954") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))    historico = "CodigoHistorico:537";  //id -> 1700504.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("939") && StringUtil.removeSpecialCharsToUC(complemento01).contains("344") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("84"))    historico = "CodigoHistorico:537";  //id -> 1700445.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("247") && StringUtil.removeSpecialCharsToUC(complemento01).contains("576") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 1701227.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("178") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("880") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("41"))    historico = "CodigoHistorico:537";  //id -> 1701477.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("632") && StringUtil.removeSpecialCharsToUC(complemento01).contains("561") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("27"))    historico = "CodigoHistorico:537";  //id -> 1701607.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("216") && StringUtil.removeSpecialCharsToUC(complemento01).contains("874") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("67"))    historico = "CodigoHistorico:537";  //id -> 1701701.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("435") && StringUtil.removeSpecialCharsToUC(complemento01).contains("511") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 1701991.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("045") && StringUtil.removeSpecialCharsToUC(complemento01).contains("186") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1702482.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("086") && StringUtil.removeSpecialCharsToUC(complemento01).contains("483") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("21"))    historico = "CodigoHistorico:537";  //id -> 1702454.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("524") && StringUtil.removeSpecialCharsToUC(complemento01).contains("952") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0013") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))    historico = "CodigoHistorico:537";  //id -> 1702528.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("868") && StringUtil.removeSpecialCharsToUC(complemento01).contains("006") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("43"))    historico = "CodigoHistorico:537";  //id -> 1702539.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("673") && StringUtil.removeSpecialCharsToUC(complemento01).contains("122") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("96"))    historico = "CodigoHistorico:537";  //id -> 1702836.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("896") && StringUtil.removeSpecialCharsToUC(complemento01).contains("691") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("09"))    historico = "CodigoHistorico:537";  //id -> 1702840.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("273") && StringUtil.removeSpecialCharsToUC(complemento01).contains("320") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0009") && StringUtil.removeSpecialCharsToUC(complemento01).contains("35"))    historico = "CodigoHistorico:537";  //id -> 1700093.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("598") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 1703508.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("351") && StringUtil.removeSpecialCharsToUC(complemento01).contains("204") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("00"))    historico = "CodigoHistorico:537";  //id -> 1703579.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("110") && StringUtil.removeSpecialCharsToUC(complemento01).contains("818") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0003") && StringUtil.removeSpecialCharsToUC(complemento01).contains("93"))    historico = "CodigoHistorico:537";  //id -> 1703593.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("263") && StringUtil.removeSpecialCharsToUC(complemento01).contains("669") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 1703625.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("317") && StringUtil.removeSpecialCharsToUC(complemento01).contains("697") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))    historico = "CodigoHistorico:537";  //id -> 1703629.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("734") && StringUtil.removeSpecialCharsToUC(complemento01).contains("560") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("83"))    historico = "CodigoHistorico:537";  //id -> 1703639.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("986") && StringUtil.removeSpecialCharsToUC(complemento01).contains("525") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0002") && StringUtil.removeSpecialCharsToUC(complemento01).contains("32"))    historico = "CodigoHistorico:537";  //id -> 1703647.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("614") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("16"))    historico = "CodigoHistorico:537";  //id -> 1703690.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("198") && StringUtil.removeSpecialCharsToUC(complemento01).contains("423") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))    historico = "CodigoHistorico:537";  //id -> 1838424.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("450") && StringUtil.removeSpecialCharsToUC(complemento01).contains("740") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("18"))    historico = "CodigoHistorico:537";  //id -> 2244284.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("128") && StringUtil.removeSpecialCharsToUC(complemento01).contains("316") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("26"))    historico = "CodigoHistorico:537";  //id -> 2244229.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("861") && StringUtil.removeSpecialCharsToUC(complemento01).contains("442") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("10"))    historico = "CodigoHistorico:537";  //id -> 2244303.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("306") && StringUtil.removeSpecialCharsToUC(complemento01).contains("751") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("54"))    historico = "CodigoHistorico:478";  //id -> 2244328.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("248") && StringUtil.removeSpecialCharsToUC(complemento01).contains("574") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("22"))    historico = "CodigoHistorico:537";  //id -> 2244477.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("912") && StringUtil.removeSpecialCharsToUC(complemento01).contains("977") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("97"))    historico = "CodigoHistorico:537";  //id -> 2244512.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("900") && StringUtil.removeSpecialCharsToUC(complemento01).contains("149") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("39"))    historico = "CodigoHistorico:537";  //id -> 2244526.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("503") && StringUtil.removeSpecialCharsToUC(complemento01).contains("924") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 2244573.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("010") && StringUtil.removeSpecialCharsToUC(complemento01).contains("211") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("80"))    historico = "CodigoHistorico:537";  //id -> 2244540.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("279") && StringUtil.removeSpecialCharsToUC(complemento01).contains("930") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("33"))    historico = "CodigoHistorico:537";  //id -> 2244681.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("401") && StringUtil.removeSpecialCharsToUC(complemento01).contains("747") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("45"))    historico = "CodigoHistorico:537";  //id -> 2244699.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("542") && StringUtil.removeSpecialCharsToUC(complemento01).contains("017") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("52"))    historico = "CodigoHistorico:537";  //id -> 2244729.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("158") && StringUtil.removeSpecialCharsToUC(complemento01).contains("895") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("81"))    historico = "CodigoHistorico:537";  //id -> 2244881.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("217") && StringUtil.removeSpecialCharsToUC(complemento01).contains("953") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("17"))    historico = "CodigoHistorico:537";  //id -> 2244897.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("827") && StringUtil.removeSpecialCharsToUC(complemento01).contains("533") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("22"))    historico = "CodigoHistorico:537";  //id -> 2244986.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("COFINS05"))    historico = "CodigoHistorico:442";  //id -> 2434189.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("CRF05"))    historico = "CodigoHistorico:3719";  //id -> 2434190.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0007") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("83"))    historico = "CodigoHistorico:537";  //id -> 2434192.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0008") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("64"))    historico = "CodigoHistorico:537";  //id -> 2434193.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("428") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("307") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0015") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("93"))    historico = "CodigoHistorico:537";  //id -> 2434194.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0020") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("22"))    historico = "CodigoHistorico:427";  //id -> 2434584.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRASS05"))    historico = "CodigoHistorico:2283";  //id -> 2434592.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRRF05"))    historico = "CodigoHistorico:2283";  //id -> 2434604.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("859") && StringUtil.removeSpecialCharsToUC(complemento01).contains("203") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("15"))    historico = "CodigoHistorico:537";  //id -> 1702883.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("217") && StringUtil.removeSpecialCharsToUC(complemento01).contains("850") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("59"))    historico = "CodigoHistorico:537";  //id -> 1702903.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("165") && StringUtil.removeSpecialCharsToUC(complemento01).contains("778") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("50"))    historico = "CodigoHistorico:537";  //id -> 1837573.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("022") && StringUtil.removeSpecialCharsToUC(complemento01).contains("186") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("91"))    historico = "CodigoHistorico:537";  //id -> 1838472.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("064") && StringUtil.removeSpecialCharsToUC(complemento01).contains("714") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("40"))    historico = "CodigoHistorico:537";  //id -> 1838419.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("034") && StringUtil.removeSpecialCharsToUC(complemento01).contains("091") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("25"))    historico = "CodigoHistorico:537";  //id -> 1838432.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("463") && StringUtil.removeSpecialCharsToUC(complemento01).contains("456") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0016") && StringUtil.removeSpecialCharsToUC(complemento01).contains("77"))    historico = "CodigoHistorico:537";  //id -> 1838714.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("949") && StringUtil.removeSpecialCharsToUC(complemento01).contains("526") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("44"))    historico = "CodigoHistorico:537";  //id -> 1839665.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("728") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("132") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("34"))    historico = "CodigoHistorico:537";  //id -> 2434196.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("PIS05"))    historico = "CodigoHistorico:447";  //id -> 2434188.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FUNAD05"))    historico = "CodigoHistorico:537";  //id -> 2434849.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("FGTS04"))    historico = "CodigoHistorico:437";  //id -> 2240751.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(documento).contains("IRRF04"))    historico = "CodigoHistorico:2283";  //id -> 2240761.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(complemento01).contains("358") && StringUtil.removeSpecialCharsToUC(complemento01).contains("502") && StringUtil.removeSpecialCharsToUC(complemento01).contains("0001") && StringUtil.removeSpecialCharsToUC(complemento01).contains("99"))    historico = "CodigoHistorico:537";  //id -> 2240769.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("394") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("587") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("40"))    historico = "CodigoHistorico:537";  //id -> 2434637.00
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("228") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("109") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("0001") && StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("95"))    historico = "CodigoHistorico:537";  //id -> 2434643.00

    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra3(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra4(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra5(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoRegra6(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento").replaceAll("INVERTE","");
    String contaPortador   = objHistorico.optString("contaPortador").replaceAll("INVERTE","");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoPortador2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoJuros2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoDesconto2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getHistoricoMulta2(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.replaceAll("  "," ").trim();
}
public String getCentroCusto(String CentroCusto, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto) {
          String retornaCentroCusto = CentroCusto;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaCentroCusto;
}
public String getTabelaContabil(String TabelaContabil, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaTabelaContabil = TabelaContabil;
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaTabelaContabil;
}
public String getParticipante(String participante, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, String complemento04, String complemento05, 
                             String nomeArquivo) {
          String retornaParticipantePai = participante;
    complemento04 = "";
    complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (!StringUtil.removeSpecialCharsToUC(nomeOrigem).contains("XPTO")) {
        retornaParticipantePai = "148";
    }
    return retornaParticipantePai;
}
public String getFilial(String codFilial, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03, 
                             String nomeArquivo, String codCentroCusto, String filial) {
          String retornaFilial = codFilial;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return retornaFilial;
}
public String getRegrasParaAcumular(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String getRegrasParaAcumularPortador(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String tipoPlanilha     = objHistorico.optString("tipoPlanilha");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String  getReplaceTermos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = "";
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return parametro2.trim();
}
public String  getReplaceTermosAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double numeroAba  		= objHistorico.optDouble("numeroAba");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String  getLimpaCampos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");

    return lote.trim();
}
public String  getLimpaCamposAvancado(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return lote.trim();
}
public String getTipoGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String graph = "";

    //feito para manter o legado sem problemas, sera sobreposto por regras! ;-)
    //tipos esperados: Column, Multiple_Column_Stacked, Multiple_Columns, Line, Multiple_Lines, Pie, Donut
    //Card refere-se ao Lucro/Prejuizo
    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    if (complemento01.startsWith("07") || complemento01.startsWith("12")) graph = "CardChart";

    if (complemento01.startsWith("01") || complemento01.startsWith("02") || complemento01.startsWith("04") || 
    	complemento01.startsWith("08") || complemento01.startsWith("09") || complemento01.startsWith("10") || 
    	complemento01.startsWith("11") || complemento01.startsWith("21"))  graph = "ColumnChart";

    if (complemento01.startsWith("15") || complemento01.startsWith("16") || complemento01.startsWith("17")) 
    	graph = "ColumnChartStacked";

    if (complemento01.startsWith("05") || complemento01.startsWith("06")) graph = "LineChart";

    if (complemento01.startsWith("18") || complemento01.startsWith("19") || complemento01.startsWith("20")) 
    	graph = "LineChartMultiple";

    if (complemento01.startsWith("03") || complemento01.startsWith("13") || complemento01.startsWith("14")) 
    	graph = "DonutChart";

    return graph;
}
public String getSimboloValor(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String simboloValor = "R$";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return simboloValor.replaceAll("Nenhum","");
}
public String getSeriesGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String series = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return series;
}
public String getTituloGrafico(JSONObject objGrafico) {
    String complemento01   = objGrafico.optString("complemento01");
    String complemento02   = objGrafico.optString("complemento02");
    String complemento03   = objGrafico.optString("complemento03");
    String complemento04   = objGrafico.optString("complemento04");
    String complemento05   = objGrafico.optString("complemento05");
    String complemento06   = objGrafico.optString("complemento06");
    String Titulo_Grafico = "";

    complemento01 = StringUtil.removeSpecialCharsToUC(complemento01);

    return Titulo_Grafico;
}
public String getColunaAlternativa(String parametro, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    String documento       = objHistorico.optString("documento");
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");

    String retornaColunas  = "";

    return retornaColunas.replace(",",";").trim();
}
//FINALPARAMETRIZACAOREGRAS

/*#############################################@ EXTRATO-BOTICARIO-EXCEL @##############################################*/
public HashMap readBoticario(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ ERP-BYSOFT @##############################################*/
public HashMap readBysoftIBroker(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}


/*#############################################@ CARTAO-ABREAPETITE-EXCEL @##############################################*/
public HashMap readCartaoAbrapetite(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}


/*     Leitura de Planilha Padrao - EXTRATO AIQUEFOME

## ################################################################################################################## */
public HashMap readExtratoAiquefome(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
        
          
	return mapaVariavel;
}						
           
        


//##############################################**CARTAO ALELO CSV**#######################
public HashMap readAleloCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-AMERICANEXPRESS-EXCEL @##############################################*/
public HashMap readCartaoAmericanExpressDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ CARTAO-AMERICANEXPRESS-EXCEL @##############################################*/
public HashMap readCartaoAmericanExtratoDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ EXTRATO-TRIOCARD-EXCEL @##############################################*/
public HashMap readCartaoAme(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-BENVISA-EXCEL @##############################################*/
public HashMap readCartaoBenVisaExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-BIN-EXCEL @##############################################*/
public HashMap readCartaoBinExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


/*#############################################@ CARTAO-BONUS-EXCEL @##############################################*/
public HashMap readExtratoBonus(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ EXTRATO-CABAL-EXCEL @##############################################*/
public HashMap readCartaoCabal(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ EXTRATO-CALCARD-EXCEL @##############################################*/
public HashMap readCartaoCalcard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}

/*#############################################@ EXTRATO-CALCARD-EXCEL @##############################################*/
public HashMap readCartaoCalcardExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


/*#############################################@ CARTAO-CARREFOUR-EXCEL @##############################################*/
public HashMap readCartaoCarrefour(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}


/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCielo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCieloExcel2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   
    return mapaVariavel;
}

/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartaoCieloExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

 
    return mapaVariavel;
}

public HashMap readCartaoCieloRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

 
    return mapaVariavel;
}


/*#############################################@ CARTAO-CIELO-EXCEL @##############################################*/
public HashMap readCartao_Cielo_Simples_Sem_Bandeira(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ CARTAO-ABREAPETITE-EXCEL @##############################################*/
public HashMap readCartaoCooper(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
      
    return mapaVariavel;
}


/*#############################################@ CARTAO-SANTANDERCREDITO-EXCEL @##############################################*/
public HashMap readCartaoCreditoSantander(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}


/*#############################################@ CARTAO-ELAVON-EXCEL @##############################################*/
public HashMap readExtratoElavon(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ CARTAO-FIDELIDADE-EXCEL @##############################################*/
public HashMap readCartaoFidelidade(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNet(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  

    return mapaVariavel;
}

/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNet2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   
    return mapaVariavel;
}

/*#############################################@ CARTAO-GETNET-EXCEL @##############################################*/
public HashMap readExtratoGetNetRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
	
    return mapaVariavel;
}



/*#############################################@ CARTAO-GOODCARD-EXCEL @##############################################*/
public HashMap readExtratoGoodcard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
   return mapaVariavel;
}



/*#############################################@ CARTAO-GREENCARD-EXCEL @##############################################*/
public HashMap readCartaoGreenCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-IFOOD-EXCEL @##############################################*/
public HashMap readExtratoIFood(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}



/*#############################################@ EXTRATO-LIV-PDF @##############################################*/
public HashMap readCartaoLivPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public HashMap readExtratoMagaLU(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ EXTRATO-MASTERFARMA-EXCEL @##############################################*/
public HashMap readCartaoMasterFarma(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-MERCADOLIVRE-EXCEL @##############################################*/
public HashMap readCartaoMercadoLivre(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-MOIP-EXCEL @##############################################*/
public HashMap readExtratoMoip2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-MOIP-EXCEL @##############################################*/
public HashMap readExtratoMoip(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-MOOZ-EXCEL @##############################################*/
public HashMap readCartaoMoozCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public HashMap readExtratoNetshoes(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	return mapaVariavel;
}


/*#############################################@ CARTAO-NUTRICARD-EXCEL @##############################################*/
public HashMap readExtratoNutricard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-NUTRICARD-EXCEL @##############################################*/
public HashMap readCartaoNutricardPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public HashMap readExtratoPagarME(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	return mapaVariavel;
}


/*#############################################@ CARTAO-PAGSEGURO-EXCEL @##############################################*/
public HashMap readExtratoPagSeguro(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-PAGUECOM-EXCEL @##############################################*/
public HashMap readPaguecomCSV(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-PAYPAL-EXCEL @##############################################*/
public HashMap readCartaoPayPal2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ EXTRATO-PAYPAL-EXCEL @##############################################*/
public HashMap readCartaoPayPal(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}


/*#############################################@ CARTAO-POLICARD-EXCEL @##############################################*/
public HashMap readCartaoPoliCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardNovoPadrao(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDeb(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardCred(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	

    return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
	return mapaVariavel;
}

/*#############################################@ EXTRATO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDefaultNovo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}

/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardDefault(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}


/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readCartaoRedecardTxt(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
			   
   
   return mapaVariavel;
}


/*#############################################@ EXTRATO-SAFRA-CSV @##############################################*/
public HashMap readCartaocSafraCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ CARTAO-SEMPARAR-EXCEL @##############################################*/
public HashMap readExtratoSemParar(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-SEMPARAR-EXCEL @##############################################*/
public HashMap readExtratoSemParar2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

    return mapaVariavel;
}


/*#############################################@ CARTAO-SENFF-EXCEL @##############################################*/
public HashMap readExtratoSenff(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {


    return mapaVariavel;
}

/*#############################################@ CARTAO-SENFF-EXCEL @##############################################*/
public HashMap readExtratoSenffLayout2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipagFluxoCaixa(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    

    return mapaVariavel;
}

/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipag(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  
    return mapaVariavel;
}
/*#############################################@ EXTRATO-SIPAG-EXCEL @##############################################*/
public HashMap readExtratoSipagRefatorado(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

  
    return mapaVariavel;
}


/*#############################################@ CARTAO-NUTRICARD-EXCEL @##############################################*/
public HashMap readExtratoSodexo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ EXTRATO-STELO-EXCEL @##############################################*/
public HashMap readCartaoSteloCsv(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

	return mapaVariavel;
}


/*#############################################@ CARTAO-STONE-EXCEL @##############################################*/
public HashMap readExtratoStone(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
    return mapaVariavel;
}


/*#############################################@ CARTAO-SUMUP-EXCEL @##############################################*/
public HashMap readCartaoSumup(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

    return mapaVariavel;
}


/*#############################################@ EXTRATO-TICKET-EXCEL @##############################################*/
public HashMap readExtratoTicketNovo(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ EXTRATO-TICKET-EXCEL @##############################################*/
public HashMap readExtratoTicket(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ EXTRATO-TRIOCARD-EXCEL @##############################################*/
public HashMap readCartaoTrioCard(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   

   return mapaVariavel;
}


 /*     Leitura de Planilha Padrao - EXTRATO UBEREATS

        ## ################################################################################################################## */
        public HashMap readExtratoUbereats(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
        
           
				 return mapaVariavel;
            }


/*#############################################@ EXTRATO-VALECARD-PDF @##############################################*/
public HashMap readExtratoValeCardPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

   return mapaVariavel;
}


/*#############################################@ CARTAO-VRALIMENTACAO-TXT @##############################################*/
public HashMap readExtratoVRAlimentacao(String lineParam, MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
   return mapaVariavel;
}



/*#############################################@ ERP-CITEL @##############################################*/
public HashMap readCitelSoftwareFrmRelCtrTit(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   

   return mapaVariavel;
}


public HashMap readErpDetalhamentoSispagItau(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readErpFolhaAlterdataProgresso(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readErpFolhaDominio(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readErpFolhaWk(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - ABC
## ################################################################################################################## */
public boolean readExtratoAbcExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - ABC
## ################################################################################################################## */
public boolean readExtratoABCPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoAilosCiviaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoAmazoniaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoAmazoniaTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public HashMap readExtrato_ApliBB_PDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
	return mapaVariavel;
}


public boolean readExtratoArbiExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
 }


/*#############################################@ EXTRATO-ASAAS-EXCEL @##############################################*/
public boolean readExtratoAsaasExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoAsaasPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBancoDaycovalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


/*#############################################@ EXTRATO-BANCONORDESTE-EXCEL @##############################################*/
public boolean readExtratoBancoNordesteExcel(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoBancoPaulistaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBanesePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BANESTE-EXCEL @##############################################*/
public boolean readExtratoBanesteDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   


   return true;
}


/*#############################################@ EXTRATO-BANPARA-EXCEL @##############################################*/
public boolean readExtratoBanpara(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

    return true;
}


/*#############################################@ EXTRATO-BANPARA-TXT @##############################################*/
public boolean readExtratoBanparaTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

	return true;
}


public boolean readExtratoBanrisulPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   
    return true;
}


/*#############################################@ EXTRATO-BANRISUL-TXT @##############################################*/
public boolean readExtratoBANRISULDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


//####################################################################################################################################
//									EXTRATO BBM PDF
//####################################################################################################################################

public boolean readExtratoBBMPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


	
/*#############################################@ EXTRATO-BBM-TXT @##############################################*/
public boolean readExtratoBBMTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBancoBrasilExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ EXTRATO-BBFINANCIAMENTOS-EXCEL @##############################################*/
public boolean readExtratoBancoDoBrasilFinanciamentos(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	
    return true;
}


public boolean readExtratoBancoDoBrasilPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDoc2(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}

/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDoc(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

  

  return true;
}

/*#############################################@ EXTRATO-BB-TXT @##############################################*/
public boolean readExtratoBancoDoBrasilDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
    return true;
}


public boolean readExtratoBIBPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBKBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBMGExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoBMGPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



/*#############################################@ EXTRATO-BMPMONEYPLUS-EXCEL @##############################################*/
public boolean readExtratoBMPMoneyPlusExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratBradesco2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();

     
    return true;
}


/*#############################################@ EXTRATO-BRADESCO-EXCEL @##############################################*/
public boolean readExtratoBRADESCODefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}

/*#############################################@ EXTRATO-BRADESCO-EXCEL @##############################################*/
public boolean readExtratoBradescoDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   

    return true;
}


public boolean readExtratBradescoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-BRADESCO-TXT @##############################################*/
public boolean readExtratoBradescoTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	return true;
}


/*#############################################@ EXTRATO-BRASILIA-EXCEL @##############################################*/
public boolean readExtratoBrasiliaExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


//####################################################################################################################################
//									EXTRATO BRB PDF
//####################################################################################################################################

public boolean readExtratoBRBPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBS2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoBSCashPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoBTGExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoBtgPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoC6BankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-TOPAZIO-EXCEL @##############################################*/
public boolean readExtratoC6Excel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


/*#############################################@ EXTRATO-CEF-EXCEL @##############################################*/
public boolean readExtratoCEFExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}
 


/*#############################################@ EXTRATO-CEF-HTML @##############################################*/
public boolean readExtratoCEFHtml(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



public boolean readExtratoCaixaPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-CEF-TXT @##############################################*/
public boolean readExtratoCEFDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}

/*#############################################@ EXTRATO-CEF-TXT @##############################################*/
public boolean readExtratoCEFDefaultNovo(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


//CONVERSOR ANTIGO

public boolean readExtratoCiviaPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}



/*#############################################@ EXTRATO-CONTASIMPLES-EXCEL @##############################################*/
public boolean readExtratoContaSimplesExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}



/*#############################################@ EXTRATO-CONTASIMPLES-PDF @##############################################*/
public boolean readExtratoContaSimplesPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}


public boolean readExtratoCoraExcel(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoCoraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-CREDISAN-EXCEL @##############################################*/
public boolean readExtratoCredisanExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    JSONObject extratoEmpresa = new JSONObject();
    return true;
	
}


public boolean readExtratoCredisanPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
   
    return true;
}


public boolean readExtratoCredisisPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoCrehnorPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


/*#############################################@ EXTRATO-CRESOL-EXCEL @##############################################*/
public boolean readExtratoCresolExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoCresolPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
	
	return true;
}


/*#############################################@ EXTRATO-DAYCOVAL-EXCEL @##############################################*/
public boolean readExtratoDaycoval(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

	return true;
}


public boolean readExtratoEfiExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoEfiPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	  return true;
}


/*#############################################@ EXTRATO-EWALLY-EXCEL @##############################################*/
public boolean readExtratoEwallyExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


		
		/*#############################################@ EXTRATO-Fibra-EXCEL @##############################################*/
public boolean readExtratoFibraExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
    return true;
}


public boolean readExtratoFibraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}



public HashMap readExtratoFolhaSageExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
     

    return mapaVariavel;
}

public HashMap readExtratoFolhaSageExcelv2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
     

    return mapaVariavel;
}








public boolean readExtratoGrafenoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
 }


public boolean readExtratoGrafenoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoGuanabaraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-HDT-EXCEL @##############################################*/


//#2312-024479 By Leal

public boolean readExtratoHDTExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


public boolean readExtratoHSBCExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	

    return true;
}


public boolean readExtratoHSBCPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


		
		/*#############################################@ EXTRATO-INDUSTRIAL-EXCEL @##############################################*/
public boolean readExtratoIndustrialExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoInfinitePayPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoInterPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
 
     
    return true;
}


public boolean readExtratoItauConsolidadoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	JSONObject extratoEmpresa = new JSONObject();
	
    return true;
}


/*#############################################@ EXTRATO-ITAU-EXCEL @##############################################*/
public boolean readExtratoItauDefault(MemoryFile memFile, String anoData, String tipoExtrato, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {



    return true;
}


public boolean readExtratoItauPdfInterno(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}

public boolean readExtratoItauPdfInterno2(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-ITAU-TXT @##############################################*/
public boolean readExtratoItauTXT(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


/*#############################################@ EXTRATO-JUNO-EXCEL @##############################################*/
public boolean readExtratoJunoDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoLinkerPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoMercadoPagoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratoMercadoPagoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoMercantilPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoMovilepayPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoNBCPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoNextPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


public boolean readExtratoNordestePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoNubankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoOmieCashPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

	return true;
}


//#############################################@ EXTRATO-ORIGINAL-EXCEL @##############################################/

public boolean readExtratoOriginalExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}



/*#############################################@ EXTRATO-ORIGINAL-PDF @##############################################*/
public boolean readExtratoOriginalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    JSONObject extratoEmpresa = new JSONObject();
    return true;
}


public boolean readExtratoOteroBankExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoPagbankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoPagPixBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoPagseguroExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


				
		/*#############################################@ EXTRATO-PAULISTA-EXCEL @##############################################*/
public boolean readExtratoPaulistaExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoPaybrokersPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}


public boolean readExtratoPinkPayPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoPlannerPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoPoupeCrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-SAFRA-EXCEL @##############################################*/
public boolean readExtratoSafraExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

  
  return true;
}



public boolean readExtratoSafraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
 
    return true;
}


/*#############################################@ EXTRATO-SANTANDER-EXCEL @##############################################*/
public boolean readExtratoSantanderDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratSantanderPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	
    return true;
}


/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoSicoobDefaultNovo(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

   
   
    return true;
}

/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoSicoobDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


public boolean readExtratoSicoobCapitalPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public HashMap readExtratoSicoobConveniosPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public boolean readExtratSicoobPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	
    return true;
}


/*#############################################@ EXTRATO-SICOOB-TXT @##############################################*/
public boolean readExtratoSicoobTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
	return true;
}


/*#############################################@ EXTRATO-SICREDI-EXCEL @##############################################*/

public boolean readExtratoSicrediDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

    return true;
}


public boolean readExtratoSicrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-SICREDI-TXT @##############################################*/
public boolean readExtratoSicrediTxt(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
	
    return true;
}


/*#############################################@ EXTRATO-SISPRIME-EXCEL @##############################################*/
public boolean readExtratoSisprimeXLSX(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}



public boolean readExtratoSisprimePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/* ##################################################################################################################
                                        Leitura de Planilha Padrão EXTRATO - SOFISA
## ################################################################################################################## */
public boolean readExtratoSofisaExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    
    return true;
}


//####################################################################################################################################
//									EXTRATO BBM PDF
//####################################################################################################################################

public boolean readExtratoSofisaPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
  
    return true;
}


public boolean readExtratoSquidExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoSquidPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-STONE-EXCEL @##############################################*/
public boolean readExtratoStoneExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public boolean readExtratoStonePDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


public boolean readExtratoSulcrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


/*#############################################@ EXTRATO-target-EXCEL @##############################################*/
public boolean readExtratoTargetExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
	return true;
}



public boolean readExtratoTargetPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


/*#############################################@ EXTRATO-TOPAZIO-EXCEL @##############################################*/
public boolean readExtratoTopazioExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


public boolean readExtratoTransfeeraPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


/*#############################################@ EXTRATO-TRIBANCO2-PDF @##############################################*/
public boolean readExtratoTribanco2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

	return true;
}


/*#############################################@ EXTRATO-TRIBANCO-EXCEL @##############################################*/
public boolean readExtratoTribancoExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


/*#############################################@ EXTRATO-TRIBANCO-PDF @##############################################*/
public boolean readExtratoTribancoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


public boolean readExtratoUBPPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    return true;
}


//####################################################################################################################################
//									EXTRATO UNICRED2 PDF
//####################################################################################################################################

public boolean readExtratoUnicred2PDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}


/*#############################################@ EXTRATO-UNICRED-EXCEL @##############################################*/
public boolean readExtratoUnicredDefault(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

 

	return true;
}


//####################################################################################################################################
//									EXTRATO UNICRED PDF
//####################################################################################################################################

public boolean readExtratoUnicredPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}

public boolean readExtratoUnicred3PDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}


/*#############################################@ EXTRATO-UNICRED-TXT @##############################################*/
public boolean readExtratoUNICREDTxt(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    

	return true;
}


/*#############################################@ EXTRATO-UNIPRIME-EXCEL @##############################################*/
public boolean readExtratoUniprime(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

    return true;
}



//####################################################################################################################################
//									EXTRATO UNIPRIME PDF
//####################################################################################################################################

public boolean readExtratoUniprimePDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
   
    return true;
}


/*#############################################@ EXTRATO-UNIPRIME-TXT @##############################################*/
public boolean readExtratoBancoUniprime(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {


    return true;
}

/*#############################################@ EXTRATO-UNIPRIME-TXT @##############################################*/
public boolean readExtratoUniprimeTxt(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


/*#############################################@ EXTRATO-SICOOB-EXCEL @##############################################*/
public boolean readExtratoViacredi(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratoViacrediPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}



public boolean readExtratoVotorantim2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}


		
/*#############################################@ EXTRATO-Votorantim-EXCEL @##############################################*/
public boolean readExtratoVotorantimExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public boolean readExtratoVotorantimPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}

public boolean readExtratoVotorantim3PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoXPInvestimentosExcel(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    
    return true;
}


public boolean readExtratoXPInvestimentosPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	
    return true;
}

public boolean readExtratoXPInvestimentos2PDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BRADESCO-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BanrisulPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

	return mapaVariavel;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BB-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BBPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


/*#############################################@ FATURA-CARTAO-CREDITO-BRADESCO-PDF @##############################################*/
public HashMap readFaturaCartaoCredito_BradescoPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public HashMap readFaturaCartaoCredito_Itau_Excel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

	
	return mapaVariavel;
}


public HashMap readFaturaCartaoCredito_ItauPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

	
	return mapaVariavel;
}


public HashMap readFaturaCartaoCredito_SicoobPDFF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}



//#2307-009642 - Leal

public HashMap readFrancesinhaBradescoPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}




public HashMap readFrancesinhaCresolPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public HashMap readFrancesinhagrupoAilosPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readExtratoItauCsvFrancesinha(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}



public HashMap readExtratoItauPdfFrancesinha(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}

public HashMap readExtratItauPdfFrancesinha2(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readFrancesinhaSafraPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


public HashMap readFrancesinhaSantanderPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}



public HashMap readFrancesinhaSicoobPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}



public HashMap readFrancesinhaSicrediExcel (MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	return mapaVariavel;
}


public HashMap readFrancesinhaSicrediPdf(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


public HashMap readFrancesinhaSisprimeExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
   
    return mapaVariavel;
}


//2312-024960
public HashMap readFrancesinhaUnicrediPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    return mapaVariavel;
}


public HashMap readFrancesinhaBanrisulTXT(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


public HashMap readFrancesinha_BBPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    return mapaVariavel;
}


public HashMap readFrancesinha_BradescoXLSX (MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


public HashMap readFrancesinha_BradescoExcel(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


public HashMap readFrancesinha_CefPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/*#############################################@ ERP-INTERFOC @##############################################*/
public HashMap readInterfocGenesysMCP002(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

	return mapaVariavel;
}


public boolean readInvestimentoBradescoPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {

    return true;
}


public HashMap readPosto_Ravanello(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


/*#############################################@ ERP-LINX @##############################################*/

public HashMap readLinx_AutoSystem_ExtratoBancario(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ ERP-LINX @##############################################*/
public HashMap readLinx_AutoSystem_ContasPagas(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}

/*#############################################@ ERP-LINX @##############################################*/
public HashMap readLinx_AutoSystem_MovimentacaoContas(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}

/*#############################################@ ERP-LINX @##############################################*/
public HashMap readLinx_AutoSystem_Recebimentos(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}


/*#############################################@ ERP-SOFTPHARMA @##############################################*/
public HashMap readLinxSoftpharmaFCPA200(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}


public HashMap readNotasCorretagemXP(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/*#############################################@ ERP-PROSYST @##############################################*/
public HashMap readProsystPR00308(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}

/*#############################################@ ERP-PROSYST @##############################################*/
public HashMap readProsystPR00428(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

   
    return mapaVariavel;
}

/*#############################################@ ERP-PROSYST @##############################################*/
public HashMap readProsystPRX004815(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
    return mapaVariavel;
}




/*#############################################@ EXTRATO-UNICRED-EXCEL @##############################################*/
public boolean readExtratoUnicredDefault(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    

    return true;
}


/*#############################################@ CARTAO-REDECARD-EXCEL @##############################################*/
public HashMap readSantanderRET(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    return mapaVariavel;
}


public HashMap readSicoobComprovantesPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
    return mapaVariavel;
}


/*#############################################@ ERP-SINDISOFT @##############################################*/
public HashMap readSindiSoft(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
	
    return mapaVariavel;
}


/*#############################################@ ERP-SISJURIS @##############################################*/
public HashMap readSisjuriBCSFinanceiro(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    
    return mapaVariavel;
}


/*#############################################@ ERP-SISPLAN @##############################################*/
public HashMap readSisplanSistemaPlanejamento(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {

    
	
	
    return mapaVariavel;
}


/*#############################################@ ERP-SYSTEXTIL @##############################################*/
public HashMap readSystextil(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
    

	return mapaVariavel;
}


public boolean readExtratoValoriBankPDF(MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
	return true;
}


public HashMap readFaturaCartaoCredito_InterPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
	return mapaVariavel;
}


public boolean readExtratoPinBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public boolean readExtratoStarBankPDF(MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) throws Exception {
    
    return true;
}


public HashMap readFaturaCartaoCredito_SantanderPDF(MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) throws Exception {
	
	return mapaVariavel;
}

